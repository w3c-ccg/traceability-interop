{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "be383f06-29a9-4135-82bc-0d5688cff78b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "422d84e0-c4d4-4649-9968-24cf0e7a67eb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c7c9426-3d9c-4c58-8290-37095c2d34e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "631f5836-b517-45a2-a441-08fcec17c667"
                }
              }
            ]
          },
          {
            "id": "1c066642-57f9-4057-abff-288c0cda26bc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7562fdd-6eee-4afb-a47b-d3574a404eb1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9ebe2733-a9ba-4427-b146-6ce7d0c4fe2c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f14fb6e3-8753-45a2-ab8e-59163790a69b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fa97f597-1545-4808-8831-a5cc23d1a311",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b908137-f48a-4d94-b706-ffbff2a023bb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "557cb6fc-8d2b-488c-9eee-8000a36a601a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e59aaf2-63eb-44d6-93c0-05a309155bca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5875bfb4-b535-4a08-b399-3716c19bf435",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff941c74-c719-4720-b8eb-cd5981256ff7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "69ed2817-c011-4caa-b545-52cfe57387ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "800317c0-90e1-4536-abdf-a549ccfde7df"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ea06795-25e5-4a1f-a0b4-422c961e2f8a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c464be76-f341-463a-b3e4-b6b88f97ef84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9dc16545-3ac1-414e-8484-09f230c63477",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f285fd9-2500-4a0a-9ca0-0715e7a635a8"
            }
          }
        ]
      },
      {
        "id": "f3c0d029-b7a0-4e50-88fe-af9396127ba2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "735d73e2-cebe-4f60-8680-e439422e7527",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc3db7fa-6626-4fc3-9b09-b93615bde95b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "60cf1066-3946-4ab8-b07f-80544206934a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4436789-07f0-4ad9-9034-c3afbfd749e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "441c53f4-b1c7-43e6-9559-0d093a1a9da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2022330-290b-4665-8bfb-b5a650b3905f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b62767-3d84-4676-bc47-6ec647c074ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74ae4f7c-e7c9-4a72-a139-49b550ec68fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7939ae23-0039-4f9a-84cf-7bd2fd6bd57c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6c3f7c-0a6f-434e-b64a-73df322ea620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8afb98a4-dc8a-4df1-b53e-c5b79b438dd6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3508ae3-7d97-4272-9941-9625e8d3838f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50c8cd6d-64fb-4874-8740-f1cdad698edd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888452c3-7bed-4745-ab9e-d9951949c1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94af0f2c-8d8e-45ca-b1f8-1d9ed9f9b207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e69e510-6d67-433c-a3b5-1163cfd1b68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19525666-ecc3-4959-8764-8a99884fdb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831e6078-52ee-453f-8712-ea9898d8bbd9",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5f4424-6093-49d5-950b-1155e7e2560d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31e198b6-2aa4-4158-b3bd-e7df1f1f87bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1813ba93-28e4-4bcf-8249-206ae984045e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "9107c137-eb53-4196-98a6-778e590146db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2480e90d-60f5-41b5-8dbb-c4834c2b51f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea48d231-bf46-4c23-91b7-76ca464f87c1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b63e3866-7a26-42a4-9eaa-caedafdd6417",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9d5f9e5c-f955-4ec0-b095-cb632317115f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e6295b5-9980-4cdd-9d26-f125bd4db2a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8373d5b4-7c52-49c7-8539-f9d1c8672c46"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7133c99a-de95-4b24-bc6e-2e7f1f39d054",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76a08407-7a34-4863-9422-ec65442e87fd"
            }
          }
        ]
      },
      {
        "id": "cb1ee839-4116-432f-a009-7a3c30a63c22",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "41fa7207-c60f-4ba7-8e56-5457a0f915d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee8915bb-f791-4006-a16b-0c068cbf0cb7",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9b0f94a8-531a-446c-93a6-2ca1da9d96ca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b75250-a4b5-4431-bd1d-689ec200185b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54dc8fdc-9382-4b7d-9b7b-3d05e7c92807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f84cb0-c1ce-4e4a-a1d5-d23ea1f92890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba3b1b8d-57aa-46e9-ac88-942dccb977da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7337f29a-1a38-4018-b9a3-1df6925ece53",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f7571d-89d2-49a7-b609-2839c3776224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989a2445-81bb-4b30-aad6-e8c04e0a1713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83616c8d-628e-4843-9855-6ee2f6380682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f200a55-590c-4c8c-8bde-8ed5cf874868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467633aa-c09d-44fa-b392-125b65c4630b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de25fcf-d346-495a-89e5-017d0dec8e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee52add7-b612-4d7d-a010-dd0f0b64827f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea8719f-b6ef-4a55-b28b-fcfd5cea96d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "760b7214-4b78-4611-923c-474c6531f4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbba5bd7-a183-4689-be64-e0c301f7b405",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdfb16b-de2a-4b43-abac-f0ed55931f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313d795f-35e6-4bad-9dcb-22ab1cef77da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f831bdcc-18e0-455b-9c05-d77f5dec5398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9052f4cb-6f1d-432b-a24d-780f9a8fc2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c2d92f-0a1c-4ac1-9b3d-1e203f86e4cd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68da57ca-7203-43c5-b95e-6633d70fc067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a5dd54-9397-4e47-b195-ddcaadc03954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af86cb45-b8be-45a5-b15e-3b5200dfccf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72a5a70d-9640-40ba-9576-243b866fce98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d19c881-dfe0-4482-af86-d062fd5401c5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb99b59-5f79-43c7-8893-07b51dc2d4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d25ca52-6339-4815-bf14-e8903b3349b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8beb9c0-1db9-4bbd-a5dd-d33c0d5a86c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e540e74-2846-43e4-a599-e15d85255f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f88a39f-aa77-4a21-bb7b-3190441637e0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5634ef-4991-4fe0-b5d3-b227c559381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4268aed8-677e-4422-be0b-df4f0f35c2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8ce80a-9bfc-40b7-ade5-37433b019314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b829d6c1-e6ce-489c-a839-7f4cdb3d0234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794ca0a1-cd91-47f0-a316-7520ce9eed14",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69846517-3a13-4772-baf8-50f31f2f4a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ff5e1c-e848-4bd4-9743-b154c9658720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1752abbc-1f2b-40bc-9be1-b575a3f07f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18db98b3-665b-4a1c-85e2-9fc73cfc15fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b454f525-4ee7-4d2f-9ab6-e0ac28412cf5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d187e75b-4d46-4bd1-9193-b8c132a98fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c236e2-de92-4968-bacd-c3489540fce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d6339f-96e5-4e08-8cd9-e65032bae31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58e63d7f-d3ab-4994-84ba-9fbb715fbfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaea02ba-7bab-4712-8187-861f6574205c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2438a6-a6f9-43fc-82c7-4aa09f14f864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3a695f-3b32-4f5e-91d1-e84823dce962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38aad45a-bc52-486a-bf0b-c07f87b92273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbf194f2-1ea0-4db9-9d15-7530fcbdb78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b020c32-3613-41f8-b215-e9aba5cd4368",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4390a12-3de9-4c60-ac2b-f51e7ae31e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c3ac8f-e6b7-484a-a0fb-49e25b726e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9fc2ec-60c4-42bd-9746-7c5bf6d51147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e1750fe-ffa6-49d1-88e2-6206a811f4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63d5c5b-3347-495f-8354-8f699688da3a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7dc3cc-5612-4dc5-b00c-377911a29639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1543314-87d5-408f-a53d-4bf786232669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae053ad-c8bb-4253-8b4a-d1255b4ded42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b8ef934-d9f5-43b5-acaf-61f8f04c9f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a6fbbd-c588-40fd-9c0d-25e859cc2f14",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b2965f-297a-411f-9baa-3caf4e04c80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d160f371-d097-4831-a72f-d4e39455fb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8e7f59-94a3-4890-8478-956ed51fbb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd6e1dff-2097-4be1-8409-886462b7e8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea87411-5b69-4d5e-bd7f-79af329da645",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3570a920-d795-4e93-bff1-7612c6820e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908faa28-ba2f-471a-bf67-ce8468522525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699ce4c8-0c68-4e06-8242-60b2d720e321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39658d24-700e-433d-b349-671e65d64897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62f4f55-e636-4848-a785-d8e199aa03a7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf96e6e9-3536-49f6-af23-83a4dde8fefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b43d92-166e-4cce-91e2-a1d37f0f007e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd43687-4c3e-4600-ba03-09e9e5baa9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffc8c23d-6d97-45fb-9a27-b1a6db8b854c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7b4d0b-19a0-4c01-bb23-347591ff5e0d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68d24ff-a44b-42af-b2ee-52f8d867dfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af4950d-971d-460c-a187-d170df9fdfcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a781fde-f97c-4e13-9cd7-3ede7fec935e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7e9797e-060a-4af4-9637-d44aed6b5a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe122085-770d-4ce7-897e-8a7424b488c1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715c9e6e-7fab-43b0-9fa7-3a92487530e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6545cf60-19c1-409b-9d70-8c89bff04f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698fcb96-8aa3-4497-b8b9-7c5dcbba8447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9593518b-b40f-452a-8ba6-d583ae7d8424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddb65b3-8721-409e-8161-1cc219b8530a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e5eb9c-6fa4-4774-8781-ee95a3fe559c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624ffb9e-f8c5-4fe0-81b1-bcd967b62358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216ab01a-ea77-4d40-bf9d-ad7a85875c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c595cf5f-05a7-4b46-8cd2-0117a1ef9b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df5403c-4f63-4fd0-9555-aa9fdbf42288",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d333eed-dcb0-47ef-af46-396d75b1a56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d889c898-eed6-4962-b62d-d3338c62a4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e3a679-acf0-4191-9196-c3d9ffd64e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af57ac7-fd8b-40e6-a7d0-b3d2422a5073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b01c11-4154-4357-a6b6-0e6f96097fab",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af005976-83a5-463a-ba0b-1b0ecf0dc642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a603aa7-de2b-453b-828f-1f1720cdc3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16744559-8b47-4294-82ee-99e2ffa9781c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56b2c35-fa6b-48bb-8ce9-997387fdb29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e5ea5e-62d2-4d26-9fb9-f5b07c229b9d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83562e9a-2f39-427e-8b50-bfa2f5cf8957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3211fb5-bb15-4e00-b249-1b81be791f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c04fae7-b643-4170-a022-ffe56c678580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4aae32e-5496-411b-8ce8-58078bf99c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8340fa34-fa6d-4c94-8f11-148d20e76352",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806fc5d1-af10-46c5-be36-7c6664b49006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37f693e-db9a-4e8e-bc55-633b92466619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d93028e-e7ad-4bb9-8e4e-852c89ef934c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "036257e3-5fa8-4824-bab0-f5bc5fec9b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab598a8-5ab1-4bda-9a17-6bb8869195ea",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec886e39-6014-4761-98f7-3afb10050d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503d15b9-d319-4815-8a00-3ce9b2bd3689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0473164d-56a9-4869-ad44-4e78029ec687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1988f33-510c-457e-8873-e2518f96a62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de47567-6936-443e-bfa7-41c94ee5d1bd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8017cf25-d2d1-4f15-8840-bb238bb4f907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecd5d1a-0169-457e-9c33-3a7f0db92a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eb6dc7-c6da-414a-a54b-c2879ef28cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "03aae6d8-ff0a-4261-bf7f-6cd207e9182e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49109a20-9b95-4d15-9930-2ba10abf0915",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32d8dd1-9793-4337-87e0-5be27682d562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0005a7-3856-4bb2-b2c9-9aeb8658043c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d934ecd-12ec-4a3f-a97b-fc3f5d19f7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece44082-47d3-48c5-b5d7-062d70a27692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbea5f7f-6dcb-4efc-89f6-83ec4476e1dc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9654b4-a079-4095-9410-568653a71b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e653725-692f-4bcd-8877-6ae578a43758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be0527a-d198-49f0-9447-17677e39e695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be267919-85bb-4c22-a90a-5dc401446dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eed2e1c-60e0-44c7-b26e-6f8aff9f2ed9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5916bc8-1d98-4030-9a87-be28bed3ac18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bff11e-9397-428a-8855-2c659769c3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04be2642-fce2-4d3d-9e8a-978924dcad4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89cab61d-b00b-4e05-a669-ec04c3828f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eae327c-33f7-4695-931f-79edf741ebea",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04816d7-6d35-4dac-aa8b-99912c7dcf69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef005f3b-be52-412a-be74-49d29c66a836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27a1c92-1431-4459-a4dc-727a3388dc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79a8c6e7-eec5-4de6-8b70-237744a74ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33cc69a-fa25-4c61-be96-7c73d02d6dd2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27491027-0c8d-4e9d-a889-57a540f3a5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3725795-dbf6-497b-bba3-859bad126789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51116a7f-bd6a-47bd-9a40-e4eaeeff5f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eebee9e7-1f46-4775-ae1e-910f9c327353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27c079c-0a49-4cfd-ab48-a2d4e3bd0541",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942a56d6-3c07-4080-ae37-b45d82d1e747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f82bad-2f15-4ddb-b33a-0abd0a4fa16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27ed759-06ea-440e-8167-fcc2a1402ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3079a718-90a2-4e00-99fd-e1d75529d1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32276c1-085c-4b0f-95a2-918fe8c47b63",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fb7315-0190-4069-a18b-acaf141701f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e137a87-7770-47d3-84d8-4c5a8d4e2731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dcc442-f06b-4615-bd86-558bde8d8125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd89b3e-1c07-42c0-9099-faad293e638b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5ed26e-5766-49f8-96fc-3243436898c4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e32787-5431-4fe5-b03c-09af5f1a75f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be125f12-c985-43e7-a1a8-dcf3a3590678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd0ee38-bd0e-4705-99ad-4d0151320d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2a833a-0e2c-45e0-a980-48587f14b729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524e0e2b-16bd-4424-aba1-b27dde1fe36f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3c77e3-0b74-4b76-aa44-0a58cfc51b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc04494f-9976-429d-b7ce-a65c631c9323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3642fd63-4978-42c1-b0c7-457c3b5a9856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9cc315-209b-4a1c-82fa-72f29ae873c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0ad89b-f5d1-494d-acfb-f0087ceefd49",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c4d33e-2b22-461a-86c5-8637bd5b5efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77160001-cc28-4576-8e09-f260210e43e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f2bc46-e5e5-4eb1-8003-ca5fb1aa5614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f936986a-b7d2-4269-83c1-5f38d2993bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060c330b-e94c-4645-a300-44aeb997bee1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a10c923-39c2-4cd5-823e-ea156581a26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39e380f-96a1-4232-aeda-955b60ca605f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc5b48b-be79-41e8-a3c8-4b8c4aad7033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3516e6c0-a927-45ed-a1b5-059a20bc4aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a61b43a-d876-4322-8d2c-e45c8a349395",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c70eaa7-14f7-47a1-a26e-9b07719e5f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05dc5aeb-645d-4531-bcaa-db05c80ccba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc748e8d-7279-4148-bfbd-7374633b6e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2be16d0d-2b5e-4218-9e6d-ac75e0d89a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5c665a-3868-4d1a-9aa1-0c07f4766206",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf2cc22-b306-4691-8b06-faa26ad32c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b736fbcc-eee1-4cf8-908a-4d599db25a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917d7dc4-78cd-4984-b745-1fc185ac3466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "138ef0b8-3d7f-4423-a0fa-09b3ecace318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0001fc7c-3b14-4dd3-b045-0ef04442c268",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c03593-f63d-47c8-b922-c26afa0d3c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3da9e97-9915-4ed9-b6f8-f6f50ec20100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef59716-3ec4-4472-aae5-587860e69403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "964549d4-a662-4586-af5d-ea9c6c8c8e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78feda2b-0a6f-4d97-8f3b-97bf182a123c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20a7377-2cb2-4843-8e44-f56172f97462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03272b05-0c9d-4d81-b324-5e685dd19cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1972b367-5676-4d75-9e4e-5037d63cb8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8006131a-56e6-4bb2-a8b6-6e1542524547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de795c6-6c9a-4e2c-8c14-620c0fee9d54",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef532af-3b56-4531-9b55-eaf41c79aefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b65dc14-70d7-4dba-a2a6-88f200dfc1e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7fdcf7-5562-42cf-9249-fc3e41c1c65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcae9337-f996-4061-babf-6a5cbc8c6244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f3a2cb-03d7-48fe-bf2b-f094fcb15ebb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8ad1eb-12ea-44d6-a906-93ba6244d9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def43145-0186-41ca-b0c2-91fd0a09711f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b840b0-8186-4947-9836-46cb98a82011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a7a8c8-5cc4-4bd2-acbd-31073f8bb4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5fd754-0ae0-46d9-877b-764ba82aeb02",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fe5847-8eda-423b-9bc0-b641e526d812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e207b4b9-35f5-4385-b22e-3e8481677149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a63a59-61bb-42ca-8fcf-cc60ce335e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "13851fb0-8f2e-489b-a78d-3fb8ba2128c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5505bca0-b550-46a7-ac4e-869b64b00f55",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7863be-001b-43a9-9439-292893ce9a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6c19b1-5981-45d0-9936-584012eb4eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a095eb4-ffad-4bf3-a7ee-f81874ab0f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a1ab57-39c0-49fc-9f8b-c3cab74e9722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec7a701-ecae-4ce4-a0dd-6b0e7c1279fe",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85417d82-cfb5-4901-b908-77dbd3e406ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9c0267-d6ce-46a6-b5b3-0024b57bb9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386a9f0d-6995-4407-a0d7-8e60bccb41a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "197224f6-e915-4ba8-924b-f407bc3e6f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798db539-a181-4d04-9595-bf71e9ed045c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd015d7-bc26-4cde-b245-1980ecb04ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0451982c-94c7-4895-88e9-8bb314a7b029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a483e51-2950-4ecf-b2e4-75ab255adb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b781a55-d5d0-4a36-8e9b-76846d56e59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b31e916-7888-404b-bdff-f18638802687",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590ef583-8ae9-427d-988c-4edd1b385d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e07340-6419-4c20-97b4-578e5526cec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ddc61e-c2b9-490d-87e2-5c38773b9899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e87126b7-c1a4-474e-943d-48893060b45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c933c8ec-719d-4914-bc8f-78e35b696408",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92f3c26-a4c4-4703-a869-7151c576fc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3a2632-6ddf-40b1-92a4-e21fbdc4065b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3be9b4-5f58-48b0-942e-b47c398ac3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6caa0d-57e3-4e3c-83ec-ef077bc63b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5218c82-6dc7-4715-a424-4f2456ba35f6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e331b8-4f90-44c2-a2da-f46d75af67c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fbbc40-0903-4099-b7d9-699260fd2ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f23f25-dc79-48b6-8eb1-dc2d447158e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15199f68-75c8-42d3-8c26-cc05a1b99574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c08f51-dd51-4446-a931-cabd5e6e5523",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27aa9d85-1edf-4cb1-9a68-a718c1e65179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c353b4-7043-4ccd-8c86-1cfd646c6e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6049f049-7d25-4cc0-bf83-fdc09c958c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9070f14-34d1-4f77-b117-66f52c986953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033399fc-c9e7-4e14-89c9-b1af2cee576a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a782141-c9e4-4998-816d-663c55d2af69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75ed9aa-e778-46fb-9975-615d40d4bb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e043ad-7a91-490f-b82e-def8f22e01db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3be1676-75a8-4dfd-9f37-257ad6084a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d57abc-f39d-4d7f-839c-bcc9f74bd4fc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8c965c-ce81-4fe9-9d86-1f23573d0678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9a06c9-8e99-4a6a-8974-77a47a1d28f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe61bd9e-20f3-4447-8be6-f30d54bf2152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed2d7f4-c6bb-45fb-a25e-964a71b7aba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3a7aeb-d011-483e-9df5-741b0d7195f8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d92a983-0edc-4d81-b88e-2ee3e6ee0b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23008c08-bf4d-4024-8bfd-1e5b553093dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ca0710-f5d3-4b10-9029-2f9a126d0825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc01d2f-76e8-4a08-a50b-500300deb1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738d2579-e03d-4f96-ade2-a51547f12626",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcb3af8-e1d0-4b76-8691-666c5f795bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9912326-3cac-4c27-aadc-68daa3ac86be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d735d2-e607-4b39-a579-96d4b274d5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c08784d-e37c-48c6-9d34-b1ba63fc2e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19a41d5-6b77-4a9a-9259-517490296d4a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea33daca-24f9-461f-bad0-b0d030c17bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9c5882-b6dc-44a8-bada-f599fe2458ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd18d509-8d29-4a9f-82af-08b39442b104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b833d139-a504-419a-bf2e-96317159773e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e730ea-665b-4d8c-bb4f-8e2960a16cb8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20ea44c-0808-4eb2-867b-4e73290205ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b1ec12-2fe8-4d9c-af0b-65943aa9c475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba2a26a-0075-4618-ad7d-2f419ab56e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17236dbf-fbba-4c95-8c28-bddd4b50da30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1a175d-2e32-4be9-8e37-1593a774bf71",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbfdf51-0b75-4b79-bcc3-6218187032ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5b383c-d1a9-470e-a118-d580c2811c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9b9bd0-74f5-43c9-988e-5ea7c02d88ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "94b59817-1270-470f-8c86-b36ac753841d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40da4b8-b079-438c-875e-a0c43ccc7cd5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89f774c-0652-4b39-9302-c275f7deb534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4642bb62-7048-4068-b675-53e639ac234b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b5faf4-c3b9-4b1a-ab99-2b22f07cf4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f02e77b5-7a78-41ae-b691-cc14686cb521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46e3dd6-7a16-4851-ad21-a81f334a98fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60369d88-ccfd-4440-a168-e6d820eeee51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca58be14-263a-49f1-8ebe-744fec5a34fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46c7511-84f2-4458-892b-5b01f717fe22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5a96fc-9e2e-4cbf-81ed-82563463b8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e197c361-fe10-4968-ac2e-12037aa56504",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283c1f48-077c-4763-bd36-215ea9a478d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7f8dcf-d048-4c02-833f-914614ee57a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6541a29a-9d8f-4913-95e5-d18c3349af9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2224c1e2-acde-4ca3-b7c4-e95769e5042c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecac6146-c1af-4471-abe6-5d0280f3a1a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8947d64-a2b2-49e3-a420-31702cc26647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a8ca5b-025d-48f6-9fc5-2fe6f85273c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f126fb9-40ed-42d3-97c4-3da61f7eada2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fe753e-f05b-4d81-8573-a5ce70a7897f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79d698d-939d-47af-98c0-1f84c274f2f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004358a3-e61c-4ba9-a2ef-2b89e2ae052f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a89858f-4180-4333-a66b-d2081c225828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e0fd79-48cb-4a33-bc3e-93de1a09962c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c030857-2e35-4365-9295-75bc2dfecb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570038d8-fa64-43fc-9d38-4f3b2d53a3e9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71e29ec-ece9-45ff-baa5-a5ff0ead350e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02286b98-f0e8-4f07-98c1-acabd91aa691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa87acf-dc13-467e-80ef-32efed2dd88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffc6375-c701-40be-bf74-c2bbe7ccef67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ff902d-8756-49d1-bbcc-7026d378e265",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53e8039-a960-42c9-9b05-b7d84b73466c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42dac42c-19fe-4f08-b443-edf9d643bfe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123817c0-0a61-4e9a-a7ae-fba50d21ca83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "562c51e8-8ff9-4357-9588-0978fc745149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472b4428-42e8-40e1-a51a-03207fdcc748",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51890fa7-6d09-438d-aa91-7ff9a9cf6b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093546f0-5ba2-4807-83bc-740cb8f462d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a65412-19b2-44a1-a3e7-8f097c063a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4177a40f-8aeb-4f2a-b77c-fa76b09d79c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ddcecb-062f-4de9-bb17-12b063ec305d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7059727c-48ff-49da-afab-7c1616112fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89ac027-f6c7-4701-8777-5181620ab310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b124aa-15ee-46bf-b848-62e6b12bb3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3defea-4a80-434f-be3e-d9ed0b18c6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd538ba-ba48-41ed-8d03-96ef353a5ab5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6568b4bf-a575-4b65-bd91-216984b3896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9c7a9c-50b2-47a5-9a01-8f267b7774c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633072e6-5eee-4ca9-9e80-f7eb5698ea51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "22d97475-2062-4b79-904f-f61fb578a32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2947da2-eac1-4b3e-86f5-cfb98e890eca",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fc7e3c-e2fe-4d8f-872c-b922364ce900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c00b0f7-dfa7-4a83-817f-22b412de23da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a310b77-cbf0-45a4-953a-fccf012c788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a70f33e0-ad7e-46bc-b1cf-f8a8e226299a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a26dc7-fd04-4b85-8983-8cdaf32158b3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa739ae-0f01-4c52-9142-db00f4dbd9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e928550a-3d13-40b2-993a-5b6a4110db98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8986d877-86ad-4568-9443-4e1fd4da343a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "427ac48e-12ab-4900-824e-58e508490f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7664ea-ab49-457c-a732-70ef36231fa2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5786e407-d020-4ddb-af22-61d4ac24441e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6b5ac6-6fb0-4030-a15a-91eec3636f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555bdf44-0ab5-47c3-818c-5ce9abb859f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "717ee53c-4e7f-4651-a3d5-6cda6d8fdacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25e48df-8394-4968-8f42-dedf3122c5ea",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ea3d4a-ee95-4521-9320-d305657e727b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b0b16b-c666-4beb-9513-30db420bab04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7529c7d7-b1e0-4ba3-a71b-942acdd51563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb8b8b7-f579-427f-9c42-a8447a3d7d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fca8701-8979-418a-b867-d8a4fdf0c95d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa46b49-bfc8-4892-a562-6662ee1f70ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a35af7-6389-457e-bba2-0f34474e24ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982165b9-5a7a-48df-9e7a-db13dc7263c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47017ca9-19c3-4e2d-be19-66f2fdfba8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e966bb92-08bf-4822-a9e7-18dbe0c364ad",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd59c4b-1e4e-4574-9470-cdefca4b0200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ca5a70-107e-42b0-9f4f-447068e58aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55055168-cbe8-4abc-a176-87c05eff5edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d903884b-552d-4dc0-9e50-c882fa3baf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4a5199-edfd-4ed5-bd3b-e97f75dce36b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dabc0d9-4725-4bef-b8ab-d35277deabee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa6b661-a2b6-4c4e-b616-6bee9f40a259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14792aed-fc37-4475-bcdb-5bacdc80e14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f9e2de-c1de-422c-95c6-d9f07fe49882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29023984-e639-4450-bd23-886cf09def67",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3bbae9-5dea-4a0e-b14d-5c66d9b0084b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdfe3de9-b55b-4464-9b84-9580c429165d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be93609-be49-4e7c-aa56-6d2d71d71337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "918d69c7-49b1-4364-a5d3-d044ca2efbc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8da346-cceb-4ff9-a319-8612d9ce9dab",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4ef97b-f889-454d-934d-f03d17ecef1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83de433-3878-4642-9311-b2aef92f9aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ebb46d-760c-4373-858f-c497492c517c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3af63cd8-21b3-48cb-b730-c47bf53e63df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247af526-9973-44a3-9ba4-08b016d0adc8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41333ca1-b2ac-4741-bc7b-10330035c87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3f5fc8-81fb-4adb-93a2-c714eabc5b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4854c661-fede-42df-8313-4532d85eea2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9ac297-8058-4151-96fc-5a0664ab9a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef1cbfc-c452-4a5a-b5c2-bbebd330971c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18de4466-878b-4fed-90da-d6503b3f96fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9263f895-5c2a-417a-aafb-878539c4c76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eefa8e1-64a5-4eaf-b560-46b051a824c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94db2f59-feb4-45e3-9ead-b963367d1cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4497d32-efbb-4789-b337-78f7fb3992cb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cc17bc-0d06-45f7-9947-d6959a4bda7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe8b6fb-dbfb-42aa-bdd9-95eb6e09acde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ceca11-bdcd-43f4-b873-f8ed9bf97e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "368436b5-57da-4ef4-bd12-111f5e37c946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf14011-180e-485c-8700-5866dcee2a57",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9378535a-a253-4ae4-8a3a-dfc0f5a44328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc4ead4-1a1c-4a73-949b-f6571e9723be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8b0177-989b-4820-8e9a-c08700e1bbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dedfe72f-3b67-49a8-aa8b-1c773552a627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b770152b-af53-4904-81ac-d1a7098969d7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07c4521-9394-4848-9429-721c27acfaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e0f6d3-60f1-4945-b51c-074dea51cf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046502d8-b9de-4021-8926-783c85ca57b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbca08cd-5c10-48d1-a50e-4357ab21cd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46632da6-5231-42d5-94be-b0a46e3a97fe",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd371770-7308-4155-ba88-bef7be60ed94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11cae50-3b9e-4fa5-9198-e3f7e016145b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af25df72-e103-4569-ab9e-ddc040b6dc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e4bfc9-1b3b-44a6-8804-0aef31665e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ef92a9-e764-4dcf-9cfa-4e8a89d6db59",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f34935-c7a6-4169-bd81-e4f61a96af0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165d759b-a09d-4eb8-9fbc-28fff2da6f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6008c9-ae1e-4f6d-9ad0-226362651157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99104e64-b11e-49cf-9a86-0f4e02b02dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23263e69-5dd6-4ee8-8d80-19f33bc046bb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a717c49d-63d2-4d30-9223-2c39ef6e04d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aea3086-608d-47bf-ab63-fa30e87186fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034de205-75df-46fb-98a5-a940fb7d7564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a702c446-6243-49c7-8735-9810fab96054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af47fe8-c5dd-4461-ac3f-d814238e41ea",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d04c87e-ae71-46a1-80b1-a3119de971d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92242526-8d0a-49ab-a7b4-f57b43f50f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85d69c5-9ed2-438e-a5ce-ab600bacd6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d40481c-f6db-425c-be18-a377edfe0ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e90af2d-54c9-4077-931c-112c981cd23f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01e0098-2d99-4d75-b9ae-e9e6539ea22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27e66fc-0914-4046-8901-7101796ad1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f95ebd-7f80-4c61-8f7f-75281f94113c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69c3e8a6-e65a-4002-8ca7-7c1f8674505a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800b38a8-5a0e-4c48-b485-a4d5a74a28ac",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a33ee0-a65b-4fc6-b492-78f05c2d7a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c9aa60-3e8d-40ca-b194-369aa1e3ddae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0167be70-3440-44ba-b96b-aa0d2c7fa74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab5582f-ce9a-4813-8477-db42d8d8e04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71017ef0-ff35-47a1-ab30-0f167699b585",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e749181f-2ca8-4467-a61a-6fff3b38f1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec639fb-2ff7-4c37-8b3d-681cbbbed8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0954a654-5e69-48b8-bb12-98be731816fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "891b240c-4e16-4e66-8ab7-7228e337d683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7a2b76-51a9-4987-84e2-ff5ce4431f41",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d296fb7e-e6a4-4fd5-8c73-138dee480c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dda8794-1694-4edb-b21e-208a2f548be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5c253b-f5c3-4d98-8727-a92252aa98d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9abdc92b-128c-4be6-a66a-ef8eb6a0046c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89738af-17fb-4a19-812a-3e839628955a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54cccf0-ccea-427a-9573-38d6166eaba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fc233e-7e1c-4911-bc4f-207c28f5cdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a88773-c29f-4d01-adbd-34bd59b81a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f976039a-6e91-4ea2-bbeb-e628753d8b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6ae9b7-4eed-45b1-b39b-907b22f917a2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b336508-de81-4bf5-bd98-8fd2199ccf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597940d7-1f1b-4e1a-b465-824fb1a10811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a38604-2747-4bd1-b8f1-942139a2a1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c665590e-a0d2-4aa7-9b2b-c0e7de3c4472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4a5e9e-338c-4de8-9e42-ec7d995afdfa",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44072698-db73-438b-83dc-ff7cc6fa53ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b8019a-7370-4510-930e-7abdcb0fbdf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae383763-e826-45f8-8b6e-661d0b03f401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7220d940-67e5-41b3-b261-de2498a77177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58139377-c615-4d59-814b-85639f0490aa",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb73e82-0b31-4cfc-bfce-8c9b00dd4485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5598e1df-f96b-46df-a080-9691a9b023da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4649c7-937a-42de-afd0-9ff4714166e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "616fb3d2-ff5b-48e9-a18a-b762454bafb6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "257d9b5d-5094-4c3e-9ca4-93b7d759396a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "45ce9012-7398-482a-91b3-8f9e5bdb3b7e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f91a8c-cd57-4c27-9413-4b887d59d1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8c35c91-834e-4031-9bf6-250ac623c6b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1643d02d-e0f9-4dae-8257-904966629de4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f70159f1-d815-40c8-9bd6-d4e6577a54d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cced5009-f01d-46e5-ba39-f7ff1948a947",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210a0b47-0fe1-4924-a0ab-c3fc2d942ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34c704de-13ef-4bea-8715-aa3be6509c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c4eadb-b0f8-448e-b3dd-a64353ebdb35",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "361ea046-5b8e-4116-9b08-d48c349fa140"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0a43d2c-1c26-4e5a-965a-ad72863aa7e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "181291d3-1299-4a37-a362-e34806f5e9c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e0d33dc-3e80-44aa-9f61-a8dba4e0b7e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebec9d23-010c-4f09-bb41-6328e3586b62"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a877dba3-4df7-49f2-81c2-569879ab7973",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dafdfd25-af07-4881-9f2d-5aadfe08286c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "839c3d41-b2d2-44b1-94b0-e6e0cb07e6c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0294c147-4bbd-412d-8d8c-1c322d9f01cb"
                }
              }
            ]
          },
          {
            "id": "ef6f8a38-6eff-49ca-a0da-0eeb0e9a4d7d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8dd8a092-e15e-4e07-8502-093c492e2a89",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e821613-0f02-4798-8376-729b6fa11015",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e45bd79-c12e-4acb-a6c3-4579a4bc6c87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c83e77e6-6570-4128-909c-0e9e015f73ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5c48cb32-57c3-47d1-a9c9-ad9db5bf5743"
                    }
                  }
                ]
              },
              {
                "id": "2d060440-8df2-4ed6-8783-eda4ce0e9b4e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0f4e711-902d-4e30-a88b-a29d769c2f90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e53b2b67-8d09-4248-94d9-bfd2b47012d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6418224a-9a6a-4865-916c-9bf68281d9e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd79b364-feeb-40ff-bf59-a16729fe2ef2"
                    }
                  }
                ]
              },
              {
                "id": "a5d6a39f-5fd4-4629-83d1-74bd9d036df1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd254cd0-2d6a-4eb3-9190-f1854f0ac82e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58064f3e-84a1-4ecc-990f-ac8819d902f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87d47ebd-9b3d-49d7-bb8f-6e89a18db0aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "688a3475-4208-4871-a1b0-b8ea601f3152"
                    }
                  }
                ]
              },
              {
                "id": "fcfc8c39-cc60-450d-bff6-1b43757ca206",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5634bbdd-f2a7-44f0-8ab9-f857ba1413cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8763ec2f-1b5c-4fe7-b140-7acba2c44526"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e6847b7-649f-4655-a76d-336165ec36e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b242be72-4bd6-491d-a0b6-e595190556cf"
                    }
                  }
                ]
              },
              {
                "id": "f75119b8-1148-42ab-a78c-a6bf1d6fb041",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a49719f5-bcba-4163-a118-65e05ac1c34d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0a8b475-d9d3-46dc-9195-68e7a3630e09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e934251e-312b-4e73-b792-693891355ac8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b259c3ec-f6c3-4495-ad0a-f9fdcfd18435"
                    }
                  }
                ]
              },
              {
                "id": "ef53963c-9e52-4962-97e2-794840521bdd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdf72ad5-5e00-4e9c-8bc1-5130cd06fea2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2f014a7-1fbe-40f0-a4ae-d0473d2f309d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47207f14-d6dc-48b4-b1bf-69ef17b6dc20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60a66068-5e5e-4b5f-8fa1-9d226eeecd11"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2b1a0a4-0d29-4d29-8fa0-1c993c54e694",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b23a133-1f1a-42c8-a10c-a790d8ff5b5f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f9d67d6c-f939-4977-93bc-34bfeaae67b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f996b8a6-d300-4467-a7a4-428bdb476672"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f99de51-7773-4ab7-a1cf-b2c5d0787c62",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "33f8d63d-9aca-43fa-a0bd-d1f443829c5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55e9182c-7d94-4345-925d-6dc712f1f5c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "339e25de-08c7-47db-b929-a6f7cb2a652d"
            }
          }
        ]
      },
      {
        "id": "81a9c72d-ee73-4fc2-908c-a5a8b2bfde5a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0cf5b828-822e-4714-9b74-74b48d8f262c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c7eeacb-0ec8-458d-bf51-c3f7289d49e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "68167a0f-26f3-4219-bf4c-443adc8b66d6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a04c87b-26f7-4635-a533-eca1b9e40f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e1e8a6-59b1-4e10-81b1-4d6d412335b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219c6ff1-80a5-4871-b5fc-ae3535146e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e977a2ff-0706-416d-a9df-0d15f6bfbb79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b8742d-f788-405c-8178-ab376b699f90",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e4c8c7-33ee-401b-b36d-4be1fabdc370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538853f3-f01b-4f4e-9202-4d52093d0fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0098bdc-cd5b-4a75-8e93-4c50ab05bd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9494f1c-e8b4-4398-b4ae-0b775dc4b5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f50e98-c874-4c30-a648-9652c7c25ebc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb5d7e0-37b0-485c-9173-4c0cc75038fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a598818-0602-406d-b0fd-c9417479c508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1bca33-7035-4eea-9594-c66a240574e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1175128d-c0fa-4580-852f-f00ffb821e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799bd0c9-cc63-4b4a-a234-74e1a6b36683",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964de250-5d03-4358-acc0-6f4a2b14f6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f99ee0-856c-4834-a8f2-abe4f01db155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045e36b4-79ec-4e03-a292-dcd111a151f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95cb437b-56d3-4667-8f42-b0db974a1f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6edda1-1af7-486b-a51d-cb6d2b8960fa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e71fe0e-87d2-4869-9ba0-e476de810953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84be2fab-42a4-4349-aeb7-fdfcfc4a25a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdcc42c-63c6-4391-816d-61b736b3894a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33df00b7-9f15-4835-b704-fc020e4d1be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e84ca15-4aea-4ae1-916e-34b66c379a5d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a6a63d-44f3-4f39-8b00-738d58a415d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4316555f-b29c-42cf-98dd-cb74a85dd7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b4b809-953b-4c83-9a19-dab26faeb717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3120a29b-5ae7-4dbc-be0c-82b80b60c36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e2af5a-7790-42e9-b6af-8588c9816d48",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b603b74-e827-4f27-974b-ddeff2e0f15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71aedb2-4ce4-429f-be01-d9be669d67a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da9b778-fc9e-4155-b815-561c7d8eae4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0cc191-262b-44ab-9b9a-a2c294112025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b88c83e-bdd2-4727-8c47-bbbd02f49e5b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340dcdda-71a8-4628-b91d-75d78b4e593e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d410c6-9002-405e-8631-80ee3f03af42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e564f268-3599-4cc6-bcfb-c5c44b3a08c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d385368-e7b0-4fd7-a83f-c4366c6cd218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3dcc72-5f55-4dea-b151-8f7f64627fec",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f0e90f-cf45-4eff-a9b4-f9945c5beb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dd49c4-0a66-41f2-9f2a-8d1c7d1df898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e9ffa2-f895-44f2-b7ee-b5eff447bbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8548a0af-f23b-451b-b459-439a5b473f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d22be8f-f97c-4647-9580-c850a059dff4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0cf525-37cc-4395-902c-b4dee32033db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae433df7-b128-4685-a7db-113d9b38031e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b712d1fd-9304-4e24-82de-f866faecffb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e30b38-2e2e-4b57-a737-4dd81e09d572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d88379-a445-4052-86c4-7624a1cda0bd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25e88cc-59da-4655-923c-387f6e063d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa97142-d409-4cf9-bae7-7554943f5471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e7ac33-83c0-4e8d-ae3f-6731b8320354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ddac83e9-cc22-420e-bce2-9380aa877a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a072e522-9f00-450c-9960-83c89168d5f1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8c5821-2baf-4c79-968d-0f1481085af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8c560a-44ec-47b6-a8a3-6afba15bf85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea91984-0bbe-4207-add3-14bbd6b30933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f13d947-5505-4eac-848b-999e8f3eb450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee7610f-ad6e-4608-9b8e-67ccdb72794f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008448fa-db70-4792-92da-7e6d77bb59b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae3d0e8-b997-484e-9175-2bd3ce507e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1ef185-6a60-4138-acce-3129f2acc69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0d02cf-142d-4bd1-8f19-2c5fc845a73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af31f27-bc7c-45bc-b0df-34c8dc66fe0e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8736a34-4ee9-4bac-aa93-63384742cc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda2d595-1de3-43ea-8959-7ecfd06fc57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e470eb1b-3f21-4541-a975-e6e6bff80d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "60597987-54c7-4687-95c3-b311adc362e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59def5d-fe1e-48f7-84f1-d95f37facd3b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b89af8a-9c0a-4df7-b2f5-ca14f16ef1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafb643b-25c0-404b-a662-028abab40c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbed405b-628e-40ff-aea4-40d778cff9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcde45b2-c696-44cd-aa16-7c0b9cffafe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7012be50-7d14-4587-9e0e-b852be9b564d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc3ee2e-4990-451c-87fd-923cb13655ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6851593-ff9a-4a49-a0d7-d16d6aa1fa72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bde5e3-4918-4607-8b89-77dd229b9dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "744beecc-ca35-4482-a815-62f9bd10e700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccb67f3-d1a4-4e6d-863c-a662ba909aaf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99349448-28c6-45b5-9178-a6596398724e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b255606-bf12-447a-a4fd-c1a4fb79eab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b870c0-5f36-4501-8570-ca800d30573c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0098e745-b346-47cc-866a-7c2e5ee547a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804829f5-c537-4c85-b4f8-251ddfb55c28",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b14c49e-af9c-4110-85e5-6e6f563d6537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c90a0db-9cfb-4bd0-acec-50dce815cb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1577c0-a6cc-478e-84fd-44d641048fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "abd4d684-60c5-4bf1-bd15-f7e23402c259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd99c9d-edf2-49df-a649-2b0d8e8ea014",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa73251-5a41-4069-81ce-334f69975f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1688e66-4d27-44e0-bf00-89f4931b6c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1182b73d-28ec-4666-aadb-408074ac17d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa490ee4-a8d7-41e0-903a-8d314db47038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f57c25-8b17-4608-adb7-3361a2953408",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdaca91-689e-4470-aae4-ee379dda513e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c98e48c-84f1-464b-b01f-6d43efa12183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1979e1ae-44c0-40a2-9dc4-9003730fa469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b78514ab-7129-470c-8679-0e3ab742294d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62a7ab8-25f6-4e9e-9e00-d15467d086ff",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad88ce4-7f44-441d-acd1-93e62639abc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8771ea88-2e29-448f-b905-7b778bfd1f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619eecc0-4d72-40a0-abba-7571429a11c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd6fe2b-f30d-411a-b719-773371560aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e724453b-c710-4530-9e55-2fed0766f2ed",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a4aa5f-42a4-4464-a7a6-c1b135c42244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21391ee5-1b4a-4079-bd5c-a5816fc0627e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b2495a-3a89-4f4f-b500-756ac52a3e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb73ae3-fd77-409d-9332-bd1f87d6cc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43afc94-9448-4966-9686-b988fd247807",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e01a1d-a2b0-48a5-9955-75975a97797f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8adcfa-71c3-458a-b5a7-6f077f913363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c46773-3278-402f-98d0-effba708f04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3aa795-df40-4797-ac7a-fad7d266bd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98395534-8642-499b-8a29-94e4fc54f415",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005349f8-f7a3-461d-97fd-d48536c19e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976df5c5-216a-4614-beb4-964c407b2735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0097feb5-cf27-46dc-8c81-be4c8b57b115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "366403c1-d397-4e14-9822-fb4bda272b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273e8c21-0f12-4d2b-a3d6-1d8ccac0c52a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c53d24b-9f4c-450d-8e14-550f75ba016d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4708b459-5971-45ec-af3a-0963a937ed80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14dfa6fd-1869-4e89-b760-f081df5dd951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3247053e-e73c-4df8-bced-6556005fbafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b742a6f-bd0a-426d-abf6-a57764660806",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02fbf363-5b01-4fb3-b1e0-166ff32cfe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb2c0e6-f68d-4256-8c26-51a65e946b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd885e44-1b59-4123-a604-e57535058de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "802ae129-cf42-49a1-ad9b-174c834fd683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5f7eb4-ac67-40cb-818b-2e40037d48ae",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a66ac9-7ec8-4bcb-8041-44601d07246b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc607d46-6fdc-41da-8b55-093839ff88b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca72e24-663b-4a63-a01a-0a0cf01cfde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce9b101-9856-4718-910b-16f7469dfddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443b539d-1024-429d-810d-33a9b88481f7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f883e3-8c7b-420c-bd86-5c72eb9c7b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb9ee14-2d8d-4992-beaf-42b4625c40a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4c993b-0d7d-4015-8e71-6a3dae22c8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4fec61-ca3c-409d-81df-49a2b4d55197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d554eccc-76da-4da6-a86f-7ca1dbc06ad0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ed4376-41b1-4fb7-acc3-a9faf7889a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0d0ba3-7044-4b56-80de-250ef0efeeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7efb2e-7f0b-48a9-96a0-44c610bbe8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd66a2d-8c5a-4ac0-84ca-9b0866ae995d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74df5a4-0fcd-47c7-a5a7-3f52428d7bbb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec116a4-78b2-4931-aa41-240e96b1905d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fe62ac-74b6-47f1-86c5-dfceac9e8e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b384c12-16ec-47a0-817c-b2cd11e25893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce97ccfb-cf1e-45e9-a50f-af7c92cd023b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a6ff03-1881-40e0-9a0f-d7a08580eb95",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3c6749-cacc-4175-a556-8360efbdbba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d350e6-3a2d-45ad-9e15-621489ad25cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b087b140-9ed5-4e25-b063-0b19d84ab6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f53927-6a5f-4d36-9566-d8db01808333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96494da-fced-4286-8f05-bbe5c4e35786",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe70df0-3e87-4922-81f5-b70ee3293847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bd2c6a-3d59-413c-987e-7acb1e1fba54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86704f04-869f-46e4-a97b-2ffcd969f6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6cc3b3-d077-47e3-a35a-c432e3b34968"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ebf1e0d2-d6b4-4d16-8e82-6277f507523f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d58c3fa0-60fb-4df8-a351-4de4b12b08d0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f6d609-d590-402e-b988-40755be03c35",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "340d6377-f732-48fb-86d5-d90d93397e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8b70e6-d95f-47c7-aa68-ca68705510a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0efa21a3-63f1-4367-860e-a1e97e7b092d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe1779e-5538-4e46-a537-23ba2b97dac9",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044c3e5e-05c4-4eab-b155-aee87c7ea97c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e140fe5b-4f00-4ba9-85cf-fb23891b9422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b875717-fb07-4e8c-820f-f63f2bbf819c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db1b3ea9-f73f-4759-b69c-bd566e46f1c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce25a6cc-fd45-4a8d-a727-aa5636e3918a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c7f33b1-ce37-48ff-833f-3c6d036c9c2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "214268f4-0911-44cd-a40b-c3723f085c92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd107ea2-d930-4e35-8f6a-e677e57ef6a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fa5f760-c8be-43c3-acad-97544cb4e871",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89466f67-3161-45a1-926b-f28a59825cff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36f2f486-8c51-4fba-97c9-51e4c139c6ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b850e80-05c3-44f4-a0f8-1ebf873c7a35"
            }
          }
        ]
      },
      {
        "id": "489e1870-3f9c-4f44-a56f-91e61217e00d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "afb7010f-b489-45d8-9ba7-20945ce8fc3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb2f20e0-418d-4be4-80e5-1c9e607e5086",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "34a0c3be-9094-4c09-ac26-9d8074fffa97",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e297a9-e267-4721-a2ff-3f425aef8103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383f659c-8be7-46e5-81be-e1dbac657e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2e9e91-3900-498c-ae6d-834d24d9527e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4018731-a6a3-4d81-bc60-531d30340f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3ff838-4da9-4e2e-a001-105dd9b862ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ad56fa-2e03-4bd7-86a5-199afddf111e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d823595-0cee-46e3-8309-69b8eb07a694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59573405-edb1-4f0b-a714-b84701cb9a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786b5ebc-5120-4318-8061-ff8b224c80cd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec45c12-fc46-4e7f-aa3b-b0e47d02aef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa87848-16ee-49a3-897e-21e80f14dfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11b8ee9-7f20-4503-ba77-cb416b7eac3a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221ee341-2f8e-484b-88f2-ffdc3e5506b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896ca176-0c8e-4a25-a3e9-9aadf7ed4b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb952f9-64ec-462e-8eba-297b315ba0d3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e89547f-27d9-4814-ac96-d3a6f1a04396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262774df-c9f2-4368-aaf2-2940117f7e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322ae8ad-5d02-444e-8cd4-3157399bd726",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a046984-50f1-45e9-a904-ad2eba8d21f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db2fae6-e672-4365-9e66-5712c5cf85c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae65875a-e567-4dfc-88ae-d187decba849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50336752-cb14-4807-9424-e1266f9ef059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f0d3c7-a4ff-474a-9988-1fabf4f8e051",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceda588d-2d2b-4ec6-ba94-4697d75caaab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d9a2281-5697-4cef-b61e-078f1cf89fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93198887-a4e9-48f6-a01d-19dace98a84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265f3708-9bdd-4821-b602-b258c673e80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f1dd2a-edcd-4314-9ba5-3dccba1dd0b1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a78e75-a4c8-44fa-a6de-88b2b2c2b4a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a7418ae-50f4-457c-a6a2-b15b400a3767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c25096-ce96-4975-b1a2-5c75c46dba5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff51ffcf-9132-4cdd-a83c-0bb231692a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe39f6a5-a1ec-405b-aa8a-5416de211e6c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4966cfe5-06a5-473d-ae02-cc34f04421f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9f09d26-eb4b-49f9-9e3b-12f6ed64cc75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b917587c-0a0a-4515-9e86-81eb50188829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73e24c0-84e8-4401-8664-bcbb4f39f89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ce2b58-25bb-4009-a08d-a4187f08208f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d473225-4860-4403-90f9-ed976b19a513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49575b8-e4a2-4583-b15a-682bfb96cbc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e04f34b-b529-42b3-89f8-3d8ae9cebb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee23db5-c90d-4058-af8f-32f075e60c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c17a714-ce37-493d-816d-ba66d5ca78ad",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210d8886-2515-4539-9a07-208dd735dd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3d71be-a40a-4121-b137-e6f4b57f5b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32386813-d992-47c2-9ec6-ef44b7e65ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92757ccc-a337-458d-bc1b-8e7566bcb106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2614c8cd-210d-4d24-bcab-a33cece01eb3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7feaf1d1-b96b-449b-b782-7bfbfd57e214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "459bad9c-5b81-4488-8c3a-413185e48e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2003875-86cb-4f64-800a-c7a75427b577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6812f98f-db6c-4ce4-9a38-4b9710ccbd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587f50f9-6286-4d9e-85f8-1e6a65561631",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7695e10-0a56-4b50-afd0-446418e21378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2b4b46f-6734-4947-9743-dfe47074b878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ffda28-2de9-497b-8908-dcc14c4ced11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f678d9e8-c3be-4ddc-a037-038707675afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8f4b9b-c17b-4af4-8418-7b9dee50500a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f425301-84b2-4403-82b3-08ebf93b7c35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c1de483-c28f-41e8-8ae5-672229f08e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093c5d67-46ec-40d0-9d81-2aec8be548ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895969c7-c56b-44f8-b1f3-e22dec57e5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf2a983-1474-48a6-bf82-6ece9e6b505f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8135fc1-8c37-42e1-9f02-4ba12676b27c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4a327e-3fdb-4dde-a4fd-be545d625f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654cea50-df45-4f0a-bf04-00d288426b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1740e8-1bc7-46d3-b7a3-6c1a05229b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0ac19a-6709-4f7b-a1d9-0a1a449c7298",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5da153-16c9-4b10-9b6e-a5e401dbe9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c460189a-616c-4f79-9a15-0e8450cd1046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b9f549-e72f-4bc8-8356-9ec683f21be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f61018-45e5-4b4a-9cd7-6b9089ef06c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af97b35-4038-4b8c-9817-6735e82d455a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e6a0f7-6dfa-4c74-bbf4-7f0d74a9520d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402e615e-0897-468a-bbba-e26b67870470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eab26ba-1731-4b27-876f-37153d7187ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f24cd8-acb6-4088-a7fe-08883872f220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676550f6-eb17-498a-a2c6-d96912dcdfef",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947f0db6-126a-4f68-90c0-4502a1f210e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56cb056a-d989-4673-99ed-09c8c150d864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abd4cde-4dd4-47c7-a327-93c89a625064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd20f016-3081-4fa9-9330-ce4a524b5b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70980873-1845-407a-bedd-9bdd88b4d1b9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ea1a28-def6-4c74-ba7e-3bd48743c6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae11f716-58a4-4d4b-b18e-d68b7e831d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec988fc3-56f1-4fb6-b66e-e196e2cdaf96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3660e285-a804-492d-bb76-c97a40346bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347c2d9b-0c70-4877-acc4-c7c429212579",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c55e71b-84cc-47fd-b8ba-868a2151096f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26bc86c-dbc7-4a72-9bbf-77e83b523a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050711bc-6ead-46e8-a3bd-61272ba2967f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769902c5-ada1-47b6-9c88-10298d69b329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69e4b5b-8479-4d18-8261-96d5e6c33ded",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f9096d-4892-48a1-bd8a-370fb0f419b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef059666-e97e-4b81-943d-b6a9ca4d653e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48419c82-67e4-4274-b792-39dd1ef2cbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec13ebc8-b3e7-431e-a02b-d779c05160b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ea1f1a-4d94-485e-88a1-47960a7e78c4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1c71bc-8dae-4bd9-a7b0-6b3faefcfa02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db518468-a5c9-42c8-b866-8fdce611260a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a48c95d-1a58-46ef-a189-5c04bb320521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a65a22c-d30e-4f7e-874b-70967cc08f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337bd3b6-8800-4e3b-9771-33000ba157e7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ee2532-a038-4d25-9ab0-710155d56914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ce24d34-e9b6-4791-a3df-e91e2a7be7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7036dcf6-687a-4c77-8058-dc4b3eb0af2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfeab1d-0889-496e-b4bd-58639eb2af33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9ad979-5b85-4506-8d33-68a08e0eb013",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7351613a-0bf7-4b84-b307-5ecc347d6dcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59a7089d-80e1-4754-9f20-470f929ac7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a51be6e-67c4-4063-adcc-bc903cb6bfb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc07b91-bdba-475d-a07d-1d8f8c22d155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40519a1f-8ed1-45e8-9209-6cfbcd4cb62a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e31c8a6-e05e-431a-bd4a-a6bae9e7e523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f15d2069-dce4-4b8c-9fa2-46f35a299474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06480a38-c5c0-41b0-81d8-7c5ed4f79da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e66fa81-453c-4ad5-9ea3-14f21d85fe99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a376ae8-fa27-4890-aa8a-98562d1a0958",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f24e6c-5f44-4947-b73a-f5792f30f28c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce444b81-b8ef-4ed0-a4db-c27d7757f933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38aee29e-22bb-4582-b5b2-33dcb2f17bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea746cb-9e72-462e-99cd-65e6ba74a63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5039295-5254-46df-936c-b9e09da021b5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8372fdf-7964-4935-9aaf-b9c1421b015f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148e2b1d-d452-45c2-be87-761f07658e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3b5ca9-23a8-4908-82b3-13da715c8a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e44feef-df35-4c36-b2a7-ccbb76bb1fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c48dda-1259-4d63-9d43-25a4128366aa",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac84d747-feee-4d19-884c-559dfa687a25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "136c5dfe-f5c7-48e1-bced-7af9437218a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ca4b1d-cf01-42f6-ae37-e94a28706067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd2c44f-20a3-4307-96a2-60f02026888a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39851e05-050a-4681-bf9c-f66c261d942a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6857c156-8d95-4ae4-8c2b-aa60fe23b05f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8023a3e4-dd5a-4c5a-a651-cf6ab0c80521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4b4aa0-0036-448f-bd0d-b38e4919ed8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe954bd-b263-4afd-904a-230a2b3fe56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e1ef88-f87e-4c67-9259-616d1143a380",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c6e3ff-ece0-4491-a108-04557187b090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc2c8c2c-e56d-4969-98d1-66091ca34419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdedacd-766e-4716-b3d5-3930c2f1514b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b81715c-3a59-4234-a754-84616369f8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8dcb79-f31a-48d3-ad02-61b904e0395f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6531f8-50ab-4c66-98fc-935f21693711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c513ff73-20e3-4f3a-9b8e-4c6c09a8051e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6c1aff-13de-4d26-b2f1-b51794442ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c74d59-4ca3-47a6-934d-fc9d7c12ac98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b9bb29-304b-4bc2-826b-4f79a939b460",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a72f3e-b86a-492a-ae94-df5964d2b483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e331dc88-4d5d-411f-adc6-65dadef07384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274a595c-ff59-413e-b545-79dfa8296025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ba5940-cbc4-4092-a563-74e6287fff51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dee452-a700-4512-a1b4-6580c872b804",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4a083e-210e-4146-8f79-8a92b160c65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "253008d0-2214-4877-8e49-53e0ad74411f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a90605-f6c4-46b2-81d8-90730af320ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af73260-12e8-4d9a-900b-619edd5e0efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa2710d-a86c-4926-9c60-9a6d1c2729bb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a947f9a7-cade-4a80-9016-bf4071b65467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f8e20d-ebf6-4c3d-8457-dc497afd1a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84677471-b78d-4e4e-b48c-ffe052c7ab92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c33996-f918-4053-91ad-c4ace8644b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb5d9dd-752d-4240-8a34-34d97ec8bd16",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5cd17e-3fed-43a1-9a22-80444a6c4f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3d44b5-d3a6-42e2-a6d7-6e3eedf1085b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f01836-5768-4a13-b83d-6f719b4cdff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff12305-a6bb-4223-b305-86c3e649a967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5295c026-8a65-4ecb-9e60-11b789e7571d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd1b25d-26b4-4aa6-9f15-a934efa3bbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50806ba7-2e66-4378-8b66-2554c6578546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24e1fcc-c9d5-454a-a069-158dec7a7d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde18dfa-3be8-4e34-bba5-96a9622e0212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dc1562-5261-4abb-b40d-75d65af661ad",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34c62da-500b-41dd-abb3-ea9615d6029e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdad2079-ae57-4ca8-9ff1-3cd333405797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d0b4bc-3b73-4de5-b751-dad9a4ab9644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22354a21-633a-47fb-8359-b7a6765ba217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fc1f99-69c4-4ea6-8cdd-d5e3cc41cad5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abddcfdc-032b-4600-9cea-1024e8264d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f092bac-5adc-4bcc-bed4-61f294553377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e5f57c-2f8b-4d3b-852b-cfe22374887f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536eb714-3733-4b2a-8329-f78ad7e02388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a850b9-dbbf-40af-80fe-990fbff82cce",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6172fdef-81a0-4748-b7e8-bdeecea6e572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa42851-fe3f-4586-8e1c-5bbbef1530e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047d9a00-3e85-44c9-be11-58edc18ccdc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ce6c37-a578-41d4-95d6-179cde83f8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9320d8-94c7-43c8-b6cb-a75f1d8ebf44",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28b23a0-6295-4aa6-8a48-2cf5a21a6605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc79bfc2-c382-4f59-b113-d6ea6d87ae98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cafb2e9-b85f-46aa-85a7-d0b4caacd219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0484d0-804f-4bf8-8fed-fc65ef5233aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19824fee-5941-4405-ac76-718fb5751904",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422f6f66-0f44-4063-b0b4-caae05736e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcd95a8-4b2f-4a93-95d4-0572281402ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e723982d-31a6-4de3-8114-d0cd94874999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf37c3bd-09af-45a4-8aeb-7e2ef6deebe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fae63a3-1d21-490a-af11-2d9c779188ae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcce9f64-d588-4912-919b-062bcf45eef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c313c047-f92f-4b2e-b13c-7db6e0faee1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1c69cc-4f82-4be9-942c-8e4fdc14b600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49ac7a2-d86c-48f3-a391-f5db419bbc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f13041d-6267-4fb9-9e24-9e9ed6dd12b2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7234ae3a-fc52-466e-b79f-ca8d102df7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01b8917-6363-446f-a4d2-21f2b5178712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad8b9bb-a17b-4f8c-a151-7116c8cb7263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54325b2-f068-4fcf-b7db-90d3f9cc3539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d68ee6c-4d90-4d1f-80f2-616d6acbaf8c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036a56b2-8cfb-40df-a0bd-04f3e083f1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18328fbd-acca-4e48-ba4c-58b2b29de243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb18cee0-45e2-4048-98c9-1149db879ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0871984c-533a-4a70-80b5-d1e2db1ff639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dcee79-787f-4e46-92a7-12c6bb1f67cd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffd2c9e-64f9-4513-a352-240ef9a01426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1454e426-9312-4486-9a86-e1df80af4a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad326421-0665-4a52-814b-e0ace123ca25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae1e093-d406-4bc4-9ade-3a7bbbddb923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c29d460-09e3-4db7-bdf4-20b890c89389",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1462316-28f9-49f2-9a04-6cb9f44ce487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2601d8-610a-47d4-9661-da1b13ca636e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f27060-ccfa-43af-ba1f-2b2603a13c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60bf632b-3f9f-4343-afb0-fff0d0d40352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100f6fb8-4575-4b16-a945-127e78726055",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d06077-962c-4cfd-a22b-d02c81a0ea22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c53834d-f1e9-4534-892f-fce682d69dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b7d916-7943-4f71-b25a-848f81521f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b978eed-dbd5-4153-93f2-572d47498e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7548832d-1f34-4e98-92d4-a4ad82559d2f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f325ff-8455-4a9b-bd31-a55b02ef6807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7206b5ba-6a4a-4c51-b919-af2d6d0c3673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7779419b-a02d-4729-ab67-7889576fbeaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8503d38c-3332-4378-8490-4fdf264b23ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52141e6f-7603-4780-a7a7-7530f8f8fe80",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2aebe9-b9e4-400c-881b-85d28fccfc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93bee733-892c-4240-966b-243497ac6458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376ff80f-6862-491e-a59d-6a4f045dfede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94be772-19ee-4e7d-9cd2-5a2ddf7a3631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a23dd6-26ce-48f8-a02d-ac4bb99dea23",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426d6b63-fc3e-45a1-8f8a-87d1bac7bd39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0bdcf25-4c28-4c1b-9145-2af032d88307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10fe137-96ab-488a-b82a-83b4f548fd6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40247b4d-46d7-440e-8bb1-d0fb387bd568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d181ea37-bbbb-4437-8d5d-9ad1cb2575f9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca17ee6-7ab4-4b4c-8fbd-e5deaf940121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7387eac5-92da-4346-b77b-d62a1ef8b569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bb9757-1729-4be8-802d-1a92368b8fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559423d8-90f4-4c32-8a1e-66a2009c681e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c07736-ba2b-4b2b-9362-0385c35bec9a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dce5fdc-1a7c-4c18-9065-0b625b4ff185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2aaaa5-2257-4102-b68d-e90b4f935ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca983e2-cfe6-4eb8-a069-9d586878b6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7897b61-e27e-4682-b3f4-bc818635649a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf8f8dd-0cd3-4c5b-abf9-3456f7f2642a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfec7924-1d6c-4ae1-8be6-7d8d381a20c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcc9487-5c9d-4951-a8f5-cb7ec9bd1693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5697932d-0abe-4602-96e9-2a3f6f2abd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1058ff-cc00-432d-ba60-8d4132e0e0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8446fa15-4fbc-4ba6-b833-b84befea6fea",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251b26f3-ae8a-4fe9-ba22-51786bb18a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71c93a7-771a-403f-8667-c7971a2fb134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d555a835-e377-42ec-86a8-1cb77c85d3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409c138e-41a6-4351-b141-a0e753413ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302fabed-aacb-4428-bcc9-5ec7c42343c0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687b76c0-7097-4ec3-99c8-8db425c4edaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dda6f15-4fa1-46ed-85d6-5a5cada0fd88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c4c7ec-00c9-4621-a5ab-b24d58e7c450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99ccb9a-21e5-48ac-966c-392c67863aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930be95d-7f89-46a0-8261-323a3e42482e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aabd893-6822-43e0-b0f8-a8e2fe59fca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a8592b-0753-46d7-a718-80367a1b2a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237f9387-44e7-498c-98ab-e951a24e4715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbff5f8-b38d-40cc-9c63-d122e85c6264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a829f0-9965-493c-8ded-99c6a514c97b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf3d606-3add-448f-9b0f-4d8bff2282e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe9cad3-abf2-4f1c-b9db-a02112a769b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22084aa-5fce-4090-9426-f6486350c0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66acdb5b-aa09-4c15-954e-9acbb8f25248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3f86f1-6fe7-4629-97a7-b0d9876558f5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b678d4a-43d2-4878-b021-3f6c848959db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0115bd6-241d-4c2e-8f0a-ebaa37347de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7233d295-8991-4c4d-a6fa-842ce1ccc891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14520728-3223-47ed-a657-04c4663f7392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae08a408-6baf-442d-8271-4dd253dbb901",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd18bd3-84f5-412c-be64-6dff1015a38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540c2538-01ad-4918-9027-90b2a641e707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4facf00d-10db-439e-8ad5-74a0d1fb8a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c3090a-3f68-4f4d-a17e-52eb1288e949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6a6f44-301d-4c14-83b5-e0414552de89",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c543bb-dc5f-4c58-a7a1-a03a74c3cc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c96334d-e455-4526-a6ac-de899874b7fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39be08f9-181b-4a35-bb74-b66330fffce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e213bb9b-6dff-4a27-8e1f-57d321d1937d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cce27e5-308a-4565-b136-7b33056359d8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4987081-d4ce-4ef1-b28f-ef868247f1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5578e2ba-0f94-4320-aef3-54ec5b2e91d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e8ebf9-aa5d-42c1-99cc-210fb787b609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2933791-bf12-4367-af92-a9465864dce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a6c732-574c-4221-9feb-a20179949f98",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d433999-7f77-4ae1-b7ff-bbe7def5fff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab2abcb-8e5b-4006-a543-ea0b3d7de141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f536403-5836-4a1d-803f-01d309a93132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8446127f-4640-4457-b4f0-ca9b2c9b575e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51afbcdc-6f48-4c4d-b5bc-db165574cfa3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544d2125-0652-4e7e-ad58-63dd7f03f2af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3413a511-c3c9-4cb7-b06c-9aac3a0cd25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5319424d-053e-4146-9753-6fa57d8ac637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff346eb-1928-4bb6-8f9d-c05f75070f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a63c70-86a4-4c48-87da-bc4104de9d36",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4467297-4bf7-4baa-afa1-6a78ba185864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d9a557-4b34-47a4-9e2c-fcc34c36d232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd2c062-d919-4027-98a3-4f0479dead4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43828a88-663c-4927-9972-1b6bcb6e2ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559982d9-848b-4efb-94cc-7b83de657c51",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174edf91-7df2-4697-a075-dbf2143ab9e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05c41d1e-17d0-4a36-892c-95c8c92037fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d4dbb1-e872-4c1f-8b18-69813eb23a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb7730f-f2bb-40ab-9ebe-279fbfe8f437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98610b86-d61e-46db-b78a-82b8ab342fd2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b234f5-ed36-42de-9b8b-3e86d52c7172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c0fa97e-ab32-4167-b9f2-6fc921b01a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f658de54-b225-4039-9879-be8ad20ab647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed09c9c-3723-42fd-aadf-0092df6cf524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92999c5c-159f-4fbe-b745-da7b5d94bbbf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638ce6f6-9a89-49a9-a120-bf9748c7fe64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f54edc1-dfb9-46ca-9407-26ea1885624b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0966da58-5da1-4fcc-9dab-11fa732653eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70273ab8-0456-4668-bded-039f859f36b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55aea829-4f0c-4147-8775-37ea214361e7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4997794-7ed4-48f5-8f68-9e036310229c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c705f5af-59a9-40d8-87cc-f72158925791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcda4b33-17e2-4e93-801e-f8f2cff0056e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0404c7-f1e3-4e51-9d35-5961571680bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab97beae-cf01-4888-88a8-c5ae99fb558a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37aad536-c5c5-4496-9cde-1f0fce5471c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "252d213b-fcf6-40a5-a44b-f946bbbcda79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a39664d-26d6-4932-8d53-3cbcde26997a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6392e9fd-da78-4281-b7e0-a63b0b1e89f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb9308b-fa0a-4cce-86db-ca6b6e64541e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d6e7cc-0800-4784-9592-a4603f24e6fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8481cc49-d298-4153-9cc1-f81d45a5914c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e48af1-a428-40e7-9cb6-5e25c3312e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55818b4c-2f9c-4e66-940e-9106a898a133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5319d9a6-f954-4094-9331-de16da819a3b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648f3c92-a1de-4678-8369-86fedc5b3b9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "582648b9-40ee-41ac-8ea8-86f30b5e6f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0044feb1-6925-4f8a-8daf-49f868c3d84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196ea343-3d39-4898-b841-254511751b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08405169-c1b2-4664-9199-4e20e67d0ff7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0407e5ec-be2d-4a04-b401-f92c4e25472a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d12f8ecd-7161-40bb-820d-84fe636725e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac1e2b1-9be5-451f-98bc-53a7cb3a634f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfc9cec-754b-4667-861d-1e1b4b1cd51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5d92eb-ba20-4849-acd2-0661ca81dfcf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911da451-a6e1-4bbe-9750-331afc9aa803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f97b1c3b-4d39-49c2-ac2d-24de385610b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52ff8f8-6d0e-4e2c-a3e3-6f26ba539521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b91a954-c7aa-4f27-ab3d-59c4a5b2515f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d781e3a-d7a3-4361-9b39-0306f4114741",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cf98f5-b788-4d8f-a1bc-8c15aeb3dfef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da30b2db-2c1b-4bb4-a091-cc5f4f22ecb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d02a5c-ec5c-4bf4-8011-bd4c676c0f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67b9014-c703-42aa-8afc-356048ac323a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73307941-4b39-4072-99d7-0c12a15bbb59",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b60cd10-7bd3-445a-a348-42533baada28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45f8878a-ac23-43d9-afd7-4c6e99945b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0293a56f-17cc-4a35-8cfd-50d32671187c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4455a88b-5218-433a-b30a-de54f9771e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9f865a-d709-4e88-931d-1ee3fb18f579",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8348e7-7e1b-414e-af52-d2364c0c3b0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1586ce50-d140-4523-a227-966959416842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd4b7a8-561b-4fcf-8ce2-8d628fa11fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c316f5-81e8-4a9b-8ad0-f4c8d384e9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b935842-098f-4226-a239-f4492ddb0256",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84687573-d87f-4619-9859-c488da1f58a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78eda2f0-7ce8-478a-b268-1a6a0d791297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d569ff-0aa9-4418-886f-5e7a0d80a539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3574592f-4592-4a0d-8f3e-b436c78cc1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146230c5-0f15-48a3-93b0-d5421166147f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88b05aa-9a1d-4f1a-a8fb-833935b1dc2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ede791ff-5014-42da-83c0-aa5ac8beda28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4e0e1d-9b63-4d55-bc05-69da78864683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b8cacb-a31a-4323-8ed8-654aefe1394c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41e75e9-d9f8-4c05-ae9e-dbb67f2b4c64",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cf5e44-2d7c-4222-855b-237981f2ae1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c3e4db7-9bd5-4c92-b1d7-9bb0b1a16cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3b1661-c6fa-4950-90b9-7ede65643da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0190c0a2-3f82-4449-b82a-648fd98066e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f44d6eb-0b70-4871-a5a9-c8ac5d67a31e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a86b5e-08a6-48b0-935f-4b066a6f20bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "febb60fb-135c-43a4-9e0f-e9eaa57c78a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b90f29-dea3-400d-b243-9c8997062790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd913ef-5bb5-42e8-b73f-f2bd0ed0d38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca4bccc-c750-4167-b9dd-2b197b4f3ab7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6003cb-28a9-4736-a55f-96c9706dca4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ab1b6b3-819e-4b2b-af18-0e1572ee5e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f0ece7-96d8-4c81-90f9-e988cb83478d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed850f10-4b7d-402c-934a-40388b062841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481afb22-a605-4157-a2e2-b9d5d6c14741",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f962f2-62e4-49f5-8a4d-3f73a283a761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae4c6a95-10cd-4d06-9dbd-7299d9cb7afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa0051e-b67c-453b-9e58-391ed4601f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5525765-8b7d-447e-bf75-15bc6ff252dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57932a52-beeb-4880-9a84-6393718bb302",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d5d159-b4a1-4602-8b33-960bff15f087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "882f8ca5-aa06-474e-b49a-859e3843aed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfecd5a-03fe-48d5-ad08-3e0128248881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b74e108-b62d-4981-ae87-d3c0581f96e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2bb229-215f-47ef-8295-2c3b493da39a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b872ddd3-5b71-438e-ab1c-04edf65b5a17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fee5887b-c37e-475f-b560-612dee8c7ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb00ee9-1011-436f-b4a9-5423edf9047c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2450492f-4b26-4fc0-ba10-a8e68c756025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5077ec7-3c0c-4662-959c-d5a927091b17",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19131eee-6008-47a5-9bd8-5ceae083b403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f581279-b32e-46fa-99d7-b8b0f42ea7c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f05166-652a-4061-96d0-42398ea0be61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72445d26-126e-42a1-ac4f-6cf7787bd06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85c230d-8d3e-42da-9a88-47d6549497c8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21857166-104f-4d04-8f6d-ab9c698d894f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f9d7922-fe12-4a02-a6c1-1f7716230b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a79f5cc-556e-4bf2-a6af-3123149b9470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0315951-3737-4bb6-9167-f056516e55dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0d981d-8ae7-4f61-9b6d-fed31e99203a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f0fbd2-1a31-437b-b1b1-054ea3f5bda4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d62bfa-9cb4-4dd0-b113-f880424379f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1aa63d-0a8a-45a2-9010-0993553d60c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630a111c-f61c-4db3-8a6d-76e36aa5fe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86c4e61-d013-4d0a-8842-6301f0c5d728",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba163b3-e393-4160-ac52-267f02fec5f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65079fec-b7f9-4e01-8100-a88ccb324b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e785fc7f-186a-44b2-8e2b-ccf750ef0e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d90ee9-3a8b-4ef4-a313-8d0332ad1094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fb8de4-a813-4592-a136-ee4d8a3e768a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc28f76-9886-4593-b2c1-478cc1df21aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7d1fac4-4657-4317-86e1-159b39e36bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c814ea-9b19-41b1-b05d-3c0691973adf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb88e24-b73c-4a08-a808-8b28de16a667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b85a71-a371-4ae6-8339-0d1e2b67f40e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090cb393-9334-4133-b694-e445425b9fac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af096588-c264-4424-828d-ec865627ac7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dee224-d2bf-4343-a7ea-dc35c2d88dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f981a17-fcc6-4bf0-8d66-abdf317ee0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cfbeac-d271-4ab3-97ab-6afff6cf3659",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb03a119-5e8b-4fe2-96a1-adbbab486ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "309e0caa-5077-4987-8e8e-3569e0219da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9041aa50-6341-40ba-b9e8-6dfe159e0c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7db74c-76ff-4c87-911b-529f59d8427c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169024d0-1dff-45fa-80e7-35e6b4d5abd9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a63e80-faaf-4aea-b3c3-6143109ceb00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c9fcc00-6bbf-4e07-b754-6f1fa037353a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dae40a-39cb-4a8c-a076-a629082f1b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a915656e-fb42-4c93-84c1-e9b7bfaa01ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b67e77-2539-4061-a510-29d897df931f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cd6112-efc7-472f-b42c-15496f409589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b60ce9-bbd7-4219-bcec-43a96c9ca2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79333a30-d158-49e7-a02c-541869cfc810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f045099-db3e-4547-a0d2-f91e4cd29a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da43fadf-859b-437a-9a75-5b17b5359884",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c615c45-990d-4dd3-963c-ca018c87e14a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ed74ba-2f79-4987-bcfa-b66b10422204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d384261-c057-43ca-9082-2424085622ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d78c2c0-c6e2-434e-ad32-90548a567d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e74f6a8-13dc-4248-8257-04a4e64ef912",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0c86c5-7f0e-4dde-a02f-2343b051506a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1c521f4-f718-4616-a6f9-31cf3f305d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e5e3dc-7a72-4551-99ff-867fd2141aab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3411500-3630-4963-af49-34f49b68e091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e722be-04fe-49ee-baa6-34fef1cdd8dd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8fa2f9-052e-4b8d-b80e-b79e2e204ea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d7f3e9-fc14-47d9-a856-e982d1db1188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b6e34e-13a5-46d4-b8f3-2d466bf795e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874dc328-6375-4e4a-a463-74604510c4fa"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eeab3679-8f82-4041-b0c0-2f4126e08ed7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "645ccc2e-2aa1-4e1d-90ec-6b47f731f913"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cd321b3-18d6-4014-9e6a-d5dd6cabe4db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a1e5e07-3000-4de2-aba6-61f95ff275a1"
                    }
                  }
                ]
              },
              {
                "id": "0ae92019-5495-48aa-a301-9328eefc55b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81ce917e-93a2-4b93-ac72-2339b9b6c2f5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0ce363-9eca-4435-a127-7450399afd47",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3db5e344-9b7d-414b-9fc4-4230f33fd4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb5cb8c-31b4-4d2f-8c02-69e10204db19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0570fe2-4960-43d5-b036-e2b4453ad41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227a4ebb-0463-4d46-a7d9-72fed38d38f8",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3563fb5-06f4-45ee-88b9-4a3af3e4d68e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b238221b-a5ea-4369-b197-ca6664628f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5c39cd-6606-4828-a27c-dd69e92d1ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3e36c61-7d77-4ac4-bbe3-edf2fa590399"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0079b00e-8ec8-4eeb-82f9-5c81d9f2b8bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3759e0f-ff7c-48db-ab11-512211bbe119"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab31329d-50ca-4167-a5c8-5180c6238110",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87181e19-f23f-4071-8391-5d643cb37cbc"
                    }
                  }
                ]
              },
              {
                "id": "c707cb17-6f9d-4e52-8e8c-cb349adb774e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1d6149d8-8fcb-4183-88fa-eaa863e3aa4c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09808fd-b42b-4b14-b740-446bd5af6231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2f4ddb85-aa61-4b8f-b688-c2582f13a02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24095a8-95de-4dbc-96ef-993fd9506fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac76e46-b7d5-4ee1-ac24-1b3b0d1f18e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9bdb79d2-7e75-4c56-9ac4-e0719de86eaf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10d58fe2-dace-430a-99d1-2967aacbab11",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9751912d-576e-40f3-9640-9813c7c67f00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d283aa5e-2319-4587-a174-258b4b2553c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8723b7c-d839-4285-acfd-bff5dd543e42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0122c3d5-311e-4ab1-8424-e165076b51e8"
                    }
                  }
                ]
              },
              {
                "id": "473d107b-d8b4-414c-8454-0b0b076738fa",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e04be605-ce60-432a-b83d-579737ce6876",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "39470106-bf0c-4cc6-a6f9-43ca4ce7a562"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8456e38-9ce8-4996-b419-c164d47d4613",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fe43ca3-27cd-4927-b273-3a83f7e20357"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de2734b7-78e7-40f0-bee8-0c4cca555bbd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bc46f957-32b4-41ba-87b4-3cd4cc1df72c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28501f81-ffb7-4184-a572-1b528e114c66",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02fd3b1e-73cd-4d0a-9741-d9ae25f354e0"
            }
          }
        ]
      },
      {
        "id": "94899302-0060-4e4a-8146-9e1052432e2d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "24d34029-a8e8-4b8f-b61d-c3e9476facd2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6faf7c31-ce5e-4e6d-af21-625f6b6c839e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b235b88-e358-41c5-9465-55d977b3cf01",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8008aa60-b13a-4744-9ca9-696cf127e169",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b956a7b3-8011-43c5-87b7-36260a275c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d3e5ce-8e0c-4d6e-a888-8744c1f5802d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3e0cf3d-6d0e-400c-9a48-b131725f505a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc80111-64ae-4ed1-9b25-382bb0bf57b3",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41613526-46aa-4b00-828a-17e3b8e4321e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "611c8abc-e75c-4225-983a-1329209be5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9655f2-1363-4236-8d4c-ca435d17571a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64c17229-88ac-41f9-b6f2-1005f4fc76ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3bd2d9a-83d2-4653-8741-06f58c52572d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cc4198d-dc8b-4f56-aed0-19964e3a7928"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e29f202f-fa93-4df2-a86b-1f8763a21b48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ed78b05-e2e6-48d1-aca9-dce873af8576"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46cf1d6d-7411-48a4-9643-6fe4a7a816fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7245fbd5-5ca2-4a85-8aae-91dbbd215533"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "abbab999-27d2-444b-8f5e-f5c4458bd189",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6978691a-37bd-4ac7-9b15-b8e09dfa1217"
            }
          }
        ]
      },
      {
        "id": "c6f71791-7a66-4458-a1a9-60b2fefe8168",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5f4a8468-dadb-4925-84e6-1f4520811b9a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2555b5ba-640b-4db3-9d9f-1bf682a5adf3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37fe97c9-6a04-4864-acb3-df7abc716f50",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7a307e-5c74-4f69-9d51-144fcb3320e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07cf977b-cab0-440c-b195-00b3a3bd54a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f73ddd5-525d-4661-9aaf-85fb4246518e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e75019c-10c6-4663-aea9-30a21c1c8a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e39b98-3008-4e83-8192-4d44c390094b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47229acb-b808-4f2c-8216-61844e19758a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ca8b43fd-ef8f-4a12-b1a4-b719e676d575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bbd65b-2dba-4282-b1f8-b533f44fbd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ffee19f-c48a-4084-939f-b8dadf7107c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc261801-b0bc-45c4-b633-384bbcc8be60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db9afc41-89b3-405c-97a1-980b99f3dd4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdc11aef-66e6-4824-9866-8c24067a59e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f22356c8-2094-4f26-aeae-5cc12b44186a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ff0aafc-5065-4b25-8a02-bb2f75bfe6dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "73767cf7-ab52-4cef-9aca-101bf3b818c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c42f75b-0d4e-4e97-abc5-ad3289eac256",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fb1e4b5-6069-4821-a32b-bf36903ae646"
            }
          }
        ]
      },
      {
        "id": "45276248-7ba3-452d-9b6b-a142758031ad",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a324ddc2-ccd6-40de-a75c-a0eacd570cd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6bf5d921-194b-4058-a948-db654d41ff59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f20d6a3-4dab-49e4-9f9d-43c2236c6ff7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44b8ff8-85ba-43ec-ba1c-1d3dab26d1b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc2ac9fa-6f92-4f51-a10a-d4c14369250d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8515c91-f7d9-415b-aa4b-a15efab86e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "973f4d07-c09b-4adb-8f7c-2fac207b93fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fd2156-2c00-4ed5-b94c-7f2a8ca6fb49",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946c18c1-315d-4759-854e-689aba60712e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1b184f3e-4a25-4f64-9aae-21020e1fd81c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321b75d4-973a-400c-a7fc-268f23eb0ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a97b6eba-f881-4b0c-9e56-7b7abc5510cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfeb4265-d264-4b73-97db-43f2da520124",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd3f729a-2ac8-47e2-a7df-4156df80ed04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6c9e293-71ad-418e-94ec-7e1d989e5aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "895f5477-e69d-4a8c-a811-8b47f40bcbf4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7060afdb-a451-403f-9c5d-3858ebd3a6ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "23ae3dc4-375c-4a3c-b56e-a540c8a85624"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2821bc02-fb89-4a39-be72-bd9f88fda984",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb2d1d57-da9d-4b46-b840-4c8867ff47de"
            }
          }
        ]
      },
      {
        "id": "5c86a8ea-ab33-4afc-a8e8-af195855cffd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd9080be-cf6d-4c62-a056-e14afd848964",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "126525aa-bae5-4682-a247-d8a016c9e43f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a1bd08a2-b7ef-4382-a822-8db4f25e5cee",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "195641c6-5a5b-44f7-8ba1-4ff8bdeaf769",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fca05c5c-2fbd-413f-be3b-8c68e43c6be8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 666.4730769230772,
      "responseMin": 19,
      "responseMax": 7804,
      "responseSd": 907.942053410938,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1685320723284,
      "completed": 1685320907646
    },
    "executions": [
      {
        "id": "422d84e0-c4d4-4649-9968-24cf0e7a67eb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d19fea8f-c74c-4132-a5aa-802f5467d8a0",
          "httpRequestId": "6d11d1c6-6ea4-46d3-9ff2-7c9c39b9026d"
        },
        "item": {
          "id": "422d84e0-c4d4-4649-9968-24cf0e7a67eb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a66de20e-6366-4e83-9721-8127681246e8",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 0
        }
      },
      {
        "id": "1c066642-57f9-4057-abff-288c0cda26bc",
        "cursor": {
          "ref": "8f772e16-bede-4be2-8205-6659b75147fd",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7d0e3a47-9cd9-4651-b7b1-7e2eda2a80ea"
        },
        "item": {
          "id": "1c066642-57f9-4057-abff-288c0cda26bc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b13bc46a-86ee-4bdf-894c-be9342452342",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "9b908137-f48a-4d94-b706-ffbff2a023bb",
        "cursor": {
          "ref": "45fa52be-19f6-4ec8-89f1-5eb521ba1676",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "79f6fbc6-d686-4727-8973-27d5518c8163"
        },
        "item": {
          "id": "9b908137-f48a-4d94-b706-ffbff2a023bb",
          "name": "did_json"
        },
        "response": {
          "id": "c9453690-9af0-4e3e-8b14-fd887f65c7aa",
          "status": "OK",
          "code": 200,
          "responseTime": 1069,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cf1066-3946-4ab8-b07f-80544206934a",
        "cursor": {
          "ref": "3f457d7f-1676-4ce4-827b-488f60886b9f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eca70c91-9925-4fe6-89af-781d14c98545"
        },
        "item": {
          "id": "60cf1066-3946-4ab8-b07f-80544206934a",
          "name": "did:invalid"
        },
        "response": {
          "id": "08063609-aa8b-412f-95fe-e87c8b8b8601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cf1066-3946-4ab8-b07f-80544206934a",
        "cursor": {
          "ref": "3f457d7f-1676-4ce4-827b-488f60886b9f",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eca70c91-9925-4fe6-89af-781d14c98545"
        },
        "item": {
          "id": "60cf1066-3946-4ab8-b07f-80544206934a",
          "name": "did:invalid"
        },
        "response": {
          "id": "08063609-aa8b-412f-95fe-e87c8b8b8601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2022330-290b-4665-8bfb-b5a650b3905f",
        "cursor": {
          "ref": "42e0be8a-1fcc-48e9-b531-3312109db3a2",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "14d77d78-7d23-4bed-b7d5-d0d2aa8091a7"
        },
        "item": {
          "id": "e2022330-290b-4665-8bfb-b5a650b3905f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d93cef26-5b58-46e6-99b4-3db1767025e4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 731,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7939ae23-0039-4f9a-84cf-7bd2fd6bd57c",
        "cursor": {
          "ref": "ce533922-6864-4bf1-bbae-53b634483ef0",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a070a200-bbfe-416a-99bb-90981e4efaa0"
        },
        "item": {
          "id": "7939ae23-0039-4f9a-84cf-7bd2fd6bd57c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8fd5d18f-c959-48b0-8e76-e767d14fac61",
          "status": "Not Found",
          "code": 404,
          "responseTime": 706,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c8cd6d-64fb-4874-8740-f1cdad698edd",
        "cursor": {
          "ref": "19c779d9-2500-4738-a107-dcfed8997f35",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d02b5245-ca3c-4577-9b22-669d91a06be9"
        },
        "item": {
          "id": "50c8cd6d-64fb-4874-8740-f1cdad698edd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e3ff0b45-faf6-4c20-a4aa-ce7d73916542",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831e6078-52ee-453f-8712-ea9898d8bbd9",
        "cursor": {
          "ref": "35115e8c-a9f1-4317-935a-357806c0df5e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a2745369-3560-49fa-83a1-ab8594195516"
        },
        "item": {
          "id": "831e6078-52ee-453f-8712-ea9898d8bbd9",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c3a037fa-c727-4fd3-acf6-c974dc654997",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 640,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831e6078-52ee-453f-8712-ea9898d8bbd9",
        "cursor": {
          "ref": "35115e8c-a9f1-4317-935a-357806c0df5e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a2745369-3560-49fa-83a1-ab8594195516"
        },
        "item": {
          "id": "831e6078-52ee-453f-8712-ea9898d8bbd9",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c3a037fa-c727-4fd3-acf6-c974dc654997",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 640,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea48d231-bf46-4c23-91b7-76ca464f87c1",
        "cursor": {
          "ref": "e2af3b9d-ac17-4242-92bb-8ce8b99055e6",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b978fd69-8783-4bbc-8247-e846c922177d"
        },
        "item": {
          "id": "ea48d231-bf46-4c23-91b7-76ca464f87c1",
          "name": "identifiers"
        },
        "response": {
          "id": "49b85d72-2227-45a3-b679-27d485c8b35c",
          "status": "OK",
          "code": 200,
          "responseTime": 1345,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0f94a8-531a-446c-93a6-2ca1da9d96ca",
        "cursor": {
          "ref": "e5b115b8-ea83-4e60-97d9-ed1990718db4",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "13bb28fc-325f-475a-8bf2-7f1c24740c5d"
        },
        "item": {
          "id": "9b0f94a8-531a-446c-93a6-2ca1da9d96ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3771f756-0144-4b63-983a-0ef1495763fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0f94a8-531a-446c-93a6-2ca1da9d96ca",
        "cursor": {
          "ref": "e5b115b8-ea83-4e60-97d9-ed1990718db4",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "13bb28fc-325f-475a-8bf2-7f1c24740c5d"
        },
        "item": {
          "id": "9b0f94a8-531a-446c-93a6-2ca1da9d96ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3771f756-0144-4b63-983a-0ef1495763fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7337f29a-1a38-4018-b9a3-1df6925ece53",
        "cursor": {
          "ref": "df126186-e11b-452e-92dc-c8a02f1b6f67",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c4dcd282-7700-461e-9dc1-709df156a155"
        },
        "item": {
          "id": "7337f29a-1a38-4018-b9a3-1df6925ece53",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ddaace15-8614-4211-8db6-beab8fb909be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467633aa-c09d-44fa-b392-125b65c4630b",
        "cursor": {
          "ref": "acc1a1d9-5deb-49c1-b8dc-44341d6da413",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "40471dfc-b38d-46a5-8629-7dc2c8534876"
        },
        "item": {
          "id": "467633aa-c09d-44fa-b392-125b65c4630b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "023cc486-bf7c-4e4d-ace3-f7bdc9f25d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbba5bd7-a183-4689-be64-e0c301f7b405",
        "cursor": {
          "ref": "6df9e15c-cc71-4ea1-a00a-c226c9ee0e4e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5a4cb349-fb51-4ff9-9b4b-f4697e242f3c"
        },
        "item": {
          "id": "cbba5bd7-a183-4689-be64-e0c301f7b405",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "930f86a5-3533-469d-8b51-667a3f09e315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c2d92f-0a1c-4ac1-9b3d-1e203f86e4cd",
        "cursor": {
          "ref": "d3ea881e-5efe-4cd8-9204-82491f3da422",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4e74896b-d804-4d7d-8717-9253dccd6ad6"
        },
        "item": {
          "id": "61c2d92f-0a1c-4ac1-9b3d-1e203f86e4cd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5205ed1c-be07-4a7a-a596-01f3b8c2e133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d19c881-dfe0-4482-af86-d062fd5401c5",
        "cursor": {
          "ref": "09bdf2ac-c8af-446d-89ab-29ec2afed4ec",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "254a5454-b926-4490-8bd1-3e9154bc25ac"
        },
        "item": {
          "id": "5d19c881-dfe0-4482-af86-d062fd5401c5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "38e20a21-c4a5-4c72-8b82-692131c321f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f88a39f-aa77-4a21-bb7b-3190441637e0",
        "cursor": {
          "ref": "ca59dad2-accb-463f-891b-ec6884897d9e",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8519f68f-ee90-4694-a236-0dfdb25dfa8c"
        },
        "item": {
          "id": "9f88a39f-aa77-4a21-bb7b-3190441637e0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2e158c07-623a-4050-8bea-56e9df3dda3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794ca0a1-cd91-47f0-a316-7520ce9eed14",
        "cursor": {
          "ref": "a116bb0f-3614-486b-a151-a8152793251a",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "42be1ce5-cd49-4e95-a154-24a03bd5b6fe"
        },
        "item": {
          "id": "794ca0a1-cd91-47f0-a316-7520ce9eed14",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a73baa4c-d046-4987-a7b6-e0012cff1099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b454f525-4ee7-4d2f-9ab6-e0ac28412cf5",
        "cursor": {
          "ref": "dbf398f0-11c1-450b-861a-6fc1cd8bb10d",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ffab98a0-0199-4f03-81eb-c85ee3975271"
        },
        "item": {
          "id": "b454f525-4ee7-4d2f-9ab6-e0ac28412cf5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "74f24ffc-b453-4352-93d8-4c5807eb6a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaea02ba-7bab-4712-8187-861f6574205c",
        "cursor": {
          "ref": "13f2a322-b9b6-4f20-9c3d-f5d904d55ff8",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "df8ac66b-9b27-4ecf-8484-091ac8c233bd"
        },
        "item": {
          "id": "eaea02ba-7bab-4712-8187-861f6574205c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7d047cc0-ed91-4d34-ba86-6f51c7325b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b020c32-3613-41f8-b215-e9aba5cd4368",
        "cursor": {
          "ref": "3cfdf740-08f9-4511-a0c3-4f55c8320bf2",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3d373913-3bf2-4528-8b9d-b53705323265"
        },
        "item": {
          "id": "8b020c32-3613-41f8-b215-e9aba5cd4368",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "da9620a7-6b13-4a23-a66d-5c025bd807c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63d5c5b-3347-495f-8354-8f699688da3a",
        "cursor": {
          "ref": "f51bf7c6-d7ec-43e2-abc9-31379932fdab",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c2c01c9f-6de0-473b-976a-01cfd908cfd0"
        },
        "item": {
          "id": "e63d5c5b-3347-495f-8354-8f699688da3a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1805051c-f8ac-469a-87fd-03df299d4f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a6fbbd-c588-40fd-9c0d-25e859cc2f14",
        "cursor": {
          "ref": "94a2fec3-cc0b-49f5-9203-635c66ff00d0",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "adc80f12-76e3-475b-8de9-2ae198a89a61"
        },
        "item": {
          "id": "f2a6fbbd-c588-40fd-9c0d-25e859cc2f14",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6488213e-5b31-4a06-bc08-420f6249d289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea87411-5b69-4d5e-bd7f-79af329da645",
        "cursor": {
          "ref": "2964abdb-42c5-45f3-90ef-ecdee1cdc6a6",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bef8e840-a465-4013-982e-25c5dc14f612"
        },
        "item": {
          "id": "8ea87411-5b69-4d5e-bd7f-79af329da645",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0ea59bac-3c21-4eb7-8ae1-90f1df5812f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62f4f55-e636-4848-a785-d8e199aa03a7",
        "cursor": {
          "ref": "100a5126-12b4-4d0a-9121-815c7d5ce6af",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3b68b53d-be64-4739-8554-394511ea82b3"
        },
        "item": {
          "id": "a62f4f55-e636-4848-a785-d8e199aa03a7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3f8c59f1-105e-45da-82cb-b9020474c77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7b4d0b-19a0-4c01-bb23-347591ff5e0d",
        "cursor": {
          "ref": "780923aa-5c3e-4f30-874d-39d313574551",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9d25a7de-4013-4fee-90e8-149b5540b910"
        },
        "item": {
          "id": "bc7b4d0b-19a0-4c01-bb23-347591ff5e0d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "703f7f37-de2a-449c-8a7d-a46a5ff0f5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe122085-770d-4ce7-897e-8a7424b488c1",
        "cursor": {
          "ref": "3f95594f-4740-4abc-b511-8c7e77bd15c9",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cc98e090-00b3-449c-b3ad-37e734473201"
        },
        "item": {
          "id": "fe122085-770d-4ce7-897e-8a7424b488c1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2f6477e9-e0f0-4478-83b0-47cb0d634e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddb65b3-8721-409e-8161-1cc219b8530a",
        "cursor": {
          "ref": "c9ad3a89-eaf0-4eb7-8b82-a867437ed7c6",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "847d1f4e-08e6-4c5c-9f08-882a6696561a"
        },
        "item": {
          "id": "fddb65b3-8721-409e-8161-1cc219b8530a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "96af859b-180a-4566-8061-c7fb12b71544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df5403c-4f63-4fd0-9555-aa9fdbf42288",
        "cursor": {
          "ref": "55fb451a-0941-4de9-a23d-0bd83dc01f8d",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fc0d93e1-07df-4b99-a7d9-60d9bafd9c60"
        },
        "item": {
          "id": "7df5403c-4f63-4fd0-9555-aa9fdbf42288",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ffc3361d-d8e4-407b-b6a0-043801e1aa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b01c11-4154-4357-a6b6-0e6f96097fab",
        "cursor": {
          "ref": "1c2310f9-d022-4e0f-bf04-f7a21829ec24",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4a2ea6d8-1d3e-40f5-ba91-0b6576beb82d"
        },
        "item": {
          "id": "00b01c11-4154-4357-a6b6-0e6f96097fab",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8301da8c-9001-46e5-b77f-56bb63191f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e5ea5e-62d2-4d26-9fb9-f5b07c229b9d",
        "cursor": {
          "ref": "05689842-35e9-44f6-8bd3-014cbec330d8",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7204205d-ca70-46c3-a7ac-185bfa02ba97"
        },
        "item": {
          "id": "49e5ea5e-62d2-4d26-9fb9-f5b07c229b9d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "79930064-7afc-4e0d-aca0-f6db2846f35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8340fa34-fa6d-4c94-8f11-148d20e76352",
        "cursor": {
          "ref": "79eeaca5-9639-4b8c-913f-665263e67b22",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "54959a76-36b9-4bd0-a5c2-fcc9db8525cf"
        },
        "item": {
          "id": "8340fa34-fa6d-4c94-8f11-148d20e76352",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4423625a-3f0b-489a-b179-8fc4cd221fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab598a8-5ab1-4bda-9a17-6bb8869195ea",
        "cursor": {
          "ref": "dab5f2b1-fc0b-4ecb-b78e-f53358db38a4",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d4576251-eee1-4026-b4d9-84c9909d9c87"
        },
        "item": {
          "id": "8ab598a8-5ab1-4bda-9a17-6bb8869195ea",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "90e01233-ba2f-41c4-aab2-fe19186ddd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de47567-6936-443e-bfa7-41c94ee5d1bd",
        "cursor": {
          "ref": "df40d2d0-5c48-42b6-8ed2-eff73260d92f",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f6261c91-63ac-470d-8271-3f1a7f99e709"
        },
        "item": {
          "id": "0de47567-6936-443e-bfa7-41c94ee5d1bd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "525558a3-641d-4966-a3da-e5457966f654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49109a20-9b95-4d15-9930-2ba10abf0915",
        "cursor": {
          "ref": "058d7f29-813a-4d58-83a1-224ddafa1fd0",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9237bbdb-2b43-41e8-ada3-97fe408f81e8"
        },
        "item": {
          "id": "49109a20-9b95-4d15-9930-2ba10abf0915",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ca69dab2-a45c-47c9-b8e0-4c9b17a297b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbea5f7f-6dcb-4efc-89f6-83ec4476e1dc",
        "cursor": {
          "ref": "f787347b-aa52-4a7a-b566-e18034ae236c",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5f88142d-918c-4228-9ffa-46c84e62951b"
        },
        "item": {
          "id": "dbea5f7f-6dcb-4efc-89f6-83ec4476e1dc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dccb2d64-921d-428b-89db-3b8ca70dddc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eed2e1c-60e0-44c7-b26e-6f8aff9f2ed9",
        "cursor": {
          "ref": "03746524-d6f2-418f-8760-b0027b2492fb",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f97848d9-afbe-461a-bc44-e0ef56fe58eb"
        },
        "item": {
          "id": "8eed2e1c-60e0-44c7-b26e-6f8aff9f2ed9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4dd76aed-cd97-4a23-b1dc-8bb6f7b5751b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eae327c-33f7-4695-931f-79edf741ebea",
        "cursor": {
          "ref": "c5cc8cd1-3630-4022-be4e-be7b6e6779c1",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "222177a3-8ec9-4bd5-91b9-ab9760141168"
        },
        "item": {
          "id": "9eae327c-33f7-4695-931f-79edf741ebea",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7938e6ca-5c89-49fb-9afb-999535a4feae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33cc69a-fa25-4c61-be96-7c73d02d6dd2",
        "cursor": {
          "ref": "1d6447a6-c22d-4ef3-bf89-b8a055f75848",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a6be0634-2583-47d9-b7ec-e0eac4f48606"
        },
        "item": {
          "id": "f33cc69a-fa25-4c61-be96-7c73d02d6dd2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d47d5cef-3a53-471f-81ba-b919403dc8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27c079c-0a49-4cfd-ab48-a2d4e3bd0541",
        "cursor": {
          "ref": "1bea989d-3d81-4be4-8372-382ddc8c379d",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "41994892-8b33-4dc6-bbb2-10811e0c245f"
        },
        "item": {
          "id": "a27c079c-0a49-4cfd-ab48-a2d4e3bd0541",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9c00104f-fd45-420c-be6d-6c19f8f708be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32276c1-085c-4b0f-95a2-918fe8c47b63",
        "cursor": {
          "ref": "f80f9fff-9310-47ad-9a29-7a2173cb1702",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "26e483bf-55c5-4a3b-a47a-a681bed2a66b"
        },
        "item": {
          "id": "e32276c1-085c-4b0f-95a2-918fe8c47b63",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "73519c04-09b6-4f81-abb3-fb11fbcc4cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5ed26e-5766-49f8-96fc-3243436898c4",
        "cursor": {
          "ref": "e440cb58-0994-45b1-8808-645d1d184d9a",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "79bbaf4f-5ba6-4868-a41a-ec47d5a3a3cc"
        },
        "item": {
          "id": "ee5ed26e-5766-49f8-96fc-3243436898c4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "08dfcdcc-bad3-46e2-85f9-fef40eebbec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524e0e2b-16bd-4424-aba1-b27dde1fe36f",
        "cursor": {
          "ref": "04407510-d70c-4244-818c-e8a4d62af09e",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "46cfed68-4a41-4e78-b31a-5113ef2ff845"
        },
        "item": {
          "id": "524e0e2b-16bd-4424-aba1-b27dde1fe36f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0fcb213e-aa37-43c9-9052-28b358ebc3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0ad89b-f5d1-494d-acfb-f0087ceefd49",
        "cursor": {
          "ref": "2cd816f9-aa19-4405-b708-7c34ff3ee234",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5f694b5a-cf61-4520-86c9-5e474af1b08b"
        },
        "item": {
          "id": "0a0ad89b-f5d1-494d-acfb-f0087ceefd49",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b01aad24-b93b-4ef5-9b31-3fc37d90c0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060c330b-e94c-4645-a300-44aeb997bee1",
        "cursor": {
          "ref": "5530be60-8aae-4577-a344-e18f47b8757f",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "15398032-d3ee-4060-b3ff-5b0b66c82ea9"
        },
        "item": {
          "id": "060c330b-e94c-4645-a300-44aeb997bee1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "632dbb50-ddfc-4286-8fba-44422c3dd064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a61b43a-d876-4322-8d2c-e45c8a349395",
        "cursor": {
          "ref": "670aaa86-f3bd-4501-bfc3-fda56a0da2b5",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9a391301-155a-423c-9de6-f84e54c65c2d"
        },
        "item": {
          "id": "1a61b43a-d876-4322-8d2c-e45c8a349395",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d831d75d-eef3-4ae8-b78f-6de02cfde729",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 826,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5c665a-3868-4d1a-9aa1-0c07f4766206",
        "cursor": {
          "ref": "06753328-ab48-4348-a37f-953a88ed81fb",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "71880fd4-7ef8-44c8-8903-7b062859ad09"
        },
        "item": {
          "id": "3f5c665a-3868-4d1a-9aa1-0c07f4766206",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4c136a0b-9f0f-4852-aea3-ac4235b001f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0001fc7c-3b14-4dd3-b045-0ef04442c268",
        "cursor": {
          "ref": "c5af8b7e-784f-4989-967a-738ce63a6435",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "752fdc13-2d34-47c7-b295-62061ba19ce6"
        },
        "item": {
          "id": "0001fc7c-3b14-4dd3-b045-0ef04442c268",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "48042754-1fd0-4ccd-a9ba-2580c3febc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1253,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78feda2b-0a6f-4d97-8f3b-97bf182a123c",
        "cursor": {
          "ref": "1f25a6cc-b1fa-48ee-a919-35323c506698",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7be18535-d8c0-4387-944c-f41e12f3f2ed"
        },
        "item": {
          "id": "78feda2b-0a6f-4d97-8f3b-97bf182a123c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "35fa4aed-7084-4083-af2c-a6d8a58db6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de795c6-6c9a-4e2c-8c14-620c0fee9d54",
        "cursor": {
          "ref": "84d51870-0978-4bdb-a485-e9df8a48a084",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b6fee911-fdb1-47e7-8489-817c45bb913a"
        },
        "item": {
          "id": "4de795c6-6c9a-4e2c-8c14-620c0fee9d54",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "422180c6-7fdc-4ba9-aa96-9a61d6d8c0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f3a2cb-03d7-48fe-bf2b-f094fcb15ebb",
        "cursor": {
          "ref": "1f693d3c-8793-41ce-a4d6-59eaa4260a96",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b1079491-8313-4526-b705-6b1320f6f44a"
        },
        "item": {
          "id": "c2f3a2cb-03d7-48fe-bf2b-f094fcb15ebb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "65511be8-bd17-4148-9d3d-ad2940ae2b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5fd754-0ae0-46d9-877b-764ba82aeb02",
        "cursor": {
          "ref": "b148cb32-7362-4dd2-9cab-74dda8c9eec6",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c6bd3169-4154-4faa-a7f8-a0edb2b7849a"
        },
        "item": {
          "id": "cb5fd754-0ae0-46d9-877b-764ba82aeb02",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "76fcf5bc-b1fb-4f3e-9c5c-788e995f8da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5505bca0-b550-46a7-ac4e-869b64b00f55",
        "cursor": {
          "ref": "f340b3cc-6c18-46e7-a7b2-bb585abfeed6",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5cd9b5fe-011a-48d5-bdb5-4c2a88f1a75a"
        },
        "item": {
          "id": "5505bca0-b550-46a7-ac4e-869b64b00f55",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "28a9bd2f-4ddb-44dc-9051-35cadc8edd97",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 775,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec7a701-ecae-4ce4-a0dd-6b0e7c1279fe",
        "cursor": {
          "ref": "708279a6-4d4d-4882-9a7f-96a83933aacd",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bcc6e531-1cf5-4849-8b6b-47b252f23efd"
        },
        "item": {
          "id": "9ec7a701-ecae-4ce4-a0dd-6b0e7c1279fe",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "45cc8018-a432-4c0b-92c2-01cd99bcc4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798db539-a181-4d04-9595-bf71e9ed045c",
        "cursor": {
          "ref": "14a0f759-b432-4f34-bf27-60224f0118db",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "509716a8-b075-4d7a-894e-23e6a715d1c4"
        },
        "item": {
          "id": "798db539-a181-4d04-9595-bf71e9ed045c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "85e95aeb-3734-4a58-9cb7-48193622dc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b31e916-7888-404b-bdff-f18638802687",
        "cursor": {
          "ref": "a953042c-56e4-4562-8773-2fda7cd744ff",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "269b4383-3444-428a-aa1c-a84760fcab99"
        },
        "item": {
          "id": "1b31e916-7888-404b-bdff-f18638802687",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a59e4d97-f127-47d6-992b-6c75407bc518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c933c8ec-719d-4914-bc8f-78e35b696408",
        "cursor": {
          "ref": "961a816e-e90e-496f-b0f9-cbf65d81548e",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e7c50687-a031-43b6-8988-a1937f1d00c7"
        },
        "item": {
          "id": "c933c8ec-719d-4914-bc8f-78e35b696408",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "349a7318-6d46-41f9-a874-9375f45d3f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5218c82-6dc7-4715-a424-4f2456ba35f6",
        "cursor": {
          "ref": "46cb4bfe-3f72-43a5-a97b-7df195dd7699",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a27e0b57-686d-4f07-9397-af93cd9a5a74"
        },
        "item": {
          "id": "b5218c82-6dc7-4715-a424-4f2456ba35f6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0bd5f26d-62f1-4420-9da9-91842b35b8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c08f51-dd51-4446-a931-cabd5e6e5523",
        "cursor": {
          "ref": "dd3a0836-4fe0-4f82-8026-3f7f799ffe3f",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c9846939-b73f-4796-b673-8397bfe482f0"
        },
        "item": {
          "id": "90c08f51-dd51-4446-a931-cabd5e6e5523",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "46363d2d-a2f0-444d-8816-8bce4682bc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033399fc-c9e7-4e14-89c9-b1af2cee576a",
        "cursor": {
          "ref": "118bcdbf-e4d2-4a65-a27c-3508a024d894",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cf7f319a-5dc3-4d78-a239-a6682713bdf7"
        },
        "item": {
          "id": "033399fc-c9e7-4e14-89c9-b1af2cee576a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e6ca2dc4-2400-42e7-a329-4e28c8bcf697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d57abc-f39d-4d7f-839c-bcc9f74bd4fc",
        "cursor": {
          "ref": "10400ea0-98b0-4ac8-911c-ea4ca37f4489",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4ba8aea7-5ca4-40b6-bafb-548c3ab28a7b"
        },
        "item": {
          "id": "95d57abc-f39d-4d7f-839c-bcc9f74bd4fc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7ffc5657-fd2b-49fc-9d77-c75e798b5364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3a7aeb-d011-483e-9df5-741b0d7195f8",
        "cursor": {
          "ref": "af043a2b-b293-4f08-9d15-f3f9e021de98",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b642d11c-fdd7-466f-b0ea-c3e49bafc68b"
        },
        "item": {
          "id": "7c3a7aeb-d011-483e-9df5-741b0d7195f8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "51f5d70f-4003-450f-bfd9-e9eb4d6c3d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738d2579-e03d-4f96-ade2-a51547f12626",
        "cursor": {
          "ref": "e2ba7e8a-bbf6-4b13-aac7-cf962a5e728f",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ed97c3fa-2b54-4913-8330-d17e91aa9007"
        },
        "item": {
          "id": "738d2579-e03d-4f96-ade2-a51547f12626",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "584d57ac-ef22-4637-bf4e-98ee3a0313a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19a41d5-6b77-4a9a-9259-517490296d4a",
        "cursor": {
          "ref": "11b7e1cc-a188-4261-8f3b-0dccd0bd2411",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "906544b6-3666-4b05-9a7a-621ca2340fe1"
        },
        "item": {
          "id": "d19a41d5-6b77-4a9a-9259-517490296d4a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4e804052-43e0-46d6-920f-d0374393d669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e730ea-665b-4d8c-bb4f-8e2960a16cb8",
        "cursor": {
          "ref": "518f9afd-3b12-44ca-8f43-e5688ddf6f78",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dc9d38bd-8305-44e3-a451-1b14fd07d50b"
        },
        "item": {
          "id": "28e730ea-665b-4d8c-bb4f-8e2960a16cb8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ad435ea6-7f11-486f-9cab-4b99fcfc680c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1a175d-2e32-4be9-8e37-1593a774bf71",
        "cursor": {
          "ref": "c789fc1d-3313-4d63-9d54-73f9821eeac5",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7dc5f76c-f4da-444c-8f45-432ab997bc3f"
        },
        "item": {
          "id": "5e1a175d-2e32-4be9-8e37-1593a774bf71",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cbbd5e2e-e5fe-4bef-ae66-e9080ae7b026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40da4b8-b079-438c-875e-a0c43ccc7cd5",
        "cursor": {
          "ref": "2bef8e50-9981-49b4-9d2c-ed11d030bf5d",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8ab913b7-1eaa-4208-8fab-7eb9e36f7d14"
        },
        "item": {
          "id": "f40da4b8-b079-438c-875e-a0c43ccc7cd5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2d80eb92-6d9c-4c16-8fd9-a9cae336c588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46e3dd6-7a16-4851-ad21-a81f334a98fc",
        "cursor": {
          "ref": "47ff44c0-2c18-4c4f-ba64-2cea66a68716",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f4975621-b848-4b26-9bc0-43a2985ec544"
        },
        "item": {
          "id": "d46e3dd6-7a16-4851-ad21-a81f334a98fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fe98ba8d-3eb4-40f2-a535-cc1209e00161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e197c361-fe10-4968-ac2e-12037aa56504",
        "cursor": {
          "ref": "e6e616e1-80e2-4c71-a5d6-cb064b8a6279",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2fda0c53-8f2a-4b67-89c9-0c51afb12552"
        },
        "item": {
          "id": "e197c361-fe10-4968-ac2e-12037aa56504",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dccb3458-590c-4ebc-903f-6d4256983a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecac6146-c1af-4471-abe6-5d0280f3a1a8",
        "cursor": {
          "ref": "4fe460e7-8c4a-4a13-916e-31a6f3f62a38",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "900a1ffc-5275-4fa3-8f6b-2e0791ba0974"
        },
        "item": {
          "id": "ecac6146-c1af-4471-abe6-5d0280f3a1a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ab2172e1-dba6-43ca-ba59-ef1a581fd324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79d698d-939d-47af-98c0-1f84c274f2f2",
        "cursor": {
          "ref": "4563795b-0526-40e4-95d7-52f1c5311ea1",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "691b05a2-2c0b-4237-be7d-4d26961047c6"
        },
        "item": {
          "id": "b79d698d-939d-47af-98c0-1f84c274f2f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cf6511b0-ae5b-4366-8916-1ba6c2ae1450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570038d8-fa64-43fc-9d38-4f3b2d53a3e9",
        "cursor": {
          "ref": "1a6a57e8-7b4f-4949-96bf-763743be8809",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5fbae00f-9cd7-4ebf-b86e-0691899acdfa"
        },
        "item": {
          "id": "570038d8-fa64-43fc-9d38-4f3b2d53a3e9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0a71d207-4299-41c4-a31f-77c86ef00b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ff902d-8756-49d1-bbcc-7026d378e265",
        "cursor": {
          "ref": "47ed7c58-39c4-4188-a7a6-6f82ceb242df",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c38e34a1-1760-4a8f-b84b-0a09e4b4990c"
        },
        "item": {
          "id": "01ff902d-8756-49d1-bbcc-7026d378e265",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f62eee6f-c35f-4487-a167-fd4953d9d849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472b4428-42e8-40e1-a51a-03207fdcc748",
        "cursor": {
          "ref": "cee21968-9db6-4559-a894-90d296c82985",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1ae7d7ec-0ec7-4a1c-ae70-cb61c9c698b2"
        },
        "item": {
          "id": "472b4428-42e8-40e1-a51a-03207fdcc748",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9e79e5de-657d-49b5-9033-fc4bcf48db31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ddcecb-062f-4de9-bb17-12b063ec305d",
        "cursor": {
          "ref": "ce957166-ccd5-4ad3-87b0-ae9fb413b53f",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9d7985dd-cd5d-442a-a391-a5dfd4737e16"
        },
        "item": {
          "id": "05ddcecb-062f-4de9-bb17-12b063ec305d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "98fd637c-81f2-45db-ab24-61513036413f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd538ba-ba48-41ed-8d03-96ef353a5ab5",
        "cursor": {
          "ref": "ace4811a-6f0f-4185-be68-61ced1c2a088",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a8d46263-291d-4555-a78b-52fd2880b0c0"
        },
        "item": {
          "id": "dbd538ba-ba48-41ed-8d03-96ef353a5ab5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "71252f0c-0bac-49fd-9ad6-a11a465f5a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2947da2-eac1-4b3e-86f5-cfb98e890eca",
        "cursor": {
          "ref": "b4e534dc-71b8-4cc1-b870-8e4184de3859",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "896b0228-f0a0-474f-8f3e-e078a87f3a48"
        },
        "item": {
          "id": "b2947da2-eac1-4b3e-86f5-cfb98e890eca",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "69717895-d103-439f-b9fb-137e4d1ca21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a26dc7-fd04-4b85-8983-8cdaf32158b3",
        "cursor": {
          "ref": "83235368-898e-499c-a2f3-1452db7e418e",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "686ec036-4cd2-429a-9c9b-c267a4b49243"
        },
        "item": {
          "id": "c7a26dc7-fd04-4b85-8983-8cdaf32158b3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bdc9c320-1f09-4f8b-8418-ec5c1b93a117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7664ea-ab49-457c-a732-70ef36231fa2",
        "cursor": {
          "ref": "6f19d1c8-8e1e-4cb0-a0f2-3007a60932a9",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "67db60be-a8cb-4cdc-bd4e-ebc65885ac42"
        },
        "item": {
          "id": "dc7664ea-ab49-457c-a732-70ef36231fa2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2a7dbdef-3092-498a-972f-ce6e44cbf30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25e48df-8394-4968-8f42-dedf3122c5ea",
        "cursor": {
          "ref": "8a08fec6-4554-456d-9656-d2916e6cc761",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8c676177-f243-40ca-a949-6d205ea9588d"
        },
        "item": {
          "id": "a25e48df-8394-4968-8f42-dedf3122c5ea",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0b02f2bc-3c20-44b9-b5b0-ccee96ac9991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fca8701-8979-418a-b867-d8a4fdf0c95d",
        "cursor": {
          "ref": "84f4ffff-0ff4-4aec-b6c8-c0865623f218",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f44b0a1d-d19a-41c2-9715-83c109630608"
        },
        "item": {
          "id": "5fca8701-8979-418a-b867-d8a4fdf0c95d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "569f8965-6d57-4318-9f90-fbc6cc2aaf0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e966bb92-08bf-4822-a9e7-18dbe0c364ad",
        "cursor": {
          "ref": "b28a6362-1462-4323-8edb-bc5801fe1ee4",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "41954756-fe6f-4c22-aef6-befb0b98f574"
        },
        "item": {
          "id": "e966bb92-08bf-4822-a9e7-18dbe0c364ad",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3a118459-08f6-4d0a-89fe-151bbb687338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4a5199-edfd-4ed5-bd3b-e97f75dce36b",
        "cursor": {
          "ref": "e747a453-e655-4357-b760-d2e0e9849d98",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "20be28ec-2586-479d-81d4-f4fbb90e11ba"
        },
        "item": {
          "id": "6d4a5199-edfd-4ed5-bd3b-e97f75dce36b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4a92b6d1-8f59-4edb-86b4-ff5ed39bee9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29023984-e639-4450-bd23-886cf09def67",
        "cursor": {
          "ref": "8ede35cd-3903-4826-b058-ae6148c0b9be",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c776917c-8a91-4079-8758-17eae51fd555"
        },
        "item": {
          "id": "29023984-e639-4450-bd23-886cf09def67",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "676b6f04-1abb-48e6-a91e-c7f8dab367f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8da346-cceb-4ff9-a319-8612d9ce9dab",
        "cursor": {
          "ref": "00b3b54b-e9b9-45de-b879-3f7b31e5e4be",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "17a20588-f8d1-4137-98b1-2789f6a16ec7"
        },
        "item": {
          "id": "0b8da346-cceb-4ff9-a319-8612d9ce9dab",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "38ce7a22-4db9-4efa-af8e-b4474f076424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247af526-9973-44a3-9ba4-08b016d0adc8",
        "cursor": {
          "ref": "685dd769-6410-42d4-96ff-52538ba1954d",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ef33eed2-f33d-481f-8c9a-7f9fd95de085"
        },
        "item": {
          "id": "247af526-9973-44a3-9ba4-08b016d0adc8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "52af2911-1699-4e03-85a5-ce8a2d6312b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef1cbfc-c452-4a5a-b5c2-bbebd330971c",
        "cursor": {
          "ref": "f505067a-fd74-48d0-ab5d-706b397f8d74",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "84db64ce-ea73-449d-8390-14730fef2279"
        },
        "item": {
          "id": "aef1cbfc-c452-4a5a-b5c2-bbebd330971c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7727a88f-5b70-4d58-b72b-81f32c32d955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4497d32-efbb-4789-b337-78f7fb3992cb",
        "cursor": {
          "ref": "f3d8e882-4d6a-45c6-89c1-85a64ab0f13d",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ba429246-03d2-477c-a417-73c10097f195"
        },
        "item": {
          "id": "e4497d32-efbb-4789-b337-78f7fb3992cb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "55f8b574-2ce0-4314-82eb-51b43d525a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf14011-180e-485c-8700-5866dcee2a57",
        "cursor": {
          "ref": "460efcaf-cb82-4e13-88f1-b9a6eedd1f4d",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "491953e0-2939-4594-ae8b-a81a81ff582e"
        },
        "item": {
          "id": "4bf14011-180e-485c-8700-5866dcee2a57",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cfce1fd8-373d-41a6-84e6-27b843183459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b770152b-af53-4904-81ac-d1a7098969d7",
        "cursor": {
          "ref": "3d204f2b-bcf4-435e-8f41-46683862bf51",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "143f0265-232a-4302-a9da-a36edc6ab91e"
        },
        "item": {
          "id": "b770152b-af53-4904-81ac-d1a7098969d7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6fefaccd-0056-4396-8253-21ca820a3379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46632da6-5231-42d5-94be-b0a46e3a97fe",
        "cursor": {
          "ref": "97466cfa-d45c-4dce-aa03-b0d1237832a6",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "19569906-5716-4dee-b751-27ab75a37dd3"
        },
        "item": {
          "id": "46632da6-5231-42d5-94be-b0a46e3a97fe",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "caa850b8-1615-47cb-b338-e086d1a9bac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ef92a9-e764-4dcf-9cfa-4e8a89d6db59",
        "cursor": {
          "ref": "f32c4f32-33ea-4e6b-9b36-e64ab1fb344f",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4eed2d99-ed77-49a9-bf29-1b5e53d1f06f"
        },
        "item": {
          "id": "d0ef92a9-e764-4dcf-9cfa-4e8a89d6db59",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "534d0cb1-8870-424d-8097-b2a8f5378b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23263e69-5dd6-4ee8-8d80-19f33bc046bb",
        "cursor": {
          "ref": "9c8c3276-9450-4212-85a1-9e89cc77e178",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dc1d2266-6e9a-4c93-b83e-bcb8dbaba055"
        },
        "item": {
          "id": "23263e69-5dd6-4ee8-8d80-19f33bc046bb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4b877388-aefc-492c-9ab1-ccba69d7eb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af47fe8-c5dd-4461-ac3f-d814238e41ea",
        "cursor": {
          "ref": "9c94592f-49eb-466a-91f0-08a5448a1098",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3ac3e530-d99c-4a93-a1e6-207a4f98cc13"
        },
        "item": {
          "id": "6af47fe8-c5dd-4461-ac3f-d814238e41ea",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "47b2c626-f087-4c32-855b-66fb3df1142b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e90af2d-54c9-4077-931c-112c981cd23f",
        "cursor": {
          "ref": "98255989-ae62-4a6d-882b-0bc8537591f3",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "437a3ce8-b97c-4613-bd44-dbc8574277be"
        },
        "item": {
          "id": "2e90af2d-54c9-4077-931c-112c981cd23f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a2a56f01-c1a0-46d1-85ce-c228413dfbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800b38a8-5a0e-4c48-b485-a4d5a74a28ac",
        "cursor": {
          "ref": "3ce52035-d2e8-4e27-bed2-ba61d5e908ae",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0fe5a8c5-1588-4b44-bbef-8b789d30c2d2"
        },
        "item": {
          "id": "800b38a8-5a0e-4c48-b485-a4d5a74a28ac",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a3ffae80-5952-4932-9170-1933325b5e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71017ef0-ff35-47a1-ab30-0f167699b585",
        "cursor": {
          "ref": "019497e3-dfb4-4a14-8edc-a410c77b8723",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7c5c6d9a-ab4c-405b-9686-b98714a5abcf"
        },
        "item": {
          "id": "71017ef0-ff35-47a1-ab30-0f167699b585",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4310a8f7-c20d-4f4f-be04-6960bb52c7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7a2b76-51a9-4987-84e2-ff5ce4431f41",
        "cursor": {
          "ref": "778d4026-0c1e-46ef-ae17-566702e79554",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d81ec95c-1d59-4930-8ae0-05941ad26e82"
        },
        "item": {
          "id": "7b7a2b76-51a9-4987-84e2-ff5ce4431f41",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9717513e-0d1c-4bfd-b258-b13a0861d616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89738af-17fb-4a19-812a-3e839628955a",
        "cursor": {
          "ref": "bc72d470-5b12-4519-84a5-9989587b274c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "71f5ffc1-2b82-4617-93ce-bb4bb165e246"
        },
        "item": {
          "id": "b89738af-17fb-4a19-812a-3e839628955a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d5703eb5-77a3-4ae9-abe2-fa5af26066cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6ae9b7-4eed-45b1-b39b-907b22f917a2",
        "cursor": {
          "ref": "60f35a63-af2c-4d85-95fa-68f085cc8724",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "021cf06d-232f-4101-919e-ab62302d3031"
        },
        "item": {
          "id": "cc6ae9b7-4eed-45b1-b39b-907b22f917a2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "81c9ad07-4bb2-4dd1-a5d6-bbb031c314da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4a5e9e-338c-4de8-9e42-ec7d995afdfa",
        "cursor": {
          "ref": "59ae64aa-c953-4287-8fc0-e1f12f28ca25",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "aa0f6a62-27cd-49f6-af3d-7eec8c71b734"
        },
        "item": {
          "id": "5e4a5e9e-338c-4de8-9e42-ec7d995afdfa",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "63a18611-ba5c-46ca-bb8b-6433a0650dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58139377-c615-4d59-814b-85639f0490aa",
        "cursor": {
          "ref": "e492ee7b-82c3-4354-8b0c-e16f310395a3",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "842264f3-d3ed-432b-9525-eb28d5f20333"
        },
        "item": {
          "id": "58139377-c615-4d59-814b-85639f0490aa",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "65115526-676e-4103-ac2b-b85020fd371d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ce9012-7398-482a-91b3-8f9e5bdb3b7e",
        "cursor": {
          "ref": "e64b9b74-3ebd-4a98-a0ed-85ea04950631",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "819d8583-8a14-4fd2-9ebb-fcedab803d88"
        },
        "item": {
          "id": "45ce9012-7398-482a-91b3-8f9e5bdb3b7e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2438de2a-6428-418f-b7bf-79a6d978994b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cced5009-f01d-46e5-ba39-f7ff1948a947",
        "cursor": {
          "ref": "2a81842a-ccb8-4505-8a5b-4241e11b185e",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1c07b279-8aa9-43e3-882b-6ed639658517"
        },
        "item": {
          "id": "cced5009-f01d-46e5-ba39-f7ff1948a947",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "12487e49-b9f2-4da8-adf0-de98b2b486dc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 632,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd8a092-e15e-4e07-8502-093c492e2a89",
        "cursor": {
          "ref": "56b13f3f-180e-4ade-9ee9-a17548a66ab2",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e332e629-3b72-4e7b-b880-b43295e6adad"
        },
        "item": {
          "id": "8dd8a092-e15e-4e07-8502-093c492e2a89",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0d77fd36-6f33-4446-9d62-4a382ddf9d4b",
          "status": "Created",
          "code": 201,
          "responseTime": 6685,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d060440-8df2-4ed6-8783-eda4ce0e9b4e",
        "cursor": {
          "ref": "24a230db-757a-4832-9d89-3b21aeb44a5a",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "01441254-0a87-433a-98ea-1e2e90776812"
        },
        "item": {
          "id": "2d060440-8df2-4ed6-8783-eda4ce0e9b4e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "114a695f-ce23-4cc5-834e-04a3f5c05598",
          "status": "Created",
          "code": 201,
          "responseTime": 6685,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d6a39f-5fd4-4629-83d1-74bd9d036df1",
        "cursor": {
          "ref": "0ae2501d-89a5-4d41-90c8-b48170bd4bb3",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "72e1d1de-4d0e-421a-babe-0457d29b8136"
        },
        "item": {
          "id": "a5d6a39f-5fd4-4629-83d1-74bd9d036df1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c069d4a8-b774-45d9-98d5-7f1fb9dc67f5",
          "status": "Created",
          "code": 201,
          "responseTime": 5899,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfc8c39-cc60-450d-bff6-1b43757ca206",
        "cursor": {
          "ref": "506dd63c-4421-4f11-a244-3ae83687829d",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "86e3c57e-ce93-4d12-a02e-e8fbfcca248e"
        },
        "item": {
          "id": "fcfc8c39-cc60-450d-bff6-1b43757ca206",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "67533ca5-7258-4fd1-8354-e2117a24b379",
          "status": "Created",
          "code": 201,
          "responseTime": 5831,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75119b8-1148-42ab-a78c-a6bf1d6fb041",
        "cursor": {
          "ref": "d5309096-0b7d-4cbb-9c68-8a1242558d17",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b287390d-0db0-49bb-8699-96bd2162d082"
        },
        "item": {
          "id": "f75119b8-1148-42ab-a78c-a6bf1d6fb041",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3629e992-fa11-4a89-be1d-da91ed1ad3df",
          "status": "Created",
          "code": 201,
          "responseTime": 5506,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef53963c-9e52-4962-97e2-794840521bdd",
        "cursor": {
          "ref": "439c6f12-0337-4e42-bea8-998d72cf3a94",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a9e91d7e-b829-4df7-a4f0-18b153d1268c"
        },
        "item": {
          "id": "ef53963c-9e52-4962-97e2-794840521bdd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c586d8cc-1227-4a6f-b31f-fb196727105b",
          "status": "Created",
          "code": 201,
          "responseTime": 7804,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68167a0f-26f3-4219-bf4c-443adc8b66d6",
        "cursor": {
          "ref": "b0bd5f3a-0708-4e9b-92ed-98bd580193b7",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8e04aea7-80ad-4201-b439-ab9d94bc032f"
        },
        "item": {
          "id": "68167a0f-26f3-4219-bf4c-443adc8b66d6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "53e93bc2-2dff-4577-91ae-1dacbc1c95d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68167a0f-26f3-4219-bf4c-443adc8b66d6",
        "cursor": {
          "ref": "b0bd5f3a-0708-4e9b-92ed-98bd580193b7",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8e04aea7-80ad-4201-b439-ab9d94bc032f"
        },
        "item": {
          "id": "68167a0f-26f3-4219-bf4c-443adc8b66d6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "53e93bc2-2dff-4577-91ae-1dacbc1c95d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b8742d-f788-405c-8178-ab376b699f90",
        "cursor": {
          "ref": "e331fcaf-3f8e-4bae-a1d2-817c02d3fcc3",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "18de8fa9-6f4c-4e20-88ff-cc813cd42608"
        },
        "item": {
          "id": "64b8742d-f788-405c-8178-ab376b699f90",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "02ffb6f5-c78b-46a0-a40a-dfcb4e6d1b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f50e98-c874-4c30-a648-9652c7c25ebc",
        "cursor": {
          "ref": "ee9ab985-bdb7-48c1-b5af-756e052c12ad",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8f07fda9-9439-40df-951f-e0545e4b36f2"
        },
        "item": {
          "id": "a6f50e98-c874-4c30-a648-9652c7c25ebc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f4cd9ee9-ede4-439a-ab17-5dd3a39825ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799bd0c9-cc63-4b4a-a234-74e1a6b36683",
        "cursor": {
          "ref": "6afe12d7-2c27-4698-bc75-bd42c2835141",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "393f264f-0b8a-4d14-bc60-08aa2b4310cc"
        },
        "item": {
          "id": "799bd0c9-cc63-4b4a-a234-74e1a6b36683",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "731f58ee-1db3-457b-bf8b-ba21cffd5322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6edda1-1af7-486b-a51d-cb6d2b8960fa",
        "cursor": {
          "ref": "191b39ae-7bb6-42ad-a211-16d0165876eb",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3157291c-99ab-4429-84ed-da92ef7a2518"
        },
        "item": {
          "id": "2a6edda1-1af7-486b-a51d-cb6d2b8960fa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "79171fc7-ff64-4fe3-9c16-ebaf216f3535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e84ca15-4aea-4ae1-916e-34b66c379a5d",
        "cursor": {
          "ref": "0f8156fe-5647-4afa-83d2-dc7a01883c2a",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3b8bcc0d-2677-4859-ad1f-2cb939991806"
        },
        "item": {
          "id": "3e84ca15-4aea-4ae1-916e-34b66c379a5d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "61f9ac5c-148e-49f9-a3ee-6934333aeea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e2af5a-7790-42e9-b6af-8588c9816d48",
        "cursor": {
          "ref": "c210f90b-9be1-4063-81ed-7446d7fd305b",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "85b726f9-1f9a-431f-b0d4-3301706030ba"
        },
        "item": {
          "id": "51e2af5a-7790-42e9-b6af-8588c9816d48",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0f6d211e-4ec9-412e-b997-83b636661172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b88c83e-bdd2-4727-8c47-bbbd02f49e5b",
        "cursor": {
          "ref": "74a0eee6-156a-4f65-ad48-47b6ad753342",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2c37b661-805e-49ae-b3bb-742ea56ea6e3"
        },
        "item": {
          "id": "3b88c83e-bdd2-4727-8c47-bbbd02f49e5b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1ee89c6f-1e4f-46f2-9259-2b82bbc3a4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3dcc72-5f55-4dea-b151-8f7f64627fec",
        "cursor": {
          "ref": "300ad0c9-12a9-42b5-912e-cbd2ebbe3361",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fc54b4e6-f221-4220-b3de-2b52902419e9"
        },
        "item": {
          "id": "0c3dcc72-5f55-4dea-b151-8f7f64627fec",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a8d4c12e-ad42-428f-97e7-b138588c3056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d22be8f-f97c-4647-9580-c850a059dff4",
        "cursor": {
          "ref": "d255fe22-6c52-49fd-a715-532a778ec635",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f12e1ccd-6f4c-48fc-abc5-e87c4a4d0ff6"
        },
        "item": {
          "id": "5d22be8f-f97c-4647-9580-c850a059dff4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c386e2c3-f9bc-485d-84ec-974e01f8164e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d88379-a445-4052-86c4-7624a1cda0bd",
        "cursor": {
          "ref": "9ed095b9-b266-4cf2-adfd-e7e26a10ddaf",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6dae47f4-384a-4d35-8842-672ae1dbbbaf"
        },
        "item": {
          "id": "87d88379-a445-4052-86c4-7624a1cda0bd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "94a89156-f716-4c36-9300-294ef4ecbcf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a072e522-9f00-450c-9960-83c89168d5f1",
        "cursor": {
          "ref": "3670d97a-20b9-45d8-8bad-1ec2377c9184",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ede55014-f85f-496d-870c-02b0552cbc86"
        },
        "item": {
          "id": "a072e522-9f00-450c-9960-83c89168d5f1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9572a6b7-a947-4548-892d-e248a5984522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee7610f-ad6e-4608-9b8e-67ccdb72794f",
        "cursor": {
          "ref": "b906a64f-411c-4d52-b9c7-28b9970b0e1c",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "47a87eb2-7719-44cf-a2d7-af594ba9078b"
        },
        "item": {
          "id": "9ee7610f-ad6e-4608-9b8e-67ccdb72794f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "069508bc-c216-4579-bae9-ed019109d4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af31f27-bc7c-45bc-b0df-34c8dc66fe0e",
        "cursor": {
          "ref": "61ec6717-9eea-4b93-b941-a69f57ccfcf2",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7be93c36-8ed6-4f52-ab6b-525aa5ebbd9e"
        },
        "item": {
          "id": "0af31f27-bc7c-45bc-b0df-34c8dc66fe0e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cb852c09-143a-429f-bb74-8031352fd960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59def5d-fe1e-48f7-84f1-d95f37facd3b",
        "cursor": {
          "ref": "deaa43fc-2b6b-4925-8a54-fa1e9f67f214",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6c945892-02b8-4a88-8944-b2e95124722d"
        },
        "item": {
          "id": "e59def5d-fe1e-48f7-84f1-d95f37facd3b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1c2083a7-9887-4d53-96bb-82cb6329436e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7012be50-7d14-4587-9e0e-b852be9b564d",
        "cursor": {
          "ref": "541ce267-514c-40ce-b3dd-3ce8de03a86e",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4d60a9d5-cbb8-4a13-8951-2a96f023a290"
        },
        "item": {
          "id": "7012be50-7d14-4587-9e0e-b852be9b564d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "eefb7bb1-d269-4c5c-9b20-71cfe15b518c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccb67f3-d1a4-4e6d-863c-a662ba909aaf",
        "cursor": {
          "ref": "730a1ba0-0201-4272-ab0f-a93c089a1f52",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "433881e9-0863-42ae-a805-7580a17f6be5"
        },
        "item": {
          "id": "0ccb67f3-d1a4-4e6d-863c-a662ba909aaf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "906fc2ce-5839-467f-8027-71812271884a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804829f5-c537-4c85-b4f8-251ddfb55c28",
        "cursor": {
          "ref": "f3f5cf39-52fb-41df-9ee3-2949b2a14422",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d1f3dc77-b2c4-4228-8487-d87f44f720c4"
        },
        "item": {
          "id": "804829f5-c537-4c85-b4f8-251ddfb55c28",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7b0b78ed-4384-4297-a1f3-302780c39b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd99c9d-edf2-49df-a649-2b0d8e8ea014",
        "cursor": {
          "ref": "03dee5a8-8fe8-4fda-b0b6-c812c3ad261c",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5ce64837-08f4-4499-8400-80296bb0017b"
        },
        "item": {
          "id": "ccd99c9d-edf2-49df-a649-2b0d8e8ea014",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a208c7c3-9c4f-4875-b181-faf924ae3d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f57c25-8b17-4608-adb7-3361a2953408",
        "cursor": {
          "ref": "8198382a-d993-4415-aee1-a048f7932cda",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b55246a7-2fff-40a9-887d-570b687bf82e"
        },
        "item": {
          "id": "20f57c25-8b17-4608-adb7-3361a2953408",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e1985b47-84dc-4c89-9416-e1d025c4e0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62a7ab8-25f6-4e9e-9e00-d15467d086ff",
        "cursor": {
          "ref": "94236a4d-e5a9-4a68-ac5a-a612da93e19b",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b584b23a-70bd-4656-93da-3d98c59a9e5a"
        },
        "item": {
          "id": "e62a7ab8-25f6-4e9e-9e00-d15467d086ff",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "22864053-0df6-4d1a-ae84-b7c1a5c1bd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e724453b-c710-4530-9e55-2fed0766f2ed",
        "cursor": {
          "ref": "33fc4226-1dad-4ddc-aa4f-96cab2627143",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4eb4e37c-e60c-440c-8f35-09ea4de87cb8"
        },
        "item": {
          "id": "e724453b-c710-4530-9e55-2fed0766f2ed",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7e27378e-402b-48ff-8cc9-411c71d814be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43afc94-9448-4966-9686-b988fd247807",
        "cursor": {
          "ref": "bb243d63-369b-41fa-9eda-ee69ceb37238",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ddd17b28-3f1f-49ff-ae46-248b4460a0b4"
        },
        "item": {
          "id": "e43afc94-9448-4966-9686-b988fd247807",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ae430777-6316-45a9-ae74-03c2029bf8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98395534-8642-499b-8a29-94e4fc54f415",
        "cursor": {
          "ref": "1358a2f0-085b-49a1-b6f1-e1e7310bb4b4",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8b0bbb5c-b6ac-4c21-b728-b508e51614be"
        },
        "item": {
          "id": "98395534-8642-499b-8a29-94e4fc54f415",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7bb66efb-d945-40f7-9efb-13119f5e1bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273e8c21-0f12-4d2b-a3d6-1d8ccac0c52a",
        "cursor": {
          "ref": "339c9871-d9db-47d8-8441-8cb9323c6d06",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ab499b08-d1eb-48dc-885a-f2d440f89406"
        },
        "item": {
          "id": "273e8c21-0f12-4d2b-a3d6-1d8ccac0c52a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c93e3138-8f98-442a-b485-845dc6edb88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b742a6f-bd0a-426d-abf6-a57764660806",
        "cursor": {
          "ref": "304641ea-1154-4229-aab8-50590f7d2c86",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c8c645a3-c571-4bde-9bad-863d2b820dd9"
        },
        "item": {
          "id": "1b742a6f-bd0a-426d-abf6-a57764660806",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "484be4dc-db0f-4640-8af5-366bdcf7f4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5f7eb4-ac67-40cb-818b-2e40037d48ae",
        "cursor": {
          "ref": "5a6a5980-160c-464b-bdab-031e1271cc18",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "713ab333-6421-40a1-8c7f-9790754116f2"
        },
        "item": {
          "id": "0c5f7eb4-ac67-40cb-818b-2e40037d48ae",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ba96e2ea-51ff-42c4-9e73-ca6ea703fd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443b539d-1024-429d-810d-33a9b88481f7",
        "cursor": {
          "ref": "de386271-8004-499e-8e32-48f0b66ffc18",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "da98977e-21ee-466c-95fb-115fb3009b56"
        },
        "item": {
          "id": "443b539d-1024-429d-810d-33a9b88481f7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fe1d0400-076b-42e3-8eab-8844e4d643b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d554eccc-76da-4da6-a86f-7ca1dbc06ad0",
        "cursor": {
          "ref": "5fe175eb-b940-41f1-ac79-dec718c5cdae",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "00c313db-d121-4067-bbfb-90b6fb4d14aa"
        },
        "item": {
          "id": "d554eccc-76da-4da6-a86f-7ca1dbc06ad0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c2911de8-128d-4569-82f0-4a4af68647ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74df5a4-0fcd-47c7-a5a7-3f52428d7bbb",
        "cursor": {
          "ref": "95d20ec0-b4fb-43a1-afa5-ffa20d2c7596",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d7df20a1-76da-456e-8479-eb732132d786"
        },
        "item": {
          "id": "b74df5a4-0fcd-47c7-a5a7-3f52428d7bbb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9a815ad4-210c-48cf-afe3-7c9419b876fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a6ff03-1881-40e0-9a0f-d7a08580eb95",
        "cursor": {
          "ref": "8e434c16-1b69-4284-acf1-0e40a9ba2c1a",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "61c6d2de-f1c9-4b9e-8f84-01dd44e4f7df"
        },
        "item": {
          "id": "77a6ff03-1881-40e0-9a0f-d7a08580eb95",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1a96aae2-b0d0-4b8d-962e-d43662de0044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96494da-fced-4286-8f05-bbe5c4e35786",
        "cursor": {
          "ref": "e6dc1afc-b2aa-4cfe-9fc3-befe86f8ccf3",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "02259fa6-bcbf-430c-a224-69664cbdf868"
        },
        "item": {
          "id": "f96494da-fced-4286-8f05-bbe5c4e35786",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a9598d82-eff7-4758-a97a-d3ab0511b057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58c3fa0-60fb-4df8-a351-4de4b12b08d0",
        "cursor": {
          "ref": "0db0d5ae-f1a1-4df7-9654-7eb7439d57d8",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7264f9ba-c56d-4368-8cda-3d2de46b535c"
        },
        "item": {
          "id": "d58c3fa0-60fb-4df8-a351-4de4b12b08d0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "facb9623-19a3-48aa-b009-04326cd474d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe1779e-5538-4e46-a537-23ba2b97dac9",
        "cursor": {
          "ref": "770e2b49-5f17-4062-a3aa-4e12a04db0ec",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "87b201d6-466c-4b5f-80fd-ff56a54caf3e"
        },
        "item": {
          "id": "9fe1779e-5538-4e46-a537-23ba2b97dac9",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "955d606a-ce21-4112-a67d-ce930f989826",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 617,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a0c3be-9094-4c09-ac26-9d8074fffa97",
        "cursor": {
          "ref": "070e85b5-9b06-4887-9f46-d6cdc9642a61",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dad79754-cff9-476a-b1dd-dbd0c1a1a101"
        },
        "item": {
          "id": "34a0c3be-9094-4c09-ac26-9d8074fffa97",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d48cadbc-782b-4293-ac30-e5503e33a336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a0c3be-9094-4c09-ac26-9d8074fffa97",
        "cursor": {
          "ref": "070e85b5-9b06-4887-9f46-d6cdc9642a61",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dad79754-cff9-476a-b1dd-dbd0c1a1a101"
        },
        "item": {
          "id": "34a0c3be-9094-4c09-ac26-9d8074fffa97",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d48cadbc-782b-4293-ac30-e5503e33a336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2e9e91-3900-498c-ae6d-834d24d9527e",
        "cursor": {
          "ref": "ff168736-d5e7-455c-beba-db7070855c8d",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c002b037-aac3-47bc-831d-c465ceb58af6"
        },
        "item": {
          "id": "cc2e9e91-3900-498c-ae6d-834d24d9527e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "84ce1c5f-a8c7-40a9-940f-f2bdde8ea7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ad56fa-2e03-4bd7-86a5-199afddf111e",
        "cursor": {
          "ref": "62195518-e4f0-4458-b153-523393be8747",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6d47b337-da21-4934-850e-ec7e93cfd2d0"
        },
        "item": {
          "id": "c6ad56fa-2e03-4bd7-86a5-199afddf111e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b87fa821-c722-490c-974e-2788e63b5876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786b5ebc-5120-4318-8061-ff8b224c80cd",
        "cursor": {
          "ref": "d6d27b2a-145a-4c2b-9ac6-9fdc4d1231fe",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5948beed-05d8-45f2-b339-a36c118a7ed4"
        },
        "item": {
          "id": "786b5ebc-5120-4318-8061-ff8b224c80cd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "74a646b6-5621-4b4e-bf3a-2938dd22f072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11b8ee9-7f20-4503-ba77-cb416b7eac3a",
        "cursor": {
          "ref": "7b9053d8-1d6a-432b-9c67-9d34cd83db9e",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "69382f6b-30c7-4698-b3b2-86d28d417f29"
        },
        "item": {
          "id": "e11b8ee9-7f20-4503-ba77-cb416b7eac3a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3525ef95-32c0-4cc5-8dc8-efa2047b04dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb952f9-64ec-462e-8eba-297b315ba0d3",
        "cursor": {
          "ref": "ea516c84-17df-4723-bf62-f02100dcd045",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "841c0765-f47f-4a74-bcc7-d431e63c60fa"
        },
        "item": {
          "id": "ffb952f9-64ec-462e-8eba-297b315ba0d3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "47a0c5e8-35ed-4750-b7fe-72bdbf163869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322ae8ad-5d02-444e-8cd4-3157399bd726",
        "cursor": {
          "ref": "1dc44583-6d9f-41f4-8e00-018cf64fe006",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7bfc80ce-20eb-40cd-a73e-811e510aeab9"
        },
        "item": {
          "id": "322ae8ad-5d02-444e-8cd4-3157399bd726",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "80f22260-29dd-49ef-aba6-67dbb7381ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f0d3c7-a4ff-474a-9988-1fabf4f8e051",
        "cursor": {
          "ref": "b1d25b56-95aa-4857-90cb-ac0b6f37888b",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f11bbdde-bc15-45e7-84d8-c2851f7087a4"
        },
        "item": {
          "id": "93f0d3c7-a4ff-474a-9988-1fabf4f8e051",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f3b90d10-33f6-4c48-ab70-53dfa02366f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f1dd2a-edcd-4314-9ba5-3dccba1dd0b1",
        "cursor": {
          "ref": "9e6836aa-49f2-49ee-b9d3-2e46e50d8804",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4a3adf5e-78e2-4524-b584-d634cd77c775"
        },
        "item": {
          "id": "93f1dd2a-edcd-4314-9ba5-3dccba1dd0b1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "918969dc-deae-4081-9df0-4e5c5322295c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe39f6a5-a1ec-405b-aa8a-5416de211e6c",
        "cursor": {
          "ref": "057a62b1-f023-400b-a2a3-01b6ca7360b0",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8902e3d6-dcab-4868-9697-b89583d454b2"
        },
        "item": {
          "id": "fe39f6a5-a1ec-405b-aa8a-5416de211e6c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "eca2c710-e570-4993-95dc-c247529914c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ce2b58-25bb-4009-a08d-a4187f08208f",
        "cursor": {
          "ref": "20757a92-5483-4fd9-bc06-1dc21cacc93f",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0d11b8c2-49a4-46b9-8213-43c65c8009f4"
        },
        "item": {
          "id": "f6ce2b58-25bb-4009-a08d-a4187f08208f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5c0c5297-0068-4fd9-ab79-3281e93a513d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c17a714-ce37-493d-816d-ba66d5ca78ad",
        "cursor": {
          "ref": "a2621e54-fa1c-4403-88d3-e9176ec13d0f",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8b8f3c49-0917-4ca7-925f-ae2bf6be299b"
        },
        "item": {
          "id": "5c17a714-ce37-493d-816d-ba66d5ca78ad",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d940c696-a694-4d4b-89a3-420a04298abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2614c8cd-210d-4d24-bcab-a33cece01eb3",
        "cursor": {
          "ref": "120b4eb5-411a-461d-9bd2-56e767a7b88f",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b3e70e89-c406-48e2-9bba-6ded6df581d6"
        },
        "item": {
          "id": "2614c8cd-210d-4d24-bcab-a33cece01eb3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8f7934bd-ceb2-4c93-93f0-edbc8f4dc889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587f50f9-6286-4d9e-85f8-1e6a65561631",
        "cursor": {
          "ref": "91f41719-e479-49d3-a6f5-2ebe3baf1bc7",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5c13324d-c64e-41de-ab5f-d320214f1bb7"
        },
        "item": {
          "id": "587f50f9-6286-4d9e-85f8-1e6a65561631",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6ec1147e-a9e6-4f05-bd07-8ba755b07d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8f4b9b-c17b-4af4-8418-7b9dee50500a",
        "cursor": {
          "ref": "e8f7986a-7a5a-4e48-a5fc-f20da3dd0856",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3e025669-2000-4f09-a334-05387a7dab9e"
        },
        "item": {
          "id": "6b8f4b9b-c17b-4af4-8418-7b9dee50500a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "29e92bce-98eb-4690-8014-86605a6a1769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf2a983-1474-48a6-bf82-6ece9e6b505f",
        "cursor": {
          "ref": "fb46126b-6cae-4a2c-a905-836d8506c72c",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3d90954b-078a-4bb5-89ef-22e0e329b1b4"
        },
        "item": {
          "id": "5cf2a983-1474-48a6-bf82-6ece9e6b505f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c51f258a-1f27-4987-8207-8caff504eb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0ac19a-6709-4f7b-a1d9-0a1a449c7298",
        "cursor": {
          "ref": "a18f6574-5cbe-4ece-a9f6-10f5b10433f7",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c514880f-8d0c-4986-bdda-1ba7ebc68f3c"
        },
        "item": {
          "id": "8c0ac19a-6709-4f7b-a1d9-0a1a449c7298",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a76591f3-0b22-41cc-b73e-433ad9c6b9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af97b35-4038-4b8c-9817-6735e82d455a",
        "cursor": {
          "ref": "0c869c7b-bf36-4753-b062-1853b0390f20",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "32c8b2b3-b8f7-406e-a372-0a7aad677dfb"
        },
        "item": {
          "id": "2af97b35-4038-4b8c-9817-6735e82d455a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e16d1ec1-977e-4fdc-b43d-22510dd86f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676550f6-eb17-498a-a2c6-d96912dcdfef",
        "cursor": {
          "ref": "9b78d64b-2a13-41d9-8e85-ac1d3db3b322",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7f2781e4-d100-4824-80ac-abe0255062da"
        },
        "item": {
          "id": "676550f6-eb17-498a-a2c6-d96912dcdfef",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b924e196-47dd-4d7f-8c74-febb44e1ee5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70980873-1845-407a-bedd-9bdd88b4d1b9",
        "cursor": {
          "ref": "59e14fe0-019a-4940-834b-26b3178c0c14",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "117d1f5f-b31c-4104-8488-d68c68e32e1f"
        },
        "item": {
          "id": "70980873-1845-407a-bedd-9bdd88b4d1b9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "363c9a02-1161-4ba5-8a3e-b5551739aee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347c2d9b-0c70-4877-acc4-c7c429212579",
        "cursor": {
          "ref": "f9d61cce-82d7-4886-8489-12d70b3d4682",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a45993f8-8b1a-4661-9612-f80f515c07d8"
        },
        "item": {
          "id": "347c2d9b-0c70-4877-acc4-c7c429212579",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1a4fae12-f5e0-4dd8-9b6b-8bd0f453dbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69e4b5b-8479-4d18-8261-96d5e6c33ded",
        "cursor": {
          "ref": "88587078-95f5-4465-8ef9-212f1e211b70",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f1aaf064-1c00-47ea-b086-2c40dd1fcb51"
        },
        "item": {
          "id": "a69e4b5b-8479-4d18-8261-96d5e6c33ded",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b19811ec-a2a2-45b4-bd87-3719d9f4acc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ea1f1a-4d94-485e-88a1-47960a7e78c4",
        "cursor": {
          "ref": "5c605c70-a772-47bf-9e39-97505ef8688e",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "83a6bbc5-23d7-462d-8a46-1c7bbc97c7fb"
        },
        "item": {
          "id": "b9ea1f1a-4d94-485e-88a1-47960a7e78c4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "289767f3-e9d1-40eb-bc17-1c79e6e8a3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337bd3b6-8800-4e3b-9771-33000ba157e7",
        "cursor": {
          "ref": "000e0876-0163-4779-bf23-422a572044ab",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "aae076a9-10ef-4ceb-a283-e0544c41d92d"
        },
        "item": {
          "id": "337bd3b6-8800-4e3b-9771-33000ba157e7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "044e6d44-b249-4d2f-b879-df7e33bb0352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9ad979-5b85-4506-8d33-68a08e0eb013",
        "cursor": {
          "ref": "d27c5286-9871-4601-be48-64ed1f6ae57c",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d3bb21bc-b2d6-4564-bbfa-703b6c8a4979"
        },
        "item": {
          "id": "cd9ad979-5b85-4506-8d33-68a08e0eb013",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d25f6dcb-475e-4c61-9aa0-b8c496af5113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40519a1f-8ed1-45e8-9209-6cfbcd4cb62a",
        "cursor": {
          "ref": "b79b0508-983c-49ee-8522-9f8ef81e2668",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c5779940-414c-43f7-a358-cf1c4c808732"
        },
        "item": {
          "id": "40519a1f-8ed1-45e8-9209-6cfbcd4cb62a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "abd3fe9f-a517-41be-9901-06b75a832934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a376ae8-fa27-4890-aa8a-98562d1a0958",
        "cursor": {
          "ref": "c8d10973-24f2-406f-8a05-0d6c0ee5f0e3",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f701a134-c863-41c1-bcc4-f64dec4be7c1"
        },
        "item": {
          "id": "5a376ae8-fa27-4890-aa8a-98562d1a0958",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "af5a47b1-fe11-4d65-94a8-b5b2bd324aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5039295-5254-46df-936c-b9e09da021b5",
        "cursor": {
          "ref": "43889f63-4a24-4bbb-a086-eebe4e96fc3e",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f1de95b3-b0b5-4e4d-a60c-dbc7a400d58b"
        },
        "item": {
          "id": "a5039295-5254-46df-936c-b9e09da021b5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b6d089d3-ac7b-4deb-b4d1-d9b971d3e940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c48dda-1259-4d63-9d43-25a4128366aa",
        "cursor": {
          "ref": "b27175a7-786b-4bbd-bdb7-64344b399d6b",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "827a6a24-3d9f-4082-8a5a-a6c796f973e6"
        },
        "item": {
          "id": "b6c48dda-1259-4d63-9d43-25a4128366aa",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "311a0bee-1607-47a6-81af-0ee56300f99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39851e05-050a-4681-bf9c-f66c261d942a",
        "cursor": {
          "ref": "0e408b95-96ef-4113-b8e3-f20e58d573b9",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "94e7026b-fbad-48ab-8b46-9f7dd338e7c3"
        },
        "item": {
          "id": "39851e05-050a-4681-bf9c-f66c261d942a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5533a96e-6a19-428c-aa77-c76b23060c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e1ef88-f87e-4c67-9259-616d1143a380",
        "cursor": {
          "ref": "1361d5b3-a829-484b-bc58-da42bd3c0e4a",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "881d9be4-6fdd-4047-86e8-314f5d10df47"
        },
        "item": {
          "id": "29e1ef88-f87e-4c67-9259-616d1143a380",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0584c757-6d0d-4653-a2f2-2e1f47da02a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8dcb79-f31a-48d3-ad02-61b904e0395f",
        "cursor": {
          "ref": "5638f669-3809-491d-9bab-18445bbbcb91",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0633a0bd-835c-421d-a80c-ff2ae0d1dc2b"
        },
        "item": {
          "id": "7a8dcb79-f31a-48d3-ad02-61b904e0395f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e6d352c2-ca5b-449e-bb3b-464134ed51c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b9bb29-304b-4bc2-826b-4f79a939b460",
        "cursor": {
          "ref": "f214e5f2-cb38-4cba-8759-e4ed225a94bc",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a4b127bd-fbba-4598-902f-2e79e702060a"
        },
        "item": {
          "id": "99b9bb29-304b-4bc2-826b-4f79a939b460",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d014bc8f-668f-497b-850f-7c211c7983c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dee452-a700-4512-a1b4-6580c872b804",
        "cursor": {
          "ref": "9a9a2993-a02e-45c8-92ad-3d28c021694b",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "40591a7d-e329-4ed6-817b-fc56e2eaf47a"
        },
        "item": {
          "id": "26dee452-a700-4512-a1b4-6580c872b804",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "696e7f8d-859c-4cca-9a84-00cc4798dec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa2710d-a86c-4926-9c60-9a6d1c2729bb",
        "cursor": {
          "ref": "d480a6b7-9aa4-4858-a780-6ebb576f2b11",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a437950b-f50f-4cf7-a811-6da5feebe028"
        },
        "item": {
          "id": "8aa2710d-a86c-4926-9c60-9a6d1c2729bb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9d8ed21b-6233-4099-9345-c9a1187fc61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb5d9dd-752d-4240-8a34-34d97ec8bd16",
        "cursor": {
          "ref": "5e84b5b0-1a4f-4bc6-864a-efc301b2879b",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "54b7e76d-798d-43ec-a56f-6c3c8ddd73ce"
        },
        "item": {
          "id": "2eb5d9dd-752d-4240-8a34-34d97ec8bd16",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9c4dd116-8cb9-4c97-8886-570a873dfeb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5295c026-8a65-4ecb-9e60-11b789e7571d",
        "cursor": {
          "ref": "8c14ce4c-a197-41a4-a548-9ea100e3124a",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1ca60455-c59c-4c37-8be5-7e78029a800f"
        },
        "item": {
          "id": "5295c026-8a65-4ecb-9e60-11b789e7571d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "956be2b8-7ef8-40e6-9e7f-6809fa7195e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dc1562-5261-4abb-b40d-75d65af661ad",
        "cursor": {
          "ref": "b0e4fcd8-c10d-46cc-9e2b-4415b04e442f",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a4950c7e-01f2-43db-bd32-144adad67fe5"
        },
        "item": {
          "id": "e1dc1562-5261-4abb-b40d-75d65af661ad",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "49eebd3c-b1a7-421d-af9d-c1bc380f79ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fc1f99-69c4-4ea6-8cdd-d5e3cc41cad5",
        "cursor": {
          "ref": "7ea46438-5ca7-449c-9415-04c3f144921e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "924a2b06-345b-4290-8bae-76a9b2854bd7"
        },
        "item": {
          "id": "60fc1f99-69c4-4ea6-8cdd-d5e3cc41cad5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "537e90c1-7bac-4bf9-8e51-3b6bcdab9684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a850b9-dbbf-40af-80fe-990fbff82cce",
        "cursor": {
          "ref": "4232816e-18d5-4fd4-85cc-6324d2e1290e",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "808dfbde-9d5c-4ad3-a390-a806a00cd5c3"
        },
        "item": {
          "id": "90a850b9-dbbf-40af-80fe-990fbff82cce",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8cb740bc-5cd2-447d-ad02-751860a11d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9320d8-94c7-43c8-b6cb-a75f1d8ebf44",
        "cursor": {
          "ref": "7ad4b17f-75c6-4ace-85fd-e3ced2cb3bcf",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cdf026a5-6f87-496b-8bd7-dab82dd6ae7b"
        },
        "item": {
          "id": "ce9320d8-94c7-43c8-b6cb-a75f1d8ebf44",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "51d0d94c-1c14-4d1b-a2c3-cfba0c930591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19824fee-5941-4405-ac76-718fb5751904",
        "cursor": {
          "ref": "f052239a-b800-4385-86eb-f89fa6e17b7b",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "570b5c4f-2a20-4f09-afa2-ac7baf09f90d"
        },
        "item": {
          "id": "19824fee-5941-4405-ac76-718fb5751904",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f8f6fe1f-f3b9-4561-a9eb-74731fe95cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fae63a3-1d21-490a-af11-2d9c779188ae",
        "cursor": {
          "ref": "56d35f8c-55b5-4e29-823b-b7d8cc62d023",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9e77bb8a-29f9-4a2c-9f7f-00c951c418d8"
        },
        "item": {
          "id": "9fae63a3-1d21-490a-af11-2d9c779188ae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "affc4b71-8c69-4886-85aa-60bb045a6db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f13041d-6267-4fb9-9e24-9e9ed6dd12b2",
        "cursor": {
          "ref": "0e5803bd-dd4f-4858-9e12-1e157c0da334",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3f918a8d-153d-4ee9-aa8a-4d28d7cefb1b"
        },
        "item": {
          "id": "8f13041d-6267-4fb9-9e24-9e9ed6dd12b2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2c739b34-02ae-4967-96be-f52392829da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d68ee6c-4d90-4d1f-80f2-616d6acbaf8c",
        "cursor": {
          "ref": "ad9f3a18-5296-4c4f-8a0b-cd1fc5684555",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "aa55c71c-cd56-47d1-9000-08d9e4d9e6c3"
        },
        "item": {
          "id": "9d68ee6c-4d90-4d1f-80f2-616d6acbaf8c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "18dac422-dc9a-4c66-a5c5-25a156137f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dcee79-787f-4e46-92a7-12c6bb1f67cd",
        "cursor": {
          "ref": "f95bcaff-b7b5-4f1b-9c54-98a1bb2879d9",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1e9f55a6-90f0-4f98-a13c-5a08d9ce5957"
        },
        "item": {
          "id": "59dcee79-787f-4e46-92a7-12c6bb1f67cd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "139b7103-41ff-4e27-b868-b6a9586d305e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c29d460-09e3-4db7-bdf4-20b890c89389",
        "cursor": {
          "ref": "5841a2d7-786a-4d01-85a3-52ad36b49670",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c48b9970-4c3e-40cc-94dc-c27f99272b7a"
        },
        "item": {
          "id": "4c29d460-09e3-4db7-bdf4-20b890c89389",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f164ae83-fa38-4ea2-b006-2e7c3f1af7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100f6fb8-4575-4b16-a945-127e78726055",
        "cursor": {
          "ref": "31cf175e-7d29-45cb-b332-53949e5c5adf",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1e4aa05e-2231-4c0d-a4f0-f3ab948ba5f5"
        },
        "item": {
          "id": "100f6fb8-4575-4b16-a945-127e78726055",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f3b36ed4-98bb-402f-a7d4-114799d9df26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7548832d-1f34-4e98-92d4-a4ad82559d2f",
        "cursor": {
          "ref": "f723c74d-c3d7-42eb-9706-7d59d28cb643",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "791a306c-5a23-4a83-aa30-d321603d4438"
        },
        "item": {
          "id": "7548832d-1f34-4e98-92d4-a4ad82559d2f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "498ef5f8-a7ec-4de1-9ef5-3aea79200fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52141e6f-7603-4780-a7a7-7530f8f8fe80",
        "cursor": {
          "ref": "4c1e35a2-8aab-490c-b4d0-7b774dd46859",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "981880f9-4df9-403e-ab5b-8865f493afa4"
        },
        "item": {
          "id": "52141e6f-7603-4780-a7a7-7530f8f8fe80",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "283a6e50-372b-469b-bbf9-8b102c69a338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a23dd6-26ce-48f8-a02d-ac4bb99dea23",
        "cursor": {
          "ref": "95a28a06-0663-44fe-b37a-9fa1b5d791fb",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "31f25156-17b2-4fe7-a6ee-e92f308d6dd3"
        },
        "item": {
          "id": "91a23dd6-26ce-48f8-a02d-ac4bb99dea23",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5181d54b-d6ea-4134-a1e4-7833373b8728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d181ea37-bbbb-4437-8d5d-9ad1cb2575f9",
        "cursor": {
          "ref": "888d283e-1010-40a0-85ef-fb06dd79af85",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "06c20f00-3c50-4c55-9f6e-b1e4dbdcfdc3"
        },
        "item": {
          "id": "d181ea37-bbbb-4437-8d5d-9ad1cb2575f9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a55b4ee7-6203-4e14-ad3e-d14aacf9ffa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c07736-ba2b-4b2b-9362-0385c35bec9a",
        "cursor": {
          "ref": "914758fb-d24a-403e-8da6-672996cf01bf",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6b39ddae-6605-4525-9903-30db8c3b04b9"
        },
        "item": {
          "id": "49c07736-ba2b-4b2b-9362-0385c35bec9a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ea8b2b5f-a4c1-4eb9-8814-1c545d8860c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf8f8dd-0cd3-4c5b-abf9-3456f7f2642a",
        "cursor": {
          "ref": "4ff8174d-ffa0-4879-a778-d8611be60e83",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "daa40ba9-3029-4a8c-8fdd-908595e7880c"
        },
        "item": {
          "id": "0bf8f8dd-0cd3-4c5b-abf9-3456f7f2642a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ed0fcf5f-8c9d-49ae-915f-0e31218b1008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8446fa15-4fbc-4ba6-b833-b84befea6fea",
        "cursor": {
          "ref": "16d103ea-4612-4cbb-b94e-a6b99cf4a60d",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "85497c98-bf5a-4d07-a852-89319f73b620"
        },
        "item": {
          "id": "8446fa15-4fbc-4ba6-b833-b84befea6fea",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f6f664ab-8553-48fb-8aa7-ff3f433e507e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302fabed-aacb-4428-bcc9-5ec7c42343c0",
        "cursor": {
          "ref": "33604235-1e1b-423e-9cb8-f8358fde4e3a",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b78ac49e-9dfb-46d0-9e11-6222a1ab7fe3"
        },
        "item": {
          "id": "302fabed-aacb-4428-bcc9-5ec7c42343c0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c3f4f4d9-774a-4f1c-809d-9b69e2c39e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930be95d-7f89-46a0-8261-323a3e42482e",
        "cursor": {
          "ref": "6cfa6637-8386-43b7-8f2f-cca6153b6f2d",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2cc0b004-b792-4d6a-a717-292dd486ce81"
        },
        "item": {
          "id": "930be95d-7f89-46a0-8261-323a3e42482e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "169a057e-01b0-4576-aafe-4d079217692d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a829f0-9965-493c-8ded-99c6a514c97b",
        "cursor": {
          "ref": "c2845f6f-3ec0-4d48-8480-7dd162a0ea35",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "92080c3c-84f6-4110-aa2f-acc41f7aa492"
        },
        "item": {
          "id": "d9a829f0-9965-493c-8ded-99c6a514c97b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cbf9a147-600c-4bd8-84f4-e904a3eb68e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3f86f1-6fe7-4629-97a7-b0d9876558f5",
        "cursor": {
          "ref": "d1a8a79d-7400-49af-837e-d909684b867d",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "08eb2737-4241-464b-944a-5cf8cceba312"
        },
        "item": {
          "id": "cf3f86f1-6fe7-4629-97a7-b0d9876558f5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "159cdfcd-ad50-4e6b-b1e4-376ff4c4ba9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae08a408-6baf-442d-8271-4dd253dbb901",
        "cursor": {
          "ref": "4f22ad77-8b47-4e34-9524-c776e0775311",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f7c3145b-ccfc-4f50-998f-4b5f1ccd6de2"
        },
        "item": {
          "id": "ae08a408-6baf-442d-8271-4dd253dbb901",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0c8089ed-fa54-467c-a8c9-f64bad3b3258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6a6f44-301d-4c14-83b5-e0414552de89",
        "cursor": {
          "ref": "744ec941-558f-43a8-8c60-ea48e9cd245f",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4a0a181f-895d-469a-ae21-1007ba98fe9e"
        },
        "item": {
          "id": "9e6a6f44-301d-4c14-83b5-e0414552de89",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "320962c2-62c9-45fc-9888-1e6ef783d57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cce27e5-308a-4565-b136-7b33056359d8",
        "cursor": {
          "ref": "0114c333-7e99-4e58-8ee3-948b748e67e1",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e0436164-4bde-4b88-a1a7-50f1bf34245f"
        },
        "item": {
          "id": "6cce27e5-308a-4565-b136-7b33056359d8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b77a84c5-1124-474c-a445-79154b6de58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a6c732-574c-4221-9feb-a20179949f98",
        "cursor": {
          "ref": "f2aaf611-b24c-4daf-b2b6-152aff9198f0",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "75e27e0a-a6ea-4106-9bc1-abefcd2efe34"
        },
        "item": {
          "id": "19a6c732-574c-4221-9feb-a20179949f98",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "07df1cd0-fb77-48d2-95e4-e4d08da898e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51afbcdc-6f48-4c4d-b5bc-db165574cfa3",
        "cursor": {
          "ref": "92073ecf-fafc-4474-8e66-44f9caaa451d",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "05554a8b-5c97-46ca-9680-88de821951cd"
        },
        "item": {
          "id": "51afbcdc-6f48-4c4d-b5bc-db165574cfa3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "db35f68a-a2e1-46db-849d-bf7b3eb3f3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a63c70-86a4-4c48-87da-bc4104de9d36",
        "cursor": {
          "ref": "85690412-dc27-421f-90a4-f291b8f521ea",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c31fc287-fc49-446a-ae90-ed83fd5e4d02"
        },
        "item": {
          "id": "a8a63c70-86a4-4c48-87da-bc4104de9d36",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b9af9fc0-d96d-4242-9628-e44650b1143b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559982d9-848b-4efb-94cc-7b83de657c51",
        "cursor": {
          "ref": "30ab1e6b-1f38-44ea-9d2f-c450a2e62187",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "403be016-ec3b-4365-80e8-9759f16e393b"
        },
        "item": {
          "id": "559982d9-848b-4efb-94cc-7b83de657c51",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9a2d5049-e4a5-4054-b31f-134357a87611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98610b86-d61e-46db-b78a-82b8ab342fd2",
        "cursor": {
          "ref": "ebcb60a4-797b-4b2b-9c81-100e99128716",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f19d8813-d11d-410c-9da8-f95687dd2258"
        },
        "item": {
          "id": "98610b86-d61e-46db-b78a-82b8ab342fd2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b8b33fd4-5def-4069-9c04-ddc65ddd15db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92999c5c-159f-4fbe-b745-da7b5d94bbbf",
        "cursor": {
          "ref": "e8946ce0-05e0-46b8-9a56-2614ae06ef05",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7d9c39b1-ceee-4968-bb56-4e9f9ede2e5e"
        },
        "item": {
          "id": "92999c5c-159f-4fbe-b745-da7b5d94bbbf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5236667c-032e-4c50-b819-54a262842022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aea829-4f0c-4147-8775-37ea214361e7",
        "cursor": {
          "ref": "842fd01d-c62d-42ec-b3d6-fb7772011f8f",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "79c05e39-c06b-4a6e-8f6f-8b6249cdd83b"
        },
        "item": {
          "id": "55aea829-4f0c-4147-8775-37ea214361e7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d0c067ad-7e30-48bd-8ca4-5618a6150512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab97beae-cf01-4888-88a8-c5ae99fb558a",
        "cursor": {
          "ref": "176d0190-9b9e-436e-b2d4-c3a345e67a58",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d778d269-f0e0-4459-a201-40f269c71946"
        },
        "item": {
          "id": "ab97beae-cf01-4888-88a8-c5ae99fb558a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "65a396c2-c911-4be1-a86f-3c4e34b66afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb9308b-fa0a-4cce-86db-ca6b6e64541e",
        "cursor": {
          "ref": "fc50fe18-83cc-4ff9-95ef-375760336401",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "58a445f7-0cbf-4648-9127-dc3b881aa9bc"
        },
        "item": {
          "id": "dfb9308b-fa0a-4cce-86db-ca6b6e64541e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fe14f278-4004-46f6-8e2c-3c33627346a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5319d9a6-f954-4094-9331-de16da819a3b",
        "cursor": {
          "ref": "36dece7d-d5c7-4bdb-abd8-cf32a6d6dc3b",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bb546bb7-3f8f-4e59-add2-57c8ed49988f"
        },
        "item": {
          "id": "5319d9a6-f954-4094-9331-de16da819a3b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "64f5b2a1-652b-4b0a-b85d-f91321464867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08405169-c1b2-4664-9199-4e20e67d0ff7",
        "cursor": {
          "ref": "5ab34262-a830-48d4-9ccf-c7aa2492d331",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6ab2de8e-1393-46f0-a00e-a7d46cfd6422"
        },
        "item": {
          "id": "08405169-c1b2-4664-9199-4e20e67d0ff7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "26ef21d7-1e17-4ef2-a28e-b6366f3c0155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5d92eb-ba20-4849-acd2-0661ca81dfcf",
        "cursor": {
          "ref": "ad13a550-1608-481c-91e9-78ba70297a6b",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c1e7fed1-89b5-424c-9201-3f13b554f797"
        },
        "item": {
          "id": "7e5d92eb-ba20-4849-acd2-0661ca81dfcf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bb968b46-6a74-497f-a847-4bd14c08bc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d781e3a-d7a3-4361-9b39-0306f4114741",
        "cursor": {
          "ref": "6cbc9b01-9923-4d40-9be1-04e3c60d01b4",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7aa90b82-520c-4c6c-95a5-88fea5a3cf1e"
        },
        "item": {
          "id": "7d781e3a-d7a3-4361-9b39-0306f4114741",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b810d3de-ec6b-4e93-9101-d3714dad224b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73307941-4b39-4072-99d7-0c12a15bbb59",
        "cursor": {
          "ref": "de0f9d21-ba0a-44b3-8059-6a68ac87a8ae",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d1f72a2d-ab2e-464c-824c-7b0df1b87f9b"
        },
        "item": {
          "id": "73307941-4b39-4072-99d7-0c12a15bbb59",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8a4623bb-c927-4715-83ea-787b71bc5ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9f865a-d709-4e88-931d-1ee3fb18f579",
        "cursor": {
          "ref": "4a2e3bba-27c3-418c-ae20-a17e46334dfd",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dc74b5e4-fa20-4247-80fe-5b1837470ab7"
        },
        "item": {
          "id": "3d9f865a-d709-4e88-931d-1ee3fb18f579",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d772c6b6-665c-4e51-9572-b1dc494835cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b935842-098f-4226-a239-f4492ddb0256",
        "cursor": {
          "ref": "94dc0b67-0bc9-42de-9c3c-2b18093b2bfc",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "31a0ab60-61e1-4a7d-b5d1-0058390a889c"
        },
        "item": {
          "id": "9b935842-098f-4226-a239-f4492ddb0256",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "51883b09-91a5-48b4-8399-b4cb52df1c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146230c5-0f15-48a3-93b0-d5421166147f",
        "cursor": {
          "ref": "da34e15d-7e2e-40dc-9b7d-177135e26b1c",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a3a0c703-eec1-4570-ae1d-a04a72fbd838"
        },
        "item": {
          "id": "146230c5-0f15-48a3-93b0-d5421166147f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7c9f88ce-7eef-4d2d-bf4c-34aec80d2f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41e75e9-d9f8-4c05-ae9e-dbb67f2b4c64",
        "cursor": {
          "ref": "024bda9d-7bd1-4af8-ae8d-23bd997aa0fb",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "030d9b25-dbb1-4204-bcf4-6a26b89f5da4"
        },
        "item": {
          "id": "e41e75e9-d9f8-4c05-ae9e-dbb67f2b4c64",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0c1dbe2b-d85a-4e5b-a9ec-d15c902d1276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f44d6eb-0b70-4871-a5a9-c8ac5d67a31e",
        "cursor": {
          "ref": "1027fa43-a403-463f-b317-02add5013ea9",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a6b729d0-aa32-45d7-8da5-4849ee3b7464"
        },
        "item": {
          "id": "3f44d6eb-0b70-4871-a5a9-c8ac5d67a31e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5af6e6af-7259-4268-833f-43c16ed57271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca4bccc-c750-4167-b9dd-2b197b4f3ab7",
        "cursor": {
          "ref": "c1e6a1e6-5268-45ce-b391-bea954238ed6",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5c91b735-c636-442e-92d2-b9ef5519ca8d"
        },
        "item": {
          "id": "aca4bccc-c750-4167-b9dd-2b197b4f3ab7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c2a3f910-c95e-4bb7-a8e9-8fb1ac121a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481afb22-a605-4157-a2e2-b9d5d6c14741",
        "cursor": {
          "ref": "e6fb2a7e-d5c1-4e18-9960-9005c022254c",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a852d45c-9860-458b-90f4-38f7d5c0e158"
        },
        "item": {
          "id": "481afb22-a605-4157-a2e2-b9d5d6c14741",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bc3cd119-fd28-4d4d-a8b2-6db5b0a4226c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57932a52-beeb-4880-9a84-6393718bb302",
        "cursor": {
          "ref": "b3175cef-6ca7-4dca-92bd-8c6d0465cc13",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a5a9d45e-205a-4496-9c3b-04368300a180"
        },
        "item": {
          "id": "57932a52-beeb-4880-9a84-6393718bb302",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "de0aa7d5-aa1d-4572-9b98-37c78a1001a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2bb229-215f-47ef-8295-2c3b493da39a",
        "cursor": {
          "ref": "273d00ad-ea04-4299-9f45-fb26ae93ba0f",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bc3bf1d8-9cde-4ad9-8cb4-ede29ccbddcb"
        },
        "item": {
          "id": "4c2bb229-215f-47ef-8295-2c3b493da39a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "348aac8a-5d46-4980-a897-3814f6fb493d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5077ec7-3c0c-4662-959c-d5a927091b17",
        "cursor": {
          "ref": "cff453ea-fc97-4d1f-8369-8797852d85dd",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "513651ad-a85e-4920-87de-c2900cdfa2a5"
        },
        "item": {
          "id": "d5077ec7-3c0c-4662-959c-d5a927091b17",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2c23753a-a121-43d1-8e95-c55d33db61bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85c230d-8d3e-42da-9a88-47d6549497c8",
        "cursor": {
          "ref": "74f237da-9f68-4723-8703-14f892e0fa3a",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d100ef83-f64a-4da2-8e48-84cba856f488"
        },
        "item": {
          "id": "a85c230d-8d3e-42da-9a88-47d6549497c8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "272566a6-cd89-4f74-a970-9e6855168521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0d981d-8ae7-4f61-9b6d-fed31e99203a",
        "cursor": {
          "ref": "af63345f-0633-40c6-ae83-ea44f4bfc9cf",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a6d74023-1e4d-4be7-a044-c1bba4a55510"
        },
        "item": {
          "id": "ab0d981d-8ae7-4f61-9b6d-fed31e99203a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2e367fb1-1332-4b1c-b6c1-65a6c3617654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86c4e61-d013-4d0a-8842-6301f0c5d728",
        "cursor": {
          "ref": "672f8ac8-c9f3-4227-b2b9-f3bf209f1a06",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "66bb9045-af35-4c12-837a-8533901e22e3"
        },
        "item": {
          "id": "c86c4e61-d013-4d0a-8842-6301f0c5d728",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "053d9fa3-92bd-4bdd-987b-b877a2386bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fb8de4-a813-4592-a136-ee4d8a3e768a",
        "cursor": {
          "ref": "3e59cd75-cc71-4e1c-ab61-3480e9f93918",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cf7405d3-64a8-4a0b-9b58-a7b832e49b9e"
        },
        "item": {
          "id": "e4fb8de4-a813-4592-a136-ee4d8a3e768a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "33b7dac8-65eb-461d-8521-39fe3134be24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b85a71-a371-4ae6-8339-0d1e2b67f40e",
        "cursor": {
          "ref": "e9aeed12-ba43-4a99-b08c-7257131d982c",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1cc5a304-0bf0-47dd-b01b-d716605d2936"
        },
        "item": {
          "id": "11b85a71-a371-4ae6-8339-0d1e2b67f40e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "de95656f-29c4-4429-b537-a38dc30272d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cfbeac-d271-4ab3-97ab-6afff6cf3659",
        "cursor": {
          "ref": "fecf551d-8be9-4bf6-aa77-01dd2ba46464",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b185feb7-0c2c-449b-9b6a-696f82ca40be"
        },
        "item": {
          "id": "e0cfbeac-d271-4ab3-97ab-6afff6cf3659",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5615cd43-844c-4984-9ecb-29e7f7fcb6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169024d0-1dff-45fa-80e7-35e6b4d5abd9",
        "cursor": {
          "ref": "0d2c862c-42cb-47f8-9e50-29ab77014ea2",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "458a64da-293d-4cd6-af4d-c46bffff5c6f"
        },
        "item": {
          "id": "169024d0-1dff-45fa-80e7-35e6b4d5abd9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1a3665c1-eb95-4e90-94d0-a3d04b295293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b67e77-2539-4061-a510-29d897df931f",
        "cursor": {
          "ref": "573413af-512f-4f2d-9129-f14a4013de65",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1b902576-836f-4c3d-b226-cc572f7609c9"
        },
        "item": {
          "id": "c2b67e77-2539-4061-a510-29d897df931f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "13698757-4eb7-47a2-b0ec-0404d201162a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da43fadf-859b-437a-9a75-5b17b5359884",
        "cursor": {
          "ref": "c51f03e4-8805-430b-b2a8-2930c7815054",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "597ed59f-17ca-4e4f-b0a5-163942fda730"
        },
        "item": {
          "id": "da43fadf-859b-437a-9a75-5b17b5359884",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b9d19a59-f13c-4228-b55f-b6feb90b5420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e74f6a8-13dc-4248-8257-04a4e64ef912",
        "cursor": {
          "ref": "ea4700bd-d33e-4344-8aff-b2422da4382d",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "33c1d76c-a1a8-4d14-b704-2698206e4966"
        },
        "item": {
          "id": "6e74f6a8-13dc-4248-8257-04a4e64ef912",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5f324e8f-0dd5-402f-a17b-415449052dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e722be-04fe-49ee-baa6-34fef1cdd8dd",
        "cursor": {
          "ref": "2d3ae4a7-82d1-4eed-a8eb-3709d8c6fc97",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "324bd6e5-b192-4e0e-a3e9-5010ea690437"
        },
        "item": {
          "id": "40e722be-04fe-49ee-baa6-34fef1cdd8dd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7c3f0c49-0e21-4565-a1db-b5c9b556f531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ce917e-93a2-4b93-ac72-2339b9b6c2f5",
        "cursor": {
          "ref": "5ff26317-11bb-497f-b329-e5a3f14d616c",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "eb20dbaf-34cc-438e-9f6c-951c746a69e4"
        },
        "item": {
          "id": "81ce917e-93a2-4b93-ac72-2339b9b6c2f5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3678be04-ac92-4950-9683-8f646e0d8804",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227a4ebb-0463-4d46-a7d9-72fed38d38f8",
        "cursor": {
          "ref": "2d54de59-29b1-41df-b9d7-3ec287eedb47",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2a05ca2e-7571-44de-9ef1-c83bc5686e2b"
        },
        "item": {
          "id": "227a4ebb-0463-4d46-a7d9-72fed38d38f8",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "386bc8c2-0f70-49d8-9e02-25229c905a40",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 403,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6149d8-8fcb-4183-88fa-eaa863e3aa4c",
        "cursor": {
          "ref": "67c0b068-2dea-432d-a128-51a810fad217",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d80cd240-4923-4aad-80af-4283d88e7047"
        },
        "item": {
          "id": "1d6149d8-8fcb-4183-88fa-eaa863e3aa4c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "70230cb0-5e04-4c26-9c1c-88ce1278a2f8",
          "status": "OK",
          "code": 200,
          "responseTime": 465,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d58fe2-dace-430a-99d1-2967aacbab11",
        "cursor": {
          "ref": "6393b560-2448-4878-a7a2-d10821be8fb7",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "66483392-db82-4ea2-ae94-1f30d8f019e7"
        },
        "item": {
          "id": "10d58fe2-dace-430a-99d1-2967aacbab11",
          "name": "credentials_verify"
        },
        "response": {
          "id": "46ab1c3b-7078-4159-bff2-831179b93a58",
          "status": "OK",
          "code": 200,
          "responseTime": 1635,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "473d107b-d8b4-414c-8454-0b0b076738fa",
        "cursor": {
          "ref": "555d5b78-d7dd-4977-8795-4b5819c58ff3",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "737e3f1c-50d4-42b6-9059-9dfbe6f5d042"
        },
        "item": {
          "id": "473d107b-d8b4-414c-8454-0b0b076738fa",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0dbf8da4-50ec-41c6-b4b7-a9ef43b423c2",
          "status": "OK",
          "code": 200,
          "responseTime": 1399,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b235b88-e358-41c5-9465-55d977b3cf01",
        "cursor": {
          "ref": "d425db62-a320-40ad-8737-4474bff2d0a1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4603e43c-e58e-4a65-b7f0-07132497f293"
        },
        "item": {
          "id": "9b235b88-e358-41c5-9465-55d977b3cf01",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fda06a23-d6dc-45e8-91d0-215d269d9de4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b235b88-e358-41c5-9465-55d977b3cf01",
        "cursor": {
          "ref": "d425db62-a320-40ad-8737-4474bff2d0a1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4603e43c-e58e-4a65-b7f0-07132497f293"
        },
        "item": {
          "id": "9b235b88-e358-41c5-9465-55d977b3cf01",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fda06a23-d6dc-45e8-91d0-215d269d9de4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b235b88-e358-41c5-9465-55d977b3cf01",
        "cursor": {
          "ref": "d425db62-a320-40ad-8737-4474bff2d0a1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4603e43c-e58e-4a65-b7f0-07132497f293"
        },
        "item": {
          "id": "9b235b88-e358-41c5-9465-55d977b3cf01",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fda06a23-d6dc-45e8-91d0-215d269d9de4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc80111-64ae-4ed1-9b25-382bb0bf57b3",
        "cursor": {
          "ref": "4ab1d476-bcc6-4e8d-bd73-7d83fa9c1a97",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8c5f8261-5782-421c-b274-68446eff37ba"
        },
        "item": {
          "id": "5fc80111-64ae-4ed1-9b25-382bb0bf57b3",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "7d524797-81f6-482c-b243-72e9a0f95d12",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 395,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fe97c9-6a04-4864-acb3-df7abc716f50",
        "cursor": {
          "ref": "6595523d-2870-4f6b-b8db-ae4ca8ce17c9",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "60e6144a-2d3e-44b8-8cbe-692c5a92acad"
        },
        "item": {
          "id": "37fe97c9-6a04-4864-acb3-df7abc716f50",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1ea6d945-e4bd-413a-ae26-f23832204558",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fe97c9-6a04-4864-acb3-df7abc716f50",
        "cursor": {
          "ref": "6595523d-2870-4f6b-b8db-ae4ca8ce17c9",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "60e6144a-2d3e-44b8-8cbe-692c5a92acad"
        },
        "item": {
          "id": "37fe97c9-6a04-4864-acb3-df7abc716f50",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1ea6d945-e4bd-413a-ae26-f23832204558",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e39b98-3008-4e83-8192-4d44c390094b",
        "cursor": {
          "ref": "322db16c-57a8-4f8f-b0ce-5c1d3e00201f",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "375c38ff-7cd4-45cf-977f-8e64f109aeec"
        },
        "item": {
          "id": "81e39b98-3008-4e83-8192-4d44c390094b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ae458c26-3d9e-447f-a768-15d4a9b875ca",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 623,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f20d6a3-4dab-49e4-9f9d-43c2236c6ff7",
        "cursor": {
          "ref": "eee6acb6-4403-4c80-950d-358bf9e65004",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2dfa96c4-a514-402d-ad1c-99fc271c0843"
        },
        "item": {
          "id": "1f20d6a3-4dab-49e4-9f9d-43c2236c6ff7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fc7c62fa-5c07-4698-a1ee-fd23f2ad8fd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f20d6a3-4dab-49e4-9f9d-43c2236c6ff7",
        "cursor": {
          "ref": "eee6acb6-4403-4c80-950d-358bf9e65004",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2dfa96c4-a514-402d-ad1c-99fc271c0843"
        },
        "item": {
          "id": "1f20d6a3-4dab-49e4-9f9d-43c2236c6ff7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fc7c62fa-5c07-4698-a1ee-fd23f2ad8fd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fd2156-2c00-4ed5-b94c-7f2a8ca6fb49",
        "cursor": {
          "ref": "ba5930da-41c3-40ba-9f48-c60e3aed6c94",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e1f88a9a-5b7b-400d-9e93-eda01f3ef2fe"
        },
        "item": {
          "id": "e1fd2156-2c00-4ed5-b94c-7f2a8ca6fb49",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e0ae4b88-0787-4834-944c-22f4195ee505",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 611,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}