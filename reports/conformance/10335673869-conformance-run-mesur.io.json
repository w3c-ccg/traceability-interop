{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e59c417d-307a-4c8d-9317-cd3f188598c1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f315c324-c301-4023-ba8b-b92deb102b1c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ec1201c-b6a1-4d7d-81d3-8185c287c90b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6ad7b6af-b9a8-437a-b20a-40655405bbb0"
                }
              }
            ]
          },
          {
            "id": "065c712f-d384-42e1-b604-c80efcee70a1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bc27a3c1-0863-4c70-8518-6d80f45d9831",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1e3e2b3c-2818-43bf-b36d-0337b1306cac"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b2cf3fcb-6bc9-4433-bc67-a7e1b1192294",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bc64e42d-7108-435b-8ad7-1748b280105e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7b3a0ee-c8d9-446c-8381-16b17bc1152b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f897242a-d9f3-451a-885c-41716745d04f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7cd5c0b-ccad-4aad-b3c6-a7cf5e9da63b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc949494-6d02-4ebe-a5c2-1e34711cc913",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "232ad86d-885d-40b2-a252-81a7e82bcebc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e088b515-fb86-4462-b3ec-7496c11212e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d55436b5-5c03-4005-b098-6bc6fb80212b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d078842e-0e0c-4b48-973d-3622f16c34ae",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "48eaba6e-4232-4db1-81da-0e49f04a1fe5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05bf66b6-c18f-470c-a5fd-ac4d4735b258",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9aff02a-6b86-4cb1-bea4-1075cb056c97"
            }
          }
        ]
      },
      {
        "id": "f5a816de-6064-4027-b32b-aac7a63ec635",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9abbd96a-62d1-461c-bc58-58932a716e59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3b7e5e2-a30f-4dc6-b303-2c525de258e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "230bd21a-4eca-4144-8c80-4fe15da60f1b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f484ab-af79-4be3-a573-5e27775d6f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0f33a8c-cc20-45b5-97d0-0cd3ec7e0ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16c55a6-4692-46a0-8bff-fb1eaf9a3783",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b18dd1c-e020-4fbf-9c26-b39edc82719f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e52a0716-3eec-4101-b63a-3ffbbbc4b0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef673402-aeb4-4abd-8368-18cf55d6730b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e93674-d913-41b3-9421-62ab404baab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cef616d-0a94-491a-9460-d8d845a62c75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f083fe5-8aa5-40fa-848c-2c540962447f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8a83621-0b39-4a85-ae1a-6db8f0434bad",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290e9763-171d-4dc0-85a4-8f731daf1f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23b2ad97-02bc-4615-8f02-072ccadfc67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c810ff5-22fe-4d9d-b8d4-a5166ce594b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8069c9-bf8d-4074-bd11-401f3c313dbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9e32f438-cc76-4114-b774-16a4e9719373",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2cf0dfee-f3c3-42da-adde-63656e7ab837",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36d21a7c-56a9-4a6b-bc41-c698a6caa00d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "36d9eb95-6fcf-4063-8272-85d4b59fafa3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1679d6ce-0540-4eff-b620-48fb9abbdd1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "681214ad-ed55-4694-bde7-3acfed7b0574"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a647c37b-e57e-4621-8dea-220873b3ef33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06edfcf0-9f62-4136-951b-e7d60319d1b7"
            }
          }
        ]
      },
      {
        "id": "5b4dc0b2-deac-46bf-b6ee-c36dc41732f2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bd88a941-2d40-4232-bcf5-4366844a1344",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2bf0772-d16e-45e2-9ee0-57a4ad2f7ae1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "482a9e7e-c661-4d79-90ca-19af322df8a6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a69d3f4-2481-4308-bc0a-5d5c4491af22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53efef7-cc50-4d73-98f0-cadedaa8a142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced6f437-0368-4948-9569-19046366d58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b61454d3-3410-4d1e-b4e5-6560f4074750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc9249f-6a47-493e-b4e7-72a775a758fc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a01f4e-d323-449f-9cdf-e68bc0c0100b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e6c912-1756-49d9-bef7-6866a659eb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba488152-3383-42d4-af95-1cbccb306e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "459087c2-6e7e-423a-9490-13c3d1d1860a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf9fa88-4356-42ec-9deb-b4ba200cec52",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acd95a4-f95b-4de1-bad3-d25025dad5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7f5bed-8ad6-4605-92ca-973d309a973b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a01dd1-ed73-498b-8233-030d1991d729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77c681e2-f06f-41fd-826b-8f93dfb4cc0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b41d6d-a4aa-41e7-900b-ba6c62d8d661",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed6e6a2-b170-4d58-bc48-94b35d744f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42d5bf3-0994-447c-b4a3-76794e2d2492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f97f7e-60c7-4ac5-90de-b299e26f0672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b275717-aafb-4619-bd4c-d3bed831aa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ef94f9-e585-4736-adc4-4e1953caaafd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5bdde8-016a-4eef-a6b5-045cca7a50a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071b2819-1947-4077-ba18-52ff7364408d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b20fbe3-d27e-4909-ba26-1744466a1806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be4a74f3-e0f0-45de-a36c-dbbd6ea7dbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d81b4f2-406d-467f-851b-b04aa42adec4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358b3a48-de32-4ed2-bcc4-c927ec9dcb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d2c9ac-0de5-4263-baae-432283235f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f67bcfa-31e6-407f-a943-0f4bff8dbfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d67a9dda-90e0-41e1-9e34-659d9964bff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f1a075-44bd-459b-83e1-22fc11456c3f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1baff3-0a43-442e-861b-5da733d8598a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02dae8aa-7636-45d6-85bd-7c637198d733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73336086-d57e-4881-ae68-2e48f0f3eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22e7c689-79fa-4585-aa49-142ed852bba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdb565d-8213-403d-b2df-3fc4d8af59bc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ea1c09-3cec-4f5e-8e2f-ab6f3bd56e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4d5356-135b-4897-8214-1f7cf9dbc119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f438ac67-b7d2-4d39-834a-8a89c1ef79a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "093a0d47-46e6-496c-a16a-5b07f959154a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005726a5-7334-4963-9e8c-489e11221e88",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65c4313-4dfc-40c0-b277-95d59fa63750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa29fd9-da8f-4743-a0db-908d5afebfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dacc97c-74b4-44ce-acc0-12186f3c1dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c080d374-c0df-4590-b487-4e3ea205d08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1292e3-ec8e-43d4-bae5-f7a333b359f5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e51ef42-1955-4ced-a525-1a5502481c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b149d53-c22b-41ca-8109-e870a7d85cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63ee7f8-00b9-4e0c-9eec-d35f7a80b114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab679234-5fe2-4366-ade6-0bbfb24e7959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb74624-5d23-4a27-98d8-52174d0ab664",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78f372c-121e-4e0d-a4a5-240375b0acc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdbda124-9f08-4bfc-91fb-65ca130991ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10e9d82-6a94-44d9-9214-ea8077737fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d082da56-a24b-4ab1-9522-70b29edcec16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a822a9f-536e-4948-812e-5eea495c42a6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e01a87-e58f-4cce-a1fc-f6a7e7abceca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaab6bdb-392d-460d-97f7-d16354d54bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7311f5c7-7578-4a85-8844-6364884bac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcbe4f28-00b5-46ae-b2b9-d9aa27b5052c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e1c0d7-c607-4652-b175-f63945732b48",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773cfa3a-cc45-4838-927d-db4efa263b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e959567-2541-4d1e-b1ef-7f246aa776d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e615bbfa-031d-434b-b0bf-7f3564ee3c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c203ac86-6029-41ea-b31a-c4967c0f6086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c94c5e-d86a-4dc8-832d-61b187f566f8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63333099-5a85-405d-ba3f-de79a2a678b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6ea4f6-b3c3-49fb-8b5c-20721b454459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa335a50-5873-456c-8c63-a4d4e5e63f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24bf46ab-61fd-43fc-9edd-de6c334aa40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50547bb2-b6a7-41ee-ba2b-56219fafe930",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74165af5-9647-490e-9b96-b73a8034e6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75971bc-b99e-4fea-a849-76bb5d32d057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99837279-f386-451a-8fec-420ca38770bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be18f5b0-e372-49a0-ac09-67bd920d9a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a38dea-c7fa-4ccf-8cdb-87ff068ef7d9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6dd3dc-251c-45a6-9408-b512b7d87f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b602b9-3dbe-416e-9659-08b9d668122f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e955b76-3975-407c-af1a-bce137a4a36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71fc75ed-53fb-486c-95f3-79f18149d6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d8edf7-4865-40ed-a504-00d23819a4db",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121d3e73-de34-45a9-b63b-879486dde189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17c81a1-c601-4e94-a875-6e4a7bbb3de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e08a80-8d07-4538-846b-51d94aff4a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aedae5fc-aebd-4981-b11a-ea4ae697dd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ce48da-7bdd-44ee-b1ee-22e001a27b3d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883bd64a-62c7-4ddf-8dab-f15ddf52040c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398528d4-8b9d-4b0a-9412-a61d63eaf0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce924d16-2aa2-41c3-81bd-7753073eebc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3287210-7f32-4b82-8b80-cd0a02e5cd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782e1818-8c41-41e2-9557-8ae91a31e688",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235231b7-3129-468d-b088-d2e632a79a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520494f6-fa01-4b4e-9119-d3548de66ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a249a2-efd1-401d-a62f-d286f282af61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e473fd-04a1-49fd-add1-b7ce563d874a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3d117e-82c9-456e-9306-bc2120ff2b95",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f897c3-7418-43d7-99ae-6a4af57d3547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7199bea1-a0d3-4b39-b606-1cd8009c44e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c482a8-b2c9-4d99-9e0d-ce8185fb5703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4299dbde-506e-42f9-a773-595b93ee71f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c6f75a-38b6-435c-8477-d168d26acad9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f66abc-a82b-4de8-aa4c-7eda5445de73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e9f19a-cd19-498a-89bf-2f3ff7b8f818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99692dd9-0634-408f-ae6e-3eb8207bbf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69b76a6f-49e0-469b-bda9-bc6bba33ed00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db15fe08-773a-47be-bf45-e71311b9fc96",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccd773f-ab43-4521-b589-a81e88b6401a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea03510-078d-48bd-80ce-6fed9e378e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88afb734-7cd8-4bbf-928c-184860f39e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47a0655f-94f5-45ae-8f9c-ae322c7de547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95edc2f-6679-4133-b78c-01763e37ebfb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b396dbe-755d-4c16-ba44-8c19bf26fbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fbdf75-2376-4b00-8d8f-dbfd2477884a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1ffabb-8187-4a07-99c9-963c7c8bcdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4034fed6-451c-4eab-92f1-8993801ac592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d5992a-1bd8-414b-b5b6-eb4f1deb4c09",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc42a69c-271f-4377-8645-9c18e0ff3fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f76bc84-d3b6-4849-97cd-55fd9a6de5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4e1bb5-45ba-4924-88a9-0cbf3f94113e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0848915a-a7bd-4aa0-8ca8-696b17a67156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7227a19c-72f1-472c-8805-e47d7585d9bd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2c5d86-6aff-4e28-90ce-897325e6dd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f28928-1cec-4948-85e1-fc06e30b17e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3240b21-d146-4388-8690-a0381d4cf8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40e2d90f-4ce5-4fec-972e-8ee449d11c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f90d128-e896-4395-af3b-35d8e8a6664c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104dbc33-e13c-4e5f-af14-b72411d58e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfe59d3-c4f6-4d55-a90e-2ea7741afb11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bbeac2-06d4-4357-be6c-001e59107c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2111bd-35f6-4546-a2dc-38084ae89e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4ef8ab-30ef-499e-b65f-8ec776068350",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc909da-92c0-4446-8e85-e16e06bea78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861c3e8f-0cbf-4e04-b718-a4ef75803697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf0b4f7-d37b-44f8-8187-8d49ebd6b868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb08881-ae7c-40d5-8262-196359c910d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ddc8f0-994f-4afd-a347-740ab9e6087f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0ecccc-a882-4823-a969-503a736f1957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe29990e-19ff-42ad-9739-67396a055004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6531da8c-3951-44b0-8d0a-04b87e2d4e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0d10f6-4644-4544-9a2e-d11630475cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be211ff4-e7ca-42f3-ac37-96360727efac",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0030b1-7452-48c8-a87d-d2af8271268f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9082f75-ae8e-44f2-a8f2-df765c0d2f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d588e48a-1983-465b-aa82-1b1ade7fac9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfc98b9-8d9e-4040-b6f3-24687a5d68f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dc0cbc-d658-45a6-907d-2e056746b2f0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd38bbf-15a1-4302-af66-bbf2ee0d8930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963160e6-f2e1-4c4d-9fbc-53918ade6c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4b5dfa-1f0e-447c-b783-42f9766afd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2159740-264e-40d6-aac8-36bd192465c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8017426e-35c1-4998-ac1c-8a5e68befd49",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63dce7f-4457-4475-9039-495351cb868f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022eee68-d9d1-476f-a7dc-ad2460c65f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c557162-4963-4589-915b-a3bf18304040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62edd0ff-4df9-4101-85e8-af8f361a01f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e338608-6194-477f-8d18-92d21e49853c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94eefb76-e77d-4328-9bc5-57525e01b620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f08796f-6b93-4d16-a7d7-3f2b5a289cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5f46aa-f317-49f4-975f-2d37589b605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2120e553-870a-47d7-aedd-069204094d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0234a76d-e656-4c48-a7d3-4dfd0783fba5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0d2e67-e3ad-4145-9d04-c8bce7ca05af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cded335e-edfd-4869-91be-54cd35455d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aba8a9d-40d2-48aa-8cc0-947a0ec89626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aad19c2d-7955-4b0e-a991-b8daadd9fcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082de7d2-53e5-4f6f-bbd3-099e98429663",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77ace1b-4df6-4b6f-bb8a-6938a57144c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a91bca-2ac2-4860-bc47-2ab0fba1397f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdad538-a600-4c52-ac88-7c1d9ba7302e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72072bd9-9610-45ba-8a15-a36864f6b97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8c0efd-7916-4695-a2e9-c0cfd1a9d9a3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375cfe43-a63c-4dc6-a29d-2b84fcc4d29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296dfaba-1a0f-4949-ac6d-84a5c5de6f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbef507-7832-4dcd-8375-f978b0c4038e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b92ec639-5485-43e2-91b9-901eea7e3598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2891cb7e-09f3-477d-b903-99348bf99d54",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00ee732-872b-4d58-afeb-96cdc991e6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52692c57-d231-437e-9ed0-04fbceade436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8497ff-0694-4cc9-8553-ab591b113b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fec040bb-2890-40e9-a026-3f43d2527dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fd3303-45a0-4b7f-8729-d43acb335d2f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee9ef26-641d-43c9-950a-aebc4916e1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bbded1-4a42-4918-a6e6-6bcbe8381e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b20a30-e7a3-483c-befc-178a252641e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0028bf38-57b9-4ef8-adb7-467a48402513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2779a97f-596c-47b9-a4c1-e624cbbde91c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b0b0cb-e144-48f4-94fd-d67a183833aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0915e0e7-47d4-4459-817c-512754877e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75fac30-77ff-4760-bcd5-423441b72094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d4ef2a-c76f-4cb0-831a-e5f879450027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aced1a7c-b3dc-4768-82c0-542ac696f98f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4d1e67-1411-4171-b41d-8740b63eb6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00763ba4-dd17-47ab-a7a6-9ef6a02f5743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d8431d-0406-457a-87b2-30280e6a8dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a503406e-6e7d-4aed-af2c-2b3c94f85f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d4ba84-6b36-4eb3-a815-1b67cb81e60f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e5679d-a42c-4acd-82b7-daa45be0f468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc99fe1-dac6-455b-8bc1-d66605b20012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a150e521-519a-43a4-b905-5b52e67f059f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "02b7e1aa-4e0a-4b37-87f4-baa2f90ccbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af3dcd3-91d0-45fc-82c0-26c5449bee11",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e251d2-4d47-4f59-9b60-e47c66efe0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25694585-5dba-4af2-a1e7-faf965c15831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50103d93-a513-422c-a916-51dc9edf11ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c39c504-29f9-432f-beab-09125165239c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f393fcc-5c2d-4a70-a526-208ef4e9948a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b51e46-c594-45ac-8d29-b4037faba2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d184a3-d2fb-4ac1-8173-63e0ca66baf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cfa335-5572-4cfa-850c-4e0cf6a36782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c67655d5-d837-41c4-a9d9-41ba49e8c17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a34629-11e0-4f53-bd3d-355c1f674a86",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be4c3ee-a7b0-410f-9489-cd587a80f26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9e0172-0550-4376-afd0-3465cdff42a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9bb9be-2876-4b3c-b17d-df835470fc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a8e959-f33b-4a19-97b7-a028cb0ee5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d3e6ba-7091-4aa8-9f08-74e412711a80",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db38f5d-028e-457a-9dd2-d163f4d041ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfadb31-7322-46f0-81a8-3cf553037da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5caf83a0-384f-4bf2-b000-57963e025fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffd512e-86d5-4177-949a-59d59ea851fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19edd57d-7329-41f8-bb5a-41a6a37c27fe",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f55385b-3b51-47d3-a144-1575e76783c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779c3f75-2b7d-4ec9-a0ba-564735e59ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da8c453-7659-4bcd-b5b3-64ff1a49a270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7bbcbc-3808-4c0e-a192-7581d5a1b0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a159597-1ffb-4881-a051-2f38acfa6760",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f544045-4c57-4779-8220-8f12cc68cf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c4b844-4106-4eca-8787-90bd245be62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcef111-a3ac-44ac-8e08-c460fc3277df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0a7ac7-ed7e-4cc6-b100-4f50af2734c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ebcba6-cbe4-4323-adb1-c9f7ae4ab1a1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468a01a1-6f1e-44ba-8d13-6526daacac87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684b6d4a-68f3-435b-a778-6a6a4707d988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9140a334-7038-429e-8192-1d03d3292ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dfebe3-fc57-4684-a53b-933e14120e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78f2671-8156-4cb0-bd8f-c851f473089a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77ee989-b014-4c7f-b432-070bdec93b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde75127-503b-43ee-ac48-06aaf2d408ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9ef020-5ab4-48de-81fb-a6d88bac6be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23dcbfee-c103-411d-bbc5-725c3316db86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5555a7b9-5020-4f5d-9f1e-6bde08fbc7d1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9150db4-c301-4416-9e84-86add913e440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff925c24-49b6-4df1-8b63-376a9c5196a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b20841-00db-47f4-9bf8-831aa1c039bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b350e655-c811-42ab-a76e-52b50350646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0f2a29-cc9a-43e1-9d7e-00281d014f16",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bc6486-db25-4088-88ae-f09246dd8047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf487c0-79d4-41a3-a1e6-2aa555a24b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bd8ee3-9e29-43ed-9841-326a7c8184a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3401aa77-95ff-43b2-8231-94dfd9d49fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c8ce58-2d23-4fde-b30b-dc62b0461dc0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286e8192-448f-4a44-b7e7-953358d12faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2cb3a0-af6f-4a0d-9b7f-da8a183c67e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b989cca8-1363-4bf8-a158-b26533de163b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f84ba3cf-721c-4eea-9568-c18bcd811a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2ab3e9-d318-4fdb-9b9d-259fc8aece61",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3248e3-68b3-484d-b898-09cb0f33692a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df26a1bb-63b4-4046-a771-a4f3ce15da1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1c1275-6988-4a6e-8c5a-60f2c97e5b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5122a4ef-5dfa-45ee-8f87-455084a8d0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bd6c01-7bf1-4bbf-8e4e-9c80d17f0acb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2415e83c-7b36-4229-8cbe-4055302fa38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23416e3-63ae-46b2-a082-b5ac51c7ff2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa79ef8-38d5-4038-b650-acd695bd4458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dcd9512-64a8-4ee0-ab2a-b1c29038d13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4809882-03d0-43f3-867c-4536a6d6bd3f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a56c585-b249-4ccc-9990-55f4eb3b40f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ccc930-a8fd-4bc1-86ec-fedbb4847d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cbf4b5-9d5b-4521-9e3f-87f11b7b7805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1822e2-4bed-474c-97e7-dfbcd8815f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed88c85-cbc2-41a9-8f47-c349306d6a63",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f29fac0-743a-43b6-a440-a113ed908f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9299143-2b19-404d-8789-e95ea555b9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53f0e81-d4c9-4a21-925c-6b1ea290c033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2659e65e-513f-4298-8a21-98c34c5119a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee34e3e-14d2-4738-bd81-c1d2ffa4713c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031ac5a0-21b6-4ab7-88ed-f9ddc1e3f74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc60320-8934-40a0-8524-7168636f1c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c08133-43e0-4811-a456-539a1f64d695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "80bade2a-7dda-4ae0-8699-9da38a0ba716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52060681-a136-4274-a4fa-8c6441859642",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdcb901-3308-4895-a4b4-8bd4bad30195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2133a36a-494f-4870-99aa-9c7b11468e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abd5246-759e-4800-8a2b-44db73a77cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6d2f1a-2b0e-495c-a554-cf90f832fe5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f23e77-1962-49f1-93a1-1b9f5b9999e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9766275b-e300-4d28-a2a1-7af1b9c4194f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb679a51-8d71-4da1-a660-f4afcda73339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f32094-44ee-4ad6-b125-50a4356203c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83a8b331-405a-4129-a64e-0844d6892d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1625491a-ba6a-44df-8777-b24330a5ad5a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806afcbe-9644-4bbc-bbf3-3ee45fa3c2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2575ea30-f80e-4bdf-ada1-2722b193bf72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa4a27b-70b4-4bd0-a9f0-cac4f1738c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed4ee82-da98-4389-978d-d9dc9803d63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85e1666-1795-4919-a757-5ca16bf2e6e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862b7671-4282-4387-8276-9ab8617f21e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134114e5-4f1c-42d3-ad30-3ffdc1513679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4a29b9-041f-4a05-8a29-256e9567f8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2e6823-766e-4f02-8b14-7bfab4ad4266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3048e44a-c169-4ff1-ab0a-55eb84040441",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f899b9-71bf-4559-9dbd-130f92299bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08a1c6c-9db3-47d7-969a-85f02601a39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94008b81-b64f-43b5-a24c-888837973ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "db0ca21e-6a98-4a38-a68e-60bd2b02c40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248777a3-762a-4a1c-b259-ea1c4ed2ebd3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11be2e59-3bbd-4463-a60f-3d0bb0672162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4e94f2-a93a-4125-afac-6f5cebfeae29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5f58d5-38ac-4cd6-8871-a30730b7978f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff194ee8-ba79-447a-85f4-cc11c44cca9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731c5a4a-a9b6-4946-a248-910ff3739dd7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24ba5d8-1c98-4ef0-8f4f-cc7c239cce75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d58e39-3e51-457d-9cc1-274430e9e349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae66f465-fb8a-4083-bc68-dfd25bff2e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed6ed6f-d67a-4887-8ce5-08b82728eeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb471b8d-51c1-4e16-8935-47ca8da44f77",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950e0212-c631-4480-bd88-2ab0c914bf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4598e7-0b10-4ce9-84b0-500395cd40e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6599da-8dd0-4ef4-85b2-76e537fd400b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da1cafb6-2dc0-4268-b676-15aa9bc5c8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fff450-7ccb-48e3-8c63-87dbe176987c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dce1799-c94b-4a4f-89db-cadfce5aaf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e39057e-31f0-4d1f-b51e-278924881e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb801405-2cd4-4f2a-b30b-a15918bb6d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5852ab91-623e-4e81-bc74-71df0fd99df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67254040-035b-4398-be75-071bb3008a40",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70507185-fb43-4bd5-87cd-d2278564db55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f21b48-3d7f-4b06-9d3c-e818a580113d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225b15a1-34d5-4a08-b0fe-5e5908194663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf8fd17-d6c8-4ac1-958a-018b77d5204a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455bb606-be94-4d46-a571-7b5ff0c3d4e4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97b9c86-c381-4366-bda1-76d1df10d8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e226334f-f0c6-45bf-b31d-362c338d0a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745efa2a-dc65-49ef-a21a-67c7fe9bb501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf29e7c4-fe34-40c8-b487-dd506f5a91d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad02580-d89b-4bc1-b3e7-1291fe4e29cc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc50557d-e116-4cbb-a0af-c67a641284ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3082fc1-f6a7-4673-bec1-6dee3746ebf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "363c913a-afca-4aca-a33c-8811bfd99f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e466e9a-0dff-4196-890b-790bc630716b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4251ebe6-e161-4a49-b44e-b9e6f4009c1f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c96a876-b37b-4c2c-a1b1-2af71b00e011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f57c91-a955-480e-b648-f0fdcf2dde2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2dad3c2-0c32-4522-a113-e3a1b26d282c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2834882f-214c-4c35-878c-da2b2bb36c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729b3f5e-4867-43b8-8f82-06e4c3f69194",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b862ec6-5f9a-46df-9c6c-988e3af7040e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ca2d35-2865-416d-aca1-405e6a68c6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c07044b-d78e-4b8c-a267-02355e1e66de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02b04ebd-7dce-4521-8957-35690006bc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd2dd1c-b528-4ad8-864d-58d18d5dd423",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a957eb-8fbd-4c74-b981-043d88c92039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0510e67c-aea8-4636-8784-8aa2ff8df631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62eb6327-e2b9-4082-ae45-f904758853ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c271887-041b-4799-861e-6a3d069d3c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ba5cf2-53ed-4848-a8a8-347b458669af",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21ef814-d532-411a-b3ec-27e940f2de81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927083f3-cb93-4891-8d26-c72709321faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230aa273-565c-4ecd-b8d3-6be34eb5e303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec271ab-fbb5-43ca-9306-fd760b9fd2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebbc5f2-cb16-4f8f-a2d7-5bd23dea8338",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e728428-bd77-41f6-8e42-b9812a5daf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3118c98a-6b11-4f28-9cb4-3657bc64854e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de63da6c-03eb-4f2f-bd33-a60df8e6564f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e087e9-328b-4441-95ab-6ce8e0f8b024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a4f047-f1e0-4733-be63-8fca3f066a11",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e2bbc4-122c-4269-ac70-274e3e9b3082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f738123f-52fc-4c13-97bf-889089cf48e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6581e1b-e263-4d70-8782-a625614db516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ee987c-38fe-48f1-b586-f933d9913e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c76fbc-00ec-4bf8-8cb7-1aa4260923d4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28145f5e-3051-456a-96e2-983dedf5edef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a938f0a9-fd8e-47c9-8a0b-0e707ad65235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098ab65f-d3e0-47ef-b7db-aa10581e4318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c44bfb-ade8-4417-ae6e-1ee65c754997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673e0755-9465-4bfd-996f-12ef79aa2db3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abc1916-d2fc-48ae-8c94-a3ce911a8d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f83df7-016c-4171-b3d6-d7951ad0637e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ea7cbe-c9ac-4a9e-bad2-e479054e49f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e61a6289-8d87-4b86-a770-a496bf7d8e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3cc97e-0aa3-4859-92fb-dc71ca5236cd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86967b5-744a-4d71-bda1-41aa7f02ba8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefffe64-d74b-49e4-a8c7-bda2cccf61b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e8fd1f-736c-47bb-9c43-a6942ecd4ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1e7322-98ce-49b5-9505-11215d17c047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2fe9fe-264d-4149-8853-3949dc9e9e59",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029cc1bd-b0ca-4386-9d4c-df52689c715e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c69eae4-61d6-4c12-b1c7-386ec063e6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2f0345-9f97-4b43-afd6-a50d230fb4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5073fd16-c527-4b49-8384-0332b54475ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd99b8e-03b6-46cd-bca9-cec83b19ae8a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316b9980-0058-4a6e-acac-0594a25b2877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6734ab9-945a-4ca5-8bc1-a246a5d25fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5a3f6b-c259-499e-ba7a-cba395bda810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de67e2e0-e1ce-402c-b3de-0ed74aab67d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7866a92-329b-4eb9-bcc8-aeb53592b122",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff4de18-e5e4-4346-b970-1dce0be8a27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03672db6-d0a9-4bc6-b16b-dbf07f568a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabfc5dd-c178-4b20-a5ee-08adabeb8d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb09940-3d25-472f-a0ab-af0e6d584047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b34242b-281a-41d9-8040-1c88c6dc8989",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2908fde6-1307-40e7-82da-e8747bd0c1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f525862-5136-4dea-bb53-03d0ac92bc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c882d2b-9c6e-4b25-9355-6fdbec9db536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8beb1dc-9761-4d3c-b760-1b18b58219fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cf2620-7b72-4b20-8395-8f325a11c95f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e151f5-8e4e-45b6-93e0-a6bec261af42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e8a1d6-d6ee-41a2-b19e-01d4b047c7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5231bb2d-fdeb-456c-8443-c1764809076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07727323-c17a-4c8b-a20a-9d2796f74022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a57651-74bd-4c43-b99d-857135c1a2c5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2106903b-93a1-4706-9e57-2b1a202c8012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5ba883-5af5-4e74-a593-cb9f1414099a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae82470a-1e01-45cc-9bbd-e2f53630105f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d60e08-932d-42fc-856d-a9944fb898df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3224cfdd-1e73-440f-a0d4-4d8fc80ffabe",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1568726-9721-44be-bc33-7d4f38e06c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef8660d-8f42-4d5f-b46e-b35a04340214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93370be-b293-4fd2-b0f5-ce6a0f783ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ceada2c-d697-4579-babb-dd4999e19360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f439c037-f6e4-47b6-b07f-e6507ab29cbb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5b37e3-a934-4eb2-84b6-7e1e065e2038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a36ab33-6070-44ce-82ee-04a2fcd92f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758285a4-8af2-4ac9-8a44-de8e97142880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "952adc4e-794d-4090-abd9-d0a5690272ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540b6dab-203c-4905-88e8-d9b51d821516",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3d6d90-3b38-4db3-b57c-4cdb1d3de532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de51efd-4769-4706-88d2-86cbd467acc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d29c583-57cf-4bdc-b3bd-2226e94191bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc4a36c-1062-47a4-8a8f-6b44338dca9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2ddc20-ee54-4dd6-9adf-1ea6dbfc463c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba4a640-7748-464d-97b8-9db5603483b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154aaf8a-0e3a-4bd3-8930-67eac8ebcce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d74fc8b-8141-4809-901e-37e95007393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6b81f8-6a64-41d6-aef1-48267b757e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75614d8-827c-4362-9138-6f030d76095b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361d4764-ce2b-4b4d-9496-f0046c39fa6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b521558-314b-4f59-a8bd-7a29891affb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134db4c0-0192-4c04-8c3e-3cebbae13553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4273014f-5cc9-4d85-b6c2-081bbdd3dc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5215b4cf-3f07-4360-86f4-1c4cbe55a68f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df302490-6c76-4503-8267-05698ca4e0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b282ae38-2920-4b25-a8a8-ac267c6338bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb34b49-8e41-466d-bf96-c2950f823096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "880b0060-a818-4efe-a0ca-31f6c0a2e316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349d9754-8517-47e7-bce6-d61ecb2b8248",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5622bb-87ea-41fe-8f77-49a3d10aeae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db10e23-a697-4a3c-8015-5635d70129fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607c7462-8234-4209-a13c-0766ced8eabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5453e2a-fafe-4306-b0e5-81fb64e820a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd6692e-9150-4fe3-a487-dce5db1aa775",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b9682d-78dc-4ca6-b0d5-8f83b8244b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ea5ad7-1c97-4c19-a264-3ce584df96e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc3395a-b052-4ca7-8fae-6f3929877f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ddb96f-80cc-4115-90a6-3b652c36d8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b49f7a3-408e-49ac-baab-6cebec821895",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1b22e7-20fd-4f54-b5c6-97774a0c1bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "53b90445-098d-4561-b469-59733a451639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d831e9d8-0fcc-411c-a759-1bdee9e8ee9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9257597e-3fc2-4a3d-93dd-d9e1e0c37762"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2cec7db-66ad-4bfe-9b32-be094cdb9dfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f611aef-1c95-4b62-9395-1034640d1e93",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f768bc16-a119-463e-8819-eef285ad5b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94ad9205-9a49-4038-ad7d-908d6347f307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5de165-5037-4498-bb51-95dbb5693dc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c35f64e3-90e9-491a-881a-38a2efe4efcc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40aee329-1f03-4012-a731-1429f4968f8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "054aeb78-dc4e-46bd-90a3-ea027dfb41c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39e7629f-c119-4055-8571-ece21b4e6059",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cbaeb02-4499-46ca-95b5-452d1d08fb72"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "807cfbab-e1ff-4e48-af50-d5818fe5c466",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3f89ad3e-34fe-446e-ab55-ec1556bccbac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "75a3714e-c30d-4b23-9e82-0f48f65bfed3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90b3bab6-9266-4907-98fa-2908f811e6ab"
                }
              }
            ]
          },
          {
            "id": "38ec84bb-dbab-4bc6-8f07-96f5a8e961bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0520ec59-3917-4037-bb21-fd7603adc6f1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7ee2f1f6-8b6b-48fa-aa6a-5f1e456bdee2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e83ecf-53f7-4924-bea2-73c8cbac8887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "90dcd472-202f-469e-a97a-afc2b262c4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0589ed5-5ed9-4414-97c5-50659136127e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f36bcd0-a11d-4ea1-ae49-3aa38a19b535"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e2fc6f4-9a4a-4a39-ba54-8756dc314583",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb82b25b-28cb-49c2-bf73-51f90a17e215",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca878da0-9e56-4ace-bb20-da2b9b073f52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00290007-9512-447b-a534-2f09850a4f0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60d01aee-959c-4bf7-8f77-0adc6d646fa1"
                    }
                  }
                ]
              },
              {
                "id": "d7516a54-6995-4052-aea0-2a998553af23",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2daede1-8a89-4708-8d57-593d230591f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac818447-64d1-49b4-957c-7f73dfb8c45b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59c899a2-5212-4177-9ceb-8f76a3735647",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "13492f5a-f3a5-4529-b588-d9ba9f7891c8"
                    }
                  }
                ]
              },
              {
                "id": "830b4b2b-23cf-499c-b304-be0309bf60d9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "100abde5-b110-456b-b21c-4df852377f01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c23df57-412a-4129-be89-14fe34c19f27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d07bf4b0-9f08-41c2-90f5-ac2065f76662",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d34b3f75-9fcd-46c5-b224-4b8467626bfe"
                    }
                  }
                ]
              },
              {
                "id": "c7cfca0b-2da3-40b8-8316-27ff7fd8cff8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e32848fd-08a7-423a-a44b-f4e4b2460aa9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2b7ba94-90e2-4aff-85d2-111650bba53b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0050559a-5010-420a-9ebe-967cc9f487ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6edd3f57-b1d0-40ba-bf75-370c0a2863f7"
                    }
                  }
                ]
              },
              {
                "id": "f10adc06-c2c0-4bbc-9a05-b17c8bc92d39",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0198736-1493-4a88-afb9-55784ad62fb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53ba5987-d840-4e72-ba5d-8bdb7c643b82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38c3457f-47f6-432f-963b-801dd8bf8687",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e53f528b-fb77-40b0-bce7-92f9a7a49e8d"
                    }
                  }
                ]
              },
              {
                "id": "33bb2df1-2be2-4411-8843-d845b8f1b6f4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1291d559-ba9e-4f05-85c1-c2ed51d56118",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b46a5aac-c0c8-4490-af27-82ca78f225de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b5d778a-9c8f-451a-bb67-fbce180174ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c1eecb5-ce6f-413f-9407-7367ed266d7e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76fc809a-26c3-4c44-80a6-620518a844fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0675baab-62a8-495f-9f59-0c29d0df3df6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37ea6c34-40ee-48ef-9011-7df4d7464437",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3b0ec2f-ac18-41cb-8028-7b724c611606"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a510665-c120-42b5-a96b-c7e2e0e328af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f28cac38-221f-4c43-bfb0-f4322a4b69dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2cde737-376a-452e-8e7d-c5bac36b3118",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff8b93cb-878e-476e-bd73-8aff19f8ae4b"
            }
          }
        ]
      },
      {
        "id": "4006d265-17e8-4a51-87ff-82d672008fb0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5f7c939b-1cca-4c64-a976-a7011bc75ac2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0893ac89-c2e8-4c37-977a-c6ff4c42cb6b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9cd769bf-358d-437d-b799-7f080da4d2db",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c239d7b6-357e-4eeb-b5b9-61528b135aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03967f15-96d9-4ddc-90f5-40160a1a98ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94a4e58-31f2-4f6b-826a-3931d5295d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e8d66f-6c6b-4b9e-9c53-34a8765c61ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b4f903-6cf2-49b7-b8eb-21613965f16d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e24c8d-425f-4642-aa77-8fd9518f0126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dfab80-1ffa-4511-9497-f96d7808c535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791079e0-41b0-49e3-ac1a-b56521327e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ae4e7d-2de7-4319-8b5d-28a800357e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050eb55e-75da-4b82-bcd3-4c930ce423cf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e05285-a275-4f11-8c7e-24d53071bd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c5cdf0-b8a8-4be7-b7d2-78c44a450374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a500cbd-8a8d-4f2c-a2c5-f94a67387b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "314e58cc-09fe-4068-9ef6-e1fc85391cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f91c96f-c8e7-40ee-a134-e4057e729d7c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f4349f-7e20-4b15-b05d-b3787adb6742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6181473c-24e6-4502-85b7-4fe4d521609e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71234032-d3d7-410f-b078-bcbd17194862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc12562-c40a-4709-9faa-4cb5ef4bc50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed43a45-a813-438d-af95-5d9a23962cbd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad178d28-9fa2-4556-834b-8d15b1ca953e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37365afe-879b-42c8-ae37-708c71022ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be9abce-5b68-4550-87d9-1372003d6cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1cf5df-9bd8-47e4-902e-cec33a69232d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a55a35-b045-498d-bb96-e8252543bee1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4398d174-dc7a-4d77-9062-47f9803ce6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5fdb684-8174-4f97-8bb2-c52b6336aced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b71d78b-b57a-43ae-84d2-20e0d066b09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa7cc88e-0a97-481c-b698-fda89b43582b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b5821a-0243-4f5f-8d3f-29e1996ad73b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731e2e76-7ec0-4616-aa6d-ca70b164f8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ab07aa-5a32-4b24-8d1e-a91e184af472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1f6e40-e12e-48f7-b2fa-39260afe2cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3cc100d-fe88-4a6d-a3a4-dd7b2698dc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff76d73-db6e-4f6c-8463-09c87fffe349",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114c7fd0-d339-4758-9b4c-3852b504ab8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491b4542-cf92-4961-b590-332bc14b2f89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7750e5-3320-42ae-8eb1-7259e0243fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f5efbb-f6f0-48a7-9c81-4df47f3ffb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbce0c4-b9b5-42e0-a14c-9be37897f687",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cc7615-918c-4bb2-840d-af012deef3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e185e1-6bd0-436f-aef2-0687377e716a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2f0c2f-3775-4d6c-a58f-69e8d19c8ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca074f3-4e44-4cd2-9199-718915c2b49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5c5311-4670-484a-83db-c9eda14385cc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef032b2-057e-4342-b0f8-61af3e2ee5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970b01a9-8cdf-4675-8ccc-b386f3bc836e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ca9968-32b0-4cca-9e99-cee34d65970c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd0ab12-9cef-4389-a4a0-a6bbdacc4001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f32eca-3b67-4426-9dab-2951f1b838e2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eba897c-ede4-4db2-9025-9a6ebd1f6f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02da0005-3dfe-455a-a3f1-ef950b09a228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a37275-fc48-4bf5-8a7d-4abd76b38dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8908783b-db1b-4d40-aeb8-7fd35c03c015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5709153-ca5b-468b-b4bb-338ef329d857",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6d1dfa-03ee-4ac5-bd24-4eabf9a43a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad98c091-0b63-46a3-bc9c-06bb9ba69bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc64baeb-909b-42d8-9eb8-2f622758fb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef8a4cd-4a11-469c-95d7-8f484138f1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293f8a00-5eb1-4f45-b9a2-bd39640bd941",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38801393-014b-4de4-8a9d-8e5d64847758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ad0343-0fbd-46c9-a49b-76ef670bfa0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2b58bf-1ca2-43b9-97c4-b7f4f9f6f565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca7ca17-51fa-406d-ba4a-0043a2e302bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cca9667-d0fb-429e-8bbf-afe4ea4adc83",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0507ddbf-00d6-4592-8e36-16e939f88a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15351fc1-89ea-449e-82d2-2c1311206bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47329818-2fe5-4644-8ed3-57ef7d83994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eedc329b-7310-4d20-a92d-b9874f694534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebefcc0d-4a85-48b9-bfb8-4140d82e8102",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef806f51-c8b1-49e8-81a2-fe2b7adb2076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d5430d-069a-441f-be6c-c0e45335d037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a2ee76-7c4c-4149-96b4-58afb7df2bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1d0e28-af4e-44e3-bb89-360854b332b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a5ecb1-6e94-4e71-b252-f3921fd7eb62",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4881d150-e7e2-40a7-a355-3f37a2d40d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf45916-4f31-44d6-934a-11034fb19f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35add8e3-ee86-4a8a-9420-a953366054a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "729fd7c7-f0dc-4f45-a794-5f51abe6bb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17e9e10-d221-44a9-89cb-dcb2b924e019",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fd643f-00cf-4fd6-9578-dc5b9f8094f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4dd212d-3470-457e-afde-565485a2b8fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68eeaae-58f9-4e29-a153-dd9b2d27aa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8d4db6-daea-4f33-9cf2-5b0439f6ccf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e35ba79-7cca-4e27-984e-c2c3ffed030d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89aa72d2-d7ff-4078-9b97-b1d4168040c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8243707a-de18-4ae5-9591-b33497099dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676f5704-3f19-4ff5-899a-cdd0163dc703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91857f70-80c2-4d3a-a584-b1ab06390c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91136173-411d-46d7-8cae-6293df089dd6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d422f4e-8dda-4f71-a48b-0bf7c8ca36f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24f73bb-ed0b-4080-a735-f8643258cbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc5f022-2282-4040-b0e4-c6735cc8973e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce17467-1962-4e7e-873d-612db7a7f300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddcc0b9-8f9a-4b42-be03-27d7a6657658",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e841fc5f-d4a7-44be-befe-9d6ab47e69c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f200b62-9884-44eb-9c59-e308deed5206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196cc333-bde6-43c9-8b35-4ce9b29fa174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f64891-477b-4f5a-8256-ddfe6cc06fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988575e9-f51f-4331-af99-59aa7fb74b0f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0be4f6-9314-4182-a568-0ffd495ce747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b96927c-b1f1-4afb-874e-5ef2c4026513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fbc498-cecd-41a4-987f-e44dd2d5e932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14efdc84-feac-4203-a39e-b8f8b964b689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20aef5f-e331-4404-b2dd-b77199ea8827",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40c7719-6bb6-44cb-b356-dd73f1f0d4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb535810-8313-4cab-a526-2f537a08c133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba81f3cf-33d9-4ea0-8a4b-ab6ce5bc286c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398fd2e0-59ee-4139-a2d7-b0a3b57fdab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d86520-d1ad-49d5-b1c0-fcbf3ae9c5ce",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642e9c18-e3d1-42b2-be09-8cebf885d6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9351b6d2-1228-45ab-93ec-9d517d776f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6854f11a-b6a1-484c-ac70-e4aba539b5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b179c8a-5b3e-45ea-a860-89a6b01d6da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bcb6eb-9566-4d1e-b3ce-65cffeda7a74",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05784ca7-405c-4f95-a0cb-4a26992759e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acb478c-5e66-41c6-be27-3e951720f81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d99eac-e965-4887-9138-d00efd654a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91e5f73d-7781-4cb6-b9b8-87d258224ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386b93d8-4875-4b24-b20e-fc5354b69df1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac293ac-2ad6-445a-9b80-56e69ed13938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25aaf721-8ab2-432a-b7ea-4e26dbe381b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e808772-cd73-4a1e-ad75-5f5349fd7a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2996cce0-7492-4cab-b806-3633556c2a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095bb771-29db-46ee-a03d-6551bf21f804",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbadc36-0dc9-4a7e-90f3-2c0484a06114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e70de20-89a8-4a90-9cb3-0d90a7c21276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ade2f6-d8b5-4fb9-b0a7-ef5480e86820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd43ba38-f63a-4e5f-9f92-836f0a48697b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164429b4-38e4-4c02-97ab-de582f50993c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85a6eb7-614a-40f5-9bb0-2613a768d887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd3abf7-4abe-4b28-9fa4-3d3e60bbf23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfbf4d3-9300-48eb-aed7-62fe0dd72e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "757e1489-7962-4581-a19b-db4595b7ff07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ead4e8-880c-4209-86ee-99c24c6af49c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d259f1-55e0-4e5b-9c6b-6afbd5be9311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba4d918-00e6-44bc-83d1-a75d2cbff4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e7f3a8-2d31-4fc5-a13c-63f611b36c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4076f547-3a23-4292-810c-63a3c2d7cad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64537615-1fb9-4587-984b-a5e19e8ee055",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44320e79-ffa5-4457-a868-2d097adb0af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8edf69-0c0f-47b3-9d57-1a9eb67c8b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e91df82-79ee-4463-bd32-6ad681d0fd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32f37d14-c55e-41ec-80e7-a5645b437668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90101d6d-cd58-4760-b20a-d23bb213c701",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc7ea15-38a9-424c-999b-e310f59a62b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0fe871-090d-47f5-a571-fce6cc150c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d6990f-9c9c-40a1-aeec-0f143f51a576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "390889b9-f762-4d17-8ccf-c6df2efc4f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9df872a-9676-4917-af38-4c1078d5f561",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1123e8-f907-4d4a-baf4-8f36e11197e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8806699-595b-4c10-9ecb-43f488fe3a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce29502-ef97-4b99-a1c4-a2ec1a3bf30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ee553ef-68d9-4edb-b8af-322ab582067f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9539ad26-4a01-4ad8-823e-dbbb79eadea1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca04753-8c18-4219-b219-870b38f32564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f85207-69c0-454c-8d2a-7daa14d6b69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91598068-2030-4943-8dfb-c7576a28d9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f80b655a-1d9e-4e85-a519-0e6324d41e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2b00db-56ef-4079-ad1f-32ccbdc740cb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8614154a-e3a4-4819-bad2-b5c2827c577f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab0dd9d-44c0-4819-9a86-2df7072b71e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516b310a-d4c2-4d27-ab70-930f71a90109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92e0477a-f4c6-469f-8678-7aef8c5cc1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706b4ebd-ede6-4f4d-ad4a-66a08f48a0dd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586fb5d9-3a42-469c-9414-d4dde6da9131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc32df2-a435-4318-8d66-2e3f2fabcff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd254be-280d-406c-bed5-0d7cc9f9b4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fedd6e3-b6cb-4d91-af76-049ca9b5bbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd8b13b-41a9-4be3-8cd3-f7610d33e047",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3efbfed-190a-41f1-b01d-789cb361a651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bab4082-27d8-46cf-bf4c-d2804b0258d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30de7a5-f998-413a-ad5a-6dea35219870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd910cc4-dab3-4784-9786-7d6d4f7b40ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6a81d0-5bfd-4c7d-9772-d100858167bc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c39857e-471a-4d99-8935-bc31d0326c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedd09ec-72ea-4e49-b6a7-96aef83c6a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0de56b-0130-42eb-b7cd-1d850ec1cc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51333199-53bf-4192-9774-d0eae77bfade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1601756-8442-49c4-b9e6-8272486883fd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5608570-839d-40b8-ae95-8e31f621d864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac159b3-e754-4a72-95f6-1b4e2147eca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e727a9-0dee-4480-bccf-2ecc0fa842be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c5925e-be12-4b07-b818-20493b473b2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69636f97-3810-40d6-b21d-3e46e7800b4b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "805c4eb9-458a-4030-9bde-72f78996db24",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5b22af-d680-494a-aa71-9387fd2f43a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf400d9-3994-455c-8adc-0d633732afd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e10a17b-8b66-4e2c-a06a-fee26ebfa27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47c51663-3425-4275-9c3a-5ae02c23d66e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daf9a33a-c413-469c-bfc7-7e7e3ffac74c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "233fac5b-6395-4c84-bd22-c067847e82f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e39c544b-9b16-4ea9-99ec-599db35a2857",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a810990-af5d-40d4-bc91-e6aa98ce31a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9837f799-1e00-402a-ae3d-eca806b6996b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90e35fba-8836-4465-8893-5affb017cff8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed6d4d9a-4bd9-42c9-a33d-2b3e78acda52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8586d189-0640-492d-948b-f4bd3989401e"
            }
          }
        ]
      },
      {
        "id": "fff7fa8c-3ddc-4468-b514-407e25a0dd44",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cd721b63-769d-448d-bb92-aab9cdde1cc5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "789e40c0-c169-4886-a8fe-66cb06c2ae94",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6b3ba859-ae6a-44ac-9fff-852af2a4d76a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa32d169-0693-4322-b3f5-4a0ebba91cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddffc798-9393-49bb-bc5d-c3371299e90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf57bb6-0291-48f9-96fa-d270d50f52ef",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07913f6b-e185-4062-843e-63beef2b9585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5ca252-8f6e-4dfd-8257-f9255418dc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66419159-e940-4ee9-b8a5-205b1415b79f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312d3b01-f9af-4571-b8ed-7d4e47e42821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee003714-a6fc-4654-a662-49daeb5c1bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857dbc54-b0b0-46bb-9b73-eec4a00f1760",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c513adf2-829b-49bc-aee5-b7b98cfad950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee6f8c9-68d8-4e30-8aeb-ffdfa6ddfd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad627f8-c5c3-4ca7-a7bb-da956d3d7465",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab56d3cb-ae39-4ce1-8901-73ec65eb3dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7b649f-b91c-4847-a90a-c3bf98593e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f87581-93ff-499f-ac4a-f93e2a1402b9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae2f642-fcd4-49b3-a9b1-c8041fb2d14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820e06d8-696c-44e9-9189-dc59672511ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73a8dfc-017d-4697-8643-4b5bdc68a262",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190814eb-06ed-4075-9e23-62e7a6807d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd7d6cb-2c40-412d-99bf-f3de9b2bda48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e426c1ff-81b1-4fb7-b8ef-528ad6d9dafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7306560-6117-464b-b98a-7d4be1d5fe2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6d946b-cf02-4630-bb84-d5e4f539a5ff",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652d8a56-7c25-4c4e-a671-1193c2847314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "773ef5c1-686b-46e7-982a-143bae7877e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c23013-69f7-488a-acc8-e1007becf913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f13a28e-986d-453d-8ed3-99f8fc097112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06267eb-923d-4f0c-aaef-96ab6c2909a5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d007198-3ba9-4aed-bf55-ba04d5b27d34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3605b99f-7d92-46db-b7f9-3c9b71acfd39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07deaeda-e8b0-47a2-ab4c-ef3a4df40d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287dab77-d59b-46bc-9e3e-9bca91491de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c36be8d-02de-472c-97de-3050ba49783d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdae5b9a-7af3-4547-8cc1-b12759979edc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8970b783-b8bf-4493-bcd8-b39f06419e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d71393d-dbc7-47fe-af38-6bc0937ef492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14b66558-4817-48c7-9d84-29f0f2ce269c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1512a974-0e21-429f-8856-e4d7623c8c2f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5109aebe-72b9-431a-bf29-47604b82a768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202ff29d-fd19-447a-bac8-a5ad22b726cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441ddb10-05a6-4ea5-90d8-46bdf1784180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378ee170-ac05-4b4e-84e4-9e596210692b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048173f1-87d8-46bb-ba16-86fd2762d5b7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158cbaa0-5ffa-4fb7-80b5-ebf77cd9e744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24159eb4-1981-4f05-80ca-784d0a34252c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2626519-52e7-4240-894c-dbf1cc280e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8f35a4-9541-4b89-8870-c32781de2ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126631a8-17de-40b8-be3c-e6433130fb83",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571f94c7-4f73-4986-9cdb-64635430dc00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e699ea86-df31-417e-bffa-90d905a5779d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c13b1d1-11aa-4ad6-b026-8a0c38f96f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c399f02b-245d-49c5-98e0-4c458ac594a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9ba000-c8b5-4eba-acb1-e23a68f1ad63",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5358c62f-9b65-4cac-9741-e9a7332a54ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a4cb8d-55dc-4f04-bc92-f9575c496ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d8155a-7aa4-49f5-946c-33914dcbec36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e223fc4-1440-453f-b73c-0818983cad3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a62deaa-2e60-42a3-a148-f158e1b7d961",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22190dee-1103-4bc3-8f96-93ebd695bed3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a6c41c9-eea0-472b-9285-f1767dc837de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad12bd4e-2e05-4335-9b0f-ac1f947e5997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c645bb2-3f73-4cec-904c-8a84f0c49c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f794b7e4-c91a-4a4f-a744-ac3084b894fa",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f5758d-f34c-452d-9f56-fddce0e146fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a39e16ff-f102-424b-b697-c83c3d01ea6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6499084a-0d5a-41f3-b764-64a64f1e80fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d0124d-3981-464b-95a7-36b1092009ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1148c1-e0c3-434d-8024-f349ad4570e2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b350ec0e-90d5-4a8f-bae3-3f783235261f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dea8356-7c59-4faf-9959-281417f72392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e4a6c3-34d1-4fda-a6f9-4d0c4277a92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5619bc13-ade5-4b1b-9f45-7eb248ca7f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403b8893-2ffd-4def-ba8c-9bb4c7cce693",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df76fce-be23-413c-b850-771b1f382344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3237bbf9-b70c-4217-a006-e7dfb7a0f085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca87bf95-ec77-408f-8d4b-e7f62b576d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f415299a-57cc-4f43-822b-18d2727e9955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0b2d06-c463-4729-9362-597b753a46b8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e744f2-31a0-46eb-95a3-df171e6c0b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c2ab15-4936-4fef-af6c-39a04daf0668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf718aa5-ddde-4713-b633-0d060282b1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e33b989-3d6c-48db-a655-c3d3ad6cf714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4332aca2-5ea1-4250-b7ca-339707f13aa4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856e6809-a9fc-4995-a433-41ce95d39640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b998b586-e306-4f1c-b4cc-bbfec67f9b3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914e2a41-d70a-4f13-a76b-67b77c108b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4c5560-bfd8-4332-93cb-a34e39406328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c49819a-6129-4247-ac46-8d256965a773",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ad1c4f-6331-400d-862b-558575f4baf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590a461e-ed4d-4d13-8813-fd424f58632d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909fea2f-1408-4189-acaf-3dc01687a20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d185b9-61c1-41cd-8dc2-396664c54010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44587d39-8c6b-412a-913b-713e7ec54fca",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5462f419-7362-4a2e-b4a6-36e93dd7ba5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9e903e-91ba-435c-bd54-eb3f81383446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0df576-9cb9-4428-abfa-13772f411a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f71556-97cf-4af4-a041-3c23cd88bf84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae031f3-845c-4dd3-b528-1b418c93e36a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebf62d9-5457-49cc-a4d5-489ec0bc63c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d252487-ace0-44b8-9905-813104e68e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d8f0fe-3aaf-4254-83b9-0593fdd3549d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16237036-d9bf-4a1c-83eb-6892b01b99d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37a4dd3-5ab8-4e7c-80e1-8ca0b2ba8577",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7fecf2-3f7c-4a64-a0b9-09d1b7f2cd67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f864e2e7-8807-4f36-94d0-3a4aff83a0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1369ae62-9d21-4c2f-82df-d44eaa6bef37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebc6111-e9a1-4b70-9812-ca8b0773f8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5356dd37-0768-4aa9-9ad0-6a52b2973631",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd06c9e3-cc6e-4b63-940a-c8213dd02051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eae725c-a9af-4597-9bd4-daaa598c9144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c58f35e-3de6-4cad-a8ca-13b373292095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a062ea-8e05-49ee-877d-055484133a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87db5b7a-d604-4808-9e5b-5a7cc5f9ce17",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11099c9-dfcf-47fb-abc6-0cba36ed3839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2da6ce4-12d1-4ea6-8d0c-40b5a237acd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774b7b99-f7ce-4ba4-bbd7-2fd39eb8fdbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976bed8d-6b18-4a05-b3b9-b559dabd8edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc43bb9-3066-49fc-9878-58c09936e1ff",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeddbf53-4b9c-493f-88a7-efacb2d16aeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80310b3-a765-43a2-8c1f-05e7bbd98afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70137973-3dad-4d1d-89b9-9852298ee14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4ebc7b-1aab-454d-9df0-09539bf1fceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a4309b-e751-4330-ba7b-a25ffb2a0d54",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3e1564-bd1a-436f-8c3a-01652adef8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc974e99-2487-44f3-af34-4e7cb3744a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca9fbe6-dd63-4db0-90d6-ff3937f7ca3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6bafa4-c464-4480-bda7-4b390e2a6177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6dfd1a-6396-4119-a748-91f7c04a31c3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056178e6-08cf-4c41-bcb3-c5b82cbe225a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c89e85cf-b337-4b21-a713-2cd39b8fb9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02975f9-e837-470f-ac34-9f610593db27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0065ea2b-3e37-4091-9b4a-91a3e8e5f55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47936d85-030b-4fe8-af2a-12fa0d508827",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5819aa-3df0-4111-8bd1-f9755cae8e84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a6d0853-b96e-49a4-a7d0-bcc73aca0691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdcd301-d8f9-4545-8a49-7363b5dd592e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372e8ebd-c3ca-48f3-aadf-7c8b41ac3c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7aa76a-1f6a-4598-953f-96d75e32ee1f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716eb303-84e8-4f12-8cb4-0477c560460e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3958751-bfc4-4f69-a868-a45196a227df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61aee3b0-3cb8-4f99-bc20-940e929d152f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbbee87-1bf2-46d7-abed-981c1f8bad07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e48cb6-73fa-44cd-8cc7-e4bcbcf94175",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fdaee1-cf61-4faa-9460-e31bb351067e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00dcd6e4-aae3-4151-b6ff-2bbb1cb7a195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3057ed-1bf7-492c-9120-a35473417c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb2f61b-de3b-4ca5-ba69-a171fea1d0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a3b6b6-174c-41b4-a51c-89606d206fef",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc933d55-c539-49d0-b7e5-bafc00e7320e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da033ed5-c1ee-47af-b7e9-57de70172525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e27624-c47b-4cf9-acdf-118489a0970e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df192483-262e-45e5-b5cd-74d2b5748799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efcd6e2-ada3-4a7f-b3cd-af4abb407de9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065131d5-7117-47c2-801b-ebceaf3333f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a356601b-7748-41b1-893c-931d4171d08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3910cd0f-7cd8-4f2c-b9ea-43480297e159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e93de7d-152f-47d1-895b-08b7576b38c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c00a42b-eebb-4f11-b8e0-70c785f55832",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78829bb-476b-4138-8e05-45b8e221b543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce9561d-b786-4b95-b75b-a782f4f83897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13f3c73-4ff3-4c86-ba58-be104a451877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56d52a0-a700-4d87-9f73-c549d1d4e24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ace5c80-8687-470e-8b76-68b7878e6100",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ba6e80-2e74-40c0-a5ad-9db69e198262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96556205-df01-41b8-8746-69bacaad15bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e295bc-1665-459e-b761-db1fbe9a39a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b38a096-41ff-48f2-878e-dafbc63e3883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eca0a35-cb0e-4f42-93ea-ca2c483bcb10",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fd3559-6e27-43f6-97fe-be84c0b0d856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6571a202-6bfa-417a-b3e3-b6da4f9aff45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66726604-a9e3-4109-9052-5f1c8e5d370b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458dc90a-6896-4282-94c3-3f287f953da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6af88e-f8ef-4fcf-82c5-bfe726652bda",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effded54-f03a-41a7-aab6-35588d0103fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a183f6f0-f097-422d-a771-d6cc340e063f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9884c17-2a37-4e2e-8a82-5d0100448889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da0727a-5392-4c7f-b077-0d4bdf94947b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50da38b7-ec40-488e-b9d6-438cf1bdb4cd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa9df3a-c512-43d4-ab35-8d0a353537c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab06a26c-8b6e-4096-b8a5-e9cc5e44754d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ffe7da-9aee-4fa7-8f71-bd51da72de3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf2e973-9494-4927-a4d1-53c550f930e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8d9b96-ad34-4313-9218-f3f96d86ec98",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434c33b5-abfd-44b8-ab13-64bbc3c569a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a553ad74-317d-480c-9f41-7b9dcfdb4d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cc5d4d-8d99-4367-ba69-db2a835a50ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e50e90-9754-4296-9390-825a5ad6b5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c0811a-5e93-41a2-89d3-b8fb299dfb0a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b035e8-db15-4753-9e0a-9eb40479c82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf741bc-7cb9-48f2-bd8b-7732ec1e68fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141ba44d-f0d7-431a-8574-d5f3d5c1bfef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351da521-f739-4921-ba4d-f3ca74b497d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b926c9-4198-4588-82cf-15ce499c972d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac270d1a-8c49-4e14-a99c-0238717388e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e2e71e-3413-4936-b273-d737e4b2daab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28001f88-ece7-4531-8981-118299c95e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b2fa829-1ba5-4db5-a587-2d3bc304590e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab15adef-84eb-4ffe-b3f1-4ebbe1f90959",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5175ad01-9446-4631-8829-51a8a2c59029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c7ef92-1d54-4a3f-b6f4-eb676dcc0306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdaab58-8f7d-444e-8ab3-1d74c2a04177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d255bb-7340-4443-9980-ca2d836708e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7549f282-1361-4787-8e6d-9c0d068a9abd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe78b8b-0d04-4c8a-b088-0e2b7305c082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7939645f-3169-482e-a157-9659ddcba3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b23e593-3b34-4df1-933b-a58c73af53f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86a1973-61ca-45de-9436-fdfc8e29a744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a9ae8b-471d-4d9c-abbb-dac9833af629",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0bcc3f-0ee8-4ad0-ae4b-0e5b9b00b653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1354f85-9263-467e-96fa-6f8248cc541d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5263d9f8-a5ca-4b16-ae36-2fc97a692aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce83e39-6a1b-4255-802c-fef521a96178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9744e44a-1887-4b30-910c-fe39eabe44dd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ac1ab6-c0ba-4651-9e02-d5d9a05444d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5edf638-035e-494e-9390-8740c351bddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d809c357-8042-4369-a4ee-b08e3cd45168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6c1f26-3fa8-481f-9272-da7d4be8c6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe0c0ab-903a-4149-a8a4-f796f002181a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c6adde-d461-44e0-ad0b-d7452853ae36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912b9187-e1a7-4507-84f9-4a8d3094c016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12f9923-cf7a-4ac8-9609-84da98443060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad6635e-93fb-4528-b1ae-da94c77ff5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201576e1-b50a-45f1-b846-55f1d95e196d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6572d4-9920-4b6c-8226-20a82e567be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cdb936-c9d8-4c42-8f63-65fc366e8e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0620c05a-ea5e-4459-8fae-cee76b0a2a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5cb697-17b5-49ba-b96c-9e4a29309356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf14dcb8-69b5-4e30-9e4a-88a571f78f27",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c43197-9ac8-434c-bb6b-147b28bba234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4ba210-9603-4c77-ae0a-2da72c08b9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf4b33d-af26-4983-89b8-a48201764458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04aa2ea-4b64-4cf6-ade6-9e22f99f2b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c4c8ac-e5b7-4c03-a8f3-d589b522f0c6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bdec1b-fbba-42d9-a35e-b8f75c8f3646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc26ab8d-6961-4cd8-908c-31e7f2aa4a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342a316e-6bbf-403d-a576-c7436e1ba499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b738fe-91e2-4805-9130-74a423eb6bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537fd0bc-38b0-46e3-ac69-e636f9d2d01d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1bbe78-9041-4c83-9808-7f6b9f6845de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8619cbd-6771-4032-8bf9-cc9094bae478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc5371c-daa8-4439-8fc6-eb35083b0dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503cbeea-b248-461d-91fe-98d74802313a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720b9a9c-0da6-4d05-a43d-d3f9ee62e17b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2994f0e0-8011-429d-babf-308d1b897c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b285e00b-88e5-43f7-aad1-1914f7b7eb07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f29492-8720-4a41-9d1a-6d1e06a81acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7cb967-43aa-40ea-93f6-3f5d566cea96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c2ca8c-7d1a-4f41-82a7-05ddf8af2f2d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a083ae-a337-4e87-977a-c70205e17a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ab9f86-de89-471b-b233-0b15fa6c8196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb85f16d-a066-4f65-98fd-4adf838ba6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327c028c-e5f9-42ab-b9ec-cad4ecd28f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceb18c7-b5b5-4654-9445-005191fc1f92",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b2e6cf-feb2-401a-b398-040b63335a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee31333-c806-48ad-9925-c6477e09c3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58369b3-c7a5-4124-9b64-4226d60d639a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbcdb4b-1c42-4994-ae94-5488d0ee378e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df850df-dd01-414d-8247-26e823cc5729",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd115d40-7f09-448d-bc30-1a7d2554d240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f23ae65-a256-43fc-8095-37712d68a51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a938545-2458-4cdb-982a-dc6dfa592094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f94304c-7ab5-4992-9a39-a1588a058682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd57e14c-4733-4eb7-a71d-b141ba83e9a9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dee149-cc11-4645-bd43-4e956d40b69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0677f095-f0bd-46b8-b13f-b33122c867b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57bcd32-fd42-48bb-9ff3-b8693c8f4a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734f0dd3-6439-46b1-9713-33505bc173be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1c7fd2-cfab-4e80-bd0f-28ab9fecf818",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1f06ae-86b5-490c-abd3-e7bcf8727386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "365e2271-37f1-413d-88d0-247d1b317c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13eaa291-1f01-4c0f-972e-9c5f3da782db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bc096e-7c98-4858-bef8-1f88331682c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677bc92b-bd07-4874-b47f-4d0f17106e34",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc06c381-e316-49d5-9c00-7bd6d3a79f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312026fe-bf4b-407d-9c3a-45f18349194a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a595c57a-26e4-4cb5-929a-d31cb52c3dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1902405a-d8ec-41eb-b570-000c54e422de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc33742e-bf2b-46a2-8534-3d3755c97db6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05955f9-638a-4cd6-ab4c-7281a0228433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22cbaff-7755-4390-a77d-7a9d989badb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04daa21e-632c-4923-aa66-b63fae7c573b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3189d17e-15f3-49f3-a011-840f3f1e4c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39448465-f4ce-477a-85df-c25aaa99b7bf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8438692e-4eca-4641-b966-614085183843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6cc622-1c7b-4bfe-9120-a2dd2bbb3d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cca98b7-6160-4815-9848-be34796d0827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a784ed8c-8366-4471-8dcb-72d117b3f359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a60674-291b-4989-ae14-97c9975d78b6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110e62ba-c0c6-4eb7-8f9d-15098095f2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1604e8f5-2d4b-4e56-bb3b-0dc56e064e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cbb42c-b8f7-4b63-a3ea-18ca4b4bbc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0f3e39-71e4-4c14-9c77-005e4f59a7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30c24d0-9118-48d8-b6dd-a3f98d131fdf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f050ab28-5e7a-4239-9c74-0af004293ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a45f42-9f67-43bf-947c-db8cc08b5ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b18122-74d2-4211-987b-5e52cb156cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ffa894-d90d-41fd-9f05-1892523dee21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85d1419-7bd6-4e55-8322-d05bd2e7dc26",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a504d1-1a4a-489a-be76-536c7d30d62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be576f4-dd45-4f9b-8772-e1ea92e74749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebeb7a9b-7b5c-4196-a1f2-8db5678e3b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce14550-27d6-459c-9e61-cba113b1e9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d7fceb-4d31-488b-a948-494032175a8b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8263ae8f-f2f5-480a-a7e2-9f151af61425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e47a1f-8dc2-4873-92eb-098ee55b3bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe452358-6762-402e-be80-110fdb1dc454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe3949f-ad5d-4622-a2a4-6e88b58e1d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867c1d2a-2f87-4d64-91e8-bced008dbf75",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6c6460-f87e-4138-a498-be1191f6bf3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ab6b1a-33a1-4af6-bbcb-05a57cd21226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c86c5c-6a67-4838-b802-8b40ab7d7f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c581053-bcbe-4d6b-b63e-8af2edd8453d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42567e93-9518-4233-812e-4f6e28414d7f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd7c602-d2a9-4299-99d9-f0eadaf40363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40f5c81-6906-49cb-84a5-6f7c01fd675d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf4b060-7b10-450e-96f9-9c25ccdb2f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0586022-6fa8-46af-9544-d85d9bb3dcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83181c89-3bd1-4c2d-bdec-f9ef76efcfbb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2b6b32-f9d6-42b1-abbf-b97e9a20797e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8af9015e-2318-4bdc-975c-e42fc5c6fef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98616927-ed29-4f55-a6b1-dfcf9e0e5ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bc5848-f4b2-438f-8780-7f4baa089fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d8dbbd-689c-42c6-9fe0-21cc4787f400",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b20cecd-4eac-481e-9e2f-c7f6324f414a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e079aad-562f-4457-a5f0-3ae307f0c556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2688a76d-d896-4c6b-a115-6ceafc7c69e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2363c8fc-63dd-4094-98a3-62ff2a55f477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0565c22-d508-4711-8971-a6c330ec157b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c728ded9-282c-4e41-abc7-23c3533bfa7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb07fa4-ac2c-44f9-be38-35d83f976083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e137103a-9082-47d5-8282-afd96d5ec581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0bd77f9-96ad-42ad-9907-8f4ba7e2beff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e79177-8042-44fe-8a56-1bf11e2daf1f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8fae69-2b97-4437-8ae8-76a6cef0a131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "add20429-a8de-4e11-b0ea-8620f3ff219f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa50e92d-f44c-4843-b3af-1560ebdf29f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193405a3-ce51-47ee-940f-2d90bdc51058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399f36d3-6d55-4466-bdd6-a0b6e72d43dc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b886d781-4aeb-4c35-a82e-b8ed4f7418be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca568c3f-c02e-47a9-a6e0-0c37dcb3afa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1678f97a-c498-47ea-aeac-43ba466e87a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaab2419-ac70-4518-af79-3b20cb9c79c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a237afb4-0404-420e-8f2e-262a8f519138",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2d5dca-79d0-4220-8fb2-cb1e008d1cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "095eb235-2d0e-4d2b-92d5-6754a68e6eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afba9473-6ca9-46fc-a748-6177e09c0a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e787ab8-e1e0-48e8-ad2c-6ff9eed54e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcac9caf-f28d-430a-87e8-737ef7861cd3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ea169f-76f0-4993-90d4-1c55cf14a24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b65c827-9669-4f92-abcf-baa3b063345c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6f84e8-255d-4ad9-813e-7722bb21ff6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95930ca0-07ff-460b-aaeb-8c61bb37bc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5707f43f-e5ae-4113-9c4b-d419597e4f28",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17737ed4-14a7-4b69-a897-b1a72884c3e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8abfe1ef-c3b7-490b-9aae-31b5c3be4a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac34e96-40f3-45db-8101-50c35bb6d5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6503121-2622-47cb-b0c5-6d4b162f2fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b7d1ea-69cc-4129-b2e6-f800828f3b18",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3559fecb-153a-47ff-95aa-f49f153ba276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eb92e67-9785-4592-badb-9d1c8ebc46f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edcfabd-575b-49ac-80d3-89f0dbc42877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7495d683-38bb-4573-b311-d06685413470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db68b00-46b0-4ea0-b2fd-b99fb7ac7181",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672d1ee7-955f-4ee3-9d6f-90713bc8ceca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ffc92be-7e95-4fab-ad92-7ecab8c91aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373e1702-83d2-42fc-8c61-68d45874c375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13df207b-95a4-44d5-9375-e9b62307b7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60c2fd7-c979-473f-8604-5d80eb652db3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafd9cb6-fb38-45dc-8006-f18ec9f61155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90cb809a-35e4-4b2f-a08b-c7f52044992d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f54b67-5c53-4d36-8492-ea5dfb7da077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391b41af-d376-48eb-9d7f-712c1775b1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7228438-1175-4931-88e8-01a0ec440528",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da19b023-6910-4f9a-9ba6-72cffcf91192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ac1bed-7c27-4aac-93fb-ec63d3cea28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179d3e5f-6481-4fef-bc0a-719547bec152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7dc97d-d6b1-46ea-b618-c1c7104ca91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fff18dc-3d2b-48af-98e8-07e7eda246b1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4f9e95-2678-49ed-a694-eb5d446449b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28cd39ff-a142-4b0d-a807-7186fe5d0cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e41264-8593-44ed-b8b3-e5d1f4d63fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c198a1b-de76-4783-8669-9361a5e8c11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd274810-685d-4e25-a088-ffd9e533d3be",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6546a4-9b7b-4847-a702-b0fcc6dc1614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52584ed9-8592-4fa3-8088-2b47fb2176ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ecadfb-3e95-4f8c-af09-e7fc77ffcd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07840e3e-bdf6-45aa-a4e4-07f7a62159b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38b5a2d-3bc3-48c1-bde6-8e0706a3cba0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0409ba-5866-46c0-b873-83dfe75962f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d5f6724-b4d0-4308-afa7-c748e94f16b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086c40d0-1310-40eb-8297-928400907b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6cb955-ddfe-4ec2-a1d1-5067e5518dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c0f38e-9659-44f1-be6a-dd4cc8ab2b1e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa2496b-b47d-4716-a587-d4ef6f1e96a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f485e9b3-3171-42f4-b903-878c5647ad93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b4c0e5-2743-4263-8c48-281e92752a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be896a6-a7f7-4aa3-bd41-5f3e1d6b4ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0309bc2c-fc14-43de-a5de-c19c5eb041a7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5df2c9-6510-4ca1-95fc-5a8ef29955c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c049ab-be83-434c-81e7-83aab3aca66e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf73842d-877e-4bfe-8cf9-1e4febd382db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9801f1a-6b0f-485e-9ab7-e5404e9a6e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef8860d-306d-4cdd-a84f-6d3bc23407af",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f822e79-6dbf-40f4-bb2d-25f1c4dac7e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92230168-de44-41f9-ac6f-9599f19c9b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e844b2d0-e87f-441c-a34f-45aa54b1cec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92af0baa-e9af-4718-b74b-bdba673c23ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1170ad7-a8b1-42c6-8b90-a8664e6dbe0a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819961cd-8aa7-463e-b5bb-f8dbaa23c498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27593560-53e9-406c-99e7-a2be06e8d711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfdafbf7-3fa0-4c07-a0c0-09492f094fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96386619-3fb1-45ad-bee8-10883d5af0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233ec3a9-aabe-409c-9d0f-ea4c20406266",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81064617-b0c2-41ee-bcd9-7f9f81e87ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8191a35f-9fe9-4f43-b9be-932f6dee1d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e24c5b-b54f-4321-a1d1-103a380b7831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ec0d33-1e79-4461-adad-8e8dc8fe0262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e905603-a7b8-4cfe-81c1-ea43d6f5e54c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8831be-dd77-4958-b68d-150821deb52c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c236f81-4d5b-4b95-96f1-eaff7c619851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a132e9a-85a2-4359-b1d5-d3aa4d55c738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2db6474-d9ae-4e05-9ea5-1bd8638f2ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cef474a-a08d-4d7b-a3a2-55ead7872f4a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e92b4c1-44f0-4039-916e-d696ac0cdda4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "421ee605-bc01-40b6-bd8c-26a825c43753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb021cfa-ce1d-4284-a608-2a20e0c8414a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddc18fe-c481-4839-9bdd-a62d5a7f36e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd500065-39e6-4c3f-8c2a-40360cdb803a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee69591-0618-4c7a-ac08-e7527d7165e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d812d2d5-d8cd-4b93-9646-dc5f43dfabba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7ef2ce-f3ca-4338-a682-9d5755c06f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464392fd-dfa9-4960-bfa5-a1c4e3d27fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fcc2e9-e12e-4917-99f8-1012bc1f0f0c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56a4377-ee7c-42e2-948f-d987b1867efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a54068bb-79a3-4a2b-beca-3c4b72617710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de9ed8d-145a-4cbc-8b92-269af629800d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b748840a-7998-4aa0-abb7-058bdc0d95b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6e22f9-9792-49f3-bf50-212d34a29ccc",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7a6639-4036-4ddb-9205-2f6e1ad583ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbdb9056-40a2-460b-8657-e5291a74819a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd9646d-a1dd-44e9-8e0b-5fbc7d4caa9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d09be1a-4222-4280-a691-8e03475aa54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf448e20-6b11-46bc-8dea-fcae749e1791",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bc03ca-ab1f-411f-9b85-cf0b5c2bf862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb96e3c2-a9eb-4d4a-89d5-6bd527709c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03511cfa-3cfa-4472-af74-40b15f441902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fefb58f-e27c-4af1-a5f6-28fa49c3561a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50525ea2-6be4-405f-9bd3-59d7b56062dc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925b5f3a-c12d-4f4f-b418-d46daf247a83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6b0d6c-fe55-4ac4-a782-23f78b2451c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a723de-4512-4cd1-9b0c-ad26de1170ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b1144b-b63e-4f5f-9c2e-09b3c12764cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a5426a-eaaa-459f-bd35-39ddeed21d94",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c572377-ed10-401e-a146-2d9dc72056dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1882ff6-e79d-4793-a765-82c7f57be6f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0eb0c0e-ff6d-4eba-883f-5379360777c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4789175-8104-4e13-9536-c49bba4181a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96bfd47-6418-4213-9fad-721cb04dfa86",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521fff8c-0b90-4bc4-8dfd-90db25bfea56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c372622-4db5-46a4-86ed-d3a160c3ebab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e22483a-ae64-400a-84db-25ce3808f19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965c3721-5dfc-4437-b6fe-d9b6495b16aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a243af-7998-45c5-a5cd-e7b36197feca",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124ea196-d283-4c43-bdfb-30d58fde6601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb278f8f-87ab-4fd9-8049-775302ee948b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa85f816-a5b1-4cc6-95a0-25e8a6764ccb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d5b6ef-7e2e-40f8-bf65-913fc1a6e4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825acba0-a47a-4f86-9f68-839783359ba4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee63a78-613c-4dc1-81c2-69f72dcb88ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ce54823-f9ad-4dfd-be0c-d3cf1068945e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373ac70c-2c7b-40ad-8272-be0517966f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da5323e-28dc-4c05-ac99-6388be9580ad"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f46a68ca-b877-45f1-8781-7f49145c033f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa3cd866-e912-451f-8b32-34b6996f1d64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5a816e6-8b5a-4b79-bada-84712b074c88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "320e7323-2323-48e3-a420-1c540ecd6e0c"
                    }
                  }
                ]
              },
              {
                "id": "61c5dd4c-028b-431a-87be-a4bd24ce6e32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7767c21f-34c6-4b2b-88ae-de7d9144feed",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7249338a-06c7-4acc-8f80-cc7e7eb907c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3ada2d98-3278-43ca-b315-8c388d6f1ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759c7c97-7ca9-4adc-a900-c44a0a5cc13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e74cd084-caac-4eb0-9379-36306a384298"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8056b246-5f2b-4bd0-9557-eec37bc75f72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbe5675a-7745-44ec-8744-c85b55ee202f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc712c9d-a8bc-4021-baa5-def3ad8d7b99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40dfd7e1-86eb-4d95-ac56-b4cd3c0b5f25"
                    }
                  }
                ]
              },
              {
                "id": "b2b19ef0-90fb-470b-b842-810306a680f7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "53c0b186-6f7e-4517-82bd-257025b6a792",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890b1e03-1315-40bd-98fa-d6995de4e8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e32215a5-1878-44b5-add1-20efbebdd264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0195a3-d326-46a5-8cf6-a35c1210f62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ba6ca0-9d6d-4b1d-add9-e02aad302e27"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4a14424a-8308-43ac-86ef-ef5b349e3d59",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b4017eb-80da-44fc-b436-585cc68d5c96",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0de8c15-9fd1-4ea3-ace4-0450ab9b7d2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "79368e96-3a6c-4e36-9f48-3127fe1450fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a2d9f0b-4de7-44a8-b52d-2b7c7a72bfe0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95829440-2ebf-4689-a316-54df6bcdc68b"
                    }
                  }
                ]
              },
              {
                "id": "f70611d5-603f-40c5-a81c-3f5966fb0b51",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c5ff7e7-15f6-4329-a6bf-06de5a3e356b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b331abdb-6099-4c71-8081-e5aeb08ccebc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15e44ca6-b13a-493c-845c-10d973d83167",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e12699b0-9428-4d6d-8a35-b8b995dda3d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34ebc185-240f-4b38-9422-4630b8f98df6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3557f2e0-06f4-4f5b-bbed-597142a11d05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a45e5798-3280-4d93-9c0f-7bb6be2b0d1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de80d6c4-3dd1-4d8c-97ba-4313fdbb14df"
            }
          }
        ]
      },
      {
        "id": "c1e9fe52-b934-48ae-b4cc-8ec710668f5d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9076d8b6-f967-4c19-ad61-b2010350cb81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "673d9117-f65d-43ad-9fe0-b5cbe1e0c8e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e583d9a-2334-4e1c-8878-4d940c1bfdcd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34be79f-37c1-4e66-87c0-bd8cc9248989",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8fc33aac-689b-4533-8b1b-bf27ca6db29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8ca45c-b1e6-4ba2-83cf-17d34eb1324e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5401be8-ee23-4a56-a7a7-7e33ed68780f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c60771a9-5603-455c-91f5-90f9ba1701e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03d2c5b8-3d94-45aa-b005-3ba72a67e31f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8684383b-edc5-4336-8dad-13303b238100",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca056093-df00-4805-841d-34c3bb4eefd7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b3cd52e-a231-4413-b8a7-41dcb985399b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "023f6a96-3c35-4557-9f6f-9ed0e74b20fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8040a694-4d69-4972-910f-54c2881e8e40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acc07c6f-b1ef-49fe-b2b4-6bbaedb8bf7f"
            }
          }
        ]
      },
      {
        "id": "6372de2a-a138-4a12-91a8-def43b2d8c35",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "94d078e0-c949-494a-ba97-4c201e5897ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85d333a7-acc6-48ad-a540-854009cb97fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "611c7f43-5cd6-4884-8f45-3da39dbe634f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ffdb8e-ec4a-4585-b0af-3277994cc432",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6cb3024-9975-4225-a2e7-be1a8aab1acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4a180e-400e-40b0-9183-9c7ce29a2114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0258b907-820e-47cc-908e-c2d33e2bb147"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc35c582-5a0c-4f12-868e-ecb0cdc4d6df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c0baf1d-ee51-40d8-996a-fe26438907ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3e134d9-f893-4a5e-be9b-8dcb8b1c424d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e4832e4-4640-4419-ab48-038e37a2bce0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa0cc0ef-6ad0-4c7b-9fde-40449e44ff8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c473c5a-cea9-4640-8056-c45c26ce7cc0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf8b739f-fd93-43d0-8ee0-f7a1518b5f7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "529a8fd0-fffe-402b-a600-88a65ad8266b"
            }
          }
        ]
      },
      {
        "id": "e6be78c2-23a1-4465-85d7-3697b419e103",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "89761481-de73-43db-8e57-75ae592ad562",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d50bf18f-077a-4dbc-a5af-295971720837",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e06246d2-8504-4823-8d2e-dd1f2d041671",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b2d1cf-388c-447c-ae74-2a9fca13880f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e96821ac-72e4-4985-a3bd-110778182652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b59a29-797a-4582-8979-3ea5457248f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a787442-9ea4-43c6-9815-da05627d1a0e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b214c7fc-e020-4b17-8145-9b9838b0db58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96736b1a-cacc-438d-b424-5998d78b8d66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45e2ce78-65e5-4864-a88b-6789eb277299",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7695eaf-2bf6-4acf-aaa5-cb0a01e12c60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "508294eb-04ba-46cf-8cc3-93476eb1d0d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "61aab715-4de8-47a2-9c2f-187774826c08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41133d60-18cb-4a6b-8bab-b1142e6aa868",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d21576ae-fa43-4c45-b63e-71642a40c577"
            }
          }
        ]
      },
      {
        "id": "b3e48b3b-2e27-4369-b260-5f4ce779b75e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d532680-e4ce-4dd0-9901-c49b89ca7fc0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0e82628-07b5-428f-a47d-a8e8dcad4120",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9cb42370-a744-49bb-bc0c-f18e0c5dcf9b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bba1f94-6ecb-4c21-8e70-96dfc76e58e9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4c16612-c14e-410c-95d7-3c63423109d1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 38
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.249999999999992,
      "responseMin": 2,
      "responseMax": 413,
      "responseSd": 32.68702293348188,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723337061997,
      "completed": 1723337071906
    },
    "executions": [
      {
        "id": "f315c324-c301-4023-ba8b-b92deb102b1c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1d7781b3-bafa-480b-adda-1902bf899aea",
          "httpRequestId": "de6e40ca-518a-4a8d-8b56-0a99c53c9f83"
        },
        "item": {
          "id": "f315c324-c301-4023-ba8b-b92deb102b1c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f1e5223a-d38a-43c2-a71f-523e6055b93b",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "065c712f-d384-42e1-b604-c80efcee70a1",
        "cursor": {
          "ref": "14a25fb0-3433-4172-98d4-1412a71a543c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b913acab-d24c-4d5f-84c4-1caa42dda7d2"
        },
        "item": {
          "id": "065c712f-d384-42e1-b604-c80efcee70a1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c1990b7a-96ae-4c84-997b-3eec7f1c9ab4",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "e7b3a0ee-c8d9-446c-8381-16b17bc1152b",
        "cursor": {
          "ref": "1275f0ee-6b9e-4a29-8f56-47917d3dc9ce",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "77b5b988-ef4a-45af-a4fa-9ba20dc1bb80"
        },
        "item": {
          "id": "e7b3a0ee-c8d9-446c-8381-16b17bc1152b",
          "name": "did_json"
        },
        "response": {
          "id": "bd74cd06-63ec-46fa-a6ae-6505f5a4e4a2",
          "status": "OK",
          "code": 200,
          "responseTime": 215,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230bd21a-4eca-4144-8c80-4fe15da60f1b",
        "cursor": {
          "ref": "db4db629-e16c-435c-abc3-ee6ec256ada3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f28b9988-8dc0-45f6-afb5-12080278f9f1"
        },
        "item": {
          "id": "230bd21a-4eca-4144-8c80-4fe15da60f1b",
          "name": "did:invalid"
        },
        "response": {
          "id": "7d5734eb-c964-4975-a583-6ad3e2ece4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230bd21a-4eca-4144-8c80-4fe15da60f1b",
        "cursor": {
          "ref": "db4db629-e16c-435c-abc3-ee6ec256ada3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f28b9988-8dc0-45f6-afb5-12080278f9f1"
        },
        "item": {
          "id": "230bd21a-4eca-4144-8c80-4fe15da60f1b",
          "name": "did:invalid"
        },
        "response": {
          "id": "7d5734eb-c964-4975-a583-6ad3e2ece4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16c55a6-4692-46a0-8bff-fb1eaf9a3783",
        "cursor": {
          "ref": "ac4b71bf-e06b-450f-a63d-cbbec827f3cf",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6aa1a24d-5bf4-4aca-b498-6dd13e4ade7e"
        },
        "item": {
          "id": "d16c55a6-4692-46a0-8bff-fb1eaf9a3783",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e624c187-d103-4874-bb09-a9660583da37",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 115,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef673402-aeb4-4abd-8368-18cf55d6730b",
        "cursor": {
          "ref": "34410c59-f2fa-4a9a-9d86-629dadfb3329",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4af89ff0-5db1-4057-b67e-67bfdccc46eb"
        },
        "item": {
          "id": "ef673402-aeb4-4abd-8368-18cf55d6730b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "099373fd-57aa-4b07-ab6c-31d981f89f56",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a83621-0b39-4a85-ae1a-6db8f0434bad",
        "cursor": {
          "ref": "b818bbcb-019b-467c-9ffc-bb8768f97e89",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ed07a170-73f9-4941-9b35-5a5881de8a0a"
        },
        "item": {
          "id": "a8a83621-0b39-4a85-ae1a-6db8f0434bad",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bc9924ab-1c4f-4793-bf28-31dc0f78e007",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf0dfee-f3c3-42da-adde-63656e7ab837",
        "cursor": {
          "ref": "ca941c50-506a-4bd8-8ddc-d6097862c04f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e41e3e78-cced-4e9d-8d23-3a9a139f4396"
        },
        "item": {
          "id": "2cf0dfee-f3c3-42da-adde-63656e7ab837",
          "name": "identifiers"
        },
        "response": {
          "id": "f7425135-2679-4ddf-82a8-53373560f1a8",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482a9e7e-c661-4d79-90ca-19af322df8a6",
        "cursor": {
          "ref": "597122d4-81d2-432c-a263-145daa6f7957",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "58ee0362-a3ca-4572-a963-48c0a1d8f3ad"
        },
        "item": {
          "id": "482a9e7e-c661-4d79-90ca-19af322df8a6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a89d4eb4-dd92-45dc-bc0d-f3217f234524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc9249f-6a47-493e-b4e7-72a775a758fc",
        "cursor": {
          "ref": "24fec53c-9bfe-439b-9751-49696fd34405",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a4419c53-4401-434f-8ceb-7091dec854ef"
        },
        "item": {
          "id": "ccc9249f-6a47-493e-b4e7-72a775a758fc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9a2baf17-90ee-4e47-8467-deb7f806af5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf9fa88-4356-42ec-9deb-b4ba200cec52",
        "cursor": {
          "ref": "2d77df05-6f52-40ea-93b8-c586f9887f36",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0621df49-e584-4461-9dcb-60d248605e02"
        },
        "item": {
          "id": "8cf9fa88-4356-42ec-9deb-b4ba200cec52",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5a47ec27-c92e-41c8-8f01-96d8df9e6418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b41d6d-a4aa-41e7-900b-ba6c62d8d661",
        "cursor": {
          "ref": "8f51f8ea-8603-4d89-812d-ed766157be06",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "912d0c3e-3bbd-4c16-9673-2c59050237b5"
        },
        "item": {
          "id": "16b41d6d-a4aa-41e7-900b-ba6c62d8d661",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cb3d0192-935d-4efe-9264-0d1cb1be3886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ef94f9-e585-4736-adc4-4e1953caaafd",
        "cursor": {
          "ref": "952f8d79-1ddd-4997-a737-e75b81ae932d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "284ad9d5-a21b-4e2e-a198-6060e0fb4373"
        },
        "item": {
          "id": "67ef94f9-e585-4736-adc4-4e1953caaafd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6d4dc68e-efd9-408d-a82c-b2b421caae17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d81b4f2-406d-467f-851b-b04aa42adec4",
        "cursor": {
          "ref": "51823ec7-efa6-4f45-b279-244394505233",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "65bcaca9-d024-4818-92dd-3644e218dad3"
        },
        "item": {
          "id": "6d81b4f2-406d-467f-851b-b04aa42adec4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "50c4a16a-597f-43f9-8b07-d69d471cd866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f1a075-44bd-459b-83e1-22fc11456c3f",
        "cursor": {
          "ref": "286a56cb-9fe2-4e5f-b60f-4549792e9cf1",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6afb00ff-5fb8-4c23-a33c-6ce21dda312f"
        },
        "item": {
          "id": "b8f1a075-44bd-459b-83e1-22fc11456c3f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "58b299b0-f8da-469d-b158-1e51b9589dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdb565d-8213-403d-b2df-3fc4d8af59bc",
        "cursor": {
          "ref": "584fb67a-8e5c-4910-9bcb-6c7b8754cb1f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "759e746b-d6d9-429a-9d30-69fee1ea231c"
        },
        "item": {
          "id": "efdb565d-8213-403d-b2df-3fc4d8af59bc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ce8dfaad-0cd8-4705-b847-c85802e5272f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005726a5-7334-4963-9e8c-489e11221e88",
        "cursor": {
          "ref": "5913287e-d594-4716-8488-7ca38fd7ba54",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fc6087a3-f88f-42b7-9947-dce1b443982b"
        },
        "item": {
          "id": "005726a5-7334-4963-9e8c-489e11221e88",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2ecf070b-5e01-4db2-960c-fe5625cc528b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1292e3-ec8e-43d4-bae5-f7a333b359f5",
        "cursor": {
          "ref": "9a63dd0d-b899-4796-a8cf-8224337da6a5",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "311057c3-8a04-4f61-9aae-8b42ef4c6d77"
        },
        "item": {
          "id": "ee1292e3-ec8e-43d4-bae5-f7a333b359f5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a5261bf3-1778-4616-bf51-1e49c03e151c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb74624-5d23-4a27-98d8-52174d0ab664",
        "cursor": {
          "ref": "561c6b3a-d002-4b1f-a6d9-06e6fd2e706b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "84f150ac-3c97-4d21-80a3-f8211de790a9"
        },
        "item": {
          "id": "beb74624-5d23-4a27-98d8-52174d0ab664",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b3b184ef-a14d-43c7-8aa0-1ab073adf52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a822a9f-536e-4948-812e-5eea495c42a6",
        "cursor": {
          "ref": "5725224b-f864-44c2-9ac4-2ed68d5f1e81",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "04540fa9-cf52-4a44-a8ea-55ec0b63c01b"
        },
        "item": {
          "id": "7a822a9f-536e-4948-812e-5eea495c42a6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "13f83570-7a74-4e3b-b06f-ffe0b575236e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e1c0d7-c607-4652-b175-f63945732b48",
        "cursor": {
          "ref": "8dcf296c-db78-49ad-9f95-db0f8082339b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fbec530e-8b4f-494a-87bb-a78cea4ac987"
        },
        "item": {
          "id": "16e1c0d7-c607-4652-b175-f63945732b48",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7f664ac0-9c45-4952-b601-08fe4fb32089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c94c5e-d86a-4dc8-832d-61b187f566f8",
        "cursor": {
          "ref": "b98b0735-9505-4093-b52f-bf053b513125",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8d0ac1b3-41bb-4965-8f5d-c75ac43d1794"
        },
        "item": {
          "id": "e2c94c5e-d86a-4dc8-832d-61b187f566f8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e91f7e01-82f8-4b43-91c1-d2c1f86f05c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50547bb2-b6a7-41ee-ba2b-56219fafe930",
        "cursor": {
          "ref": "62b25a4b-7124-4ee0-ac0b-af3b4a448d6c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a0cfe6d0-a395-457f-af91-4d7228874605"
        },
        "item": {
          "id": "50547bb2-b6a7-41ee-ba2b-56219fafe930",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "57226919-d298-40fd-9bd5-8e2ae930f87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a38dea-c7fa-4ccf-8cdb-87ff068ef7d9",
        "cursor": {
          "ref": "af6f011f-0860-4c1d-a27b-eb6cdeecbfc3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f7e050cc-9479-48f3-aa14-b9e18d5b9ff3"
        },
        "item": {
          "id": "d5a38dea-c7fa-4ccf-8cdb-87ff068ef7d9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b4e9bafe-5a0f-4e2c-a42b-7fe72aba33a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d8edf7-4865-40ed-a504-00d23819a4db",
        "cursor": {
          "ref": "18aef364-58e6-40ac-ab95-329d23205e5f",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f40300f5-c47d-4d74-b287-a8a2b63d5222"
        },
        "item": {
          "id": "42d8edf7-4865-40ed-a504-00d23819a4db",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ba5a703d-6104-4f65-b640-2e596dcf9af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ce48da-7bdd-44ee-b1ee-22e001a27b3d",
        "cursor": {
          "ref": "a0c09435-39a7-4d58-8b53-7588d990d770",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a5f56def-d010-4338-940e-e34eed7c94d8"
        },
        "item": {
          "id": "36ce48da-7bdd-44ee-b1ee-22e001a27b3d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d1b47760-161f-4afd-99ad-a22a72ca548d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782e1818-8c41-41e2-9557-8ae91a31e688",
        "cursor": {
          "ref": "8e6c2622-695a-496e-835c-05d8acacdfa4",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "43d78379-7e11-489d-96fe-3375c430b1f6"
        },
        "item": {
          "id": "782e1818-8c41-41e2-9557-8ae91a31e688",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4f63320e-47c2-4e7f-aa28-1fae65ce2617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3d117e-82c9-456e-9306-bc2120ff2b95",
        "cursor": {
          "ref": "9c515ea3-92be-48ac-aa37-6348040d362a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a263d992-7b88-4f71-bf61-c34da2ebe392"
        },
        "item": {
          "id": "5c3d117e-82c9-456e-9306-bc2120ff2b95",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5f513331-c70e-4f46-94eb-8a42b8752a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c6f75a-38b6-435c-8477-d168d26acad9",
        "cursor": {
          "ref": "7b438d43-23d2-4e1c-8bf6-578db1c4666f",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "84ad5b1e-afd8-44b2-a07c-4f0d4f29c639"
        },
        "item": {
          "id": "50c6f75a-38b6-435c-8477-d168d26acad9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e3c46163-274b-4101-88f0-9665f0918384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db15fe08-773a-47be-bf45-e71311b9fc96",
        "cursor": {
          "ref": "c244a576-04b2-4265-87a3-b438c0b32e35",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3c17deeb-7e99-4ace-a7a5-411a169709fa"
        },
        "item": {
          "id": "db15fe08-773a-47be-bf45-e71311b9fc96",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "db533885-5570-429c-bd07-8172850e0670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95edc2f-6679-4133-b78c-01763e37ebfb",
        "cursor": {
          "ref": "c21ba42a-1256-4c12-89bd-43673b422098",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b368758c-3854-4c12-81c4-362d621d4bdb"
        },
        "item": {
          "id": "d95edc2f-6679-4133-b78c-01763e37ebfb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d6a95b0b-5ce9-4c9c-95fc-7989a08ef26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d5992a-1bd8-414b-b5b6-eb4f1deb4c09",
        "cursor": {
          "ref": "9c26da67-1212-4321-8266-dbaa9f9735e7",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "061b2f43-cb85-4e3a-9eb7-2be09f08356b"
        },
        "item": {
          "id": "58d5992a-1bd8-414b-b5b6-eb4f1deb4c09",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "897f1849-76b0-44dc-9fd2-6ba7129b25fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7227a19c-72f1-472c-8805-e47d7585d9bd",
        "cursor": {
          "ref": "b075d636-d421-401d-b650-def8ba744fe5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ee0a4fde-ab9b-4490-b65f-1d430063cdad"
        },
        "item": {
          "id": "7227a19c-72f1-472c-8805-e47d7585d9bd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "160860f6-957b-4661-bcab-c2385624f564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f90d128-e896-4395-af3b-35d8e8a6664c",
        "cursor": {
          "ref": "4457b3bb-dbd1-4c23-be41-40232b3af050",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5bb2a9bc-6096-45d3-b09c-280178dabd7d"
        },
        "item": {
          "id": "1f90d128-e896-4395-af3b-35d8e8a6664c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "50dfde24-4cc1-4b01-8955-9bdc13c917fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4ef8ab-30ef-499e-b65f-8ec776068350",
        "cursor": {
          "ref": "3689589e-2be4-4de4-a742-4cb6e6b5d29b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "99d5415e-3da3-4a17-bb2e-1b3e909f2335"
        },
        "item": {
          "id": "cf4ef8ab-30ef-499e-b65f-8ec776068350",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b052ebcf-6369-4e18-b3c9-323617d05099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ddc8f0-994f-4afd-a347-740ab9e6087f",
        "cursor": {
          "ref": "e3a767ba-f566-43fe-b929-5afab4c1f120",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "56e53c4c-0411-476f-8c84-265e3471c721"
        },
        "item": {
          "id": "19ddc8f0-994f-4afd-a347-740ab9e6087f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1aee059f-f754-464e-a431-a8b3d617889c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be211ff4-e7ca-42f3-ac37-96360727efac",
        "cursor": {
          "ref": "4b58e463-eccb-4d39-9201-37921ae8c651",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dd1ec8cd-8e0b-478c-9c6f-724c7daf6f34"
        },
        "item": {
          "id": "be211ff4-e7ca-42f3-ac37-96360727efac",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7d1deaa0-20d6-4698-907a-2dcaff935ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dc0cbc-d658-45a6-907d-2e056746b2f0",
        "cursor": {
          "ref": "2540b71b-0706-4e21-b77a-a370b47b4821",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bb1e8349-182c-4e7f-a69a-3a8c62738ccb"
        },
        "item": {
          "id": "b2dc0cbc-d658-45a6-907d-2e056746b2f0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ebc03fb8-7c62-41c8-9b2c-712a773b9202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8017426e-35c1-4998-ac1c-8a5e68befd49",
        "cursor": {
          "ref": "669e7807-e0a5-4b9e-96a4-3af65ffcbdf0",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9ab28b1e-7b6c-4a05-a272-8f4c044cdb8e"
        },
        "item": {
          "id": "8017426e-35c1-4998-ac1c-8a5e68befd49",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7e4f4f8f-1c8c-4108-9576-956debfbf0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e338608-6194-477f-8d18-92d21e49853c",
        "cursor": {
          "ref": "709a7b11-85aa-4e8c-a4ed-fe4f268abe97",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a6d79f84-46d5-4438-922f-e55f4efe19b8"
        },
        "item": {
          "id": "4e338608-6194-477f-8d18-92d21e49853c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2f795647-ef7b-4bf5-80f8-37149b220517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0234a76d-e656-4c48-a7d3-4dfd0783fba5",
        "cursor": {
          "ref": "44aa59bb-cb47-4a63-a87f-3492360b2a5a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fa77e72c-5246-4c15-bcf8-34cdd7baba5b"
        },
        "item": {
          "id": "0234a76d-e656-4c48-a7d3-4dfd0783fba5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "add333eb-cb2d-4af1-8a5b-a91ec93977a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082de7d2-53e5-4f6f-bbd3-099e98429663",
        "cursor": {
          "ref": "354490e8-b68a-4c74-83ed-53002e5d553d",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6133e431-4b89-45fd-a939-c1dac9b295b8"
        },
        "item": {
          "id": "082de7d2-53e5-4f6f-bbd3-099e98429663",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "16aead53-0224-4cb7-a16e-b4472bd67ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8c0efd-7916-4695-a2e9-c0cfd1a9d9a3",
        "cursor": {
          "ref": "bf67eda3-5edf-4466-8d9f-f457ec8e859e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2ca81742-e3d3-4b95-a660-6403a035b331"
        },
        "item": {
          "id": "1c8c0efd-7916-4695-a2e9-c0cfd1a9d9a3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ee9a4abc-9b2c-43e6-998a-144f88a92731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2891cb7e-09f3-477d-b903-99348bf99d54",
        "cursor": {
          "ref": "188b03fc-c5a0-43b7-9370-2afff4c96262",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "68686a98-2bee-4324-b236-5f6c88604c21"
        },
        "item": {
          "id": "2891cb7e-09f3-477d-b903-99348bf99d54",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5efe9d74-fee5-40e5-82d9-5397485e40c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fd3303-45a0-4b7f-8729-d43acb335d2f",
        "cursor": {
          "ref": "3a3cda9e-1e0d-4bf7-892c-8c707ca28ef7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a5fe19d2-ddd8-4550-a773-01fdb865b8f8"
        },
        "item": {
          "id": "14fd3303-45a0-4b7f-8729-d43acb335d2f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "45cc30be-b7df-4f3e-88b7-5b881eca12e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2779a97f-596c-47b9-a4c1-e624cbbde91c",
        "cursor": {
          "ref": "6ee3c9ec-aeae-4947-a949-f044f58f8f22",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1250e624-06bc-4625-8245-f0fa4aad4fbe"
        },
        "item": {
          "id": "2779a97f-596c-47b9-a4c1-e624cbbde91c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f8562412-6387-47da-8c2a-97563a4f1cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aced1a7c-b3dc-4768-82c0-542ac696f98f",
        "cursor": {
          "ref": "a7b2a1c0-987e-4137-8f99-58e7bd5c58da",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ccf87df0-7cb2-4b28-9b92-57cfc89c78ec"
        },
        "item": {
          "id": "aced1a7c-b3dc-4768-82c0-542ac696f98f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b52c0fe7-93cb-4976-9af9-03a6051318c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d4ba84-6b36-4eb3-a815-1b67cb81e60f",
        "cursor": {
          "ref": "90a42001-9ea9-4443-9605-862228328929",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cd2bebb0-4b26-4b85-9afa-ad199620556c"
        },
        "item": {
          "id": "79d4ba84-6b36-4eb3-a815-1b67cb81e60f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d6b1459b-b7fe-4f16-a386-dd7e1e681caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af3dcd3-91d0-45fc-82c0-26c5449bee11",
        "cursor": {
          "ref": "8d12a42b-34e8-4a5a-9ff6-58cf2e37bfa5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "638380d2-f032-4532-8fbb-8bf73100ae45"
        },
        "item": {
          "id": "0af3dcd3-91d0-45fc-82c0-26c5449bee11",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0f9985af-8088-4134-8648-525690b4ba22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f393fcc-5c2d-4a70-a526-208ef4e9948a",
        "cursor": {
          "ref": "23c1d1eb-84a5-4d07-bffc-46049de12c69",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "91652448-419d-4e0f-82f4-0f65f774fc37"
        },
        "item": {
          "id": "4f393fcc-5c2d-4a70-a526-208ef4e9948a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b47eed32-a5a8-44a4-9674-713418145abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a34629-11e0-4f53-bd3d-355c1f674a86",
        "cursor": {
          "ref": "8dda5411-eb48-46e7-82f5-9f1fbeb29503",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e6dd0b5e-4b16-494a-b62b-18019eadc6ab"
        },
        "item": {
          "id": "59a34629-11e0-4f53-bd3d-355c1f674a86",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bdaa43f3-9ed1-46d4-ae90-e76eacdfab62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d3e6ba-7091-4aa8-9f08-74e412711a80",
        "cursor": {
          "ref": "03d0fdd7-1257-48d0-bdca-8ce78a032c30",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f3bc38f1-4745-4909-87e4-71592719e580"
        },
        "item": {
          "id": "84d3e6ba-7091-4aa8-9f08-74e412711a80",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ac20f7ad-6e42-44be-a019-d7621acdf7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19edd57d-7329-41f8-bb5a-41a6a37c27fe",
        "cursor": {
          "ref": "ca4ef767-b1ac-470b-a72a-c2fe11621e18",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fd5a00cc-b5f2-4722-ae3c-0567e0c8416f"
        },
        "item": {
          "id": "19edd57d-7329-41f8-bb5a-41a6a37c27fe",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6d606a22-eb5b-40cc-b141-78eb671bc89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a159597-1ffb-4881-a051-2f38acfa6760",
        "cursor": {
          "ref": "8cc8d6f9-0d7b-4327-b6b7-372bafb0e096",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "24c9c033-93f1-4fd1-b213-25b3e52e93aa"
        },
        "item": {
          "id": "5a159597-1ffb-4881-a051-2f38acfa6760",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aabd355a-2d37-4223-93ce-1dc58db9e7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ebcba6-cbe4-4323-adb1-c9f7ae4ab1a1",
        "cursor": {
          "ref": "e5289d97-159b-40c7-bfec-c1eaf9dc0f80",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "643bba04-6868-4170-bafa-245b560dce63"
        },
        "item": {
          "id": "63ebcba6-cbe4-4323-adb1-c9f7ae4ab1a1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f3067c1b-c693-43cd-ac3c-988f03425c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78f2671-8156-4cb0-bd8f-c851f473089a",
        "cursor": {
          "ref": "dad3ddd2-ed25-4af3-8f8d-813125fd0c0c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "587259b1-4283-4bc2-9c32-7855b4cfe454"
        },
        "item": {
          "id": "e78f2671-8156-4cb0-bd8f-c851f473089a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a8d5a9df-0bb9-443f-b8ae-4e336adc7bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5555a7b9-5020-4f5d-9f1e-6bde08fbc7d1",
        "cursor": {
          "ref": "76c8b9cd-fd2a-446b-874b-0ce2b962f38f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c2e46231-7298-4b3b-b203-7482a6988b21"
        },
        "item": {
          "id": "5555a7b9-5020-4f5d-9f1e-6bde08fbc7d1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4586e355-6901-47ab-91a6-7904a7ace39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0f2a29-cc9a-43e1-9d7e-00281d014f16",
        "cursor": {
          "ref": "f8bbb355-c3eb-40c3-8f8a-c5af8252bf6a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6987d464-a780-42d6-9bd7-9b5e4dd7ca8b"
        },
        "item": {
          "id": "2f0f2a29-cc9a-43e1-9d7e-00281d014f16",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e27a2fe3-edf2-4c84-8b7a-e2ea5ef3943e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c8ce58-2d23-4fde-b30b-dc62b0461dc0",
        "cursor": {
          "ref": "2b3b1503-aa8c-4bdd-9051-0663c299fe13",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "baecf74f-bc31-4e17-ad53-2225d438a2a4"
        },
        "item": {
          "id": "c9c8ce58-2d23-4fde-b30b-dc62b0461dc0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "70c25a91-60e1-4167-9c38-fe6725cafc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2ab3e9-d318-4fdb-9b9d-259fc8aece61",
        "cursor": {
          "ref": "189567c5-f225-45b9-88d7-e82ea8338b26",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e0b45dab-f5ca-40ec-a690-29860ce8bece"
        },
        "item": {
          "id": "8a2ab3e9-d318-4fdb-9b9d-259fc8aece61",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f3fc3865-309b-4327-bc0d-d23cd8d41238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bd6c01-7bf1-4bbf-8e4e-9c80d17f0acb",
        "cursor": {
          "ref": "88d120c5-d86d-4075-a300-10ec2561e982",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "603e9da8-444a-4e6d-bc51-2c62713586b6"
        },
        "item": {
          "id": "90bd6c01-7bf1-4bbf-8e4e-9c80d17f0acb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f66900d9-a3e4-4a14-98ab-b929360bcd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4809882-03d0-43f3-867c-4536a6d6bd3f",
        "cursor": {
          "ref": "abad49b6-75f8-4af2-ae3e-04be46d67015",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8e7c17a5-9af4-453a-89f9-d16612024074"
        },
        "item": {
          "id": "b4809882-03d0-43f3-867c-4536a6d6bd3f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c1f12e7d-dcd0-4afb-8394-23519b6c4f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed88c85-cbc2-41a9-8f47-c349306d6a63",
        "cursor": {
          "ref": "14640e12-7409-4d05-b1fa-a5c95a18c268",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0ccd13bd-a80c-4140-83df-250acc59486b"
        },
        "item": {
          "id": "eed88c85-cbc2-41a9-8f47-c349306d6a63",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4a9aaa32-090d-471e-8d2e-ad08e76452ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee34e3e-14d2-4738-bd81-c1d2ffa4713c",
        "cursor": {
          "ref": "70401054-3d07-4633-9dd9-02ce7061ec97",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d104fb3a-84a0-4214-aa72-fca032e539c1"
        },
        "item": {
          "id": "cee34e3e-14d2-4738-bd81-c1d2ffa4713c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a8642ed0-3b35-48a9-b79e-b18b131d1b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52060681-a136-4274-a4fa-8c6441859642",
        "cursor": {
          "ref": "549194c6-61a9-414b-a151-fa7343fc83ef",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3773da29-4f8a-44c4-b798-d87edcd9013c"
        },
        "item": {
          "id": "52060681-a136-4274-a4fa-8c6441859642",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "680bbeb5-8d6e-4893-b503-3c2038bb57d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f23e77-1962-49f1-93a1-1b9f5b9999e3",
        "cursor": {
          "ref": "0cfd1d54-539b-4886-9415-241d72304129",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "82484f97-a30a-4b4b-9994-2bd877bd630d"
        },
        "item": {
          "id": "e5f23e77-1962-49f1-93a1-1b9f5b9999e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "760fbd09-37be-4f8c-82d4-1822558425e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1625491a-ba6a-44df-8777-b24330a5ad5a",
        "cursor": {
          "ref": "8e6a708b-aded-4986-ac2e-407153d64b6b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "032b24b3-407a-4eed-a16d-ca9f098d6644"
        },
        "item": {
          "id": "1625491a-ba6a-44df-8777-b24330a5ad5a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fd8fac34-175d-41fe-893c-252c2e304ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85e1666-1795-4919-a757-5ca16bf2e6e4",
        "cursor": {
          "ref": "1de76b8b-f5ee-40df-bab9-66cd5fc21b56",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9e89386b-8e26-494f-b864-9e250ed20381"
        },
        "item": {
          "id": "a85e1666-1795-4919-a757-5ca16bf2e6e4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9627e15a-82ef-4b8b-a4b9-5baba82e1100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3048e44a-c169-4ff1-ab0a-55eb84040441",
        "cursor": {
          "ref": "1cb6acd1-1c75-4751-aa07-3f712b61af97",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "531c75d9-31cd-4819-92d5-4fa9252ecad5"
        },
        "item": {
          "id": "3048e44a-c169-4ff1-ab0a-55eb84040441",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "16299274-fc14-4588-83c4-fa0fdb812cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248777a3-762a-4a1c-b259-ea1c4ed2ebd3",
        "cursor": {
          "ref": "311aa41d-3ea7-478b-83a4-5250e0aada8d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fc6c22fa-811b-496d-ba34-98c4db6e2079"
        },
        "item": {
          "id": "248777a3-762a-4a1c-b259-ea1c4ed2ebd3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "19ef79ef-c542-4409-a255-b9ae93bff2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731c5a4a-a9b6-4946-a248-910ff3739dd7",
        "cursor": {
          "ref": "6b07390b-0527-49bc-9a2f-75bb38b3934f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "843d75db-34d5-4dbb-8295-4613a18f4a02"
        },
        "item": {
          "id": "731c5a4a-a9b6-4946-a248-910ff3739dd7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5897cc40-6cf4-4cfa-89e9-752aaa659006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb471b8d-51c1-4e16-8935-47ca8da44f77",
        "cursor": {
          "ref": "ad222b55-ccb1-4564-a706-8443211b9812",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0da44886-789f-4828-b382-1b5cf3f544ac"
        },
        "item": {
          "id": "fb471b8d-51c1-4e16-8935-47ca8da44f77",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5dbdb617-fd46-4562-91eb-cab0d005397a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fff450-7ccb-48e3-8c63-87dbe176987c",
        "cursor": {
          "ref": "0d5a4c36-a108-4c9c-94e8-d385dfc669b9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7ee6173c-1edf-4010-8676-2c068b2ed722"
        },
        "item": {
          "id": "31fff450-7ccb-48e3-8c63-87dbe176987c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0806c228-cd0c-4470-b9b9-ed5dd56123f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67254040-035b-4398-be75-071bb3008a40",
        "cursor": {
          "ref": "5a2437b9-44c4-4764-8019-c1140ecba52d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9dbc424a-dcec-4d4b-9f38-8a82a5603ea9"
        },
        "item": {
          "id": "67254040-035b-4398-be75-071bb3008a40",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5b3474df-f787-4b01-90b6-1ea1866f8383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455bb606-be94-4d46-a571-7b5ff0c3d4e4",
        "cursor": {
          "ref": "b834196e-617d-4b77-a9e3-17013d31b30a",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5d46a6da-1bf1-4385-a9c7-fe75f818ebdb"
        },
        "item": {
          "id": "455bb606-be94-4d46-a571-7b5ff0c3d4e4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "78f72f10-acd7-46b4-af2e-1142d7a8b5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad02580-d89b-4bc1-b3e7-1291fe4e29cc",
        "cursor": {
          "ref": "23810ba7-f2d0-4bee-8605-39253d78962e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a344d9bd-f846-469b-9738-f5eb186ff210"
        },
        "item": {
          "id": "aad02580-d89b-4bc1-b3e7-1291fe4e29cc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f4dd88a2-7d64-4f81-9440-48fc8e40e9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4251ebe6-e161-4a49-b44e-b9e6f4009c1f",
        "cursor": {
          "ref": "1c2e2c71-cb06-4315-8285-dc0bbfeb642b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bbf6f204-fc71-4b6f-8fc1-398bc38e397a"
        },
        "item": {
          "id": "4251ebe6-e161-4a49-b44e-b9e6f4009c1f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "edff9966-a7bc-4eda-a95e-d73a20f7f00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729b3f5e-4867-43b8-8f82-06e4c3f69194",
        "cursor": {
          "ref": "021b2dd5-2612-4600-804c-da8063260980",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b4a6287e-443a-43c9-99ca-c969ce61bfa0"
        },
        "item": {
          "id": "729b3f5e-4867-43b8-8f82-06e4c3f69194",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ecd3be38-2767-437a-b808-c0dd5d64394e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd2dd1c-b528-4ad8-864d-58d18d5dd423",
        "cursor": {
          "ref": "340aebbd-dcd4-4174-8170-27be1d3df217",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f87a3d4a-e53e-4af4-8a6e-5fa06bd32ece"
        },
        "item": {
          "id": "afd2dd1c-b528-4ad8-864d-58d18d5dd423",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7c5cd957-3416-4da0-8a0a-29b2e622c593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ba5cf2-53ed-4848-a8a8-347b458669af",
        "cursor": {
          "ref": "b6450a39-ff54-4909-9368-262b3bc08000",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "55fd2251-5214-48e4-9e3b-d68ba0acdd81"
        },
        "item": {
          "id": "81ba5cf2-53ed-4848-a8a8-347b458669af",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cd7cfc0d-c9db-4d74-884e-0b34b12dfeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebbc5f2-cb16-4f8f-a2d7-5bd23dea8338",
        "cursor": {
          "ref": "26b44b4e-ba92-442f-8311-c71996ac8535",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "92f5b832-e791-45a8-a424-503b557f2b37"
        },
        "item": {
          "id": "eebbc5f2-cb16-4f8f-a2d7-5bd23dea8338",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "895de020-010a-43f7-9a47-db43ce06e43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a4f047-f1e0-4733-be63-8fca3f066a11",
        "cursor": {
          "ref": "5ba936ec-58ff-42fa-bed6-dbd38517caa9",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bf6b06b8-d71e-4752-8d1f-a81cbd83cf0e"
        },
        "item": {
          "id": "94a4f047-f1e0-4733-be63-8fca3f066a11",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fb135d1e-f27c-4d0f-b91f-adb9bf34e527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c76fbc-00ec-4bf8-8cb7-1aa4260923d4",
        "cursor": {
          "ref": "e86013af-43dd-44f5-90c1-d95cb209c589",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b6442989-7b50-4d35-ab7b-458cb95c236e"
        },
        "item": {
          "id": "86c76fbc-00ec-4bf8-8cb7-1aa4260923d4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6f0f0902-124c-41d5-8725-1fcf6189e360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673e0755-9465-4bfd-996f-12ef79aa2db3",
        "cursor": {
          "ref": "1d1eb2f3-71e8-4cdd-a31e-f15318118bc7",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "41396f2c-affe-4598-b4fd-3fc4ddd94eb7"
        },
        "item": {
          "id": "673e0755-9465-4bfd-996f-12ef79aa2db3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1fc1be0e-8dd6-4768-aa57-474efd1a7e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3cc97e-0aa3-4859-92fb-dc71ca5236cd",
        "cursor": {
          "ref": "66e741e1-5cd8-4cb3-89dc-bc0542d7bd58",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f72f97bc-d3bf-4de1-a04f-d09236c311ac"
        },
        "item": {
          "id": "2d3cc97e-0aa3-4859-92fb-dc71ca5236cd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "67d33a7d-7902-4aa7-9012-e6e977c0a534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2fe9fe-264d-4149-8853-3949dc9e9e59",
        "cursor": {
          "ref": "20977664-a762-4b97-871c-1b7a08d78dff",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b870057b-2fbe-4112-b413-450bc15de3d5"
        },
        "item": {
          "id": "4d2fe9fe-264d-4149-8853-3949dc9e9e59",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "248f9275-bc82-4add-95c0-3cea0b94d593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd99b8e-03b6-46cd-bca9-cec83b19ae8a",
        "cursor": {
          "ref": "1132476d-bed8-4e7e-beb9-43d3606452b8",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8d0c87b5-06cd-4d91-99c9-d8f41dd8be3d"
        },
        "item": {
          "id": "1dd99b8e-03b6-46cd-bca9-cec83b19ae8a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "058f9095-d8ed-4447-9044-35f97fa4968f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7866a92-329b-4eb9-bcc8-aeb53592b122",
        "cursor": {
          "ref": "cd8b0fb8-bb5c-4316-bdbf-43883a268979",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0d72d9ac-4dc0-45ec-af6a-ef12bf8570e5"
        },
        "item": {
          "id": "e7866a92-329b-4eb9-bcc8-aeb53592b122",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "634c43a2-a3fd-4896-885f-ad46ca39e388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b34242b-281a-41d9-8040-1c88c6dc8989",
        "cursor": {
          "ref": "746bee54-5d43-4f90-885b-43966ab931fc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ce1867c6-899d-447f-b484-a7b45d103bb1"
        },
        "item": {
          "id": "3b34242b-281a-41d9-8040-1c88c6dc8989",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6c18e078-6285-4513-866f-5670628d4cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cf2620-7b72-4b20-8395-8f325a11c95f",
        "cursor": {
          "ref": "f4f537ca-6282-474d-95a8-b4b97dae49e8",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "04106c0a-ae70-4a72-8873-8a7d3f502c50"
        },
        "item": {
          "id": "c6cf2620-7b72-4b20-8395-8f325a11c95f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "28293dd3-00a0-4c8e-b8ff-b7ed69064ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a57651-74bd-4c43-b99d-857135c1a2c5",
        "cursor": {
          "ref": "edae73f0-e564-4235-b20c-29b0ada29436",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ba277bc6-e9ec-4f29-b91e-04dbb42aaa4c"
        },
        "item": {
          "id": "80a57651-74bd-4c43-b99d-857135c1a2c5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d49d028e-fb72-42ef-a13c-fa55dc747eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3224cfdd-1e73-440f-a0d4-4d8fc80ffabe",
        "cursor": {
          "ref": "a85bcc38-8a26-42c3-b302-2a30988b3329",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b081cfc4-6d8a-421f-aec9-f2029ad2bcdc"
        },
        "item": {
          "id": "3224cfdd-1e73-440f-a0d4-4d8fc80ffabe",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5b0c9f8b-5a65-4784-89b7-6e92a552fe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f439c037-f6e4-47b6-b07f-e6507ab29cbb",
        "cursor": {
          "ref": "de86b22a-c896-4241-a58d-3100e2d4242b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3054cf99-5bf3-4dc2-b763-9d82d5d06793"
        },
        "item": {
          "id": "f439c037-f6e4-47b6-b07f-e6507ab29cbb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6d6cfc75-df16-4795-a240-571dd785b68e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540b6dab-203c-4905-88e8-d9b51d821516",
        "cursor": {
          "ref": "7d09b64a-7680-4a0d-9fca-087781de99e7",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "65d73951-360d-47b4-98b0-d429716b1d85"
        },
        "item": {
          "id": "540b6dab-203c-4905-88e8-d9b51d821516",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "69c3ae4d-26aa-41f9-98c2-9994740c187b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2ddc20-ee54-4dd6-9adf-1ea6dbfc463c",
        "cursor": {
          "ref": "6461bd29-af2b-47a0-a66d-c490538a8c1c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "62e21222-c346-4017-847b-810a8b1f092b"
        },
        "item": {
          "id": "8e2ddc20-ee54-4dd6-9adf-1ea6dbfc463c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c08d59ff-8684-46c4-8b21-d266da3b70e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75614d8-827c-4362-9138-6f030d76095b",
        "cursor": {
          "ref": "765e312d-72b3-464a-88e4-be3c6d3b8814",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3db6a728-06c7-413f-9997-f64aab64759b"
        },
        "item": {
          "id": "e75614d8-827c-4362-9138-6f030d76095b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3f30af1d-02a1-4b20-aac5-996e24ba51c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5215b4cf-3f07-4360-86f4-1c4cbe55a68f",
        "cursor": {
          "ref": "5049b894-11db-441b-b4f9-edfad4f8b026",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "18cdb3af-fa81-4f42-a7bf-40b71fa5e764"
        },
        "item": {
          "id": "5215b4cf-3f07-4360-86f4-1c4cbe55a68f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "af210161-f4cc-4d86-b8e4-3334d45a378f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349d9754-8517-47e7-bce6-d61ecb2b8248",
        "cursor": {
          "ref": "0704a278-374a-4341-8d2e-004786bfebc2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e22f221b-3c15-4c92-923b-7660abbb2718"
        },
        "item": {
          "id": "349d9754-8517-47e7-bce6-d61ecb2b8248",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b25ddc13-fc55-48b8-b72d-bb56043db139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd6692e-9150-4fe3-a487-dce5db1aa775",
        "cursor": {
          "ref": "4c7e9b9a-cd3d-420a-a1ea-8d3c329f1880",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0cf67097-0e8f-4ca6-9af5-d119c0c4b052"
        },
        "item": {
          "id": "bfd6692e-9150-4fe3-a487-dce5db1aa775",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "455f523f-6b24-4c30-b81e-e4965ef75c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b49f7a3-408e-49ac-baab-6cebec821895",
        "cursor": {
          "ref": "53b0447d-30a6-4356-ba12-8bb00c960c7e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1a80465f-2f23-4aeb-a2ee-7175332894a3"
        },
        "item": {
          "id": "8b49f7a3-408e-49ac-baab-6cebec821895",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "727ffb4a-8f9e-4b76-ab62-a1343d69898e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f611aef-1c95-4b62-9395-1034640d1e93",
        "cursor": {
          "ref": "05f57736-9989-4b2f-97ed-be082d375c7d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7959facf-3ae9-4345-8673-448c33db5917"
        },
        "item": {
          "id": "6f611aef-1c95-4b62-9395-1034640d1e93",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b4dc0a07-53f9-462d-8771-82ab04f86435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee2f1f6-8b6b-48fa-aa6a-5f1e456bdee2",
        "cursor": {
          "ref": "1484ca90-486a-45f9-8e8e-d75bd675422b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "320cc36d-ff6b-4f05-bc55-75825096c505"
        },
        "item": {
          "id": "7ee2f1f6-8b6b-48fa-aa6a-5f1e456bdee2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4e59fbe9-5b8b-4674-9b3a-bb7aa3c2a906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7e2fc6f4-9a4a-4a39-ba54-8756dc314583",
        "cursor": {
          "ref": "8608fdd6-5098-4ebf-b146-d874944854da",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4c9f066a-9cd9-4c6d-afee-1dc97f29ce1a"
        },
        "item": {
          "id": "7e2fc6f4-9a4a-4a39-ba54-8756dc314583",
          "name": "credentials_issue"
        },
        "response": {
          "id": "14fa7003-3bc8-48bb-823a-91840493bfc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d7516a54-6995-4052-aea0-2a998553af23",
        "cursor": {
          "ref": "a10e1258-6e71-4054-96e7-45b68ee33c76",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "54060104-a6cc-407f-bb1c-6b0ec46faa73"
        },
        "item": {
          "id": "d7516a54-6995-4052-aea0-2a998553af23",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0196f9bd-a260-42a8-b4b3-0767ded8c834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "830b4b2b-23cf-499c-b304-be0309bf60d9",
        "cursor": {
          "ref": "3c99955b-92ce-4ea2-b169-fb54d86dad69",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c037a6e3-4222-4d99-ba9c-08f55d68bb07"
        },
        "item": {
          "id": "830b4b2b-23cf-499c-b304-be0309bf60d9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b5613d87-2615-426f-8d3e-4e0d8e38a435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c7cfca0b-2da3-40b8-8316-27ff7fd8cff8",
        "cursor": {
          "ref": "3c92fc8f-5d9c-4c27-9905-9ffb65cefeef",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "431030b4-82f0-46ca-90fa-42fd4bd6bd1e"
        },
        "item": {
          "id": "c7cfca0b-2da3-40b8-8316-27ff7fd8cff8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "08465f84-6442-4c14-ac57-3eca79818454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f10adc06-c2c0-4bbc-9a05-b17c8bc92d39",
        "cursor": {
          "ref": "878901b5-31b8-4bff-a726-a4e33abccfe7",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ba309923-cac6-4807-9d45-3f41adbc311d"
        },
        "item": {
          "id": "f10adc06-c2c0-4bbc-9a05-b17c8bc92d39",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "41ba1d54-1ddd-48b5-bed4-3257845a10a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "33bb2df1-2be2-4411-8843-d845b8f1b6f4",
        "cursor": {
          "ref": "294122cc-ed68-4088-8812-62e3c5dbb050",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c11bcb53-6001-465d-a143-d01a8825b203"
        },
        "item": {
          "id": "33bb2df1-2be2-4411-8843-d845b8f1b6f4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2c7c2ffe-2a5e-455f-b33a-3854b19ab70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9cd769bf-358d-437d-b799-7f080da4d2db",
        "cursor": {
          "ref": "5b5b2016-12ac-4a7f-9309-528a38d4c302",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8d849425-7af1-4ff3-adc8-3877d5b879e3"
        },
        "item": {
          "id": "9cd769bf-358d-437d-b799-7f080da4d2db",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "04399481-73a8-481d-8c44-a8e04aa66e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b4f903-6cf2-49b7-b8eb-21613965f16d",
        "cursor": {
          "ref": "0b22c7f0-2049-476a-beac-18d43a4593d6",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6dc64bf4-1345-41a0-a5b1-5f4a86b0ecff"
        },
        "item": {
          "id": "76b4f903-6cf2-49b7-b8eb-21613965f16d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bc35232a-96ca-4350-a523-c87d40ab40fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050eb55e-75da-4b82-bcd3-4c930ce423cf",
        "cursor": {
          "ref": "5c80a812-c218-4d9d-849b-31db6e292205",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "78fe9018-bbbf-47f9-86aa-e82d71b5b44e"
        },
        "item": {
          "id": "050eb55e-75da-4b82-bcd3-4c930ce423cf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "26818cbd-0931-4599-b3f7-4565cb64e23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f91c96f-c8e7-40ee-a134-e4057e729d7c",
        "cursor": {
          "ref": "3cb3fa5f-fabb-4d90-90f8-113ff26aba40",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d2cd4b49-725d-4070-a6d8-46687d4c5aca"
        },
        "item": {
          "id": "7f91c96f-c8e7-40ee-a134-e4057e729d7c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8c6c4ac7-d46f-42dd-9851-ec165a7a37a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed43a45-a813-438d-af95-5d9a23962cbd",
        "cursor": {
          "ref": "fcc0629e-13b0-4f78-9250-8f9ff1a06c6b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5333f426-af3c-4905-ba55-0817c3d1bdb7"
        },
        "item": {
          "id": "5ed43a45-a813-438d-af95-5d9a23962cbd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d33c7bee-2d5e-4757-8dab-cc1307592620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a55a35-b045-498d-bb96-e8252543bee1",
        "cursor": {
          "ref": "0af469a0-f2c2-4aab-8b76-7eddc238b0b2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "16f3c53a-fe37-4578-a9aa-5aa3993d3063"
        },
        "item": {
          "id": "19a55a35-b045-498d-bb96-e8252543bee1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9a2505d5-d3a4-4a30-8ad7-7afbde4417a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b5821a-0243-4f5f-8d3f-29e1996ad73b",
        "cursor": {
          "ref": "c43852fc-4490-4bbf-b45c-24a6a1c97280",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5a605e89-44cb-4957-a206-2a02ebdefb8e"
        },
        "item": {
          "id": "24b5821a-0243-4f5f-8d3f-29e1996ad73b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8bb0eccb-5c36-4dd4-9671-f2d642b96eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff76d73-db6e-4f6c-8463-09c87fffe349",
        "cursor": {
          "ref": "8173e46b-5591-4776-9068-4f6acdc19a1b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "14c2d71c-0d78-4be2-9b84-8404ea917b5c"
        },
        "item": {
          "id": "4ff76d73-db6e-4f6c-8463-09c87fffe349",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "53abcaaf-cf05-4ed1-88d7-a2ca26609031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbce0c4-b9b5-42e0-a14c-9be37897f687",
        "cursor": {
          "ref": "ebaca4f7-2a19-491f-972e-623656d066b3",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "24a574ed-a461-4749-a5a3-b57b075ee207"
        },
        "item": {
          "id": "3cbce0c4-b9b5-42e0-a14c-9be37897f687",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e8438ca6-dc16-42cf-b6da-1a1a69410ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5c5311-4670-484a-83db-c9eda14385cc",
        "cursor": {
          "ref": "cf3767fd-8ad2-436a-a91b-48b9490d376f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1a8cd2e5-de73-49df-a2d1-b1b115199ab1"
        },
        "item": {
          "id": "2f5c5311-4670-484a-83db-c9eda14385cc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "19dcf4c2-20dc-4fa6-850c-e1eb08cc9559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f32eca-3b67-4426-9dab-2951f1b838e2",
        "cursor": {
          "ref": "7dccbd38-b454-4054-8794-0608a7c9a082",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7a6a0ed1-09d1-462c-9623-72b77f1b3e55"
        },
        "item": {
          "id": "91f32eca-3b67-4426-9dab-2951f1b838e2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "09efe8ed-57c8-4517-913a-2fe2608497eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5709153-ca5b-468b-b4bb-338ef329d857",
        "cursor": {
          "ref": "111455c4-d6d8-4f5b-a63f-6d5e1a646fa0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bd0aa223-8431-4d8d-91d4-91f74b5f2f7e"
        },
        "item": {
          "id": "c5709153-ca5b-468b-b4bb-338ef329d857",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5ea66652-feeb-4b09-9e7c-b0c2bf93dd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293f8a00-5eb1-4f45-b9a2-bd39640bd941",
        "cursor": {
          "ref": "eea80ac6-6c0f-4076-bd2a-f020d0b3193c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "12927001-de58-4990-87eb-4cd5bc32a871"
        },
        "item": {
          "id": "293f8a00-5eb1-4f45-b9a2-bd39640bd941",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ce9916b3-23cf-47c2-bbe3-aa54b72208dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cca9667-d0fb-429e-8bbf-afe4ea4adc83",
        "cursor": {
          "ref": "468df743-b5e3-49bd-bd14-c64ac07a694c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "85422a66-9583-4216-8fa1-5fd1ed46b0e9"
        },
        "item": {
          "id": "5cca9667-d0fb-429e-8bbf-afe4ea4adc83",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b07eccaa-7a11-479d-aeba-01c0fc8a86c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebefcc0d-4a85-48b9-bfb8-4140d82e8102",
        "cursor": {
          "ref": "852acf5e-80cc-4cbc-a272-6ef656dc4e8e",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "79532942-db86-4cb2-bb1a-b70726b5232f"
        },
        "item": {
          "id": "ebefcc0d-4a85-48b9-bfb8-4140d82e8102",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f71373e7-4b84-4a93-a6ab-a5efa6277552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a5ecb1-6e94-4e71-b252-f3921fd7eb62",
        "cursor": {
          "ref": "354699c3-a533-4052-9662-f9fe399108a2",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "02a7ebf5-5a15-40a8-aa13-dc25d28b5a05"
        },
        "item": {
          "id": "88a5ecb1-6e94-4e71-b252-f3921fd7eb62",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "619b3ced-4e91-496b-8562-c894dddf40bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17e9e10-d221-44a9-89cb-dcb2b924e019",
        "cursor": {
          "ref": "d24eeecc-bb44-4082-9946-eb0532dd9514",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bc2facdd-d9d7-4de0-adab-8536f16a8693"
        },
        "item": {
          "id": "f17e9e10-d221-44a9-89cb-dcb2b924e019",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fadc6975-7e02-450a-8fda-eae2a6eddb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e35ba79-7cca-4e27-984e-c2c3ffed030d",
        "cursor": {
          "ref": "3253d685-63f2-448a-91da-104d343e4647",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cd00a3b8-b087-46a0-b907-910654b50312"
        },
        "item": {
          "id": "3e35ba79-7cca-4e27-984e-c2c3ffed030d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "921755c9-ab06-4761-8c90-48741e957f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91136173-411d-46d7-8cae-6293df089dd6",
        "cursor": {
          "ref": "cc97f929-14fb-4855-93ba-c3d20a1b293d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "87177aa8-19fe-4f39-b2c0-456a31a700c1"
        },
        "item": {
          "id": "91136173-411d-46d7-8cae-6293df089dd6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "93db4ce3-a45b-4945-9101-01f94452b0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddcc0b9-8f9a-4b42-be03-27d7a6657658",
        "cursor": {
          "ref": "f46725d6-7b6e-417d-8120-5ca18860a851",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2fde667f-b166-4ba4-93d9-b42e53d1f2b7"
        },
        "item": {
          "id": "bddcc0b9-8f9a-4b42-be03-27d7a6657658",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "85d2710b-4e89-4c10-8311-0b0c0fc2a7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988575e9-f51f-4331-af99-59aa7fb74b0f",
        "cursor": {
          "ref": "0640f52c-5f5b-4d42-ac9d-2153a57dd97c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2a923673-f656-462e-8247-cd0e7b80a234"
        },
        "item": {
          "id": "988575e9-f51f-4331-af99-59aa7fb74b0f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d1f2569d-4227-4db7-ba33-0e1c0e52e561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20aef5f-e331-4404-b2dd-b77199ea8827",
        "cursor": {
          "ref": "33bea847-324c-4326-bc43-203dfc9f6478",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8024ad12-6590-4d2d-b79a-4067c51265fb"
        },
        "item": {
          "id": "b20aef5f-e331-4404-b2dd-b77199ea8827",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f1c59558-5217-4c44-9f9f-c960fcad0aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d86520-d1ad-49d5-b1c0-fcbf3ae9c5ce",
        "cursor": {
          "ref": "c4789453-d72f-48f6-84e1-48c202b0c6af",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cd4870e3-3729-41d1-8f3b-d7a9be89291f"
        },
        "item": {
          "id": "55d86520-d1ad-49d5-b1c0-fcbf3ae9c5ce",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2fbdb65b-20be-4e80-a288-5f20fa497cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bcb6eb-9566-4d1e-b3ce-65cffeda7a74",
        "cursor": {
          "ref": "08edf7ad-524b-4472-b747-eaa48f8b927c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "16422cfa-39a2-4a53-9de5-0d90420863a1"
        },
        "item": {
          "id": "b5bcb6eb-9566-4d1e-b3ce-65cffeda7a74",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2600244e-13d3-4d7b-88dc-bfd49e348081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386b93d8-4875-4b24-b20e-fc5354b69df1",
        "cursor": {
          "ref": "bf7e8cfa-6032-4a54-a894-71ff0b42edad",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5ee9aab8-87d1-4624-a1ef-a61610279415"
        },
        "item": {
          "id": "386b93d8-4875-4b24-b20e-fc5354b69df1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d3d35fa5-5a50-4fa8-a990-a9446ba5155f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095bb771-29db-46ee-a03d-6551bf21f804",
        "cursor": {
          "ref": "8b46d6c5-f514-4379-b746-1cb7753ef1c9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d4394a90-971a-4b52-a1c4-71fc4b18f2d8"
        },
        "item": {
          "id": "095bb771-29db-46ee-a03d-6551bf21f804",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "00c46686-9104-4adc-a455-ce7c763ea9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164429b4-38e4-4c02-97ab-de582f50993c",
        "cursor": {
          "ref": "23e6dd6a-318c-4f23-90c2-44611ffee44a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4af17920-a9f7-475c-8875-b987c49d830b"
        },
        "item": {
          "id": "164429b4-38e4-4c02-97ab-de582f50993c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "08fae510-7e45-4851-b43b-69a6de982b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ead4e8-880c-4209-86ee-99c24c6af49c",
        "cursor": {
          "ref": "36291a72-f5ea-4b31-aa61-b05506627bfe",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "721b749f-2758-4e62-acdc-0df9e7f7c612"
        },
        "item": {
          "id": "62ead4e8-880c-4209-86ee-99c24c6af49c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b7e1ba99-0c0a-428b-998f-a92efce7cc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64537615-1fb9-4587-984b-a5e19e8ee055",
        "cursor": {
          "ref": "fc42f930-9d45-4441-80ef-b91afd82b283",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6a97d595-00ac-4a87-a113-4f23cadb9e00"
        },
        "item": {
          "id": "64537615-1fb9-4587-984b-a5e19e8ee055",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9d5cf767-7728-4c56-8ded-232179afa2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90101d6d-cd58-4760-b20a-d23bb213c701",
        "cursor": {
          "ref": "80c37b75-84a8-4cbc-be1e-22836300926e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9089c305-a375-4701-8705-e7593e0c1d28"
        },
        "item": {
          "id": "90101d6d-cd58-4760-b20a-d23bb213c701",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "12829e72-b686-4c7f-b257-0d00dba2916a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9df872a-9676-4917-af38-4c1078d5f561",
        "cursor": {
          "ref": "77b1486c-5507-49e2-986a-9d2d0e57ae64",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a575ea7b-1c9a-420b-bb55-d803fbd29cc9"
        },
        "item": {
          "id": "e9df872a-9676-4917-af38-4c1078d5f561",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bfec08a8-5f49-4c1f-9e00-181f64528a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9539ad26-4a01-4ad8-823e-dbbb79eadea1",
        "cursor": {
          "ref": "6fec5113-d3bc-43cf-a9cc-ba95125ad7ad",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "021c8f13-98a2-4d3f-a086-dc960f558716"
        },
        "item": {
          "id": "9539ad26-4a01-4ad8-823e-dbbb79eadea1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e1dd899d-6e67-4ae3-a2a1-f0f5018af05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2b00db-56ef-4079-ad1f-32ccbdc740cb",
        "cursor": {
          "ref": "dd00928a-dd69-49e5-a671-cdd875d63388",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6d3475e4-5d82-4e1b-8bad-7a6753f959f9"
        },
        "item": {
          "id": "da2b00db-56ef-4079-ad1f-32ccbdc740cb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a2acacd1-0773-4fa1-8341-5932bfdea3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706b4ebd-ede6-4f4d-ad4a-66a08f48a0dd",
        "cursor": {
          "ref": "cc0f5e1e-4be5-44cd-9220-269ae9d32c05",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3344f8c6-02ef-4230-a406-9b1fa9c0c5b0"
        },
        "item": {
          "id": "706b4ebd-ede6-4f4d-ad4a-66a08f48a0dd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "001f759f-7f63-4ec8-85b1-f075750da945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd8b13b-41a9-4be3-8cd3-f7610d33e047",
        "cursor": {
          "ref": "782f0412-a89f-41f3-b774-6a2263e47727",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1a4a24e9-260b-4a6c-82b0-f06cd607107b"
        },
        "item": {
          "id": "6dd8b13b-41a9-4be3-8cd3-f7610d33e047",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2fd5ca5b-56b7-4d08-a572-741a4593c8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6a81d0-5bfd-4c7d-9772-d100858167bc",
        "cursor": {
          "ref": "422dfba3-fbaf-4f2d-a4fd-f69cf7df21e4",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "034756f4-cf5a-4cbb-b3d4-8aa54056d8b2"
        },
        "item": {
          "id": "aa6a81d0-5bfd-4c7d-9772-d100858167bc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "aac76ee5-4eb0-432b-a23f-fd9f96c9cd41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1601756-8442-49c4-b9e6-8272486883fd",
        "cursor": {
          "ref": "b52ed148-75cc-48a7-9c96-39141961e276",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ed08a47e-cf26-4b9d-ae2c-b4f10af02155"
        },
        "item": {
          "id": "f1601756-8442-49c4-b9e6-8272486883fd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "db5828b9-d90d-4e33-9cfb-227e3bb00aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805c4eb9-458a-4030-9bde-72f78996db24",
        "cursor": {
          "ref": "d35f83f2-3358-4b6a-b9fb-71c421e8e86e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7b761a1b-465e-43b4-9b3a-e759a10992ae"
        },
        "item": {
          "id": "805c4eb9-458a-4030-9bde-72f78996db24",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f0523262-fb00-47b1-94e3-07f220642063",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3ba859-ae6a-44ac-9fff-852af2a4d76a",
        "cursor": {
          "ref": "b724c4e7-de9f-4dc0-b89c-1ac32abe98d5",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dcb2bed4-7e23-4a31-afac-08ad9c5db31c"
        },
        "item": {
          "id": "6b3ba859-ae6a-44ac-9fff-852af2a4d76a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "de524416-ca7b-451f-b6f1-5c1434650f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf57bb6-0291-48f9-96fa-d270d50f52ef",
        "cursor": {
          "ref": "4d0f87a9-c71b-4af8-863a-a270d1f1b94c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "752bca78-e715-4a11-b80c-95f5617d9f40"
        },
        "item": {
          "id": "6bf57bb6-0291-48f9-96fa-d270d50f52ef",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4711520e-8569-4b2f-a167-0c1609489edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66419159-e940-4ee9-b8a5-205b1415b79f",
        "cursor": {
          "ref": "1d424ae9-c6a3-4704-838f-c43910d91d84",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d8bce616-813f-4091-b3de-5e41878521d1"
        },
        "item": {
          "id": "66419159-e940-4ee9-b8a5-205b1415b79f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4a9290cc-be29-4899-9afe-e6a6b25909b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857dbc54-b0b0-46bb-9b73-eec4a00f1760",
        "cursor": {
          "ref": "79d12f41-a737-4e02-b9c4-0165f0dfedaa",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ff3cfe7d-86b9-4eec-a797-e92d31a6b7c9"
        },
        "item": {
          "id": "857dbc54-b0b0-46bb-9b73-eec4a00f1760",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2b2bc61d-f10c-48cb-8124-287ce8f989ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad627f8-c5c3-4ca7-a7bb-da956d3d7465",
        "cursor": {
          "ref": "1ad91c21-65b0-4bd8-8256-9997e08c9f93",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1e44485d-2cfa-4f2c-8f46-00b385dc191d"
        },
        "item": {
          "id": "4ad627f8-c5c3-4ca7-a7bb-da956d3d7465",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "aefe8fec-713f-465a-aa5f-0b5f04e8fd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f87581-93ff-499f-ac4a-f93e2a1402b9",
        "cursor": {
          "ref": "b2ed9cc2-b3c2-46a9-ac91-88ac2e7446cc",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d7ce1b36-0957-4812-87af-b409c5171aab"
        },
        "item": {
          "id": "54f87581-93ff-499f-ac4a-f93e2a1402b9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c71661d4-bb3c-4d4c-9d4b-c3ef74e267ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73a8dfc-017d-4697-8643-4b5bdc68a262",
        "cursor": {
          "ref": "b70c71bf-aabe-4f75-b7b3-5a55b68f2205",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "483bca47-841f-4378-9dd5-9a549bf549d2"
        },
        "item": {
          "id": "f73a8dfc-017d-4697-8643-4b5bdc68a262",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "aff4a4cd-3c80-45fd-b95f-1aa794802e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6d946b-cf02-4630-bb84-d5e4f539a5ff",
        "cursor": {
          "ref": "7076f9cc-8cc1-4601-8326-1735b664ee8d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "13ab6f99-665f-4a6d-94aa-48eae626946f"
        },
        "item": {
          "id": "bc6d946b-cf02-4630-bb84-d5e4f539a5ff",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4f5898fe-cd3c-46d5-b2f2-4a92311d99b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06267eb-923d-4f0c-aaef-96ab6c2909a5",
        "cursor": {
          "ref": "99c4c123-c359-4b7b-82f5-eec72ec30483",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8d2ec934-ebef-43e1-a489-31a23309a308"
        },
        "item": {
          "id": "c06267eb-923d-4f0c-aaef-96ab6c2909a5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ed0ea79f-8f69-45dc-b9cc-7cfc87a9603c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c36be8d-02de-472c-97de-3050ba49783d",
        "cursor": {
          "ref": "56a16607-8c4d-4a1b-93b5-d1f19d1b1b65",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "72949402-d97e-4797-8e71-d28e7628409d"
        },
        "item": {
          "id": "9c36be8d-02de-472c-97de-3050ba49783d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "04b4630a-9e12-4da2-b06d-8c84367233f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1512a974-0e21-429f-8856-e4d7623c8c2f",
        "cursor": {
          "ref": "d1384657-dbce-4bb3-b9c6-5d1ab38506be",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7b8cfbc6-a49b-4b50-b51b-bc14a7bb5c9f"
        },
        "item": {
          "id": "1512a974-0e21-429f-8856-e4d7623c8c2f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f52671e4-b9e9-4bb0-ac0f-5bf706fd3308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048173f1-87d8-46bb-ba16-86fd2762d5b7",
        "cursor": {
          "ref": "e89fac6d-36ad-44c8-953f-f75c5d87f034",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "38d9edfe-d059-45c5-8cdf-4cf7b90deb92"
        },
        "item": {
          "id": "048173f1-87d8-46bb-ba16-86fd2762d5b7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7519232f-2d78-4342-affd-ad533aca49f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126631a8-17de-40b8-be3c-e6433130fb83",
        "cursor": {
          "ref": "74e70bd6-2701-46a2-bc9e-d0d545b60047",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "83f2605f-3658-4f1e-abc6-14056878685f"
        },
        "item": {
          "id": "126631a8-17de-40b8-be3c-e6433130fb83",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b7b19f0b-05d4-4590-8e66-de0630080835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9ba000-c8b5-4eba-acb1-e23a68f1ad63",
        "cursor": {
          "ref": "1df9cb25-b986-46ed-9567-a25a22e5647d",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b2ede4ef-ee59-44ea-afd1-ce496e9400a1"
        },
        "item": {
          "id": "5c9ba000-c8b5-4eba-acb1-e23a68f1ad63",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e4b1be36-7792-4a12-863f-3be9655d6ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a62deaa-2e60-42a3-a148-f158e1b7d961",
        "cursor": {
          "ref": "6316460f-1190-4805-ae2e-000690ef1087",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1b3aa8af-8e48-4e86-b85f-b39e8728d052"
        },
        "item": {
          "id": "5a62deaa-2e60-42a3-a148-f158e1b7d961",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ad746003-199f-4545-97bd-051dd5f9a764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f794b7e4-c91a-4a4f-a744-ac3084b894fa",
        "cursor": {
          "ref": "ead88ffb-52e1-4424-8ab9-70d796156f42",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d40751bc-b90c-4d8e-8ebd-e9aabca17da0"
        },
        "item": {
          "id": "f794b7e4-c91a-4a4f-a744-ac3084b894fa",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2bf0f22b-0927-45ad-9d47-f89e64541878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1148c1-e0c3-434d-8024-f349ad4570e2",
        "cursor": {
          "ref": "30074e02-5d79-4845-95d3-799a98442435",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0ef4abf2-ab84-4c47-b0b2-88018df97e38"
        },
        "item": {
          "id": "ae1148c1-e0c3-434d-8024-f349ad4570e2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "91eeff07-1f50-4bcd-8921-439b1f1ad90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403b8893-2ffd-4def-ba8c-9bb4c7cce693",
        "cursor": {
          "ref": "212571e1-b081-4b14-adb9-b409e2f25a15",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f13a7123-574c-427c-8bbd-b438b4eeb637"
        },
        "item": {
          "id": "403b8893-2ffd-4def-ba8c-9bb4c7cce693",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8a6c0a63-4561-4443-80b5-ccd0e14e2174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0b2d06-c463-4729-9362-597b753a46b8",
        "cursor": {
          "ref": "ac278881-49c0-4d5a-a2c3-7aff49c85ca1",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7060e222-96f4-4010-bfb6-5774ee0f865c"
        },
        "item": {
          "id": "cf0b2d06-c463-4729-9362-597b753a46b8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "42f210fa-df2b-44d1-9e11-b9bc93cae3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4332aca2-5ea1-4250-b7ca-339707f13aa4",
        "cursor": {
          "ref": "5ffb39bc-6c39-487f-b670-a25946b9f99c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "59d1fd15-cdd2-49bd-8e6b-74e06031a599"
        },
        "item": {
          "id": "4332aca2-5ea1-4250-b7ca-339707f13aa4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "007e4e20-3678-420e-a320-66c780b53e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c49819a-6129-4247-ac46-8d256965a773",
        "cursor": {
          "ref": "e5a06a13-7990-44d2-a043-54b113899f0c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bab8dd04-8f32-4955-b9f1-df52dfaaeabc"
        },
        "item": {
          "id": "9c49819a-6129-4247-ac46-8d256965a773",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "03ed5cb7-96f0-4c01-b99d-9b1b01faf81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44587d39-8c6b-412a-913b-713e7ec54fca",
        "cursor": {
          "ref": "28f3f1b9-c06a-4409-8e4e-d57d95a05d3d",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d1d959e4-59d3-47cd-90c0-55f83d3622c2"
        },
        "item": {
          "id": "44587d39-8c6b-412a-913b-713e7ec54fca",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "65764540-b74d-4ed3-86b5-cb9582d24f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae031f3-845c-4dd3-b528-1b418c93e36a",
        "cursor": {
          "ref": "016e7daa-9365-44c3-9f12-29e8ba6f421c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "36edd7a6-d0f2-4ac6-9f36-101835f69680"
        },
        "item": {
          "id": "6ae031f3-845c-4dd3-b528-1b418c93e36a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6d8d228d-2196-44d7-b2d1-c66d36423d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37a4dd3-5ab8-4e7c-80e1-8ca0b2ba8577",
        "cursor": {
          "ref": "4b3cdca3-ab95-44fb-9cad-9f3af9c768d0",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c52b0376-2f4a-408c-8ee9-ac927fb5c1b9"
        },
        "item": {
          "id": "c37a4dd3-5ab8-4e7c-80e1-8ca0b2ba8577",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "86cc291b-a199-485c-970a-5c5e105832c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5356dd37-0768-4aa9-9ad0-6a52b2973631",
        "cursor": {
          "ref": "81cf101f-e6e8-4324-a55b-9d5b48e26ca4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "775f8f6a-9fcb-4095-be44-6bf33b29a84f"
        },
        "item": {
          "id": "5356dd37-0768-4aa9-9ad0-6a52b2973631",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "38416daa-4c91-4985-81ef-b12e5bbf6e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87db5b7a-d604-4808-9e5b-5a7cc5f9ce17",
        "cursor": {
          "ref": "a68f7177-d60e-4912-b43e-77a310b3cb6d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b13bc432-83f9-4eda-bee5-2a0fcb892f94"
        },
        "item": {
          "id": "87db5b7a-d604-4808-9e5b-5a7cc5f9ce17",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "488e37c1-119a-4559-b9b1-70c8e1e1d3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc43bb9-3066-49fc-9878-58c09936e1ff",
        "cursor": {
          "ref": "b2551591-adb3-4fd3-9ee2-14e66ac052c9",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4b2ecd74-3766-4cf6-a99d-be51a01ac259"
        },
        "item": {
          "id": "ecc43bb9-3066-49fc-9878-58c09936e1ff",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bd2c58fb-ed47-41fe-9837-eac55d84907e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a4309b-e751-4330-ba7b-a25ffb2a0d54",
        "cursor": {
          "ref": "e32c54a1-3897-4f75-963a-8692adf4b486",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "72242c3d-84a3-4f6d-82fa-b39e8356d434"
        },
        "item": {
          "id": "b4a4309b-e751-4330-ba7b-a25ffb2a0d54",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4eea68d6-80f3-4647-9994-8b701d559654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6dfd1a-6396-4119-a748-91f7c04a31c3",
        "cursor": {
          "ref": "bd0d3659-2390-4d14-9671-7ad458359960",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f968d152-56c0-4b88-a540-28e39f52c9a6"
        },
        "item": {
          "id": "ba6dfd1a-6396-4119-a748-91f7c04a31c3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "181b3f83-40f5-4603-a5b7-257f92b66a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47936d85-030b-4fe8-af2a-12fa0d508827",
        "cursor": {
          "ref": "07758ab9-5342-44ee-a173-d14bac40ae5a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "69380a04-3add-4392-b727-b1d0ac373706"
        },
        "item": {
          "id": "47936d85-030b-4fe8-af2a-12fa0d508827",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3f399566-d3d2-4997-8ac0-7e8c99e601b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7aa76a-1f6a-4598-953f-96d75e32ee1f",
        "cursor": {
          "ref": "f4934612-cf3b-4673-ae10-698d4fe279b5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "322af7b0-9d85-4d0a-9d3f-1d89789803f5"
        },
        "item": {
          "id": "ea7aa76a-1f6a-4598-953f-96d75e32ee1f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6905378d-4407-4564-a20f-ada47de8a5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e48cb6-73fa-44cd-8cc7-e4bcbcf94175",
        "cursor": {
          "ref": "2d241ce7-1ae2-4cf5-acab-7c2f3441f9fd",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bc14cdfe-1098-44ae-ba84-9e1f4fa47fda"
        },
        "item": {
          "id": "24e48cb6-73fa-44cd-8cc7-e4bcbcf94175",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2a06097a-df8a-42a5-b521-aa34be4c5499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a3b6b6-174c-41b4-a51c-89606d206fef",
        "cursor": {
          "ref": "636d1a4a-f093-405c-ad6c-4c54cc7ffb5b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c048ce98-365b-457a-b9c2-22bf9b10597f"
        },
        "item": {
          "id": "22a3b6b6-174c-41b4-a51c-89606d206fef",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1938c1e3-59dd-4ec9-8fff-6519d9e415fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efcd6e2-ada3-4a7f-b3cd-af4abb407de9",
        "cursor": {
          "ref": "24d6bc54-3a43-43e4-a5ed-510a45d680dd",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3892b10c-9196-4ef4-81d5-8c61be135d01"
        },
        "item": {
          "id": "0efcd6e2-ada3-4a7f-b3cd-af4abb407de9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6e8e9419-d169-4b01-a2ed-f62d2806f220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c00a42b-eebb-4f11-b8e0-70c785f55832",
        "cursor": {
          "ref": "616416b8-837d-458f-8b6a-3f1c92145273",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a86336f6-f11c-4251-9139-dc676b91fa97"
        },
        "item": {
          "id": "0c00a42b-eebb-4f11-b8e0-70c785f55832",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "82cd76c9-e9db-4f2d-a723-9459839559b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ace5c80-8687-470e-8b76-68b7878e6100",
        "cursor": {
          "ref": "a681a4b7-77de-4187-92b1-5b723bba29f8",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f556b943-5855-41f4-891a-913c509c3cab"
        },
        "item": {
          "id": "6ace5c80-8687-470e-8b76-68b7878e6100",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9bfb4f7b-4b4a-4e3a-9ac5-8580a8b5bd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eca0a35-cb0e-4f42-93ea-ca2c483bcb10",
        "cursor": {
          "ref": "c95e3390-7858-412f-862d-49cd9b507575",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "aaabb82f-a360-4ac3-8383-4bb2554bfe38"
        },
        "item": {
          "id": "9eca0a35-cb0e-4f42-93ea-ca2c483bcb10",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4f4de25b-8940-4da9-8c2e-1d3d5dbcbb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6af88e-f8ef-4fcf-82c5-bfe726652bda",
        "cursor": {
          "ref": "ee5650c4-3c18-433c-a198-e0c6544bc93e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3c721765-07ca-4a14-a361-01ae195e8dda"
        },
        "item": {
          "id": "3b6af88e-f8ef-4fcf-82c5-bfe726652bda",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1950cdea-6eaf-47db-86ea-8cfa199fce2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50da38b7-ec40-488e-b9d6-438cf1bdb4cd",
        "cursor": {
          "ref": "6e405a0f-d7fc-46d2-832c-ac6c7ac672a0",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b66e2a47-fa04-4735-a941-68b227849f3b"
        },
        "item": {
          "id": "50da38b7-ec40-488e-b9d6-438cf1bdb4cd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ced1e488-826a-423c-a2bd-f1390ceddda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8d9b96-ad34-4313-9218-f3f96d86ec98",
        "cursor": {
          "ref": "1f9ee853-56f0-49b5-bead-31952efe81e9",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a4193310-c53e-4a6d-a3ab-bb1b5b3dad19"
        },
        "item": {
          "id": "fc8d9b96-ad34-4313-9218-f3f96d86ec98",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ead0a1d1-a5e3-4144-8a24-4ae36f1d292a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c0811a-5e93-41a2-89d3-b8fb299dfb0a",
        "cursor": {
          "ref": "de72b40a-75d7-4054-9b9c-ab4a12d9c0d7",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "30fa40a1-0079-4494-b3d1-ac708657c478"
        },
        "item": {
          "id": "42c0811a-5e93-41a2-89d3-b8fb299dfb0a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ea99003d-814f-4f46-8df8-71d7aaec5c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b926c9-4198-4588-82cf-15ce499c972d",
        "cursor": {
          "ref": "a2c6c71e-8569-41b5-ad8a-72959800b7b5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "456ef1e4-c425-4193-99e2-4efebf3f214a"
        },
        "item": {
          "id": "c6b926c9-4198-4588-82cf-15ce499c972d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d12f15ae-2f76-4e0b-b2f8-7b904ced699a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab15adef-84eb-4ffe-b3f1-4ebbe1f90959",
        "cursor": {
          "ref": "a3837f44-afb7-4c94-93b3-f143fcbf0032",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "13721ec8-bb55-48b8-9f27-e1c75d055deb"
        },
        "item": {
          "id": "ab15adef-84eb-4ffe-b3f1-4ebbe1f90959",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1d2300cc-f7e1-4f0f-b7ed-d7570c66b4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7549f282-1361-4787-8e6d-9c0d068a9abd",
        "cursor": {
          "ref": "169ab701-b554-458f-a460-348b66d32b27",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f5adb9ed-1636-4f95-aa39-ec377165df88"
        },
        "item": {
          "id": "7549f282-1361-4787-8e6d-9c0d068a9abd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8da508ec-421a-477d-a947-c141e9f583a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a9ae8b-471d-4d9c-abbb-dac9833af629",
        "cursor": {
          "ref": "1a5cb74c-d38f-4e26-a908-4ee70488149a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "75061b36-3fde-490c-abd6-9d9352125f5e"
        },
        "item": {
          "id": "40a9ae8b-471d-4d9c-abbb-dac9833af629",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7f2c7f3f-6774-4efe-9142-eaafb647d1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9744e44a-1887-4b30-910c-fe39eabe44dd",
        "cursor": {
          "ref": "d3d243a2-806f-410c-89fc-9cf61e62dee7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e2edc5da-951f-48dd-8b9f-addb91b3e199"
        },
        "item": {
          "id": "9744e44a-1887-4b30-910c-fe39eabe44dd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a517fe93-e910-4c99-bc0f-3e1909a33f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe0c0ab-903a-4149-a8a4-f796f002181a",
        "cursor": {
          "ref": "88ba18cf-e16d-4a30-ac93-906f46e506d3",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "19a7046e-a0a3-4308-ba20-47c95ac06b61"
        },
        "item": {
          "id": "dfe0c0ab-903a-4149-a8a4-f796f002181a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "769d5ecb-9117-49ac-aa5b-ede604266ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201576e1-b50a-45f1-b846-55f1d95e196d",
        "cursor": {
          "ref": "3773363a-871d-4d5f-ba38-11ac612086dc",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "941b3f37-df9e-4131-b2e9-fdb33bc0daaf"
        },
        "item": {
          "id": "201576e1-b50a-45f1-b846-55f1d95e196d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bf4ab6e5-2326-4267-a56e-de5e118b56ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf14dcb8-69b5-4e30-9e4a-88a571f78f27",
        "cursor": {
          "ref": "2dfbf500-9135-45eb-808b-0cc84be5a002",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7bd685c1-8b8d-47dd-83f2-be2f9e08efce"
        },
        "item": {
          "id": "bf14dcb8-69b5-4e30-9e4a-88a571f78f27",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5ecd4a9b-bb00-4616-a719-e7bba7475028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c4c8ac-e5b7-4c03-a8f3-d589b522f0c6",
        "cursor": {
          "ref": "3432a62b-ca46-4fa1-be0a-356b8795be73",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9a75ca91-7333-43aa-985a-59c8c5660a62"
        },
        "item": {
          "id": "11c4c8ac-e5b7-4c03-a8f3-d589b522f0c6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e24130f9-25d1-49b6-bd29-eb53ee6b83c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537fd0bc-38b0-46e3-ac69-e636f9d2d01d",
        "cursor": {
          "ref": "7b5eb7dc-baa7-4941-a518-85d707770bf7",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c7ea1fc3-c7a6-44d9-b81e-8f0e4e672834"
        },
        "item": {
          "id": "537fd0bc-38b0-46e3-ac69-e636f9d2d01d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "12bc210d-4e2c-4255-8fea-7cea9a0c29e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720b9a9c-0da6-4d05-a43d-d3f9ee62e17b",
        "cursor": {
          "ref": "0f6682b6-f84e-484f-af0f-e448c97a213e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "44e82133-c5af-4119-b793-4d71b32fb49c"
        },
        "item": {
          "id": "720b9a9c-0da6-4d05-a43d-d3f9ee62e17b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a1d94399-aada-4828-9e46-4d1f8106bfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c2ca8c-7d1a-4f41-82a7-05ddf8af2f2d",
        "cursor": {
          "ref": "74d8ae3d-ddb2-4f2d-adc3-ffcf63ec31c6",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b25884a0-35f5-46ae-a1ea-9844813e1073"
        },
        "item": {
          "id": "d1c2ca8c-7d1a-4f41-82a7-05ddf8af2f2d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ce1c77c0-404d-49e9-b8cb-931b26598168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceb18c7-b5b5-4654-9445-005191fc1f92",
        "cursor": {
          "ref": "fd09c303-0dd1-4792-acbf-420b26b40466",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0f59914b-0062-46bd-ba0f-d1940d67ba20"
        },
        "item": {
          "id": "3ceb18c7-b5b5-4654-9445-005191fc1f92",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ab5510b5-7659-46b5-80ff-724ac54da075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df850df-dd01-414d-8247-26e823cc5729",
        "cursor": {
          "ref": "1e5eed9b-1f9c-409d-88d7-d14a8bbe0d86",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f1c7c229-7431-43dd-a2e1-bae3d5912dd0"
        },
        "item": {
          "id": "6df850df-dd01-414d-8247-26e823cc5729",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f005d990-285b-44ab-80f9-775f6e5759e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd57e14c-4733-4eb7-a71d-b141ba83e9a9",
        "cursor": {
          "ref": "ebfdc990-b597-4cd0-ae77-285882b0e898",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2b70e544-10a6-42e8-949e-a7b698a86a76"
        },
        "item": {
          "id": "cd57e14c-4733-4eb7-a71d-b141ba83e9a9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1c2d2310-8947-41d3-bc54-aed087fbc2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1c7fd2-cfab-4e80-bd0f-28ab9fecf818",
        "cursor": {
          "ref": "244fbe18-aac6-4e69-955d-065f8751e42f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "09697a70-f0e7-4c79-9020-da0dc7778f90"
        },
        "item": {
          "id": "ce1c7fd2-cfab-4e80-bd0f-28ab9fecf818",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8bc10c71-aeb6-48f9-adfb-89e5107f371b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677bc92b-bd07-4874-b47f-4d0f17106e34",
        "cursor": {
          "ref": "6d1ed122-2fa2-4179-b659-0aaabc3b3cb5",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b8657853-56e4-459a-8533-4acb80ba78dd"
        },
        "item": {
          "id": "677bc92b-bd07-4874-b47f-4d0f17106e34",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5ef92251-1d9c-4b57-beb5-b909fb2f74b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc33742e-bf2b-46a2-8534-3d3755c97db6",
        "cursor": {
          "ref": "21794894-9e55-4e12-b6b5-370b78486dc4",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "75cc2e35-1714-4b79-9016-c2b7a37a3ea4"
        },
        "item": {
          "id": "cc33742e-bf2b-46a2-8534-3d3755c97db6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "feb8b7d1-3a2c-40fc-b365-0b35bfb9afdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39448465-f4ce-477a-85df-c25aaa99b7bf",
        "cursor": {
          "ref": "c42fe0d1-f501-4959-a518-c22c5186558d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b12d7a53-3d91-4312-bb55-7389825fde4e"
        },
        "item": {
          "id": "39448465-f4ce-477a-85df-c25aaa99b7bf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "baaf9418-e6ab-40d1-93a5-7f0ea3ed33ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a60674-291b-4989-ae14-97c9975d78b6",
        "cursor": {
          "ref": "6a499dbf-ab29-4860-b6b4-83a0fd526974",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "24a45c71-104b-4f52-9ec8-c5a22e655cfd"
        },
        "item": {
          "id": "52a60674-291b-4989-ae14-97c9975d78b6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0c609ba1-4391-47ee-8259-19a1ca151f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30c24d0-9118-48d8-b6dd-a3f98d131fdf",
        "cursor": {
          "ref": "4cb3f4c4-4852-4c67-8806-0f01560df873",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "12f54118-9081-4db0-b81e-b2d73cb13f13"
        },
        "item": {
          "id": "d30c24d0-9118-48d8-b6dd-a3f98d131fdf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1d7b3c1d-ef8f-4721-b940-20292287342b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85d1419-7bd6-4e55-8322-d05bd2e7dc26",
        "cursor": {
          "ref": "54937170-f3b1-4b56-ba6a-9e91b9297384",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "466977ed-23d7-4a7d-9cd7-1cb67f5f2443"
        },
        "item": {
          "id": "d85d1419-7bd6-4e55-8322-d05bd2e7dc26",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "49918358-1b7c-4dc7-8c60-d86af8127387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d7fceb-4d31-488b-a948-494032175a8b",
        "cursor": {
          "ref": "c011d2b0-03c1-4f5f-a228-89d93ac23792",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "609e746c-6d76-48a3-ad54-0f27fd453d16"
        },
        "item": {
          "id": "05d7fceb-4d31-488b-a948-494032175a8b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ca82323a-71fd-434d-be26-7e07a51d7894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867c1d2a-2f87-4d64-91e8-bced008dbf75",
        "cursor": {
          "ref": "a986e267-62e6-4d41-8646-90e902e36eee",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4b5a322b-82e1-46cc-9b4d-2913c9cad118"
        },
        "item": {
          "id": "867c1d2a-2f87-4d64-91e8-bced008dbf75",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "af88cef3-1214-43db-b7bd-aa60b6e049a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42567e93-9518-4233-812e-4f6e28414d7f",
        "cursor": {
          "ref": "2dada095-38f6-41fc-83ba-9bf316d809c3",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "80a4b735-73cc-40cb-b11b-8ce939cbc762"
        },
        "item": {
          "id": "42567e93-9518-4233-812e-4f6e28414d7f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bc4ef2c8-6528-4206-84cc-5ca29e8241d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83181c89-3bd1-4c2d-bdec-f9ef76efcfbb",
        "cursor": {
          "ref": "7b7e3a5b-7dce-4361-8814-9d2dce18a48e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b7c9ec19-d591-46f4-a2c3-9fc9bb1bd82b"
        },
        "item": {
          "id": "83181c89-3bd1-4c2d-bdec-f9ef76efcfbb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9f270f6c-f8f3-46da-9dc0-814d2c3cb9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d8dbbd-689c-42c6-9fe0-21cc4787f400",
        "cursor": {
          "ref": "c9fc22ab-8aac-4377-913b-608cb1dfc0a7",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bcf642d8-0424-4cba-ac1b-4237dc6ae295"
        },
        "item": {
          "id": "f6d8dbbd-689c-42c6-9fe0-21cc4787f400",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d393bb22-5e5f-4fed-92c1-f1bddebca12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0565c22-d508-4711-8971-a6c330ec157b",
        "cursor": {
          "ref": "2c5d6698-e1b0-47f2-95a7-7bee18c44da8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c0e8b2cb-9b4e-40e8-b2c9-19d582fe70fd"
        },
        "item": {
          "id": "e0565c22-d508-4711-8971-a6c330ec157b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "07db375e-ba33-4bc3-863f-47f31ae3ba7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e79177-8042-44fe-8a56-1bf11e2daf1f",
        "cursor": {
          "ref": "de0700b1-3c4b-40cf-a0d6-1c014539f249",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b6a5ab9a-c865-455e-95a5-3351c1d29443"
        },
        "item": {
          "id": "11e79177-8042-44fe-8a56-1bf11e2daf1f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "90ff4f6a-9c59-4bfb-9734-9713fb599ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399f36d3-6d55-4466-bdd6-a0b6e72d43dc",
        "cursor": {
          "ref": "c7dd909e-138e-4962-87b1-a5bc54d044d9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0d142be5-9c0d-45f6-94bc-7cd4ad773872"
        },
        "item": {
          "id": "399f36d3-6d55-4466-bdd6-a0b6e72d43dc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "95310153-4da1-4272-a204-ffb3b5ac798b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a237afb4-0404-420e-8f2e-262a8f519138",
        "cursor": {
          "ref": "ccba52f3-f9b3-4e3e-99f3-51515f668873",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "883beec3-fafe-4c8b-b55e-e8ea81c07f7b"
        },
        "item": {
          "id": "a237afb4-0404-420e-8f2e-262a8f519138",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "942933ca-1c5c-4c03-86c3-b28baab0540c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcac9caf-f28d-430a-87e8-737ef7861cd3",
        "cursor": {
          "ref": "38e50b41-a2a1-444f-a365-027b4a44ebb2",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ca67f9f7-1ddf-4417-abe6-a16d9076edc5"
        },
        "item": {
          "id": "fcac9caf-f28d-430a-87e8-737ef7861cd3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6d35d95c-61e7-4677-9381-3504981bc800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5707f43f-e5ae-4113-9c4b-d419597e4f28",
        "cursor": {
          "ref": "7d7217b5-767e-4b38-ad9c-4afb28bccea7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1bfd3c3e-5f20-49fc-b827-ef9872254b26"
        },
        "item": {
          "id": "5707f43f-e5ae-4113-9c4b-d419597e4f28",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "036320e2-d56c-4302-af9e-706c77517c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b7d1ea-69cc-4129-b2e6-f800828f3b18",
        "cursor": {
          "ref": "98990510-4289-481f-a61e-5397489ba015",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8ca02413-b9a1-4458-97d2-d4d8b49ed112"
        },
        "item": {
          "id": "d9b7d1ea-69cc-4129-b2e6-f800828f3b18",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "83865e79-42bf-4079-affd-adf2d0ff8363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db68b00-46b0-4ea0-b2fd-b99fb7ac7181",
        "cursor": {
          "ref": "669575f6-fb94-49e6-b692-4654cf1c603b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cc0cfbdb-49e8-4f7f-9266-2b8a24cfe6c5"
        },
        "item": {
          "id": "4db68b00-46b0-4ea0-b2fd-b99fb7ac7181",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "046025eb-9267-49cb-bb96-6e00661c8319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60c2fd7-c979-473f-8604-5d80eb652db3",
        "cursor": {
          "ref": "d52a1058-342e-41f7-b44a-38e145d95142",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "65969664-d923-4058-951c-5826b4b11c39"
        },
        "item": {
          "id": "d60c2fd7-c979-473f-8604-5d80eb652db3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "50ec5011-c658-4edf-a565-57f95893cc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7228438-1175-4931-88e8-01a0ec440528",
        "cursor": {
          "ref": "c91bef05-afdb-4d68-aa7a-f85a429bbe67",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2bb9a511-3b78-422d-821f-ac19022212c6"
        },
        "item": {
          "id": "a7228438-1175-4931-88e8-01a0ec440528",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ef6ea7ec-0ec7-4b53-b90a-8438ea732dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fff18dc-3d2b-48af-98e8-07e7eda246b1",
        "cursor": {
          "ref": "d6475ed1-00a7-47f5-89c2-04fa306470d5",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "483d125d-ecb0-477a-b847-321bf39e8ee3"
        },
        "item": {
          "id": "9fff18dc-3d2b-48af-98e8-07e7eda246b1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e0302a1c-75a8-4e0a-867f-4ef91372b3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd274810-685d-4e25-a088-ffd9e533d3be",
        "cursor": {
          "ref": "c8934576-2535-4eb4-8c66-77d74c42b4ab",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "82de4e85-f12a-4072-ac9a-de0a0fad95b5"
        },
        "item": {
          "id": "fd274810-685d-4e25-a088-ffd9e533d3be",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b91cfadf-5715-4aa6-aab8-cd4bdbe34544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38b5a2d-3bc3-48c1-bde6-8e0706a3cba0",
        "cursor": {
          "ref": "4b71a924-08aa-44df-ba78-e64b59063550",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7ec7121d-84a6-49a4-8457-f7f217d2b0b3"
        },
        "item": {
          "id": "c38b5a2d-3bc3-48c1-bde6-8e0706a3cba0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7cfb632d-8253-467c-8604-cf09f297b132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c0f38e-9659-44f1-be6a-dd4cc8ab2b1e",
        "cursor": {
          "ref": "83aaac8f-3069-4e3a-96e6-ecb162c93ac8",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9e9d6241-5b94-4aa8-983e-417bc7c2510a"
        },
        "item": {
          "id": "f4c0f38e-9659-44f1-be6a-dd4cc8ab2b1e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4b40b879-a623-45c7-8370-4e5b8eee5f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0309bc2c-fc14-43de-a5de-c19c5eb041a7",
        "cursor": {
          "ref": "e0f59682-e4b0-47f4-a153-a3a6af027f0c",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8359e652-2f44-4a89-b9b6-38d24b0a09f1"
        },
        "item": {
          "id": "0309bc2c-fc14-43de-a5de-c19c5eb041a7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e5410a97-2ce0-461c-9440-4cc38204ccd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef8860d-306d-4cdd-a84f-6d3bc23407af",
        "cursor": {
          "ref": "901fe0bc-fa60-4b8f-bd76-20eeba4f5e64",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c07addbc-6766-4251-a25a-dec4a51b9a88"
        },
        "item": {
          "id": "cef8860d-306d-4cdd-a84f-6d3bc23407af",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1e17b47c-e9ef-4a13-8704-4e79347b731d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1170ad7-a8b1-42c6-8b90-a8664e6dbe0a",
        "cursor": {
          "ref": "ade6f918-8fbe-45df-bebb-a160d0bbcfcf",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "edfb7e16-e8f3-42a1-bca8-a530f3d8e0a8"
        },
        "item": {
          "id": "e1170ad7-a8b1-42c6-8b90-a8664e6dbe0a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2ca9800a-e999-4c56-80a5-a52aca2f74ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233ec3a9-aabe-409c-9d0f-ea4c20406266",
        "cursor": {
          "ref": "85ad4ab4-cb7f-41e2-ae7e-8da921193755",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "33afd66d-7602-4fa8-858a-db75c5212bb4"
        },
        "item": {
          "id": "233ec3a9-aabe-409c-9d0f-ea4c20406266",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5b4d6993-9641-4a79-b79c-0b79a017b948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e905603-a7b8-4cfe-81c1-ea43d6f5e54c",
        "cursor": {
          "ref": "76f0359e-ef52-4f93-a304-a8b0396616ec",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a6318284-02d1-4817-be78-b36aa9737965"
        },
        "item": {
          "id": "8e905603-a7b8-4cfe-81c1-ea43d6f5e54c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ec8d4bd8-3de7-466f-814f-62f4ead4a122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cef474a-a08d-4d7b-a3a2-55ead7872f4a",
        "cursor": {
          "ref": "a9836280-d3ea-4c11-ac91-5a4f6bc81b48",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0bd97bc0-a6eb-4d80-b168-ed3d7888e64d"
        },
        "item": {
          "id": "6cef474a-a08d-4d7b-a3a2-55ead7872f4a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d847347a-2cfb-40d5-9335-6abfcea7fa68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd500065-39e6-4c3f-8c2a-40360cdb803a",
        "cursor": {
          "ref": "130d4507-275b-45a5-baad-b6384ac37369",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ba1e0663-fa81-4bcf-8afe-d83564807652"
        },
        "item": {
          "id": "dd500065-39e6-4c3f-8c2a-40360cdb803a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cda362d3-b529-4ff8-96dc-30cc364058af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fcc2e9-e12e-4917-99f8-1012bc1f0f0c",
        "cursor": {
          "ref": "9f5bd8c0-9fe1-466f-b276-5ca1be44f5a7",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "03fcb9f0-a744-4b83-9d23-1adf03e9ef87"
        },
        "item": {
          "id": "98fcc2e9-e12e-4917-99f8-1012bc1f0f0c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ad7a6481-e70d-42cd-ad7f-6fa6eeed3409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6e22f9-9792-49f3-bf50-212d34a29ccc",
        "cursor": {
          "ref": "ae674ed2-7997-400f-a635-37ba3cb5b1a7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "de3efe0c-a959-4fb2-84d0-ee4822e700cd"
        },
        "item": {
          "id": "aa6e22f9-9792-49f3-bf50-212d34a29ccc",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "139636a6-efec-492b-970a-711521757f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf448e20-6b11-46bc-8dea-fcae749e1791",
        "cursor": {
          "ref": "25b7640e-d1e1-4000-8172-98fe5cda13be",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3309ca53-2ddd-487f-b49f-28b5da813cb9"
        },
        "item": {
          "id": "bf448e20-6b11-46bc-8dea-fcae749e1791",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "89bbd7ad-f93b-40dc-adf3-403d87ec2aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50525ea2-6be4-405f-9bd3-59d7b56062dc",
        "cursor": {
          "ref": "eaa04cac-fb13-452f-a686-ec90c3a09cde",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ad9abba1-50cc-4a06-b46a-8cfad633a4d8"
        },
        "item": {
          "id": "50525ea2-6be4-405f-9bd3-59d7b56062dc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4e187a93-c89e-43aa-b00d-f3813eae6cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a5426a-eaaa-459f-bd35-39ddeed21d94",
        "cursor": {
          "ref": "f378d840-cff1-49ec-a33b-893393b6f7f8",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d0ecfc61-80df-46ae-bc85-97681a16543f"
        },
        "item": {
          "id": "75a5426a-eaaa-459f-bd35-39ddeed21d94",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f52e92bc-74cc-4b52-9f02-99ec5734b5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96bfd47-6418-4213-9fad-721cb04dfa86",
        "cursor": {
          "ref": "5006fde3-8fd3-4b3f-b650-7a72a45f6af3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ec59451b-1c31-4d58-bfa4-ca03e7dc55c8"
        },
        "item": {
          "id": "f96bfd47-6418-4213-9fad-721cb04dfa86",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "326b8116-af85-475c-a3e6-98c8377c646f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a243af-7998-45c5-a5cd-e7b36197feca",
        "cursor": {
          "ref": "00f64eb4-1ba4-48e9-a25f-05d82cfcee57",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "213a2fa6-7d27-44a1-af33-6bb1eda9b669"
        },
        "item": {
          "id": "73a243af-7998-45c5-a5cd-e7b36197feca",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3d8ce677-2258-453c-bead-58874fac7740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825acba0-a47a-4f86-9f68-839783359ba4",
        "cursor": {
          "ref": "70ae3110-d79a-4175-8d02-dff436fab08c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eb938ffb-f73d-482f-bbb7-813ee3d1eeb4"
        },
        "item": {
          "id": "825acba0-a47a-4f86-9f68-839783359ba4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dfd93af3-cccb-42c0-a268-cd0851b3745b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7767c21f-34c6-4b2b-88ae-de7d9144feed",
        "cursor": {
          "ref": "e33db122-d0a5-43d9-8de8-ceb0cbe043dd",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8856f4cc-4e0d-469b-91a0-f59051a3722b"
        },
        "item": {
          "id": "7767c21f-34c6-4b2b-88ae-de7d9144feed",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bd2aafbb-6dbe-4f27-986b-2553715c772a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c0b186-6f7e-4517-82bd-257025b6a792",
        "cursor": {
          "ref": "8f5564f2-ae75-4a68-8b27-495657bc756e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0876ee97-b99a-46d4-abb8-e14c43747bef"
        },
        "item": {
          "id": "53c0b186-6f7e-4517-82bd-257025b6a792",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e09b344f-c487-44dd-bc5d-c6129868ba38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "5b4017eb-80da-44fc-b436-585cc68d5c96",
        "cursor": {
          "ref": "305f281b-d766-471e-a635-e6d1235fc7df",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6f246f5b-e1ec-43b6-b31a-0e71aff56eb6"
        },
        "item": {
          "id": "5b4017eb-80da-44fc-b436-585cc68d5c96",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6ddec8ca-a497-423f-86a8-00f26ac246ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "f70611d5-603f-40c5-a81c-3f5966fb0b51",
        "cursor": {
          "ref": "afe36f4a-0c67-457d-a880-4195dbb6428f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d05fc40f-a120-4a7c-ac40-a1fe16e9c940"
        },
        "item": {
          "id": "f70611d5-603f-40c5-a81c-3f5966fb0b51",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a14c501a-755a-45b9-b347-abb12d6cbb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "1e583d9a-2334-4e1c-8878-4d940c1bfdcd",
        "cursor": {
          "ref": "9f55c6d2-0fcf-4b79-b4ac-8c5468790538",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f1934e05-2272-41e9-9411-99b887b1339b"
        },
        "item": {
          "id": "1e583d9a-2334-4e1c-8878-4d940c1bfdcd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2ebcedc9-d90d-4dd8-9595-9730fc966524",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e583d9a-2334-4e1c-8878-4d940c1bfdcd",
        "cursor": {
          "ref": "9f55c6d2-0fcf-4b79-b4ac-8c5468790538",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f1934e05-2272-41e9-9411-99b887b1339b"
        },
        "item": {
          "id": "1e583d9a-2334-4e1c-8878-4d940c1bfdcd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2ebcedc9-d90d-4dd8-9595-9730fc966524",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611c7f43-5cd6-4884-8f45-3da39dbe634f",
        "cursor": {
          "ref": "ed23eb28-c9ac-40a4-8e5d-b55d855d61b2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7c743a95-0c51-4c87-bbb9-7a6e264d8ac6"
        },
        "item": {
          "id": "611c7f43-5cd6-4884-8f45-3da39dbe634f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6a57f095-eb77-4e25-bdb5-dee354c4dca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06246d2-8504-4823-8d2e-dd1f2d041671",
        "cursor": {
          "ref": "df37ce00-3520-41a0-b1cd-007e85e19bb7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c8ae99c3-7046-4093-9b90-eb230d46fce7"
        },
        "item": {
          "id": "e06246d2-8504-4823-8d2e-dd1f2d041671",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "10a353d0-9edd-4653-8932-b20c0730e86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}