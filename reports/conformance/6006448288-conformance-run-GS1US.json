{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c96e599d-3d96-4c14-8d8e-d458170a60b2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "99873bcf-7690-48c1-971a-afc6588ac34a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d1fed603-76a6-47f9-8748-1324df3d850b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "864c8ded-cbae-4f2d-88b7-a6feea75f0cf"
                }
              }
            ]
          },
          {
            "id": "274a4d02-402f-426e-9216-12fb0d4bc635",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e0242e9-ea3f-4111-a965-4c2d96bf046d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f9ebd801-23b8-4f68-9b4e-43142d945fb6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a76c68a3-1c4a-4435-bede-e30e42c9088f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5f8b4e00-4436-43e1-82be-40d471c27542",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6bff19f6-5756-4ade-8031-233d2fb750f1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b435de4f-b8cb-4d56-a793-14dbb7076d76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16b66782-0935-4e10-9cd4-71f3967af44e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2029f87d-b2f4-43d7-bcdd-28cdc37b5cfd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "721a30eb-743e-4bba-ad1f-b65d6c27a8bb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6d82a443-2114-4a14-adc4-6e064e46096c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9cc35d8-81ba-44f0-ab95-c548df76b10e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b888a509-3d2d-421b-b171-cbab5165198d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c61643be-62bc-4b38-86e0-282a69c6f94e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05ff87c1-d022-4da2-9803-6dbe411ac058",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7d25793-c9a0-4fe9-88d6-46f2f939bc25"
            }
          }
        ]
      },
      {
        "id": "c55fbd00-ad64-450b-8a13-71ca728ac223",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "187b628f-4f77-478f-b41a-3ab2f6229b38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "28694962-96fe-4dfc-bf88-9f1f13f1a510",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5799d3a0-c4a8-41b0-93b7-03b3833fd4e0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b00d0e-bc25-4e86-8b7f-bd7adf30fbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b47f73ad-a785-4986-8061-9ff62bfc1c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192d36f4-1ee5-4454-9347-876403d5a774",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03732568-6ab6-47bf-bf25-c7ca140247b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed033865-42bf-45fb-800f-51f973fd4266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8400bb04-85c8-4771-a1bd-9ac9e374d19a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28edba5f-35b0-45b9-8e87-4c7f92480d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2ff2ccb-da10-48c4-af07-089aa7290a91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53048756-baf6-4a6c-96b3-7c5e94ffeafd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94c65846-5b26-462e-989a-1808a25eaa49",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa22a22-ba9e-4057-8a28-404f99b9d6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "573434db-0126-441e-8ba1-b98db2ad41ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbc0126-e104-4222-b1f6-31c1122506db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cc937b-eb68-4ca9-a971-ff2af28931eb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "46e72be0-2862-4349-aeeb-d52e0a48e829",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48cd3d73-8ff2-424b-b0dd-0eef83fb4802",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7623d452-264e-4597-960b-e354580d5336",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fdb53df4-555e-4a0b-b6b6-fe4c6a65fb7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d26e21a1-ef63-4a27-b612-c8a25b34f775",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f6abe880-8b22-41b5-8bd8-3a5f5d180fdc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bf3b272-5d45-40f0-95c5-17c2526e6370",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f38cb9a3-59cd-4e19-be45-c528671ab4af"
            }
          }
        ]
      },
      {
        "id": "da1c6ce1-1520-43a1-8e8d-ac030af4b0a7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1040cc6b-c106-43b1-a7e9-392b02aa5c90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d01695e4-d44e-4038-9b0b-5e4d08adeb13",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a32e4043-47a8-4cbb-823d-92f9f65341a2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756d440e-f95f-4afc-b811-6e17e3fcb2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d3e303-df9b-4878-8cc0-112d18bbf3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51898cd-3e35-4f53-95ed-36f78c06925a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b716c886-26da-46a4-b488-b3879a7665b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e052e8-e831-43aa-ac25-8e07af093d9f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce95955-fac2-4d09-85bd-1f118464a5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfecc08-84d2-40f8-8612-b2e8e9989c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3e0b12-8bc9-46f3-af02-823d82b073a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ece55da9-1692-4169-bdab-ebe9e0e55f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04dc93e1-20aa-40df-ba6e-dc84c60a1255",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86182903-50c8-4e3e-958b-7226b62e3e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab659798-3139-40a5-8d17-38e8144f356e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7753993-202f-423f-ac27-f5a5a6b5483b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31f38c2b-1325-434a-b5ce-570a8c19b528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc87d50-694d-4590-a826-98d8c39c4d20",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51eb5e48-9689-49a7-bfc4-f71172ec30da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae7aae7-9058-4d69-bdd3-80ed2afe0e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593ac8e8-2b6a-4026-9520-74c6d11146dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d64b865-712a-40bb-9f00-fdf79813b407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e8aef0-ada6-4edc-ab85-2a20e753db7d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d125972-bad3-4651-9118-58f6c9d97a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff5d953-e5c6-4125-9e28-26452e4d8147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c2c589-8f42-4482-9da9-219b7778d374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51f8167c-e9c2-4577-9262-a14325847151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09642e47-7023-42c1-939f-ff118427288e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ddf5b1-9823-401b-b1bf-433722e1a102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef5f318-2fc3-4dc4-bfa5-e84e077df642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b013e9-c31c-4d60-8f46-3bc7fa74a649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13546ff3-98a3-4cd6-86b2-6fcd1f4345c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef908800-15d0-4d1b-846c-c4670f2e2842",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7deff5ec-a879-48b9-8072-f3c5106fb83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a25eabb-d88e-4204-824b-38025c6c44ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d49f2c-d1b8-4c8b-95b7-c00b1d0b74da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dbd0bfb-f04e-4297-adf5-23d9e8412b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca9502c-d772-4697-b955-5605b00df392",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70f52c4-80a0-4e7e-83a7-0c29cffb6697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d055ad47-191c-433d-a49d-6a888ea87494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa024ef-fd5e-4aff-b1f8-be733800f159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88596e3d-945f-46cb-850a-68c393108820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b9176d-69aa-4085-aa1c-395de4243947",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f00b2dc-ac18-42c0-98e7-bc55c908d1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bfa5fe-8b39-4b63-9e0a-cbf306f27fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed54cc5e-14b1-44a6-8e84-37e9af91aa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f30a1089-7329-479b-bba7-5ab78e01b9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62b298c-d7e0-428c-83bb-cc87cafae62d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98af0bc2-5927-45c1-8963-e4d956ff5f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775c117a-26d9-4e66-b666-12ddcdc86cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a5b7f9-b385-4c1a-b155-f32800f59ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f9e002f-9d9b-445b-bdab-51be0a945b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a9fe7d-dbef-4ac6-970b-a095923a82e2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8baf3e-ee5b-419e-8d69-35f2e8fda1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09caaaaf-4510-43c6-a634-2bcc0c465726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4edeb1d-5918-461b-bc68-bbf33f0ace43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "877bb1a4-6188-4df4-98ce-0d458cdc1466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2a1d65-af2e-40f2-848a-3742af977ab7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c15f3f4-d800-4b8f-93a7-89e509cf5a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b4a5ad-205a-4bd8-8276-d4275457a184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd672de-eb62-4433-a227-bbe983e16926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e666ab65-bf6e-4f6d-95a9-d01f580503ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526724ee-345d-4630-a0ed-970e661e642a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6ea049-6b09-436d-82c2-e0b427e20d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e32f77-db25-45b8-a8a4-c245354819ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913cf029-0a54-4e80-879a-2c32365e1e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cae2db2d-56db-4448-84e7-73f13d8388ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc72e54-a9a3-482c-9f59-ff92239e2264",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9d58a5-1edd-48ea-b0bf-3e38cd3f440b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286741f7-e873-4344-84c4-e211c6a21728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4dec86-25ec-44de-8b4f-596c4493b09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62fa36fd-2acd-49b7-811a-0b8e5413720c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843036ca-f7a2-44dd-9257-6b7ba62eeea4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69368d8b-88c4-43f6-b8b8-72d8decc4dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccaac97-a64e-46fc-b78d-e63a20f54efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017a7e56-2bac-461a-81c2-7fe447c86b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f22cde72-6888-4a45-9f45-31767a86ab92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a2641d-408c-458e-b68a-7dbf7801b112",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0949cbd8-7153-44ee-90e0-432ee360aeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d13e11-1e60-4b09-bb49-22e467e33ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f08886-d416-446f-bb22-07f4b0841112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50f285c1-548b-4579-8eb7-7cfd560cdd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1ac82d-a042-4b2f-9e33-af96ad596b93",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f78f1a-02df-4e15-b3f4-d8ae3b93da26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf38120c-886b-456f-b055-fb14925be39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d3e65c-de80-4fac-b9d7-9f46fe76ffeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf75344a-79d0-4bbc-a6f3-c863509f2009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67400eca-32da-46ff-9014-9d421dcd72bc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a58da8-2af1-42a8-8fc8-b96725bf06d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1889dc5-c2a8-4840-b444-165f61590b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39aa30ee-28c3-4233-88d3-6aa87299f45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce63897-fb3b-4bee-9b58-4da582ea8968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece63e55-e911-43aa-b180-4b0a4102626f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d30211-a3dd-483a-8115-6168dc0c5a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8606da66-a28a-42c0-ae6c-0189bc9b9b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b294dde6-ef56-4dff-a002-a2ce9b276930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "344ec7b5-24c4-41db-9bab-33453300afe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a688cd0e-2c2d-425b-87b5-ea9b38698f96",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69e3a4d-94c9-489a-a2b5-2e36832eccad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7fd8b2-47ae-47e3-b444-bd0cc7329d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4831d92f-b55a-4765-b9cb-62d9b09a3313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c626230c-5a1c-4a5c-a4c6-8ef74ce8708d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f008435-2fc4-455c-a6dd-79ac1411536f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1a1a34-ec11-4bde-833a-62f8f922fae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d0c11e-cce0-45d9-b438-7c7ba4cb0baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6aca1ef-df7f-4d33-bfea-929bdb055a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bce232c-017c-4516-9294-2fb205dd55ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a5ed69-2c4f-4043-a1fa-175275df7062",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ad747b-b8b3-46c7-98ff-7362468161fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f52e09-91bc-4c18-969e-ee0e32d9eb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20a440c-29be-4ff7-8b48-0f1605736d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab30bb78-ad0e-4c0c-8419-5ff7702348c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9e42f3-2b14-4bed-8f1d-c8094a9312a7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a93a7b2-b854-416f-bc84-1286dcda0d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cac6cf-144a-4e16-b0fe-8d718ba031df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2817c4-bc1b-4007-9033-813f13b5c00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fafedc62-aa26-48a6-b362-54cc3258d9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a369cf-a419-49f1-950f-10c3de39f0e5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74fe0d6-a9de-407b-89a5-fa8e8ef82eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2240aa97-3399-477d-961b-c611ee786f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d29d2a-4a6f-4eef-a4cd-cec9b3aa0073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c258d7e-e95f-4602-95bc-2eba85e7a386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c034c6c-20f4-43c1-b4ad-79d4c0eccee3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ff8d14-62c7-4f8b-8ea8-1f22d75530d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70422292-644e-4747-85e8-464edacb065d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8ec849-a70f-4b8b-ba1f-2ebeb34616f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d19e2215-5a7b-4fa3-9321-ff1a04e1e252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec56d1b-17bd-40ba-b995-643ce4036899",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd60c0e-fb4e-4a8c-8905-1d770c65440c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7334c698-1400-43e1-9660-f7efb98f17a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd40187-63b5-46ee-94ea-d1e18cca5650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa110e4-5ef3-4448-a71d-80f4444764f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f6d48c-65a4-463d-834c-a29c4f425b2d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9697209-7f66-41ba-802e-1c2f4f27289a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f2042c-6d66-49f3-a150-966c6e6a8aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11da090e-13eb-4469-ad64-df6fcfaab01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ab9031-77bd-4a5c-9f1c-5573dae91229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09485556-56dd-4715-8699-8f307e4fb1e3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20985151-ba16-40f8-8a79-1e7b3e93b7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336b5609-2b28-4929-a8b2-31b209e53df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487f2e3f-080c-48e5-b64c-e0757a30add2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63955b41-1c68-4bb7-b1d0-888166a43fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d4fa1e-a50c-469f-afcd-1024b9240aad",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03226ac-2bbe-4d4e-afba-ff5f794e8c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efdbe29-9851-4b34-a58d-8e8858136b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63f088f-34b1-4ae6-8eaf-c868e5ce46d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "345ab064-b106-477a-8bd9-1b2195bf40b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e36eb7-f8e8-4681-b454-e2377cf77d32",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf34bb44-bf93-4b71-a670-122a8b860e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c82fad-7fe0-4477-b0a5-c4af3c7be008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2fd445-e201-4c3e-a59e-843fb3abdd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "de108f59-3155-46fe-a2c2-6c753db0a53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a756e5-404f-4a70-b8e3-1cca702be9a6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5952c2eb-0c0f-4299-8b22-eff179a7af33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648e8168-382e-4c37-aeb3-2760575bc5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d390bf2e-a80a-4c17-8c7a-3690ea1c3ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10788676-8f4f-415e-b9dd-1f1d5325b7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9662432c-012d-45c6-a326-2d06109fb148",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada42f42-bd86-4672-900f-27d0dc907308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e44e75-9844-41ac-9717-24a2c70cf5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34466c20-70f9-4716-a753-20d5682a6476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e58c49-ac5c-4cda-bde5-8331b3d623e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd3af44-8308-4c5f-a02d-fc101125ac1d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bfadf0-8b5e-4db9-b139-45295a861985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824cf2f4-0753-4f3f-a2b5-a9e7ce6d9580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f97ec0-8316-4989-8922-fb22b4b6f567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "140e9ab0-aed7-45ed-b6ed-a6dc8d3e3d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e37f8d-b078-4c52-a913-b8dba047b9ca",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174aa62c-4b9a-4f2a-aada-c1c1f5e161c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33edd106-21bb-4f89-9a41-924838e77ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac7dd00-b26f-4164-a9ac-e93af29d4be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a386d4f-87ff-4b4f-84ee-6f186be1e8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79be8e2-d8d8-4918-b1bc-cc5552e326b4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86a615d-766a-4393-b7cc-687308886de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed047bab-8d33-4dd3-927b-d7cf63b678f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a44e182-dd04-4a90-9c9a-c64eba5b4071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3c86fb9c-e9fe-43df-a2e1-3204d8a66b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017424bf-d524-4c77-84c9-0cc5c126b34a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785a2f51-0b21-44b9-a6a3-9301b036e1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "003b1eaa-4b5c-4e1a-98c8-de3a59382b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d18a5f-a12f-4e18-9873-774e380d09e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6761bff-f367-4491-86ba-26bf1783f715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcea9af-6090-4b08-834d-a73b82e46b7e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b169ddba-30a9-48ba-945b-3eae1a3fb58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace3fcb1-824e-42e4-a4ca-93be26980798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e65a4e1-e3f1-43ef-a1a0-23196bc1c268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ed9ecf-04b5-4102-a8fb-8a3c87dfb7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e23f6ea-bf60-4da2-8070-34b834c99479",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28edd77-fa45-4f41-889d-2bec074cc9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7372d5-8bc0-40bb-9e1e-ed5311b70640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6be930c-31ad-42b4-a9ac-80b82e5bf62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4c1095-cc71-4162-aa6d-0c946471bcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d24a4f-2b69-4e94-89f2-895aaf18bbce",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43177f0-0de2-4be8-8b18-373fa30ec181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb5a46e-c120-48b2-803a-5726fa9805fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c498125-87b5-4f07-9522-976a2c6a7d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "31105176-06ba-405d-9616-527ae62d4b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f316cca-e0dc-4c68-bca1-ac1285a03bdc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7abf96d-cfbb-4f7e-969d-c453369ad646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d726df68-dc48-4575-8351-bea387e18e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5c3ecb-7737-45ed-aa5b-20fd28c5377d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd4e92e-8929-4e05-87ba-cd4b8acd113b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69188c3-e045-4304-9cd7-2466aacb164f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb601e7d-2506-4ea5-ba6f-b8ee5b1ef04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e06fc5-2db4-460a-ba61-04e1f6b1269f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f5b547-b2cb-4a88-93ec-2ebf444fcf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2aed079-b356-4198-8181-c99483ce5985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44587681-b108-40db-97b4-01b8d9f412ba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b4dc62-733b-4f75-9963-9ae74a5d13bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f21d265-5e08-4c84-91bc-e2dc63d84b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f551986-7030-4ca7-ad18-8be0f52d1164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8e182abb-8a61-45b4-97f5-962edd670810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f824a85-6e68-4ad3-ba0d-9cf62623d794",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8d7735-7f7e-49ac-8fc2-1cdef75f1c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598ef43e-8731-4e7b-9479-c65fd5a84b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a98c259-857c-4d49-b258-843a0334b614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6456e7-4292-4d81-ae56-89243d240bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae28f73-cae6-4fa7-ae94-566653c774a1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566aaecb-2afd-4d6e-9351-7634b29e2af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664cb686-3152-4cbf-b52b-bc383c4e46c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2437abc7-fe3e-48b0-a91c-7e5b4546fe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b21690b-c138-4f83-b164-d939fd22e309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bcd880-247d-461b-8b2c-b961d94000e7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b363d07c-8e3f-4fc3-927f-521f5f8ec7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c929a9-ef6f-4af2-896c-05bfb9080485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb18d732-db71-43fa-8029-779cf75e1e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "36c26f06-cf92-4466-bd99-80cc2a59814a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cd132f-7dce-417f-936f-772a7ab76e35",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121cd86c-810c-4bc1-9282-dfee27e1ba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c273e0-d11d-46f4-a375-68f01b8799a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59846a51-427c-4609-bcc9-02f6f4e49997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ddd7f9-d9ed-4805-8f5e-fadefd7c0cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddcdda9-95a5-47e2-a449-92eb734bfe66",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b6407e-7474-4046-87cc-bad55959ea66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f799f4-4b85-418f-8edb-71d85e12084b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0433d21-6c31-4c50-a58e-519c897986ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc1ed0e-2fa8-4dc6-9aeb-6f0241f9fa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7506b855-4f2b-4655-967f-7bfc0932c86c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c301883a-d681-480b-b648-aec281f04c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0970d899-6b41-41ea-afd6-6ebfbc725e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1b788c-45a7-454a-a01d-f87e9ecae47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5feda78e-bc35-42bc-8317-79de5ca80f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae25e09-1130-4900-abea-60c6b93180ce",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1f98b1-e2eb-4bb6-81c1-1459293b5cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcaa2a86-136f-41a8-b728-5b6b2a6d09ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128bd239-cf1b-4f86-ad67-f4b9e0f691c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8d138e-6404-465a-a231-e4332ddd6fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e5bb13-da47-4db9-bb36-5ef50730e6ab",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bc69c3-c924-4bf6-85fe-17b9a9c222d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0739f05f-507c-420b-a1cd-450888538dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e8ce15-2bf0-40d1-b361-306519e9cd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6be0a1b8-31c6-4494-b15a-aa16e6f90a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1ed0a4-3afc-4eb9-8d74-5439d37d99af",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03e48e1-4dc0-4e99-85fb-35925c40ebb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c99f9c5-298f-4357-aca5-24c9a0e39ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a31bba-52e4-46ad-9492-0cc2d81ec35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c24834e-9ab8-4d06-af2b-15315a864266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c072c600-d8d3-49a3-ac70-c266332aa672",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01f33b4-575a-4751-85a8-787925d71aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1dc0bc-0729-422b-82d2-253ede2d07f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ef9cfe-35c8-41f5-88fb-610e4614d2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43673472-c5bc-4d05-8d04-e72ce12cf52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d190c08b-91a5-410a-b853-b260a6f0f5e7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f3d84e-994f-4dd1-9b51-06b147db37fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f162c6-5063-4d30-bdd8-5c4246f6e87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6664b794-b5cc-4d12-884c-aa2f69817f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eecc6e0-c067-4cf5-a4a2-63907922d5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74920cfe-234b-4eab-bd75-a205885aae14",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416123bd-fdb1-478d-9cd8-62597b46e3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3bd967-d010-42bf-9db8-6e0f6253e951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1182af-00ed-406e-aaf5-1ac3bc858aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c53e1f-296d-4343-a5be-14fe6042e0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d52407-3415-4363-a7ed-8f7fe82feb74",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc2f8e9-dba9-4924-8017-91a96ffad27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6146a81-9475-47aa-8401-4563bd5d9775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56a1f45-1a7d-4a61-a54a-2c6cc18217d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e08929-0348-4b1a-89a2-0273ca19e6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45a50bf-83fe-4c0e-9dd3-1cf98179ee3c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5bc767-9529-4fb7-9b84-640a8cb368a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a21cb7-0cad-4f16-9d82-4d4716f3c27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db32c35d-ae2b-4147-ae8d-2f5aa44a6634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b50dd609-25af-47d5-ad13-298226320eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d94c10-917f-45d6-810e-11df0bc8fd5b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0cf410-b070-4e42-be26-ab4041e3f7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43bc9e27-2657-4bd5-9364-472726a6129f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455194aa-20a6-4266-8473-8f569b2b2c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3860914e-da81-43a0-86b9-bad4a6e44fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8076076-6be6-42ff-9140-3edda4894a38",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87730a55-4093-4fc2-bc81-228fffba2a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9197536-d9bf-4092-a9a6-ac0f2c424e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d54c66c-f0fa-41fb-9baa-282fdd5f4d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f31fc807-2a3d-48e2-9f16-f45ed5d12da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6649670f-14df-4e5b-b9b3-abc348d81eda",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77256b31-93df-482f-8d60-c2ebf648dd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c42b2d-a39c-4723-aabe-404d2ce4720a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057ba9b7-d4f9-43b3-af0b-87d43969d965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "20b78aca-e0b2-49e0-910d-9cf0c4fb2270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5aa0513-c680-4fe9-b2ba-ada8790f8488",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1080a795-8ed2-45b9-bd47-524323e2f530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08be83f7-3dad-4ec8-817b-467f9eb730fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37776467-4ca4-476c-91f2-3d25319894f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3c373c-5c59-4fd9-b5ed-1f3d4894cd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b28d389-1d09-424e-a7d2-b81176d1aa85",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e758a9-5113-4d60-a065-7aa3a7612d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf60ccb-dc00-4c7e-a808-c5ca6515df64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6b46f1-9ccb-4593-9640-ca00e65b017d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1be4a67e-e9bb-4cbe-829c-d1b080e6dfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23d2288-8e44-4d24-b2d8-5eac8525c963",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d88716-ddd3-4a2d-b22c-88603b700291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e392c26f-407e-443d-8957-ecf043aa540b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1305619-5039-4e3b-bc99-4a120c2953cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3e38e3-5229-4fe9-aac9-2d3bdfba4aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48513a2-9993-4ac5-9e1f-2fce103b97c4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b75efe-96ef-4689-afbd-402bcf0e9cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c197f6e-7e90-4f5c-a1a9-fb5f26dcd1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172eab5a-8087-47fb-bd2d-1998491884d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecdd278-e635-477b-a48d-0d3087678d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf2859c-edeb-44cf-8349-7fb467185cd0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b35350-4e17-4b17-ab5b-db608488aa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62b4c68-ca11-45b5-934f-e85d4226a905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747211a4-aa4e-44fa-89b8-9110c480a29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac8c77c-a3df-4f71-a98d-df54a37445ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c258e878-898a-4fed-bbbd-4d2e1680ce96",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25995cf-32ea-4ec0-9b1f-783b24d15d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14cb56d4-bd1a-426e-978e-ee51bf45dc5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f587c66f-65e3-4624-9a6e-05f52361afb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfccc6a8-0c36-4834-bdb3-367f1b4ddcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e280a3b-7f53-489f-aca0-bf981399e230",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e91ba9-a985-4016-94c0-88bc2b035622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d5dee9-6397-413a-bcdd-97a9dbd505d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61ad9ce-7496-4bcd-871f-22ae35804303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3932ef8f-f312-400a-a7a7-12785f48fb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6de21c-fe22-41a2-9609-f445f28fc61c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9999208d-7a19-4f79-a895-e2eeb9ea3d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986d12b8-5ce3-41d6-8bb3-89d6e649a3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4a2388-93a1-4d6e-af25-dac3b2cdf7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6928073-5e07-46c9-8fc3-64de94193324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9904875-6d65-4948-8c1d-4623641ba69a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae774c51-e741-4ca0-87ec-5daf189f464d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269ceaf2-a2e1-4b39-8d8d-2c27afe8551c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e82baf8-561b-4387-ab7b-39db6679f584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "069cf08b-af35-4d50-b118-12876017d1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44930743-29a7-40a7-b139-a238208278d4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2ae68d-0ebd-4401-9d1e-73e07b6fa06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c205a0-f350-4a2a-ae88-c367040eb49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d97da0-9b2a-45ec-9dd2-150d57f336a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64746676-0079-41a9-90d4-f33e12e29cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e947a8-2d33-44a6-a603-387bb0c7f0d4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd9bc46-af76-4e64-9692-aa85ca7566b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af486fe9-06b9-4c1d-a824-bed2054529c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c272bf-7e36-4708-b3ac-2ba3b7461f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "022fba55-e659-4b3b-a12a-376504983ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe808048-217f-4f12-9348-9d56cc1bdffd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99ba59c-71d6-410e-84b9-35b7e5daa080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50438927-4e0d-4036-89fc-0d787f2869dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c88716-9288-4ef7-95e4-9abb01a3e613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d903ec7e-2105-411b-aca7-7ce31fded2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b3d637-969d-4a3f-9817-cc5b4c2fa555",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e29773-8401-46eb-a1f4-085bad089645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8128bd-1ef2-4077-a511-e65cbea64d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15efec5a-b877-4dd4-b04c-770a3ec753c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48912851-765f-4404-9845-662947223ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64197b0f-5ac4-439b-9495-86e925d6934c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae5b133-efa5-4846-85a9-d6707bd6f96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02957ab-819b-4648-9d8f-918e2905f93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8769013f-b269-4259-82e9-0670faede9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e56d9f69-aa79-4a44-bf3a-0d66a63c5d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38020586-1459-40ca-8eaa-e5801307432f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53308408-5037-4d27-82bc-39cc89e21ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aeb8ac6-1742-4497-80df-0e4bb6799b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e16294b-9b51-41cf-a8bf-173a2c9fddc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "727252fa-a7fa-4286-b012-eb86085c7a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bc66b2-8599-4a9c-9373-3f3739ab1fd4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24ded41-de1b-4d4b-b54e-fa7236d948e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7f8ff2-fbfe-4dd7-bfe0-7b7093ce93d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4040585b-084c-498d-8350-3a5dae804405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ea008d-014c-40cf-85c9-72d41c875fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed87a51-3535-4489-bd50-04898463b1a9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0682e3-f632-455a-af63-492d1e9e03d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79449b20-1b06-414e-94b3-0ea5c652e0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1197dab8-9fb6-4af0-9ded-7a4cf4502ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96a9e2cd-efbe-4f2e-b72b-b42224833dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b27f060-691e-4eae-8d8e-24f772fbf3fe",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65d785c-6325-437f-b17b-c1b011164a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08b333d-09b5-4118-b388-be4abcee47a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7c9717-e74c-49d1-9d92-b523b3190067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "146da42f-eb86-4c1a-ab97-238e339e4665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6638cb-43f3-440f-a680-5cd231341dc6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c54987-eaf7-4b18-82f6-d7ce98d20817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e0b8cf-ee1c-44a3-993c-cb39af617a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafd2bcb-4d6b-431e-ba0b-0aecd190bd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1bfcbf-99e7-4378-89d3-2be5a8371afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb15ce2a-8f0c-4ccf-8f5a-c60718ad8876",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07c8a35-4ca6-4f48-bb09-fec21cc331c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afde2ff4-f38d-4b64-9fd3-60dcdceb6740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7190be93-e03b-43b4-b0aa-e4af207b32bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46e7c716-fde4-4e2f-bb5c-cb6d14a33844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabf056f-125b-41db-bd38-4b0f0c1f3c44",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345fb173-66f8-4b88-a6b2-2e5fb5ca0bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa4c658-dc57-4a20-8aca-e5c0f5429724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e3a58b-104f-446d-b005-74e80e3ed595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66bb4b4c-9c76-4144-b5a7-dfaf1b048cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2292adc-e198-4aba-a78f-b63b68dfde81",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb5b572-e1b8-4bf9-8cba-f1646f90a0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f33f720-092c-4480-bd62-19334f20042b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d34c536-1bde-48d2-98e4-1ecc8cd25aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26754632-91dd-4e3e-8efa-12f3208ca994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb840f0-b3fd-4904-ab94-f4977b9a541b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d83dc5a-8931-4a3f-b2c2-252a86ff1332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbe866c-e5fe-45bb-a32d-702a915bb9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9458ddc1-66e6-4c1f-b9a9-9b243f5ece7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4c2f8a-05c5-4b20-96e1-e2f0d120f194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35bbb7a-952f-4aab-bd1c-4b292af04365",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13efa3d5-d15e-493e-bcba-cfd6c44f8c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ec9563-8bfc-4b49-a5ce-020f666a73fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ecc0cb-e5c3-4511-8203-faf4da676060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97cb2edf-72fb-482e-8f38-e26f52b4c70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91f152f-0baa-4431-ba81-b3ba5b0e3153",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8456a898-7878-4ddf-8c1a-ace80558410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b281ef66-b820-49e2-bb5f-b98a32103867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecef255-0c68-4075-b926-acc7433aa856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e50b80-53be-48e8-ad77-8eb318d55f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e019a52b-1c24-4eb4-97f8-0bfda523eb7e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da525596-f8e6-4f0c-a2e0-d732dab82ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e03c53-17ae-4c6b-b541-e761537b7451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631e12c2-fc2b-4ae7-9b06-89506b2608fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a40e711-6835-4831-85c6-3c5d195787b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f2db94-97aa-4588-960b-d4047d7e5209",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809b29c4-823e-40bb-8090-5417bbcff3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b58707-90b6-4918-8158-4226c14a5508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35b6867-670f-4e17-947b-65170d94f269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52dbaf31-0929-4e25-aea7-c4f2fae53bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7205d932-0dc2-4b52-a292-a951e45ba25f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c35ffff-0a6e-448e-971f-48336ede8ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61e9a14-bff4-415e-9c0f-3f53a27c4db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537d9613-8a47-4af7-b69d-ccc781b7efcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74dbef4c-5c78-423b-976c-867ea11ce901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de37eea-ab83-4b1f-a10e-d33f9d4527c2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe87285-13fb-484b-856b-b5bb7ebdf4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0a91aab-676e-4743-887b-419081a86794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0bc5f3-b676-41df-9e08-168d36136d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4581d4-fa48-4d7c-a884-d9e77ff44b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2884052-f34f-42cf-8c2b-8e9096da5797",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d985bf5-68de-4534-a5b2-00b0052ac9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b5b337-8507-4cad-835e-1cd747b47759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfed3941-b24e-4a17-9f1b-9795c2f985a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba7b637-714d-49e3-8df4-d2c3d7adc358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05096922-999e-45b2-bd18-7e610bf434e6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca0edfa-5ebe-4015-8992-985c2453eda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9a601f-fadf-4189-bf28-e888393c3adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f3c3c0-0ed7-4760-8b31-00af7a1f0f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "651e1576-6110-4c80-8083-1eed568da752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7f6bef-173d-41b3-a25f-49b45db6c515",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fb90dc-e78e-49bf-a3b3-7b0da96bc2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842d5112-9d82-47fa-befa-3a17c68731d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e98bec6-3a83-43fa-986f-3c6f112b8630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7fd67f-4132-4547-ad57-f3fe3163240c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d0db68-e8f7-4b3e-99fb-af1263799b5e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6053c9-7d2b-4f6d-bddc-ee8c83a6bf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bc4ba11c-1ed8-492c-b166-aaab73cb0124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7651ace5-877e-4a06-a3ec-d699f6220ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f33222b7-3e95-4de0-9097-7b158eb7cc93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cf25407e-daf2-4979-bda8-5d0f06464eff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b799d935-64cd-414f-b282-074ea37f04cf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491e4b54-d885-4010-9217-9aba00d76cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb2dc94f-c628-4dac-a82e-5ca6afc959c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11e6d12-f380-4bfa-9686-8980314ab84c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8070f64-c896-4f67-b25e-0607c50462f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d0bf9d9-8cf4-4c22-89cc-b2ced391eae6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f2c564f-f523-477b-827f-d90a0502ad12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6cd9825-c968-4e8d-a52e-d0308d717f4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c34f7a7-7fb7-4fcf-9f2f-c6471a1ac793"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8094e0b2-7f18-4e4f-9682-57ae73de0448",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1718565-672f-43dd-8044-f47f37a1e698"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c7fcec27-b425-4a91-9cc3-8c56bc2b1854",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2779986d-5a28-4e28-8a03-b5c8a8060b29"
                }
              }
            ]
          },
          {
            "id": "5007903f-b24f-4477-84d2-29096cec45a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c22da64-8174-4a91-ad8e-0fa17e3ffbe2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08023079-59ad-4854-8f54-eeeaa5442d56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "082d3bf8-c19e-4ada-9b3c-91923c61d601"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0cbd8e0-bc6b-4744-87a2-510f82142352",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16de82c1-5139-47b0-a0ba-c2db764589de"
                    }
                  }
                ]
              },
              {
                "id": "13be3bf5-fa3b-420c-a86f-6767e015a34a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f597f442-1c22-41d3-9029-0a30a66b0f7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "803cb5b8-5760-4045-943a-41b0f117a7cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab86c18c-7fea-455f-b148-b27480804402",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c1f5412-b17f-4eda-b40c-3b32eb6ad785"
                    }
                  }
                ]
              },
              {
                "id": "c20337f5-9e86-4803-9354-e3ea7d273945",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16111d7f-e323-4016-89a6-68c9e5b8700c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52adac3f-7d56-443b-b715-8717e73a6e88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b95a94d4-833a-463d-96af-18ab52d47daa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "822b7300-37f1-4b6f-8eda-357d6cb56e1c"
                    }
                  }
                ]
              },
              {
                "id": "dde8833a-0615-4032-9e96-d5de66518256",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eefa7b51-1059-4044-8fa0-ea67bdecee49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e378ef8-abbf-4ef8-9880-2560f6317da1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8075c8c-d356-4d80-914e-0eff1844b91a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b86b3a37-8bd9-459a-9096-d6bb50d2ef50"
                    }
                  }
                ]
              },
              {
                "id": "32689b08-adea-4164-8bbc-8eb2e49cc068",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "890350b3-a7ed-4371-a5d9-fbc0a758a52c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "135767a1-5baa-4923-beb9-8399eb15c5ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a45e097-8801-414c-9973-85cea3d9ace7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f3c5aaa1-6f81-4df3-a682-bfc19734e961"
                    }
                  }
                ]
              },
              {
                "id": "31da58b5-a9dd-4abb-847d-62d5d3f72244",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2921bb9b-3fc4-4150-8e96-daf51946ce68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "390de523-09b1-44e9-99ec-39384cb45f42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed17e912-083d-4626-8448-2b00a2d5b5fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b5554639-3fb8-4fe2-b2b7-798055f2e905"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81d38562-a45e-4d7f-84cc-f0c62ffa90ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f796b195-4565-46ab-8133-e28bbd397fbc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "180cb6f3-c37e-4a83-8aad-158895f02fb7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d4eb6f2-b294-4dde-8c7c-f9212d6b4d3a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3436ba05-984f-4e85-b489-525a874f0d50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b49fc16b-2ca7-409b-b897-7cddb71585e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2abfc930-f28d-45d6-a0f9-a9a04e3e8563",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e82ff35-1280-4918-aabe-8ef2183f3fe7"
            }
          }
        ]
      },
      {
        "id": "e8636c88-af76-4c36-95e4-fb2d339e5d59",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fe0d7292-931b-4efe-9c28-fa1fd1dd04c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56250022-99f8-4980-b806-117a197b8f50",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "df5be77a-8eb8-401d-93f9-7d989b3af81c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60394518-4ddb-4ab0-9f18-b921e86065d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf763614-cbed-460f-83d3-a9310f2f6976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5673e42-59a8-477d-a03b-7867ce3b4f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e7da9e-ae5a-4750-b74d-3e471a9a5747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7a18d0-fd4f-42a2-9158-040669312649",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5470fc07-dbf7-4de0-aa39-ce9ac5e5b835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744d2753-ef63-4ca2-b302-dfe4da427172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4997955-89fa-40ef-963f-4550a20c3533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e049ce7f-bab7-434a-90a7-f0513096e86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0239dc-9638-46f0-96bb-01cca0b72091",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f609b56d-d606-4fd5-b758-fdfb92ce5a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7b5ec4-3b77-4639-899c-6389a477360b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82613cd5-13ca-49ae-a82d-3b4b4280dd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "871b6ab3-243c-4f3b-9b52-b6468fb295f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59140d1-2ad4-4359-9c10-0a0c72a7d9fa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776923fa-3020-438c-b7ef-fcb05c9f8d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d36305-dfb8-4205-b89d-81c3f79dd0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72edeb2-d9ba-4fdb-b697-23b09973e3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e74635d5-66eb-4e8c-9446-420388fd5dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888e2609-b840-4f06-895d-42a50d15947f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430ee2f0-ea91-43f1-8bef-a9abeabf450b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe82c10-0b2d-4d2c-a076-e21fb2e13b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9543a36a-ad3d-4148-8adc-b43669419708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "668451ff-5a4c-412b-ab7d-96c08ada2123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a0dc44-d695-40fd-bf52-8a99792a75fd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f55f60e-a59b-413d-9a95-721fb9dd0af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4baf1f6c-8727-4263-8ee1-9b3c1885f6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fc9bb8-5c2e-4470-bfda-eeb31b8b80ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ecd6ed7-19c5-40d2-b631-1ef49238c584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f920de-8b2a-4dee-ac9a-94dde7672a13",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebc41d6-3225-4297-9f2e-5178a6afb9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553d406b-b3f9-47a4-b262-f526b7c0a07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8444bc5d-907a-48cd-8f18-7beaadffbe7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "469811b9-2188-4319-a16c-9b0229b1733a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb1813c-ffb1-4842-90d8-3d00b4646724",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e68568-e2df-485b-85ad-40ebcda90707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85d2d10-e68e-45a1-9b90-0277139963f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca70584d-6c03-4e22-abcf-cdb520ae5c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d263d44-00fe-44b9-97a0-7144ef0a219c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd837603-674f-43b1-9e09-58f772663886",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f9d123-a446-40cc-b1d5-a5856dd10562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2e6513-d35a-41f6-9b81-85af6d5f5657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62f7661-147b-42c0-857a-b585c21697fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4e90f4-7016-4142-b4d6-8b70603bae02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c60853f-476c-48a5-89d6-b3b8ba53993e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d111c49-aeff-4e27-805b-73d9b34f277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4184207-f9be-4392-84f5-b02f6607916a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96228da1-2604-4b41-9409-e2e07396f466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35c79ecb-2b27-4160-ada8-7b6a2ac6669a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de74ff0f-c14a-481b-918f-ed1815489dcf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7a18dd-14ba-4863-af71-b21faab40563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5a9a8a-5514-45a7-bcc4-a99af01c7b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9906a6-0bf1-409b-94b9-3e8414688237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2c6ccd-cc5d-43cd-93f6-3349ddddd6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74236a06-30cb-4c7e-a1d6-5ab7f95ced28",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff8e361-7624-4557-8fb4-dc84f4ed73d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9b6500-f3da-40a0-951b-2aaa3d08bbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc38542e-ac91-4ed5-9e3f-f5d1b2762154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8f96dc-4557-471a-a201-07fb88c2d13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd181503-95c4-43d2-bde1-8478851fa95b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadba6e3-f786-47e7-909c-13c32f7e147f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2f8c12-30f1-4da3-b6b1-516c78e71b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eca1cbb-8e5c-4217-b776-0b3bf2f033ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e28238-8083-4c19-87bf-eff84bd95c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85938d51-5d50-4219-984b-c8b09809cee7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8eb955-8093-4d76-9bd7-e98e5876d6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb259e82-d2bc-4341-9885-f44636a9cad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a3feb8-80e2-4948-9aab-579a42ddb6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c438bf-e8f8-40f6-88a7-c1e3273c7219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93379d08-aab2-4066-8d4e-17e68d10b143",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf7e1aa-1ee6-434e-a06d-2a98dc9ee62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6defce3-4cfc-4410-a434-674098494094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d69223-4d75-462d-a6e7-9071ad5de41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c234294e-a9a9-46ae-8855-e624ef0eda1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9edd4f-ba0a-4b89-adf4-a01edf230cd6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab8d6bd-644b-4b07-b331-39d17e166abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1987a93-3f58-4ba1-936c-b883cef8a23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db65ddb7-11a3-434d-9135-a86a3ec6caae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "df50c87b-64b4-44e8-b8ee-443ace386704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce64e4e9-b9fd-492d-853f-965254533236",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb2e524-9a29-41f8-8a1b-a3a23317aa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc55177e-3d19-4ea7-9991-cc3fcc0c7466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab78615-ae8b-4237-9928-131dc50286aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "92e3179a-4a1d-4e9d-85c0-7f6c4eed9d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9e6415-7d95-4c94-aea6-4b0231e72e65",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcafa3a5-02d4-404c-abbe-cf8ea1bd71ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7836b0-2c86-40c5-b3c6-c166ac67424d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da78ab7d-d45b-4b5b-a076-9311e4e2af5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8d9713-5b8e-4695-827c-f00e40ccff3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b15ae7-7aa3-4ccd-a788-3c12e8e26a22",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce960d72-303e-4407-814c-97da1fe49309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd0f7e6-3002-4677-abd4-91cc06cbafd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680e0655-554d-4dd5-9d13-1cead1e39999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e96bcca8-f85c-446a-8985-f5fa1570eeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c6b84b-dc1f-4bc9-a859-695ff5519125",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5643a3-a384-44af-9759-e398bb8af2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845cd14d-b9c2-4297-b9f3-b61ef2963544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78de936d-6347-49a6-8e10-dd53e0130679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eccd3672-d96a-41fd-b09d-cc18494905dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7453c34c-c48e-4f1f-a4bf-f4519eb98ac3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b760e3-4c21-4d81-8edf-05655b4ad43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fce135-c9ba-452a-bf76-45f850ece39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e697ce-3206-493d-a54d-2a98b2c019c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "500cd4d2-fb09-42dc-9f49-600e5080aa2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca83a67b-96e8-4ae5-b42d-4b87447a0d1c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c10ab5-70c0-429d-8920-ede9c4c94502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931bf1a1-9278-478f-a757-2a049cefefbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9be552-2ad3-4e76-909b-705eb4d1d6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5ab15c-151c-4f91-9ea8-d47697f1fbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ef1979-1283-47cc-b37a-7f47378f9047",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a16abd3-40d6-41ed-831d-9f685c0f58f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4f8d09-0d18-4455-bf5b-5e1fa9abd2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95848288-65b7-4e09-b1e4-fda0a70dc15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95bfc64-e257-4fe5-b050-b9fd711a46fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7057298f-91e9-409c-8f3f-fb17ab3a243e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b2a351-48c5-4bca-bab4-b1b8874bb1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2836e2c-f154-4805-93e6-109846b73fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9258e38a-e2eb-4277-b581-53b17069d830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26556ea3-6bbc-4992-ba19-84e28ff329da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef345b4-0d7c-4936-b6fa-86037be2ca80",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9e8562-defd-47c6-b2f2-f840e15c34b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1cf073-81bf-44c3-866a-82100a43633e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e140ab-e7f3-4e6b-8a9c-c0617683bdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "038a13b6-fb92-415b-8bd7-b5feef5ac129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b747b7-d92a-40d7-9437-1e9772bade0a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a92b83-4902-4edb-b797-548847386824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7fbc0e-bc0d-4bef-adad-1fc9e85eb7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e593a8-a51f-4857-b267-3e64e57fad51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4934cd65-5dbe-4cea-a4df-76d1749cc934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f020484a-f5d8-4372-b06c-ce4397db4bd8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d708dc5a-f84d-4127-9027-27139fd1a5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe20bae-36ef-4683-a19e-ba0a88f2b77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba62f58-1d02-426a-ab5e-c925e392b810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9e3795-da33-435d-9aad-50e26a5fb486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4947e103-7d34-4ae2-8ea0-4afd2b7f5fbf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf05310-0bc2-4965-bcea-c14f6228401c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ff4e19-fea8-401b-ad6c-aabfbcd9bd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a145d1b-b994-4e98-974a-f50d8fa86095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49c3e3e1-1119-457e-a867-7c7020e49013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e5e913-d1f4-4d3e-b0bc-52beeab8ed5a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f2dd64-416e-49db-8e4b-03261426f85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5396767-165a-4d84-8ed0-45ad979281ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a284d9b-f56d-4163-b0d9-7c38f5777e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "343d9cd7-e1b4-41ed-92c3-7a659ed57bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce61bd53-85b4-40ec-9bf4-6257c2424923",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a542eb6-4cae-4f3a-94f3-33c5eef44f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59793f5-6a09-4807-9732-4b3ab8c775c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1805ca-2733-47e2-953f-27b3e0e9a0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceed311b-a7d8-4ca6-a900-ba8378413417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22db001-b8ae-4b62-80dd-92b6ccf2a2ba",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcb3c18-6fcd-4947-9a4f-54248b4d374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754bc954-d1e4-423b-94f5-3664a4fe22fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4519aef-93fe-45f8-9208-78eb00fa16f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6de9d2-de5c-4972-831d-4aeca0e4e14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5b4dad-2e6d-4814-9e48-d866c14afedc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8269864-470e-445f-8bde-a994a14b5d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5a57b0-69fa-4863-8529-aff24049d13f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db79aa57-18c5-498f-8555-c04df679b772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d280d0e-fbcd-4d9d-9cc1-c06d376c30e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "28cda498-b22d-4388-9c5a-d2c6eeaabe24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3fcb7ee9-0747-4b73-86cf-7f71fdc5fdd4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e5f6df-f0de-46bd-ad06-0bbc157c698f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "864f8be0-401b-48f5-a8d2-541be7768d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5013b6f-76ad-4647-9a20-dc1dace7e57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dd114d9-7216-49b0-b282-b4eb7a1ab8bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a1840aa-a966-436a-87d3-856fa7b0464a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "defb8031-ced2-4c6d-8934-cc9fdf80b74e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e572a125-1fd1-4bf9-9d1d-9dc52ecd940e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08b131b8-8be3-44f0-a764-b6a2c8f05fe1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e782833b-46f8-4289-9feb-d1d1ee31a286",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "69eb6acd-a8d3-45ea-afbd-39b7b81facef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5718a7d-6490-49ee-bd49-8ea74beeb6c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a14030db-b6e9-4320-ad34-d74e9eae79cd"
            }
          }
        ]
      },
      {
        "id": "189cdf2d-a937-4ce2-8f52-5b26a8cfe79d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fbf7dfcb-fe40-4551-8a9d-db998fb1b809",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e8e7c206-3040-4926-9754-12556fd6c8f5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bfd3d6c6-d10e-49b9-aeae-e9d616615f94",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5262d9-2729-42d3-bdc9-bf6affab1da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4afb439-5cf3-4ddb-9144-c6a5683864e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df163df0-c65d-4994-a95f-d275ef449c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "95661648-beda-4bcc-8946-938c964d8b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87e4ef3-8355-44f3-aa69-9486167b1b8f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b102309c-5d28-4406-9b75-c69cdb57ea3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0948645d-9d09-446d-8cf1-81a769db479c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d775dc-6893-48d5-901a-fff9c0651f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2615493e-aecc-4ebd-9789-2cfb29bf2316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4309cb58-5b84-42c6-b099-0a2532a50001",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88085be3-5eee-42e9-8bc1-ee66ec7dfb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52cfe30-023a-4e76-98ff-996ad8480ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d471bc12-d01d-420d-bdb9-9c19c962671e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa5df89-0956-4eee-be6a-535094a6ff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c930fa-225e-4d4f-ad67-ade06d380124",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dc840a-f84a-499d-a492-329bdeea8198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf47619-f13c-41d7-aba1-4c5087c72c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dadaf74-6b53-4a80-b3eb-420b2dace0b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8691c243-a31c-468f-974d-8ecb66473279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63956dc8-896f-4343-ab29-cf4db905d930",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d219c1-d6cc-4f7c-a512-5d71e66e40cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b951cc8-46a8-4d4f-b650-3312d8b61932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15701edf-ae26-4ec7-8a88-af29bac4a463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d8bce7-fdd0-40be-9c6f-52cd37520010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2a63fe-9500-4857-b2ee-4a80627b6d13",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c6a80a-7691-4a49-bf00-8e1fd3eeb16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cff3cd6-8d9a-42e3-9f4b-3c097ac58ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f77de9c-eaad-459f-a149-b6d949dddd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "138594a5-8383-433d-be3b-c8b3a3b2fd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded8a196-8eed-44ad-815b-44e51904af0a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d69a8e-d8d7-49db-8cbb-f4d17bf03d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4604b525-e3f5-4f01-a550-b152d0b336c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2782540e-8d82-497e-878e-996583678c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "af372fc6-e39d-4769-81d1-5962c3eb95e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc4e177-963f-46f0-ae64-cd898bb4cc70",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba52bb8-03c9-4073-804e-8cd66d81ef7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e054e14f-8fdf-4ea3-a941-dd6e91cebf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b290c09f-fe6f-4d3e-a0a9-0a600d3ad86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c724ddc9-da85-459e-9cf9-6be457e87df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d22ad1-7a44-40a8-8290-7e4295e7ebc9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b878c5-7cc3-4590-bcc9-099860663624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3222cdb4-c6e9-4036-b7cc-7119caf1a069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ece4a8f-4f3d-4512-950d-8b3c6cccbed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff0d455-408d-4628-a5b0-cc827c9fa93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f5e54a-1f7c-4e9b-8b23-7ed6b8469ce4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f170ed-c640-4a53-993b-42f4851980ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1b47f5-4729-4637-a5c8-efc15d1ecba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33db62e6-84e7-44db-be51-f464aba630fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f696ef0-b94a-476b-a4d3-5c4e5cae3ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acbaa8f-2048-4ab2-9b80-375694ac025d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d620cfc6-dff2-4ffe-8fbc-bbf04bdac4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7312b922-4403-4652-9fe4-24e99c1118cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f1be17-d7df-4885-bd6f-3cf3575752aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1054c5d9-3bb7-4f5d-a45b-859773670bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe4b94d-638d-4859-aeb3-49b743e5a0e1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc493ad2-7a1d-45e3-a834-2dfd55a701a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5064e08e-e9b5-4cf5-9ae8-2edcb1305664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b722282-2051-4cc7-9013-cd91d5525be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed7967a-d57f-4ddd-9856-da0d067ab302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d262af-0711-4a60-b926-78d6e9995f78",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f94354-b797-475b-bbed-ebde7369828c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25800bac-9f28-4b65-9d9d-6bdf6b44b17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ddbb20-6379-481f-9931-3ffe7553f40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8acc401-7ded-42e9-82c2-e9c5825d1a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9784c40-681b-4cd5-b479-ae1eb02a5589",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2cb3cb-a06c-429b-be4d-06a3d3ab730a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6597c194-5b0e-493d-bc7e-9d3bfe7592ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8dacd5-0d7a-4342-8102-226d1439b941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "caa19e7a-7f16-4d01-8ca2-90c207fa7848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae94ad64-a7c4-4512-8cc6-5c4695b0a2a5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11495b21-be8c-498b-b301-ddbe850ecdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a8d90f-4bca-4e14-a5fb-c95a047c8ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175ba7f3-3a32-42d6-9389-bb42dd07e8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf1a51d-0c22-4637-a995-bb1ab6104e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f31b2e-8ddb-486e-bd05-d822dbe5398a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff34b715-ca9a-4ca0-a339-5b7b312c1165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211aab91-8950-43bb-a95e-08dada91d79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebdc738-6a69-4fab-9ccb-cd1e3bba2681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "214f7bb6-bf2c-491c-a356-67a73cbb6cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f1bd3c-1569-49e6-bf44-9591670ea8d1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85c5cfb-fa67-40a9-bf66-c8763e644aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4324d901-2215-4cbe-b95d-5c9837ec312e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7d0613-6924-4d87-bdab-8cb027389460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f64ae01-3b5c-489f-8378-72b1837029ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8b7411-9799-4f3c-888c-194175dfbf23",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e310022f-b0d0-4ede-a1fb-88a6ceef7489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d400aa-bc04-4f14-a0db-9106f0814c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca6872b-b323-4c52-97d2-ca865dab6217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2c340f-07e4-484b-bf36-d3509be2ac50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc946dd-f6ca-4171-b718-e1cf849b9470",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2a8074-55e1-4460-9a26-4ffb0fa96c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe53736c-c42f-4411-9497-e92f21f79d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604635c6-2e60-45df-9af1-f207dcf65fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee67c096-fe45-4260-9393-0e03530c6582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f903a55b-c254-4ca3-8344-90b5ad7da0bb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0879971-ba5f-4d6d-a080-1601f5e7be20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6521426-0865-4356-94a3-53780512fc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bbbb09-a19e-4460-b1be-2bd20ac5c95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2380fd-77f1-432d-9c1f-4244dd02ae77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476fbde8-c7aa-44a3-b46d-ab240d414ef6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffd8f7e-2305-4120-887f-60babdf77651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4461a2d-677d-4d01-bc0b-8b6a3cadd089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec072e62-0411-4cda-a3fa-09aa5e0e4ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7535da69-f5bb-474e-b62e-0775f74aeae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225095db-8f49-4f6d-af58-cb801da0927c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d8a3cc-c674-4b24-8f14-3eb307f72dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9285433-f9d9-45e1-a85e-f60b613ed671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca317246-0845-4b23-a01c-672999c9e3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72d06189-aba8-47a1-a017-7f484a7fe62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7fc225-28ea-459f-9c6e-89f3c9cab942",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fba284f-0589-411c-baa3-c3fac3866c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05333539-5876-4b12-aa8c-e314c881e631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1a01d4-9a9b-4d98-a9a0-067456a6b793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ead1f6-5d57-410c-ba62-5b539037954b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a1a43b-f76c-46ea-ad4d-6024969defd8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adb75e3-b224-46d2-8813-a72c8e856422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bce2335-aac5-4f37-a4cc-bbbde8a16381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac6e86f-d3a3-44fd-ac40-11cdf45eef6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a992a72-8ea3-4721-a4b9-cd2e7a28a48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015f37ff-acd3-412c-8a21-e6ea5afc8056",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd2093b-71c0-4955-aafb-311c4f162462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4559c24d-c180-4b07-ab08-1373733ec71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42df5e13-75b9-4e52-82ef-b9d18c85d41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab35b18f-80fa-449c-a788-0e9600dc247c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413407fe-8625-405c-82c2-b93c392260d6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f31101a-b211-480b-a6ad-d6a7c49e9278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4274d0cd-1cc1-4d0e-a184-a1f53dd0470f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72638eb-c086-4ed9-84f9-97088a5efda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "049b0ab2-5979-43d3-a5d6-31eb3bf8dd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d55f67-6e3a-459a-9fff-179b44bb7360",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73de437-fcb1-417d-8019-1bc1f15ef466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f2bcb4-1621-4b09-8ddb-5cc8cef4e329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d58998-ed52-4632-894c-42a2204b5e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b42c728c-fec2-4fe2-ae59-aba14dd03790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b19d6fd-b0b5-4893-bc27-f1cc92472d49",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502c4d3e-a51b-484f-a87b-7fbf6ee0e0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91b524f-801f-4bb1-a248-f7a2f9ee1841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4a177b-624e-4e95-9aa5-1eb223affb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faa93bef-86ab-47f0-b7a4-04cf5f01e430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72eb12a5-a4cc-496a-ba87-1e49f1973af5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d861d3-78da-4d9e-9920-5c294974b211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25e6748-6103-4db3-ba3f-1bf9d0a53918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e018bed7-2b8c-4380-ae7d-1e1dc20014a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee168594-c627-4550-b4e4-ebcee8085a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cab1d0-fc9a-4c83-b45d-b2e19196e2af",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e18a04-794b-4ac0-b6a8-f9fda197abea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a4aea6-9050-4d1b-b2a7-84cf875f7ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86656f09-d1dd-4beb-ba94-0316e8e822a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "397d7758-d665-4734-aee1-5a120a597cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83fb9cd-e984-4241-ba31-7ac17178f411",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33782a0e-4785-43eb-9dab-bd0875e938b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488498bc-fe83-4cde-9561-38efcad1d0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60296678-8cb0-4dab-bbf0-cc82451cbe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b3a6d4-f988-4039-ad95-36eea5d88b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69bf4f6-3979-4a08-bada-009029e1c21a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a350af-a2c4-4b64-9060-097a8d170dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc6f833-d85a-412b-9500-9e29eee7c35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99111adb-8dfe-4fd6-8fa9-72e5e95a547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca14a19-1411-4a57-93fe-29222eff4785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86038ea-7607-4e9f-ae69-5a2156932901",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2903718e-b42a-4c23-a74b-1e9a7d3c65bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e78718-daf8-476a-97e7-3894eb2cf119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a77f46-1958-4356-b0d6-112a138be688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80791b82-1643-4e49-bf49-29d48b564b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a449509-d6e1-4fd1-896a-4008df669412",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a1870c-e865-4330-8e97-bf0266127942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6c8749-808e-451b-8bbc-f067a180d8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29850882-b79f-40e4-9318-8459c9f31d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e7dc15-a01f-4336-9d98-ad24a438a295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503efeb2-76d8-4add-9581-1f10d4d96cff",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43256218-2509-4b73-bc1b-85dd951ee9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e99cdc8a-694f-4f88-8bc4-8d4931174db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b871f904-20e4-40fb-bc22-511f087f4ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c283e0f6-ce06-4203-b609-8e6fe6ceb27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d4400d-1187-4575-baba-188deef7b890",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85196ce-ee43-4d7d-8cb3-27c722633dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acd9c27-f18b-456d-903a-d98e9f9d6827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c748272b-4cf3-4d6d-929d-63f8f594a56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c32e45c-44ee-405a-b10b-0166ff2693b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227e3766-eb1b-4606-8c1a-6c8b12fbfc86",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cc46ec-ba85-4793-9591-8697ead4424f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904475b3-3dc0-4e12-b042-f288dc5507f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7fbb4b-9f57-487d-9726-ba5e32fe3f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bad881b-4727-4b6d-a597-57cb10b7fd60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3b01a74c-e053-44aa-9cfd-59922da4316a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b1cc778-b150-4f0b-9495-c2f5b827d4b2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec311691-5adc-4b2d-a561-041c016d5747",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "496f7eb0-80d7-402e-862b-a71b81278a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8356cfa2-6990-4162-ae37-ea68101e3359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0259e0ce-ed9c-4dde-a825-5faf30218829"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37110005-e8b7-416b-b087-9cdf870d7d9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09bc815f-48c7-444b-9109-f8dd95937062"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d479640-90c1-436d-bf8b-b5d9cfe26a62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7af10227-bca4-4438-8788-8c61dc02aa81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84648125-8b09-4fd3-a5e0-bf6925ed02ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5a52ed9a-47f3-4544-9146-62602e6d62cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3892ca29-d5c6-41d9-bba9-f419abdda300",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49fddfa3-fbf6-4001-8b7d-5c16c54a5a8c"
            }
          }
        ]
      },
      {
        "id": "51b9e05c-85f2-4a00-8ddf-a1422d15a33d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "87f93b7c-4e42-44b7-ba94-7f66932d3af1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "889b71b3-bd98-4329-b73d-af6ebcd0d6a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab93863c-8ed1-43fc-a5c4-e218fe0f1e3a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e745cc13-f3de-477d-a649-b6a199d808c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595f0152-8f49-44e6-bf59-130e830d122d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4939e10-5cfb-4e6e-bdba-be68edf86ba7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f05d98-21d3-4e19-8456-ba0ae4703d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7977444d-7785-4e4c-a7ce-9e7d66f1fbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091a39ec-aeb7-4a50-b875-d33457c275d5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8174150-ee76-454f-8cef-27eba6d850b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2251d9f-6508-4d16-9bd3-e857a6402dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321f26b1-38a0-4a44-97f1-ee4761da4286",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be82f903-5308-405f-a4ee-40ccad7a1457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bed2d44-efdf-4648-82a9-656701f27007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbd329c-e101-427c-a011-f230025f54c7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3d5b1a-9f52-43f9-98c5-9d1bbded573d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5d2250-f167-4d49-b277-37819d898bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658a7885-1054-4029-989b-87255f40c058",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a5602e-92dd-4afc-865a-afc883332843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd5f9ce-e852-49fe-936a-2b471a5b8229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1796c9b7-f1ec-4d63-a219-86f58a78de2d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3df352f-2d6f-4916-be6e-e42191506f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d836b3-e15a-4dcc-8398-f4f067b56627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ab5631-5d3c-4413-93c1-12d4aeafe445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10225911-cca5-4a38-ba01-4628402a8d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72b65c9-5aa0-41c8-8842-5edb5a97baf1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf10efb-2372-4a63-8be4-d7dcf32a1615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61392f5e-c871-416d-b955-3dc393d37e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73c0e03-0cb0-4122-90bf-bbe432dfa692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563400d1-98dc-48fa-9d4a-0393821f3c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9227762a-83fb-48bb-993a-d15968ba4543",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971db501-1fe6-4cd2-8ef9-ce8f2f0113b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9950da47-15d1-46af-8930-a76242aef403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e5fb47-9e81-4d3a-80c3-1d3cb609b399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131d3d2e-d243-4cb5-a2b1-05615ee68450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95254d3-b9fd-4e26-b409-3697be47e171",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133d830d-39b2-4b3e-8704-90fc153898cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ddf710-c3ce-4dab-86db-59b818f9bde2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b44123a-f53d-4209-a8f8-16421d067a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c93638-0c51-4a41-b3f3-e2b5b81e9085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cf62c3-d9fe-4905-afc8-7b1533811efd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4086dfc1-52d6-47e0-adaa-3e118b6b10b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca97c3a7-d5d6-4130-9074-91ba611acdfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb433aa-6000-464c-803c-30c973e75c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324bb1c7-66cc-4032-87f1-cc90cb248309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626fc5ec-0385-4271-99f2-23448fe242d5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05fccf8-fb77-401c-ab38-17ebe9311aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42885b69-eb3e-4d75-8156-17ce8e9ebfce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559385c3-ca39-4d5e-89a1-09fcb40ed8b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01dead54-565d-41f2-b200-3291445d937d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716aee7a-87ec-4c54-a0a0-325fde52bb7a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282cf914-9236-421b-9799-f56e5a0bcd4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf784f23-9fc6-4145-9b8b-7014f18bdcb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3228b19e-6023-4cdb-ac06-6619ac8206c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868c5c41-c813-4f86-9802-ee3391645c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9d6e1d-b226-44ff-beae-02ec84ea6b70",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ab77c3-c192-47ec-b2f4-71f1dd275875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5e6136e-9c06-4a96-bb5e-de2f5dec0c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f567c3-82fc-42e1-b754-f0919dbb09f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860f403f-a66f-48fa-b721-577874d0dbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3432f7-848b-445d-a828-7d9c64a7e17f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd99e27-2167-43d8-9fd8-89d27d93193e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94767628-2fa2-4cfe-a9f9-4c26f7141b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a40da07-2601-4ffe-a6cb-574f9a0deaf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b241d3b0-a38a-49c9-b24a-d542e18880c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050fa4ca-f514-4875-81ff-8c8407e4bf83",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768c44ce-ed42-450f-b796-5f8c6eb13750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd4c0431-aec0-4d9a-bcdd-cafe6b30e53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d97799e-1ab6-4448-879a-677298211000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2dd0f84-9aed-484e-974f-51b6c8f1f1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632c2c7e-b6b3-4a58-af6e-0a932cd4f094",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f575638-11cd-464a-acff-ea6cfb43c98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5972f5d9-0ea1-4b5e-893e-8819a6a0047a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd5401d-8d00-4b05-aa48-15f070d6e3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c23c09-f4df-44b5-ae36-b1eeef506c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c312a63-41bc-4580-b410-63a987e843a9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db51c9b2-278d-45db-b2fd-b0010544ea3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6f07cf-5741-43d6-8cdc-640c1e18da20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab0a4c5-4cbf-4a93-8cff-eb4fca297029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbed69ef-2363-4205-a8ad-bb999fac7a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d548da5-d694-4ebb-8be3-f47647b10153",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5a19fe-c2d2-49d4-aa5b-6956aedd0b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c38ef4-b421-40fb-bb83-f38f73a88a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d7f338-7828-4c39-81a1-184358f1f503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b1fcb7-5a99-46c6-8afa-0280dd98b610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adfa7c5-9795-4987-a0ae-e26ced819739",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32be1158-bd13-4a3a-be7b-70dbb4c6963b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0991b223-b83f-4d53-a1a9-0d9974d50746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4125916d-1aaa-483b-9a32-9651937fa9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb46e152-3012-4529-a1d7-d07c43fa1a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fef4a8-2fcf-4db1-9f6a-5f1a0876c953",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1191d468-cde0-4e04-b8ed-6cffdf50b9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6891cf5e-fdf7-4d8b-8cd7-6f5a5f88e07c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f02394-a189-4c5a-81b0-3b958fdd6db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3d0d39-1a4f-4f20-9329-67ccc8e32794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b293a1e-2949-4507-9bb4-1c86177372b7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8554c2-c57e-48d5-afad-14933b13bcd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a63dce6-79b8-4fea-a324-4dd37931bc8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f220ae1-3733-4cea-8d49-36177e31191a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74ddde6-3766-4ded-827f-c1ea3ce08ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44865e62-03d3-45e7-8ca9-4b769ed54641",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e719e2e8-3cca-4c7d-8d9a-1032e879cadb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63b18e9-9db8-425e-a78a-0ef6ed0a8a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a40a1f7-ac2a-4de5-a638-ac378a10835c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d43c4cb-f2eb-4f22-bb9a-c7a12e23bf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981fd31d-92e1-4561-b100-c9ca49107eb0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626df49d-6cc2-4d73-838c-b869bdf4d0ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7391ecde-d3fa-4d4a-ba31-031e5e0bb14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a1590d-59bb-4fc3-8387-c658c9ae603d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498b8146-8056-440e-981a-48d3d87c93aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33163cba-d19e-45c4-9d32-2e99f6957591",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1f545c-ccf1-465e-9999-8ec1284216b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "296fb0a3-4e85-409c-a157-678c234afd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75da75aa-8f6f-4bf4-bbbf-7330eeecd516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4e9135-29b9-4589-ab3f-b363d7c8660c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c911811-a628-4e0a-a9b2-46719c2460b3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47f5994-6338-44b5-94e0-394568bd1e16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a680bd2-ca26-4850-af68-9f59c4510f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96da99e-3125-4ad1-a482-9dda167a1f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb29383-1f6c-4aa4-8d78-ae6d3cf8ca9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14c37f8-a00f-4976-b73c-7ca60ed7dec8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f5fc11-63a3-41ce-9c28-c0ca60b0c329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "392e46c0-ef8a-4d7e-b54f-766798fdee24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76821b51-1708-44b2-9418-991b3a4a5c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f9663c-dc73-4be1-8739-99f81ec24e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b8218c-aa34-46f2-811a-b54732eedcb2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd99f6d-c3fd-4d18-b339-7a45e265fb9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8260caf2-86aa-498f-9b5a-57c05f6e6288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27556b0-a83e-46ad-9db8-ad1d9341bb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a348eec4-0306-4fb5-ae32-53a99862a617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce73de1-cf38-43a3-b3ab-5361bdb288c5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc55b58f-4f75-465f-af71-55cf24eb8a5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c0bffe1-3711-4643-b7ba-0652b935b3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf436e85-7e52-4533-8a46-74714e2be07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e0b2c9-5854-48b7-abf9-d2684d272d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2beaf4-2b4f-4d44-a33a-c201a88a8d66",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090b340e-a2a6-4432-82f4-746729c55a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a8a6a7e-ab1f-4d7e-b090-2af3265ef938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11adf6e3-32e6-4077-8d82-db89bce8f9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29841f14-964b-4e55-b8f5-5bcdfda851f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a1e325-d635-4691-abc9-1a688e55f229",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9fff51-d059-47dd-96c3-1c823a5e589a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b3360cd-cf95-407c-94d6-610149f996c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470cb11d-3a2d-413a-8060-40a128bfb88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65dd2a77-4cd2-44f4-8dc0-2e75b1f56a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a8201b-1653-4098-932f-dedc63a16f3e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffdd371-e05a-4c6d-96bb-0a9e83a8ca21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3528b42-ebfb-41f3-bce4-e63ca0b3cc01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5fa155-2789-4e5b-8720-a0ded6c13ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa5a912-a6e2-44c8-9257-e6f1119c907e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69985716-a66e-4abf-b370-fe287c0ced62",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704a1eba-72a3-4de0-b658-283a9798a165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0610ca3-c5e7-48d3-8c30-a981c1ff287d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66f2536-10df-4f13-ae2c-22d35d25dc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f262e2fa-4149-4a16-a748-68a81c9e8e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f1a303-3dd4-4dee-8011-500610b29e5c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60998953-a62b-4980-9883-f977893af697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08a8fe46-669c-4ebe-963b-533c42f64e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5515a03-3000-4a1f-a2b2-8ffb38c4d191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c84a9a6-bb8e-425e-9a7d-29c708da1a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f3c84f-d946-40d0-ace0-878d489ced1c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38aa0c0c-88d7-4610-8042-4d11ee07fbfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c3c797-c03b-4163-8968-523fb2ac9dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e74f9c-5cb0-4d73-8113-40c2540f8eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda32e84-5e5f-4c87-a897-3f0bc3263253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d65449-c612-44c3-b655-f91fe8d61a6e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa1513b-d6a1-4690-9c5a-8b48f7b5c6d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d7832e-8a8c-4916-b89c-9f5a7c787c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e2d573-b370-4dd8-91ee-e16fa96ccead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b134779c-e890-4392-887b-73f1b496b835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906c370f-bddd-45df-883e-884bad7d1f85",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4f6e0e-ace5-4603-aba2-3994db9d8968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58897c5-76f5-4785-a31a-dc130bc046a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fab029-f58f-4ec8-8a36-9e025fa13232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f8d860-c32d-4dd9-8861-55ce3f98485e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab99cf9-a6d5-4906-8883-140bb44af66d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23570a66-ab2f-43c6-805c-5a8e3a164bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bee2505-1598-4c4c-b9db-8162c45f0f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323fb73c-b75b-4d26-9b67-6a7380880d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96efcd04-539e-4f14-845b-d0a4b8c70543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfddef1-d1c1-4f7d-aee3-d5b899985fe9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a03ac21-0224-44be-a08b-db22e7c7d5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7ab90a-260f-4caa-adf4-fba5b77490fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f35832-7cdc-4d76-8335-66bb3812de7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd39724-aefb-4c23-b7a7-489cf8b06011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0d4a51-c7f5-4429-892a-9c3048dc6457",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1c7595-5fff-4597-aecb-9aa298f64ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3a3911-82af-4875-8c63-55cf2bd8b780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98686e35-666b-4bb3-8908-48878a7f2ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e2b2f3-2d1f-4bfe-a000-1f90564a0037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de89056b-365f-4b7c-98d4-7020dbfd42b6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9164bb36-18f4-424e-ba07-abc5ecd5e126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ba64ef-0b83-43d7-8515-7d1b640f44f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7733f318-9850-4dd8-a23d-40ad5d207d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c707a0a9-e225-48ee-a2fb-026e7748543b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fd6ad3-53b0-4c1b-9ec3-8e856dca7ae4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f8f842-c37c-4d38-a22c-fe11ea76f9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88eb1a8a-0271-4422-9a27-b0c288d3b60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb112d4-caad-43e9-a2af-58824845c58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3ceb3d-114e-4214-b9b6-edc6b426e731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf2f06c-7ae9-4eff-8fb8-e57b1fdc413f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2acd684-9237-40da-ac67-d37b212c0add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e7ab08-0001-4bc7-a55f-58fce3a07d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9141a169-7ca4-43ef-96a6-e02337c5d207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195a0e67-073e-42a2-a281-0e69a99d2fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e135a71-9a83-49fc-a7bc-945e58d08c3b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba0862b-9acb-4011-be09-c1c92af89f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41c1b91-2e45-424e-8e02-7f29585dbbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fb9a29-2ed9-4d86-bba8-609f9817e668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12bf719-3d8d-44d5-9af1-0b4d5b952529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9770b01d-3a44-4c7c-bd8b-2e40945adce0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c095572-ce42-4efc-a347-f2231ff15d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252c1c1e-4f5d-4b35-8ae7-c47f22846deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfde38d-5901-417a-b999-af60cf20e4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618357f1-e39f-414a-9289-7eafbc4dcfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4aef3e9-2541-4df8-830a-953f17342236",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a36ef1a-1c23-4761-ba76-39740255e72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20c5384-902f-44c2-bbdf-516187af9c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29858271-0c31-491a-82e5-aae38fef65b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d03f592-060e-43a1-9981-17125a6a336d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334836c2-93ec-4bfe-953d-8cfce341a037",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85390241-7bbd-4224-ab00-c59d00e0e9fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12347148-ad7d-4672-abd2-313624a84c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b3d203-48bf-42db-96c4-be0b452e0745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783aaa8e-13af-4e91-8114-c8cd5902419b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b828f5c1-bdc3-4942-aaed-b52bbc0f5827",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb0ae27-8576-4b7e-bf9c-938b1b2a13e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a932db-518c-4c31-997e-75a24230ad4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345166cb-094d-4db9-a947-b7d367a4e7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d00d571-40b0-4441-95aa-98d9a2cc1bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810ce61b-262e-4ccc-b6b7-354acd28e7a2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3bd25c-eb31-46ae-887d-10529e93dbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25526dcf-70b8-447e-b4f2-ef960d842ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1583f58d-8a37-4c7b-9466-2fb5655982cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3bdc28-9a06-4ae7-b1ed-478c55a87e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4700dab8-bb0f-4df6-aa5b-35dc5273cc3c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2bad36-e44e-46ac-93ad-0b63c8d1a8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c333a37f-c8ac-4ac6-8f55-19b082856bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba64e71-3784-463b-b875-fc23eb55c1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35bd08b-ffc1-4da2-8132-b7f1cc220a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dfe4fa-e1c2-475c-bc26-a9198a579167",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eb93e8-b7cc-476c-9bc8-18bd6c9b3e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cea3b91-bed2-4e75-9e37-f533d7b50e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c500180-95a2-410a-bab2-81218e665ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4120a877-3df6-431d-bb1a-c86c19fbad77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb38dc6-f080-4888-a860-6ffe6f071d4c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6c3655-ada0-4251-a1d3-ebc454dcd21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219f5f93-d6af-46b5-a173-748181bb4def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11702156-175e-46f2-abf4-7d11db65ff28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c9698f-68e3-4668-9e9b-caf9e78ac2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fa7db7-f9e8-4fa7-ac41-24c35c0f9718",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02c3f2a-977a-41a0-ab02-a96cd19fb0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d97f10-cd01-405a-b0b2-01769af44138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cb9702-9366-4cde-a750-292eb91845cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4404a3-d0f6-41b5-aa64-7084b0e6b5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f941ecac-f316-4a21-b900-3602029adeac",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51062a1-2d87-44cb-9f3a-d7e5cc28a187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e25aa4-b90a-48f1-be66-646d5da44028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c3f7f4-6f42-4a28-aee7-70893fd9a940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb30021c-c351-47ac-8f9d-02384faa231c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b594629-de74-40df-8679-33388d25fdd7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a0966f-17f7-490c-830e-b79aebd47656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a33496-6d11-4116-86a8-9a93d0962a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e3d3e0-6373-487a-beb2-433021987c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9635649b-92d4-4853-8d6e-2997c3202aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cecf0d-6b75-43ed-9183-ad69302f2bf1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bed52f-6eaf-4745-aa98-ecb1cc09893c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f28469-c312-4f96-8c05-c5ad6cca8180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95160187-baf6-4b5f-8521-8b8ee7343bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8594728e-77e8-4201-8ad8-9694a2b76afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978b3068-5bb4-411d-bc47-83e7ae2f9f23",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555465c9-3207-4379-9d56-ae366d54cca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a872987-2bef-43c3-befc-1a8ae2c14c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd138ea-21d5-42b6-9982-3ddca083ee49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6292dfa-da45-48e2-a490-99fa22bbb983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822ede22-78ec-43ac-99d6-3729f02d29e3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80598bda-0b38-4a04-8c25-64738e5b9662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0f1029-6cd1-4fd7-823d-41bab14d85d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8e6218-731d-4198-a386-41f2efd0fca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ce6018-34a3-4a99-b0c7-5ae97ed4d237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab643100-c149-4287-97f5-42f367208a59",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d7f563-fb47-45fc-9644-79a435b16017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268dcc56-8d3b-438e-8def-6f727c3231ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af798689-c6b1-47cb-9072-4c87a891317f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f388122-50f9-47a4-8c7d-545a80a516d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d515b6-925d-4176-a8ea-f8b4bd9f479e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0649fb00-bfdc-411d-9514-07d5adf2c80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0143aebd-6b1f-455b-8aa9-23b122712155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b00a8a-d16e-4773-84cd-57def9f69c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f3073e-8f9f-4bba-b3f6-7bb2641c712e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad55728-4ded-472e-a8b0-7bbe41739fb7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b581a35-b513-4c2f-893d-050fe4dd8f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8bc750-8d0b-489c-ad76-31683912c7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1d0c49-c61b-412e-ac07-adec2f38d917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae5a259-5dbc-44e5-ab50-421f4eb72490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227d042a-a2fc-4011-93ab-72e360cc7dd6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5357f5b-d4fa-43c4-b792-4496cdf85e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8871a6b-30dc-4e7c-9d87-feb8914390af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a973eae3-24f8-41fc-9876-d9443aa90f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84452331-a10b-45b5-bf24-96d44344efe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32afbb55-8a3e-47b9-8eae-5cf38515ccf0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6587f9-cbe1-4c3b-aeef-9156a476ade3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc64aa05-3e95-489e-ba9e-81734f756c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5a3788-66f2-4aca-a3cf-605f8ac4681a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e11691-002f-4b9b-b793-ed4805bbba17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e652df1c-5b89-495f-8072-f59e7225c4da",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7765193-9127-411c-9eb9-9311f5af3e0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "338a1a25-798c-459f-aa08-84050967280b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e20a0b6-52b2-4746-a359-18438709c578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cb20bf-92cd-44aa-8e06-9684aa6e0606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520c0fbc-4f2e-42d3-b7a0-f2ac87023eee",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c79a1c5-3502-4db6-8635-f27ef0bed662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7b9ca7-4c08-4ee9-af2f-f3f2aa61dbb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ea27f4-d90b-4ccb-abaf-981ff678a3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55164752-28c2-4087-bb6f-1829fb811c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ffff66-3bdb-4f8e-a743-041ecfd15b78",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae924a4e-db29-42e7-9b3d-0721467a02de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c331b4aa-69ff-4f9b-b36d-46db9633ae43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c81a26-7674-488e-a0d0-189c1bb8fa02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9bfef4-2260-4b41-8ef0-e1d96f892fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a23a961-4f5f-46ec-b486-6b4d82593ee3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c3d7a0-9e98-4997-b9d5-2ec9e3be63a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02bd40a8-a031-423d-8c29-262ae7248b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a92d44-c324-46dc-b81e-f98679b4aeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa0e169-44f5-4717-b95c-d21322272a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f450fc0-d1b3-41b1-8e73-65f5c0e75cee",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af87937b-2063-445b-8b4a-977038323000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "314c871a-e222-46d1-9361-0de74279945a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c004be6-b36a-4c18-b767-780bfcb51469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fecb67-fcb9-4945-8bb8-fa0196d3b734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fe4da1-6fd9-4c1a-8988-661cbeb472f0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff4c26f-deb1-49ce-b85a-91e42c299f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5157b4f8-be95-4d9c-8676-da3b27cf0e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec071ca-a86c-4601-b53b-9e82b081ec2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e82c6b-0681-4dce-b2dc-89b28c74899f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e891d04-ad6f-4bb3-9214-751683c8773e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce387d96-b684-4550-8fd9-3f0ddfd8b0f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e5fef87-7962-4d9f-92cf-c1d555d50bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92d6151-149d-4277-ac7d-54aa07809c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6f801f-aad8-42a4-927d-8e53b6cf35fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba3096f-cd2e-4bcb-9971-85cc7beaa44c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85da711d-3dff-441f-9337-c6b8eb6bf5f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcbba84f-10a2-4189-b3c4-f765792951a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b01a2b-3f9c-4e96-9459-0a57e95e769b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5c1f21-9feb-49f5-a7d6-ebbfaecd2423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a372424-bdce-4bb8-9eb3-6e15c376b913",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4d09aa-bd01-4575-b076-807a01fb602e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b755002e-53e6-4c04-92eb-57b286c4d35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ee3dbb-3670-4fc8-92c8-04f322975bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3a476f-baa0-4c8b-9389-23f7b42f1191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4048ad-cf59-4ff6-927b-fb161fd9b2c8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83550a5a-0d40-4bec-99ef-951c23f389e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61fae661-916f-4c23-9208-44cd0325ccb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e093245e-a5d9-458e-973a-2922c4588006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03cb719-be05-4f40-9ce6-59d6ea9babfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac9159c-6052-4c59-9145-1197ecd36516",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095e9fce-fc02-4c01-b219-db9a2dc5e96f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b7f510-9837-4c4f-9295-86cad6981835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc02212d-b255-463d-b8fc-40d5ca3d509f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22ae5db-42a5-40a6-813f-ce613ecb0f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b46e268-ba3d-4957-a409-5aa23fb1aebe",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ebfb52-43d0-4352-b3fc-f50d21648b7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e6450e-77d0-4cda-9320-6bf2bd862117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7c514e-55e8-49ce-8c6f-833cfba155f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d17f933-7043-4e7a-b73b-787db043613d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3c3dcd-f505-4525-bd0a-8cbe292adb61",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fff4cf-f158-473b-8405-d3058069bf50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5177f933-b6db-4bbb-be28-7e062d5b174a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffc133e-ec65-4889-bb4c-3421a168faeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de84221-368d-4114-a549-67c3ebbdf291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9194e8b-8de0-40b6-96d5-350e5cd4c7f1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17e8b14-d236-411d-9217-17a5bcd9cf75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b531cca-db30-4157-b913-1e904879ff1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acdc816-f1c6-46e2-a580-0ffddff0666c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdfe61dc-7e60-46ba-842d-d16030030e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd0e01a-9dd0-4de6-9d54-02801f721503",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c68b81e-2672-4728-bee3-b22e689a5342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec8d4701-de65-4ac5-ae05-b9ced88937cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a7a8f9-6144-4675-809f-3f2710fc227d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3172221f-9630-4d37-9d85-d13f2ff2e4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed36bb96-caa5-4776-a5e9-5b411065ba47",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6fbc51-da2b-4770-8c84-37072bab4465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04dbd74f-b859-4a7c-87bb-c9208f797c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d927af-7472-49b1-b967-4e6d8740f637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae72b693-db10-4d7f-9575-5ec77b867187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0254e6e3-ace9-4359-88c3-c55941e05825",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7e1f50-76a3-44d7-8ead-7b362f7896e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5666f00-bb66-4adb-8c6e-47805e14469e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c55b87-5399-4e19-931b-f94627540ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecb67d7-58ce-4ce6-9f93-e7f7031feda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5188d98-77e2-4155-b952-cea6d1d6e2ce",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8ae1dd-f921-44b1-95e2-aa9edb24bd58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28059bae-0bc6-437c-8866-1f7845efe877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68849a85-abb4-4dbb-b760-5dcfb960ff2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11256e19-dad5-40e3-bdd5-8ee82701a280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7eae3f-eef6-4381-b507-f079901d59f9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232bbf5f-6fdd-4ecb-b521-5abf326b689a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e64765ff-17fc-4d70-9cbc-8e5270382e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4a6051-5b16-42f4-bc36-d022ed12c2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674251e1-944a-4a2e-a543-67d1fb17f80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897cc5a8-7df7-4fcd-9d12-aa8226fc8f04",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474e83fe-6833-4976-b50f-cb346bb4b087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8710aab6-145d-4f12-b036-bf8ff95915c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e895e6e-9a43-422e-85d4-d5f636eb0307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc154d6-67b0-4935-ad8c-3d552980b4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb7f36d-4f3a-40b7-a54b-b9cf61054c9d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8469e4c5-79e5-4279-9579-09180170cd93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d9ec1ee-3331-43ed-8cb4-0999ee95f4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e5902c-c056-4f81-bf7e-ff606682d5c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85124070-608c-47f2-bb0a-8fe4b2c84eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f946ce-1476-4947-90cc-798692478b05",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd8a141-8dac-4e96-8669-4df2f8fa2a94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e708a82d-ce0d-4e7c-b8ff-1c8a03b8b21b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419bab0f-c266-4922-a213-de15d5239b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b94d2a4-55c6-4095-b6cc-666a9383dc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19ef0cf-7e25-4a65-81b2-8c8559c02fab",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a30389-a9ac-4f06-9620-4396c3624b4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0609959-ea9e-4eb2-a96d-250daf2a527b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80e1818-4072-433a-b5fb-706f2c0bea13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695ad5e6-3c4f-44fb-9b97-ae0702ac6d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000a7fdf-45f8-4f90-8d00-be74c47b6e88",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de57c37-ede2-4c7e-9266-9a84afa138f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36ae727b-5c1f-4f98-84c0-84c78841aae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dd5fe9-f9ca-4f24-9192-2711d4e19ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ce0615-af8e-4f13-9585-eecc216a4f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17370344-f3f5-4dd5-be88-56556ab74771",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cf3606-de93-498c-916f-0d36d02689a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7175ee8-f939-43fa-9c27-0b37065eabaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665d6da2-c6c9-4f14-b5e9-dafa0ffc8865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a004ec-7ff6-48dc-87e5-69933516a24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03162fad-7791-4c50-8334-1d22a58d060c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499928df-a0b4-491d-a29e-bbbe7d7b07b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1563f567-7f39-4996-9c6e-530f9bea9de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9895a2ac-d9fa-4d83-b85b-cd80c1964498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10154028-ca7e-415f-96f2-d6a3595f0400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccbb5d6-4345-4523-ba45-f7db2b2f580b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c86945b-e01a-4ebb-8984-eeedf8cd320d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f700fd7-7fa8-4b12-96f5-ccda669c2c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6acaa0-b2ea-4dc9-9135-d8e59ac14d2a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbd8c64-4303-4bac-85ea-83d6ffae95a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0945f950-95bd-41eb-a346-680b7e536670",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff33570-7fd7-43eb-8758-341bf197b648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a653b62c-bcac-431f-9997-3b2baa614320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc749edb-620e-49b2-99a2-d776405c2d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d65cc59-5e07-4020-a4d4-b409ed0a3e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7739295b-23e5-4638-ad8f-f73709a8ee32",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dfda6b-0e91-4406-81a2-2b944ca0004f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d58ed2d1-372b-41eb-968a-ea0c17619d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb7c147-f20c-48d0-9a46-525c63cdacf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577023ca-9ae6-49da-bb8a-208a4e5e3eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7703d74a-e508-4f86-a6ca-0db0a782543f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9723a5-0118-4381-9915-63531906af34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d531fb47-3422-4cea-bb7d-dcf8da85488d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cde8b48-d961-4fde-b2bd-54be8ae87f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299b6ff8-5295-4083-9b64-b74a6c47d050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc1a83d-c0e3-4e6f-bc4e-bbd467c6f666",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee10a8e-89a4-4094-a817-dc62a6978f33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf0e15b-9734-4588-9849-ea96cacb51c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbd0fb0-d1f3-40d7-a8ab-2929f0944a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bac0e91-113b-4399-a384-2e69912ea7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aef4be7-852e-4203-82ad-6c1e3db6b494",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44537d3e-100f-40bd-aebb-a8abd7848b39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7f438fb-c152-470d-b21d-f3ee1dae3cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602262ad-4e6b-4f00-9aac-287880d2f8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae3b39f-bed0-42b4-a54c-468d77d08410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def2ddd3-f665-44f5-964c-71c0dc4ec2e2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd65c8c7-83e4-478e-8490-9f3333c63882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca126bd0-8ec4-40d0-bdea-355c50d86304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974a7dca-5879-404b-970c-4c612787acde",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef687a3-d9b8-40d4-93fc-9b96cf343443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd21c7b1-628c-417e-92c1-b8833dde8f89",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6822d8-ee94-45bd-9247-8fb6f80350c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b328142d-a091-4cfa-a2a6-cd6f1a78ee69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31254a70-a68d-478c-987a-9def834eb31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d222e2fc-95d5-41dc-8669-6540de7132bb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14786d74-97ec-43b6-91b2-8477c416e5f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d89c63bf-2880-4358-8c1b-fab2ffa242b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b3c4380-9d67-4ad1-94cd-8c6d93ae4e1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdfba22c-ecb3-48c7-9a6c-7c226bf3d97a"
                    }
                  }
                ]
              },
              {
                "id": "3f73a76e-aaf8-44f2-aa60-dec6af435400",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30e81723-d348-4384-a1b6-60bc280227fb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7185113-5951-49cd-9833-afffffff4474",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b48a8d3b-4291-4c3c-a978-04b49a66ad18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f02449-4659-4f8f-adee-a614c35fee9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85274e83-aa57-4118-b3dd-23b5193aba73"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35704d27-dad2-4227-b2a9-f4bf9e4626b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c33ec527-95f4-4e51-be8f-8e39919e9a07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca1ba460-679e-4423-b790-69538cc93638",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb212bf9-9522-4939-8d7e-5b0780e00df0"
                    }
                  }
                ]
              },
              {
                "id": "c388b8aa-2b2f-4a94-b354-1363c8b09791",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d92b3131-a792-47ef-85ba-70afda1c8467",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d66854c-f350-47f4-b50e-813f6c7fa254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "80a6d56b-9fd6-4b85-b426-67859838fdbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eada15d8-79d7-4591-ac5b-8b06609b688b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6983bb17-2359-4b8b-9cd8-9d835b5ede3b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "92470a26-1a4a-4e62-9f84-1f4cebc73f62",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b922e797-1db7-45ef-b560-09db14d75c50",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8be91fc1-1120-4f1d-a9b0-9ad547c0e9ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7633e586-85e4-49bc-b535-d25929fa8c0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a9842ba-3a27-41e0-84f8-e7cc3a2040d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bbc6316-89c6-4813-a114-06f16ddaefc2"
                    }
                  }
                ]
              },
              {
                "id": "26da01e9-a00f-4e98-ab3e-9740cb53fb5e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a9ff4ef-0937-4444-ae94-2c66cf2b9e54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c51edc74-3d78-4fe8-a1fb-335f008b0dd4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ce636e3-bd77-421e-ac79-98890e9a424e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4e52923-93b6-4d0b-9ad8-cb8f5cc5f36c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cda2bbb9-14c1-49ec-a2f3-dd0d65f8f4b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3a364305-8d34-428f-9a6e-fa20f4f79947"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "961a9406-bb50-4a1f-b283-74ffd61a7641",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a25a54b-eb31-4f6a-9bea-f5aa06f8e995"
            }
          }
        ]
      },
      {
        "id": "9d7f4f65-d7b3-410d-827a-484727da135b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "589926c3-6799-44d8-aed8-d587d966d9f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdc2ae59-a200-43bd-b36a-3953bcdd38f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dbf247cd-89c3-4c4e-b5fd-af22728fb383",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe206b27-162b-42f1-b958-91a570954512",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "69c8820d-7024-4152-91b6-b2fc690cc7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0c1086-9e0b-4096-bee0-13efbd8ce97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7e709a3-b7e0-42b5-927d-9174cbcc67c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88990357-b604-4719-9554-06b186662eb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9321737c-8e42-46aa-8ebd-1bd46e8e4eb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "268063ea-72af-4bbe-a977-6915f97637fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8c5abfd-0ef6-4e5c-a21e-9ab36910c668"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c40f4376-e844-4aba-8ab6-68b99b048740",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6e496a49-4003-45db-9d8c-c121a998b6cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "608909f4-7a20-438e-b8ed-547554e05807",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1940ef19-2f60-4d9a-b9de-9f968a64c9ef"
            }
          }
        ]
      },
      {
        "id": "8889d2d0-cd9b-4e02-83bf-198286c1db2e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "00e22f64-925f-46d3-80e3-14457c474f61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2a7fc78-2358-43ba-bf43-f33f5863e2de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fe215e9-8649-4e20-8e11-6f438310cd42",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0c5371-8272-46ed-9168-1e64369cb3a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28d53d78-25d5-4cbb-9436-c9b8940b9618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7031ba25-48c5-410b-825d-fc6b3225978b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d322c12-c415-4ca1-80bb-29825b65405e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d49942a-ab15-4005-9b93-e12d88bdabf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34d2273b-7f7d-46f2-8b0e-85cfa23027b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5493411e-0027-4503-8bf0-30eaef902811",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d651b795-c19f-4ec4-b926-2469189b18f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c6f1484-04d2-4a63-85ab-6c3346d4baa5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5b9d92d-99fb-45da-8a96-fbda6172d147"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c4f676c-7e88-462d-938d-189a0d4d4099",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ddd7db4-5477-4f4d-9f74-72837bfa6ceb"
            }
          }
        ]
      },
      {
        "id": "240cc28c-e6d6-44d3-b3c6-d16b48f198b9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7421a7ab-5ee6-4224-bcec-b59aaa4602f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f39f89e-cfa7-4125-a597-2d6ed0fe7843",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13a59dec-6b79-4e74-a264-b15577aeca69",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96779b48-7fcd-42eb-a3fb-705f1283d481",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "320f2405-752d-445c-8956-e4c8b9528e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc132942-d17b-4363-84b9-8b48fee19d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d392ea7-efa6-48e8-bd52-dd6ce785dbd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34a854e8-6c47-4125-879f-ca86622273f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d24b1aa-58ef-48e0-834b-24e18e639272"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e5ba61c-93b8-40ea-95c5-638ac02c2647",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21427b35-2b76-4b19-b48f-758b8d84fe4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e659093-3774-4354-8d94-b2e13b8fb0ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "425f12fc-2100-4fc9-9e93-e3660176a952"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dcf6501a-baa7-4445-9db4-013f1766c811",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca587a1c-fc48-48b7-933b-e32a2798c297"
            }
          }
        ]
      },
      {
        "id": "d0e129b0-1e9e-47ad-a4bf-93592943422b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2dc85ea4-9109-43cb-9268-3727e78c5cbd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b8dd631-5b19-4cc0-8eec-a5b062719149",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ffa839bd-83ea-4dab-acad-fcfe697d21b7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b026e94-2be4-44b8-a413-56cff20cc8c8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84167520-6082-4dd9-85c8-8efbd7ae78fa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 120.16197183098592,
      "responseMin": 7,
      "responseMax": 6235,
      "responseSd": 607.3608127494866,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693269153138,
      "completed": 1693269199153
    },
    "executions": [
      {
        "id": "99873bcf-7690-48c1-971a-afc6588ac34a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "999fe654-2ae4-432f-94fd-1137824dd27f",
          "httpRequestId": "cc7dea29-9ad4-494c-a5ac-9647dd52e6b6"
        },
        "item": {
          "id": "99873bcf-7690-48c1-971a-afc6588ac34a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9f1acd1d-878a-4c3d-a775-da27fad24f5e",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "274a4d02-402f-426e-9216-12fb0d4bc635",
        "cursor": {
          "ref": "4f8e6c96-c912-4512-b4ea-c77e073002b9",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cf5c582f-dc24-49a2-a716-d5958170f5b1"
        },
        "item": {
          "id": "274a4d02-402f-426e-9216-12fb0d4bc635",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "875a6ac2-231d-46b7-9372-51d42c04404e",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "6bff19f6-5756-4ade-8031-233d2fb750f1",
        "cursor": {
          "ref": "7507480c-0091-4abb-8695-a535befe5477",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f12b0a63-7e44-4df6-be47-4b7adc6d095d"
        },
        "item": {
          "id": "6bff19f6-5756-4ade-8031-233d2fb750f1",
          "name": "did_json"
        },
        "response": {
          "id": "8e037d0d-6716-4703-a0ec-f443ff6b59bf",
          "status": "OK",
          "code": 200,
          "responseTime": 246,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5799d3a0-c4a8-41b0-93b7-03b3833fd4e0",
        "cursor": {
          "ref": "96812771-8cab-42c1-b30c-9f6d35fb9748",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5904f020-2a3e-4594-9c27-5fdbc6b9776d"
        },
        "item": {
          "id": "5799d3a0-c4a8-41b0-93b7-03b3833fd4e0",
          "name": "did:invalid"
        },
        "response": {
          "id": "8e0bd913-e446-454f-986b-067c97e4c6cf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3396,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5799d3a0-c4a8-41b0-93b7-03b3833fd4e0",
        "cursor": {
          "ref": "96812771-8cab-42c1-b30c-9f6d35fb9748",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5904f020-2a3e-4594-9c27-5fdbc6b9776d"
        },
        "item": {
          "id": "5799d3a0-c4a8-41b0-93b7-03b3833fd4e0",
          "name": "did:invalid"
        },
        "response": {
          "id": "8e0bd913-e446-454f-986b-067c97e4c6cf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3396,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192d36f4-1ee5-4454-9347-876403d5a774",
        "cursor": {
          "ref": "78840f5b-7bc8-48fc-bda5-9502d7b04a82",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dc6e2ef7-18a4-498a-8a06-68d642790402"
        },
        "item": {
          "id": "192d36f4-1ee5-4454-9347-876403d5a774",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "453ff569-62e3-4184-b0f1-99878ac05f75",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8400bb04-85c8-4771-a1bd-9ac9e374d19a",
        "cursor": {
          "ref": "0de7011a-6e6b-466b-9e3e-a8b919d0dfe3",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "521b9977-bf6f-4126-8b7e-2d9252884f58"
        },
        "item": {
          "id": "8400bb04-85c8-4771-a1bd-9ac9e374d19a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "65fb1870-028d-46ef-b625-b5e1625c7894",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c65846-5b26-462e-989a-1808a25eaa49",
        "cursor": {
          "ref": "47436cf7-aecf-4862-b767-c91459e418f0",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5223bc13-4581-4637-932c-d20ef2d9d2fa"
        },
        "item": {
          "id": "94c65846-5b26-462e-989a-1808a25eaa49",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f2621508-81d9-4825-9513-9001c6260841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cd3d73-8ff2-424b-b0dd-0eef83fb4802",
        "cursor": {
          "ref": "fbd06bf3-61ba-4136-8241-b52ff74a0773",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c58d062-9112-44d3-9c57-d24833f52f22"
        },
        "item": {
          "id": "48cd3d73-8ff2-424b-b0dd-0eef83fb4802",
          "name": "identifiers"
        },
        "response": {
          "id": "504f884b-1583-4a3d-9144-192fe8f5c99b",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32e4043-47a8-4cbb-823d-92f9f65341a2",
        "cursor": {
          "ref": "0ed76b16-46ba-4dcf-a40b-4ae9e7b5b690",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f520ae59-759b-4620-b772-6a9fdba85008"
        },
        "item": {
          "id": "a32e4043-47a8-4cbb-823d-92f9f65341a2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c5e1cecc-7aad-4800-82f1-4c5d6169f157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e052e8-e831-43aa-ac25-8e07af093d9f",
        "cursor": {
          "ref": "bc8f2aee-bd88-46e0-b342-8f31e34c08de",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "eff1c12d-a1b9-466d-8141-45e727a4e399"
        },
        "item": {
          "id": "70e052e8-e831-43aa-ac25-8e07af093d9f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "28a50da9-3fc2-4647-86de-6135c4a5562d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04dc93e1-20aa-40df-ba6e-dc84c60a1255",
        "cursor": {
          "ref": "b63b47c3-5c67-4d6d-8118-a41bd0f33759",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aa0164af-b2f1-412c-baa5-7934ca071be7"
        },
        "item": {
          "id": "04dc93e1-20aa-40df-ba6e-dc84c60a1255",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "df3d90bd-4d06-46ce-8366-2e16b825b97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc87d50-694d-4590-a826-98d8c39c4d20",
        "cursor": {
          "ref": "26b4bc64-d07d-4b26-b2ca-a5d147a6d969",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "22377ae0-0c48-43dd-a0ff-9fe880ed0500"
        },
        "item": {
          "id": "abc87d50-694d-4590-a826-98d8c39c4d20",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ff47affc-03a6-428f-8cce-0fcd5061e005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e8aef0-ada6-4edc-ab85-2a20e753db7d",
        "cursor": {
          "ref": "12f6de59-e9e7-4c9d-984f-67a596d832e3",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3c2eed19-cc76-4235-9778-48f880eb009e"
        },
        "item": {
          "id": "f5e8aef0-ada6-4edc-ab85-2a20e753db7d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a547beee-4e61-4d54-be3d-3c828a2a8f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09642e47-7023-42c1-939f-ff118427288e",
        "cursor": {
          "ref": "6aadd1d5-de2c-4070-b726-ccd31668acae",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9029bcc7-560c-4b79-88df-1057084f2bdf"
        },
        "item": {
          "id": "09642e47-7023-42c1-939f-ff118427288e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c8c75c70-1492-4b0f-9630-084be2fe963e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef908800-15d0-4d1b-846c-c4670f2e2842",
        "cursor": {
          "ref": "85912278-1df6-4d47-ab75-80a3c94fa797",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "de24b60f-5c38-4d60-96ed-06a9566c152a"
        },
        "item": {
          "id": "ef908800-15d0-4d1b-846c-c4670f2e2842",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "65fb669a-f072-497e-a9f7-a164304172b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca9502c-d772-4697-b955-5605b00df392",
        "cursor": {
          "ref": "b4fa20d8-5223-4d4b-981c-4ced47d0fe9c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "54c2f633-d6b4-4268-85b5-b6970f0128a3"
        },
        "item": {
          "id": "3ca9502c-d772-4697-b955-5605b00df392",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "06be85ec-0afc-4403-94e6-280cf528def3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b9176d-69aa-4085-aa1c-395de4243947",
        "cursor": {
          "ref": "e592d9cf-b379-4d90-8f0e-1093031f7fd6",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d3db35de-f856-43ba-84eb-488a4bf16ddc"
        },
        "item": {
          "id": "e0b9176d-69aa-4085-aa1c-395de4243947",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e519c5ee-b25e-4bd2-b913-33e62959a459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62b298c-d7e0-428c-83bb-cc87cafae62d",
        "cursor": {
          "ref": "4aef70c7-e293-4dac-bae3-636799b16588",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "943ef35d-ab0f-4ce2-97cc-3dbcbc188fa8"
        },
        "item": {
          "id": "e62b298c-d7e0-428c-83bb-cc87cafae62d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a100c383-a3bf-4e2c-a3e2-9bd40511a882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a9fe7d-dbef-4ac6-970b-a095923a82e2",
        "cursor": {
          "ref": "a1480ba8-fc29-43b2-aea2-e3ff3c67ccdf",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b947eb8e-8497-4240-bfbc-a0d6d81e542d"
        },
        "item": {
          "id": "36a9fe7d-dbef-4ac6-970b-a095923a82e2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4717a634-7e84-48b6-a7f1-b6060f1bcf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2a1d65-af2e-40f2-848a-3742af977ab7",
        "cursor": {
          "ref": "8f9fb4f2-b8c0-4d53-bf46-2ad65bac1177",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4131e257-d123-46d8-85b9-2cf83d993774"
        },
        "item": {
          "id": "dd2a1d65-af2e-40f2-848a-3742af977ab7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "42203e48-9d0c-47b6-8d38-d1b2865d7ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526724ee-345d-4630-a0ed-970e661e642a",
        "cursor": {
          "ref": "96d2c66f-13c8-4b15-83ac-221544715e53",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "32f603e9-bae2-4637-ae2d-a164a92ad48d"
        },
        "item": {
          "id": "526724ee-345d-4630-a0ed-970e661e642a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "82d3b7e1-4eb1-450b-9457-28d0da1d67fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc72e54-a9a3-482c-9f59-ff92239e2264",
        "cursor": {
          "ref": "9624baef-366c-4cc7-a5aa-247f485f80d1",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5abfccc5-c8db-490a-9bc4-d386aeef0ac1"
        },
        "item": {
          "id": "dcc72e54-a9a3-482c-9f59-ff92239e2264",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7e0abc35-3b47-434f-9918-31a0675a3a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843036ca-f7a2-44dd-9257-6b7ba62eeea4",
        "cursor": {
          "ref": "eaa39a57-b876-4f51-ace6-1e06df9383f3",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8c2349db-d0b5-4fda-a44f-9b4cb5d493ce"
        },
        "item": {
          "id": "843036ca-f7a2-44dd-9257-6b7ba62eeea4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e44b9494-98fa-4a78-8cb0-a851f6831471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a2641d-408c-458e-b68a-7dbf7801b112",
        "cursor": {
          "ref": "36a9feb4-22e0-4a29-9350-7545d100cbd2",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7cd60232-8522-4d38-91ed-d883cd96e541"
        },
        "item": {
          "id": "46a2641d-408c-458e-b68a-7dbf7801b112",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "99912739-0a94-4660-b186-044c4f463657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1ac82d-a042-4b2f-9e33-af96ad596b93",
        "cursor": {
          "ref": "765c2661-f69d-4441-8c57-a97b659312c3",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7111858d-f819-45ac-9695-f5a44c891791"
        },
        "item": {
          "id": "4c1ac82d-a042-4b2f-9e33-af96ad596b93",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fb7c9b0c-e1a1-4f80-b27e-1268b7aaf274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67400eca-32da-46ff-9014-9d421dcd72bc",
        "cursor": {
          "ref": "006ce1fa-a442-4cb2-a542-b672a54ed458",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a73c48b2-9f31-489e-ab44-d15b6319b6a5"
        },
        "item": {
          "id": "67400eca-32da-46ff-9014-9d421dcd72bc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0d006529-c586-4084-a151-3388b87cd1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece63e55-e911-43aa-b180-4b0a4102626f",
        "cursor": {
          "ref": "f8a87049-edc1-47e4-a5e7-986faa96f989",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dfa04018-7dfd-4342-9166-e0b6ba2a67f9"
        },
        "item": {
          "id": "ece63e55-e911-43aa-b180-4b0a4102626f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "70dc9c23-a6c8-4432-addd-6fcd39b34cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a688cd0e-2c2d-425b-87b5-ea9b38698f96",
        "cursor": {
          "ref": "d6a46c1a-06d2-404d-a39e-2f6fb167debc",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3c6fa36a-94e8-4354-9b8a-95ee07ac417e"
        },
        "item": {
          "id": "a688cd0e-2c2d-425b-87b5-ea9b38698f96",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8a94452e-7ee1-4ec0-89e6-9855695453b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f008435-2fc4-455c-a6dd-79ac1411536f",
        "cursor": {
          "ref": "fa7195b4-27cf-49c0-ac33-06d574aea04d",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5cd9fb20-244e-4d93-aab6-6f42198c1ab8"
        },
        "item": {
          "id": "5f008435-2fc4-455c-a6dd-79ac1411536f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0853a43b-feb0-4277-b53a-271946bdcabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a5ed69-2c4f-4043-a1fa-175275df7062",
        "cursor": {
          "ref": "f8804fe4-5183-4b91-9211-f8d9f00e6771",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f89eb68e-aa4e-44b8-8fd9-cf717eb4a4c3"
        },
        "item": {
          "id": "c1a5ed69-2c4f-4043-a1fa-175275df7062",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "aad2d56e-c795-4bea-b5a3-7b77a98f1430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9e42f3-2b14-4bed-8f1d-c8094a9312a7",
        "cursor": {
          "ref": "a6739a38-1ca8-4658-b355-5dc18aef90c8",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0f24300c-13cd-486c-93c7-38a87fe5e39b"
        },
        "item": {
          "id": "8d9e42f3-2b14-4bed-8f1d-c8094a9312a7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "87267b84-a46f-4b27-ad23-9f5a45d064e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a369cf-a419-49f1-950f-10c3de39f0e5",
        "cursor": {
          "ref": "10b770d4-9abb-4787-b48c-cd6903174c1c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c31d5273-7895-402f-bf43-cb99ffaa0e5a"
        },
        "item": {
          "id": "17a369cf-a419-49f1-950f-10c3de39f0e5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d6c5a568-8882-4ed3-a37c-a789b8f7059a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c034c6c-20f4-43c1-b4ad-79d4c0eccee3",
        "cursor": {
          "ref": "3128042e-229f-4d7d-bb57-506b48fb11a1",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6dd254d3-8b59-4a3a-bc26-6ae0d387f2b9"
        },
        "item": {
          "id": "4c034c6c-20f4-43c1-b4ad-79d4c0eccee3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6a01ee62-0664-44ab-ae06-1e9332ec5cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec56d1b-17bd-40ba-b995-643ce4036899",
        "cursor": {
          "ref": "c61eba21-0e53-4dc8-938c-9b6a79596b1f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8613141e-7e1b-4164-9089-1a867b70578e"
        },
        "item": {
          "id": "cec56d1b-17bd-40ba-b995-643ce4036899",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "345c68f8-1df8-414d-85f6-fdf65bc25397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f6d48c-65a4-463d-834c-a29c4f425b2d",
        "cursor": {
          "ref": "e4891dc1-6fe7-4d60-b57d-a687e776b0e0",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c3c4cfd2-3a64-4acb-a120-6f4baaff8428"
        },
        "item": {
          "id": "78f6d48c-65a4-463d-834c-a29c4f425b2d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7945d41a-9778-4451-9f46-e3d66823f8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09485556-56dd-4715-8699-8f307e4fb1e3",
        "cursor": {
          "ref": "c3bb3769-2ed1-4be8-835f-d3ab686ce713",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "212c7a3d-950a-4d8f-8f74-fc18533cc06a"
        },
        "item": {
          "id": "09485556-56dd-4715-8699-8f307e4fb1e3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ee4c5009-296a-4672-af72-a80e13d625ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d4fa1e-a50c-469f-afcd-1024b9240aad",
        "cursor": {
          "ref": "1f15a9bb-efd5-4b70-9d06-a02301079ee7",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a7a21e3e-1079-43db-807e-f5295aa19c4f"
        },
        "item": {
          "id": "b7d4fa1e-a50c-469f-afcd-1024b9240aad",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "eeb55246-4305-48ba-b774-ec67feb9360b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e36eb7-f8e8-4681-b454-e2377cf77d32",
        "cursor": {
          "ref": "d6bb8af7-071f-4fd5-aedf-2a04a1da2e1a",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7b58836d-c7e0-4fab-8bbb-df1da937d22b"
        },
        "item": {
          "id": "b8e36eb7-f8e8-4681-b454-e2377cf77d32",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "46530e23-0a8d-4522-99a9-3ffa787245f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a756e5-404f-4a70-b8e3-1cca702be9a6",
        "cursor": {
          "ref": "4c7966f7-4ae0-4b3e-8dd0-60f292d4e1d4",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "22903a61-8e76-4201-86aa-6d6d9af1efaa"
        },
        "item": {
          "id": "44a756e5-404f-4a70-b8e3-1cca702be9a6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3a88f523-c6f5-4cd2-bb3f-fe5c4230b597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9662432c-012d-45c6-a326-2d06109fb148",
        "cursor": {
          "ref": "bd2d0438-66f2-451c-a8f4-a8231f38710b",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2d74d5e2-3cb8-4b83-82f5-54687350e745"
        },
        "item": {
          "id": "9662432c-012d-45c6-a326-2d06109fb148",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "768d03d7-96b7-474f-8ad6-81102f011a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd3af44-8308-4c5f-a02d-fc101125ac1d",
        "cursor": {
          "ref": "0a804abc-f4ef-4c91-8e60-1b2515ca471b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a8415825-cbea-4ddb-a0c9-dc147acf99ce"
        },
        "item": {
          "id": "ccd3af44-8308-4c5f-a02d-fc101125ac1d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "18f1d71d-9a32-4083-881d-c074abc12968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e37f8d-b078-4c52-a913-b8dba047b9ca",
        "cursor": {
          "ref": "13c453eb-3e4d-428b-aba4-9fbc7ac117bb",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c0a809a4-0235-4d66-a19e-9c39ba698a57"
        },
        "item": {
          "id": "31e37f8d-b078-4c52-a913-b8dba047b9ca",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a630bf36-0e70-4489-810e-adee48875472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79be8e2-d8d8-4918-b1bc-cc5552e326b4",
        "cursor": {
          "ref": "c3dc69a0-554b-4279-a1ff-abafcaef5365",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "22e8d9e3-3752-4905-ad66-8de9f1687e03"
        },
        "item": {
          "id": "f79be8e2-d8d8-4918-b1bc-cc5552e326b4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b0669196-db69-4fc6-a46a-1795dd96464c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017424bf-d524-4c77-84c9-0cc5c126b34a",
        "cursor": {
          "ref": "cd92d835-d030-4495-96a6-1234192093ab",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a85e9e34-3682-4399-a0b6-c729eafba305"
        },
        "item": {
          "id": "017424bf-d524-4c77-84c9-0cc5c126b34a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0921875f-cf02-4057-83dd-4406dc521d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcea9af-6090-4b08-834d-a73b82e46b7e",
        "cursor": {
          "ref": "ad2d0aa9-d35f-40d4-954d-563190d29919",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d5bf7bc9-8897-4eb5-98d3-6bd4a13f4333"
        },
        "item": {
          "id": "1dcea9af-6090-4b08-834d-a73b82e46b7e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "824689e1-2097-45df-bdef-18ea15f1d0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e23f6ea-bf60-4da2-8070-34b834c99479",
        "cursor": {
          "ref": "7da39c68-dd80-4f74-a2d1-2715afbcd6b0",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "faf7f273-edc2-42fb-95de-ac8c2770d969"
        },
        "item": {
          "id": "6e23f6ea-bf60-4da2-8070-34b834c99479",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "422117ad-28fa-493c-85c3-9bea95925a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d24a4f-2b69-4e94-89f2-895aaf18bbce",
        "cursor": {
          "ref": "6dcde350-35db-45e9-ad38-10dd928f68be",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1797a09c-d987-4965-bf79-a805ce5f4265"
        },
        "item": {
          "id": "e5d24a4f-2b69-4e94-89f2-895aaf18bbce",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6eac1841-cca7-40b0-a77d-e9c049b529e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f316cca-e0dc-4c68-bca1-ac1285a03bdc",
        "cursor": {
          "ref": "9cbd8ec6-111b-4e20-9444-3553c47190bb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "94c14f8e-a534-4a9a-b1b0-b90fa40059bf"
        },
        "item": {
          "id": "3f316cca-e0dc-4c68-bca1-ac1285a03bdc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c690eb08-7ba4-40df-b258-d2f177bced7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69188c3-e045-4304-9cd7-2466aacb164f",
        "cursor": {
          "ref": "b8638514-c6f5-4f8f-bc6f-4cc3e3ca9508",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a0207a8e-9beb-4d36-890a-1a702ae69b96"
        },
        "item": {
          "id": "e69188c3-e045-4304-9cd7-2466aacb164f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3bda6328-df9a-4c63-87ac-c64385fd8d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44587681-b108-40db-97b4-01b8d9f412ba",
        "cursor": {
          "ref": "c17fe6af-587b-4587-aea6-7e30ab638a06",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7915e86e-9fae-4589-b15e-d384f2125482"
        },
        "item": {
          "id": "44587681-b108-40db-97b4-01b8d9f412ba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "aaa97332-ec7d-4005-8fe0-a8695d922ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f824a85-6e68-4ad3-ba0d-9cf62623d794",
        "cursor": {
          "ref": "02274a23-e87c-49bd-84bc-32d02c60fd02",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a9eea3ad-e4f3-48ac-918f-3f4a1460a624"
        },
        "item": {
          "id": "1f824a85-6e68-4ad3-ba0d-9cf62623d794",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "dc12e606-b758-4a0b-b49f-16189f9423cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae28f73-cae6-4fa7-ae94-566653c774a1",
        "cursor": {
          "ref": "16724503-155a-400d-bb0f-f0a64b567f02",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "da0bac24-f9d9-46fb-9a2f-5b2ca3e754b5"
        },
        "item": {
          "id": "4ae28f73-cae6-4fa7-ae94-566653c774a1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "96df5f1c-cfb3-4afe-bb45-57c26c081b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bcd880-247d-461b-8b2c-b961d94000e7",
        "cursor": {
          "ref": "c2c31bca-bbce-44e8-b058-5cc35cb163fb",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "783056d1-8912-4cd3-8fac-21225ac48796"
        },
        "item": {
          "id": "45bcd880-247d-461b-8b2c-b961d94000e7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1b049039-d7db-4c2a-b0c6-4e21f4b1b0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cd132f-7dce-417f-936f-772a7ab76e35",
        "cursor": {
          "ref": "86499b28-c784-4299-b233-ece30a292521",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "be6ce326-2c32-4fd9-95c8-a8b30a4cafa3"
        },
        "item": {
          "id": "55cd132f-7dce-417f-936f-772a7ab76e35",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "230513e1-9f75-480b-9b3b-dd2ab8ec96aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddcdda9-95a5-47e2-a449-92eb734bfe66",
        "cursor": {
          "ref": "82d76d4f-7017-46e9-bc4e-36215bfe7277",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f982cf6b-5692-4569-8c2a-929706572ea5"
        },
        "item": {
          "id": "3ddcdda9-95a5-47e2-a449-92eb734bfe66",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f4d2ea72-9749-4e2e-9989-563d627a7bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7506b855-4f2b-4655-967f-7bfc0932c86c",
        "cursor": {
          "ref": "2e5192fd-64cb-4067-b60d-123c95b29674",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "11d6cf53-91f9-4bd0-a61c-8dc771c93b08"
        },
        "item": {
          "id": "7506b855-4f2b-4655-967f-7bfc0932c86c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3f14a4d4-3e31-4444-a29e-5a4a7aa35f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae25e09-1130-4900-abea-60c6b93180ce",
        "cursor": {
          "ref": "3419294f-2761-4dd1-a90a-4d4399242f19",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4a9bd5ed-2e27-4e05-bdde-62688d209c89"
        },
        "item": {
          "id": "0ae25e09-1130-4900-abea-60c6b93180ce",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ae8b8f0e-6932-4dde-a926-514549603c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e5bb13-da47-4db9-bb36-5ef50730e6ab",
        "cursor": {
          "ref": "240c8c47-5720-4d3f-a8fd-62c467dad001",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "02333bc7-47f0-4e9a-8fc4-0932afb7c4c1"
        },
        "item": {
          "id": "27e5bb13-da47-4db9-bb36-5ef50730e6ab",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f4d36864-0e4c-4bc9-812d-a44a53d75a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1ed0a4-3afc-4eb9-8d74-5439d37d99af",
        "cursor": {
          "ref": "559abcbc-548d-4862-8328-774ee6ca6b44",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4604ac9b-dab8-4d73-b168-52d850c1c538"
        },
        "item": {
          "id": "4c1ed0a4-3afc-4eb9-8d74-5439d37d99af",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "77e89e6e-db15-4b42-8065-deba5f7ab22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c072c600-d8d3-49a3-ac70-c266332aa672",
        "cursor": {
          "ref": "5862ba4a-05d2-4a42-ac50-8aebd39df0c8",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "97505ad6-6773-466e-9e46-dbd56d3b2d15"
        },
        "item": {
          "id": "c072c600-d8d3-49a3-ac70-c266332aa672",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d4b49337-1f05-4c2e-8059-6d8b6a5d1851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d190c08b-91a5-410a-b853-b260a6f0f5e7",
        "cursor": {
          "ref": "47efda88-d1e3-4d05-a44b-807f5bb6dc92",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "800b0146-c255-43e4-8c67-f389aeb1af52"
        },
        "item": {
          "id": "d190c08b-91a5-410a-b853-b260a6f0f5e7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8682ce78-1909-4f4c-bd57-11213897caf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74920cfe-234b-4eab-bd75-a205885aae14",
        "cursor": {
          "ref": "1a8330b0-2920-4eee-a039-75ffd2ee719f",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d3af013f-c5f6-48ef-babf-da79487608a5"
        },
        "item": {
          "id": "74920cfe-234b-4eab-bd75-a205885aae14",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "17977af1-ba01-4096-aad4-876851c7494e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d52407-3415-4363-a7ed-8f7fe82feb74",
        "cursor": {
          "ref": "97d2fed0-8424-4a82-b83a-65067e2d6fe4",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "68f0489f-046c-4a3a-b69f-83fa8cdb8799"
        },
        "item": {
          "id": "82d52407-3415-4363-a7ed-8f7fe82feb74",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f2c1f425-fd8c-434d-88b7-b08b05e80bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45a50bf-83fe-4c0e-9dd3-1cf98179ee3c",
        "cursor": {
          "ref": "9bb2a59e-7193-4e1a-b910-e6f82dce3ae6",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b458752c-4f09-4054-a568-25d3421e4673"
        },
        "item": {
          "id": "f45a50bf-83fe-4c0e-9dd3-1cf98179ee3c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e9a5585c-8a1a-449a-b63f-4fd0cf7596c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d94c10-917f-45d6-810e-11df0bc8fd5b",
        "cursor": {
          "ref": "1579e26f-8b92-4fce-b72f-34b811af3cfd",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1d65cdce-86c5-429d-8711-8f58131fcc9b"
        },
        "item": {
          "id": "73d94c10-917f-45d6-810e-11df0bc8fd5b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "26362ba5-2b79-4629-9b3e-7fdd5fd4885a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8076076-6be6-42ff-9140-3edda4894a38",
        "cursor": {
          "ref": "07a19b55-91d8-4cdb-adb2-0645a8aaf5ff",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3dca859d-7940-4024-b958-26923fcb9fda"
        },
        "item": {
          "id": "f8076076-6be6-42ff-9140-3edda4894a38",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "de887152-5105-4aef-b8b6-a22eb5a09622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6649670f-14df-4e5b-b9b3-abc348d81eda",
        "cursor": {
          "ref": "4a45e966-cf8f-4be7-8d13-5486a9fdcc2f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cec46e9d-1382-42f7-94cc-4d25a311d2ef"
        },
        "item": {
          "id": "6649670f-14df-4e5b-b9b3-abc348d81eda",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "31f35a82-a77b-4d73-a980-d7a253626662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5aa0513-c680-4fe9-b2ba-ada8790f8488",
        "cursor": {
          "ref": "2e81f4e4-f9c5-422e-8dac-817750250371",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a628f58f-db2d-40f7-95e6-1fae9517087a"
        },
        "item": {
          "id": "c5aa0513-c680-4fe9-b2ba-ada8790f8488",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "606cd7db-4e10-4eaf-ad14-d9500cc4cbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b28d389-1d09-424e-a7d2-b81176d1aa85",
        "cursor": {
          "ref": "637a2f54-7109-4bcb-9e51-6c98cdb3515d",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ada5f75d-8b4e-447f-aac6-19600f35f989"
        },
        "item": {
          "id": "3b28d389-1d09-424e-a7d2-b81176d1aa85",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "26ce44c3-e960-42dc-81ed-4ddebffe85d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23d2288-8e44-4d24-b2d8-5eac8525c963",
        "cursor": {
          "ref": "b6488486-0c27-4434-9d35-d274e00e034d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8a6efee0-c149-4f1b-b477-04a2aae3a29e"
        },
        "item": {
          "id": "c23d2288-8e44-4d24-b2d8-5eac8525c963",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ff207342-9f80-4454-8c5b-b032455b49e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48513a2-9993-4ac5-9e1f-2fce103b97c4",
        "cursor": {
          "ref": "75f66b7e-54e6-4d4e-b39a-dce9e60f8c72",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "59750718-8129-4d9e-b06a-fa5bfea97ddf"
        },
        "item": {
          "id": "c48513a2-9993-4ac5-9e1f-2fce103b97c4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3cce99e6-104b-43a3-a403-127d490ac27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf2859c-edeb-44cf-8349-7fb467185cd0",
        "cursor": {
          "ref": "e3ef75c2-3e81-4923-b5d8-c1b415d8bc91",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "61de4caa-0db0-43e0-b0ad-14688d5f10de"
        },
        "item": {
          "id": "9bf2859c-edeb-44cf-8349-7fb467185cd0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ab49eef5-dbc0-4773-a5f0-71c06c815af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c258e878-898a-4fed-bbbd-4d2e1680ce96",
        "cursor": {
          "ref": "5ce603d4-8f6d-4714-9920-31ef5c8d12e9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "55875c0b-59d3-49ca-af01-4e27e9b6dcd9"
        },
        "item": {
          "id": "c258e878-898a-4fed-bbbd-4d2e1680ce96",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2e4177be-3029-4ba3-9076-5a51784fbf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e280a3b-7f53-489f-aca0-bf981399e230",
        "cursor": {
          "ref": "9a791e33-3a65-45d2-81ab-4333578bdc68",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e6bd6fd6-296a-4d05-a23b-113cbca01ede"
        },
        "item": {
          "id": "9e280a3b-7f53-489f-aca0-bf981399e230",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7fa0fdf5-7ad8-4c64-ae08-3ae020400f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6de21c-fe22-41a2-9609-f445f28fc61c",
        "cursor": {
          "ref": "1adeb6b9-8b18-4bb2-8e45-d049eb4bac5d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a9e1778c-4949-4214-883e-32683bba5bb6"
        },
        "item": {
          "id": "2a6de21c-fe22-41a2-9609-f445f28fc61c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "68db574f-38d7-4396-803f-2487ff4739ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9904875-6d65-4948-8c1d-4623641ba69a",
        "cursor": {
          "ref": "d36e7b24-567e-4db8-8d6c-c1740641a018",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f3a895f2-eff2-451c-ae40-7328a0208def"
        },
        "item": {
          "id": "d9904875-6d65-4948-8c1d-4623641ba69a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "460bf028-c432-41c3-9ea2-fc8e37a10e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44930743-29a7-40a7-b139-a238208278d4",
        "cursor": {
          "ref": "cde724be-56c1-45fe-bee8-a433f0967bec",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f554f3ce-f8e3-4e13-8386-aed27516ebe3"
        },
        "item": {
          "id": "44930743-29a7-40a7-b139-a238208278d4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6f8534ad-2ca6-41ba-a4a5-21076858eb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e947a8-2d33-44a6-a603-387bb0c7f0d4",
        "cursor": {
          "ref": "2adbeb64-e000-49a1-be87-44d613794822",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "75c455d1-e768-469f-8458-32ca6b28e895"
        },
        "item": {
          "id": "71e947a8-2d33-44a6-a603-387bb0c7f0d4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8076bd7e-7893-4879-9bc0-43146389f6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe808048-217f-4f12-9348-9d56cc1bdffd",
        "cursor": {
          "ref": "36b6a1f9-d0d5-45bc-8d6f-c122150301be",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2f5be319-9033-42c5-b523-2d79e0f0b101"
        },
        "item": {
          "id": "fe808048-217f-4f12-9348-9d56cc1bdffd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3856f39b-1f86-4dea-8a3c-e2d56d86513a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b3d637-969d-4a3f-9817-cc5b4c2fa555",
        "cursor": {
          "ref": "b3bafee2-0539-4e84-8467-102402f5211b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a15ab1b7-bd76-44f9-8e01-8abebc4d3202"
        },
        "item": {
          "id": "c8b3d637-969d-4a3f-9817-cc5b4c2fa555",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9db7054a-9c4c-4115-8b32-c24cc81bb559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64197b0f-5ac4-439b-9495-86e925d6934c",
        "cursor": {
          "ref": "2ac53354-2a23-4aa6-a290-f3d23c7cf9cd",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c9d5d2a5-fa0e-4825-a841-be1bfb278294"
        },
        "item": {
          "id": "64197b0f-5ac4-439b-9495-86e925d6934c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "34252204-a4d0-4f24-a178-f78f85a47128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38020586-1459-40ca-8eaa-e5801307432f",
        "cursor": {
          "ref": "3da6c4b6-9b3f-40b6-b243-eeb34627113a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "83d28349-9927-475e-bc21-b7feff81d90a"
        },
        "item": {
          "id": "38020586-1459-40ca-8eaa-e5801307432f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "43f8ab32-2e6d-45f1-b831-7add290019b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bc66b2-8599-4a9c-9373-3f3739ab1fd4",
        "cursor": {
          "ref": "13348f29-428e-4ef0-a1bd-dbaf5beddb89",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "af562ce2-ea92-42cd-b588-5c79891ac74a"
        },
        "item": {
          "id": "77bc66b2-8599-4a9c-9373-3f3739ab1fd4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6a2455c9-bc5c-4abc-84e6-a8fcd9d6b7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed87a51-3535-4489-bd50-04898463b1a9",
        "cursor": {
          "ref": "b46f256d-c9f1-45d4-bad5-98b9d7713d6a",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d13448a1-ee1f-470a-b513-0121448c7885"
        },
        "item": {
          "id": "aed87a51-3535-4489-bd50-04898463b1a9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8a3a04ff-367d-4f1b-a3a0-fac5dca62ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b27f060-691e-4eae-8d8e-24f772fbf3fe",
        "cursor": {
          "ref": "c91945c5-2916-4223-9196-56624617ff79",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "94bf98eb-2137-4932-a683-f835ae3d81e2"
        },
        "item": {
          "id": "0b27f060-691e-4eae-8d8e-24f772fbf3fe",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "578283b6-a383-4ad0-9f38-daf98f07f5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6638cb-43f3-440f-a680-5cd231341dc6",
        "cursor": {
          "ref": "9fa149b1-baf1-48f5-a3c1-3518975f97dd",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6c4bad7b-d5ca-42f2-a27d-9ba9c8974d66"
        },
        "item": {
          "id": "dd6638cb-43f3-440f-a680-5cd231341dc6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "eae8764b-0472-43c6-9835-911583d25af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb15ce2a-8f0c-4ccf-8f5a-c60718ad8876",
        "cursor": {
          "ref": "bda75beb-777c-4dbc-9b80-f9242ff32e6a",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f08db73f-eb51-4b84-9b61-8c5f65d53c09"
        },
        "item": {
          "id": "cb15ce2a-8f0c-4ccf-8f5a-c60718ad8876",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1389f830-534d-4991-80bc-5f3baabf9226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabf056f-125b-41db-bd38-4b0f0c1f3c44",
        "cursor": {
          "ref": "9511c8f8-0d84-465a-9061-9d00a2f196a4",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "44069f0e-f967-41c5-aa86-e22be130c4ac"
        },
        "item": {
          "id": "fabf056f-125b-41db-bd38-4b0f0c1f3c44",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2a013480-8f83-4461-bb69-0ce44cae5bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2292adc-e198-4aba-a78f-b63b68dfde81",
        "cursor": {
          "ref": "a97cc4af-bde7-4714-b02b-b77399fdcaa4",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0dd08a33-fe2b-4e2f-9be8-60b77487314d"
        },
        "item": {
          "id": "d2292adc-e198-4aba-a78f-b63b68dfde81",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a1123a7d-9925-42ad-83e4-0f3995373e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb840f0-b3fd-4904-ab94-f4977b9a541b",
        "cursor": {
          "ref": "26d52d78-0fd9-4146-b787-dbea6304689f",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5d13d1c5-29cf-4b5f-980e-a05bab62d114"
        },
        "item": {
          "id": "9eb840f0-b3fd-4904-ab94-f4977b9a541b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "83a70346-aa1d-4767-912c-b3e6b7987035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35bbb7a-952f-4aab-bd1c-4b292af04365",
        "cursor": {
          "ref": "4e948205-45f5-4969-bfb9-1d10fb17404b",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "92a179c3-b614-432b-a161-fd1794e15bcb"
        },
        "item": {
          "id": "b35bbb7a-952f-4aab-bd1c-4b292af04365",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7cc3f34f-3df2-4fc7-a333-83a5a124e8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91f152f-0baa-4431-ba81-b3ba5b0e3153",
        "cursor": {
          "ref": "9c9e01b9-c7f8-45d7-b3bd-c31075cc19fa",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "cbd700d6-2890-434c-98e7-90606b81dacd"
        },
        "item": {
          "id": "a91f152f-0baa-4431-ba81-b3ba5b0e3153",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7d3393e6-a61a-4cc4-a74f-bed00abadcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e019a52b-1c24-4eb4-97f8-0bfda523eb7e",
        "cursor": {
          "ref": "d2bdd4b9-1cfc-4289-bb54-fa18d9ad48b8",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1068b7b6-72b3-4b33-ad64-b4c2662e2ac1"
        },
        "item": {
          "id": "e019a52b-1c24-4eb4-97f8-0bfda523eb7e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2fc5d5d9-196e-4f5a-b891-a8f26d7c0d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f2db94-97aa-4588-960b-d4047d7e5209",
        "cursor": {
          "ref": "8e9a0e01-b645-40fd-951e-00990ca1ae2a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "124c42d7-7650-4ecd-8815-62f634c40671"
        },
        "item": {
          "id": "f1f2db94-97aa-4588-960b-d4047d7e5209",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0a242f0c-9b2d-4c9f-b23b-4ef94263de57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7205d932-0dc2-4b52-a292-a951e45ba25f",
        "cursor": {
          "ref": "c5b7a3ef-5a1a-49f8-ab4e-8341c056578b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1b7f94f7-edb5-46aa-b943-a9a4c3a9acef"
        },
        "item": {
          "id": "7205d932-0dc2-4b52-a292-a951e45ba25f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6088421c-db63-4a0c-ac47-8b7539460670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de37eea-ab83-4b1f-a10e-d33f9d4527c2",
        "cursor": {
          "ref": "973895b6-1e18-4ae3-9b6f-2c35810f0cff",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0af4b98e-ee6d-44b6-ba7d-f7f88c0735f2"
        },
        "item": {
          "id": "8de37eea-ab83-4b1f-a10e-d33f9d4527c2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3dd2539e-1745-4c33-a428-3fe42579df2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2884052-f34f-42cf-8c2b-8e9096da5797",
        "cursor": {
          "ref": "9ada141b-4b7f-4269-9f1f-deb955d6f2c1",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "29b9504f-0839-46aa-8ea3-17f6f32d021a"
        },
        "item": {
          "id": "f2884052-f34f-42cf-8c2b-8e9096da5797",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e2d3385a-c8a8-4915-8fb5-a54d5155f844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05096922-999e-45b2-bd18-7e610bf434e6",
        "cursor": {
          "ref": "f7720ee0-c138-4508-b3c0-c8d98d8d1932",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8a71a0d7-8618-4dc8-a9c5-9af83dd9a554"
        },
        "item": {
          "id": "05096922-999e-45b2-bd18-7e610bf434e6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d78bb854-dec7-487f-87b6-d5a0d2c8372e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7f6bef-173d-41b3-a25f-49b45db6c515",
        "cursor": {
          "ref": "3810e308-63ac-4ce7-83b2-674465f8782c",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "913672c5-e18d-4213-b74f-7123663aae01"
        },
        "item": {
          "id": "aa7f6bef-173d-41b3-a25f-49b45db6c515",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1f28d939-8918-4607-83ac-f5fd3873d0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d0db68-e8f7-4b3e-99fb-af1263799b5e",
        "cursor": {
          "ref": "0e756761-cc93-4c3a-ad1a-b6a1300d9335",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "50f00b2c-74a5-4d7b-b2f4-0e8e37c65662"
        },
        "item": {
          "id": "a5d0db68-e8f7-4b3e-99fb-af1263799b5e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e65bece5-83e3-4c59-a890-e0ab84dfe3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b799d935-64cd-414f-b282-074ea37f04cf",
        "cursor": {
          "ref": "8bca4fd0-b41c-49e9-8063-cf22c3e74a1d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "82c18605-c5d0-49f6-8337-86d4683feb6c"
        },
        "item": {
          "id": "b799d935-64cd-414f-b282-074ea37f04cf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c46adc47-e2b2-4873-9398-75cedefeb5b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c22da64-8174-4a91-ad8e-0fa17e3ffbe2",
        "cursor": {
          "ref": "019b1bdb-bb93-429c-91bb-9ff936c585f3",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "aa81f2dc-75e5-4207-8b94-5accb9ccefae"
        },
        "item": {
          "id": "6c22da64-8174-4a91-ad8e-0fa17e3ffbe2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b69034e5-398b-4339-98fd-97a9402e32b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "13be3bf5-fa3b-420c-a86f-6767e015a34a",
        "cursor": {
          "ref": "882db8fd-6706-4a80-af5f-a029c0830637",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "75a49d39-96cc-4e83-8776-5afa9c8e29a4"
        },
        "item": {
          "id": "13be3bf5-fa3b-420c-a86f-6767e015a34a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bf63f55d-7998-43e6-83ac-9266858e9183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "c20337f5-9e86-4803-9354-e3ea7d273945",
        "cursor": {
          "ref": "6afef5b7-7518-4b54-bbd8-f0ffc86fe7f3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "66ec3642-e429-4ee3-bdaf-7e6574ecb02d"
        },
        "item": {
          "id": "c20337f5-9e86-4803-9354-e3ea7d273945",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "485ad9db-38c1-4806-a779-d23b867beaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "dde8833a-0615-4032-9e96-d5de66518256",
        "cursor": {
          "ref": "192f9966-d151-42bb-a041-b82244fb98a2",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f961fafd-a872-4122-bb23-85c4a9eb5c17"
        },
        "item": {
          "id": "dde8833a-0615-4032-9e96-d5de66518256",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7b4556db-5424-4cda-8cc9-ade0961226ee",
          "status": "Created",
          "code": 201,
          "responseTime": 5055,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "32689b08-adea-4164-8bbc-8eb2e49cc068",
        "cursor": {
          "ref": "36e49998-8fb9-4105-a963-f1ea229bd695",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b22c743b-9a93-48f6-8ade-5d32d839e6b1"
        },
        "item": {
          "id": "32689b08-adea-4164-8bbc-8eb2e49cc068",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dcec445f-c091-4437-b263-6c2ead8db774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "31da58b5-a9dd-4abb-847d-62d5d3f72244",
        "cursor": {
          "ref": "3770bc4d-5792-4483-847f-02a2edd88109",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f7ab4f48-cfd4-4729-b175-6f8d9cef3a8b"
        },
        "item": {
          "id": "31da58b5-a9dd-4abb-847d-62d5d3f72244",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8c46dde1-1add-4ea4-aefd-66182a32a951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "df5be77a-8eb8-401d-93f9-7d989b3af81c",
        "cursor": {
          "ref": "bc5547b5-a548-40ce-87a0-99c504025963",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3c27de80-c2ce-4935-9137-674c926f7417"
        },
        "item": {
          "id": "df5be77a-8eb8-401d-93f9-7d989b3af81c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6dadba31-0aa5-42a0-997e-cd3bdafb08a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7a18d0-fd4f-42a2-9158-040669312649",
        "cursor": {
          "ref": "d76d137f-dc84-4ce7-b06a-ccf0dee83312",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c92b5061-bcb5-46be-92e5-f689ab952028"
        },
        "item": {
          "id": "7e7a18d0-fd4f-42a2-9158-040669312649",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bb4bf263-4608-4562-8e6c-fedc3ba23365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0239dc-9638-46f0-96bb-01cca0b72091",
        "cursor": {
          "ref": "44086b7c-259c-4e5a-a88f-978cc9632f99",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ba969183-a954-4c0a-87ff-b3aea69f28c1"
        },
        "item": {
          "id": "1a0239dc-9638-46f0-96bb-01cca0b72091",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c39c694e-191c-4cd1-a8da-a3ffaf768c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59140d1-2ad4-4359-9c10-0a0c72a7d9fa",
        "cursor": {
          "ref": "8b05f5a7-d6d9-4835-aac5-355f84dd2ba7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ecfd16f1-8fca-4807-b7b2-63d88e017af0"
        },
        "item": {
          "id": "e59140d1-2ad4-4359-9c10-0a0c72a7d9fa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3f80e8c9-bd5d-4a41-b3bf-7e45c029648e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888e2609-b840-4f06-895d-42a50d15947f",
        "cursor": {
          "ref": "eab23c71-8574-4840-9d83-3f5400452b0d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "33588428-7fc1-40c9-aaf6-78574922d96b"
        },
        "item": {
          "id": "888e2609-b840-4f06-895d-42a50d15947f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b8d435fe-0484-4f97-98ee-a9931b8e17b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a0dc44-d695-40fd-bf52-8a99792a75fd",
        "cursor": {
          "ref": "2f8f8c3b-3849-4757-87e1-7070ed7c47b4",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a5f7c5d8-b632-42cd-b43c-54f688495cec"
        },
        "item": {
          "id": "23a0dc44-d695-40fd-bf52-8a99792a75fd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "68a4ac0f-8eb1-40d1-a913-9e45aa06c9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f920de-8b2a-4dee-ac9a-94dde7672a13",
        "cursor": {
          "ref": "c96a5f80-bc49-415d-836a-ed7465c28bb5",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c0ec9e9f-7e8d-4ad0-a70f-7db9724f2f33"
        },
        "item": {
          "id": "46f920de-8b2a-4dee-ac9a-94dde7672a13",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "adf2fd2f-7d37-4d73-89e2-5e2e1d8951ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb1813c-ffb1-4842-90d8-3d00b4646724",
        "cursor": {
          "ref": "b238fb8d-131c-492d-9a03-89f37f99abe0",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3f26d392-a657-4cd5-9ad7-f18a5c5ce423"
        },
        "item": {
          "id": "cbb1813c-ffb1-4842-90d8-3d00b4646724",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1512be49-1434-4692-9ee6-807fe08cf7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd837603-674f-43b1-9e09-58f772663886",
        "cursor": {
          "ref": "a93eb7e1-b52c-481c-9c4b-f18198f98b76",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "53ee4987-aaaf-4735-986a-900bd120cd0c"
        },
        "item": {
          "id": "fd837603-674f-43b1-9e09-58f772663886",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "aa506be9-f59c-4a64-9f39-11b432c0ec08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c60853f-476c-48a5-89d6-b3b8ba53993e",
        "cursor": {
          "ref": "d5a982f5-282d-41f5-b346-f35ea7bc2f22",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "998520d0-1b0d-41c3-9d52-be002b0c0232"
        },
        "item": {
          "id": "3c60853f-476c-48a5-89d6-b3b8ba53993e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3f6ef127-b007-4492-a169-5388a17b06b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de74ff0f-c14a-481b-918f-ed1815489dcf",
        "cursor": {
          "ref": "45288742-9a3d-486a-890f-a583809562e9",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "08d6c1d2-c745-48af-b37c-ab1496e20ea9"
        },
        "item": {
          "id": "de74ff0f-c14a-481b-918f-ed1815489dcf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ab4257b8-4f2b-4a2b-9fc6-93134f9af6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74236a06-30cb-4c7e-a1d6-5ab7f95ced28",
        "cursor": {
          "ref": "c8b54c39-3ac3-403e-b975-aca213e2cda4",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1f48a325-1c2f-4ca7-a97c-6d1c7a6e6d7d"
        },
        "item": {
          "id": "74236a06-30cb-4c7e-a1d6-5ab7f95ced28",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ad967057-4d84-47dd-b46c-103411f00638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd181503-95c4-43d2-bde1-8478851fa95b",
        "cursor": {
          "ref": "78440bd8-b1eb-4e81-ba0d-2c6bb70dbfd1",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e0d1a1e0-e7bb-43d2-9e9f-a649e2909cfc"
        },
        "item": {
          "id": "bd181503-95c4-43d2-bde1-8478851fa95b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c7d28dc0-86c9-444e-b8b2-1bcddf7726f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85938d51-5d50-4219-984b-c8b09809cee7",
        "cursor": {
          "ref": "ceb3ed30-6afe-42ad-a86d-1be9b626749c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8ea63fbc-eb06-46c0-b9a0-544893867297"
        },
        "item": {
          "id": "85938d51-5d50-4219-984b-c8b09809cee7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cd691346-408d-4e98-a7f8-23d681fd73e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93379d08-aab2-4066-8d4e-17e68d10b143",
        "cursor": {
          "ref": "6c7b028d-5435-4017-889b-b4d0af46b4ac",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "311a3495-b781-4d70-8f38-4857998691cf"
        },
        "item": {
          "id": "93379d08-aab2-4066-8d4e-17e68d10b143",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "107b9fbb-62c2-4704-82c6-cbe0e97bcc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9edd4f-ba0a-4b89-adf4-a01edf230cd6",
        "cursor": {
          "ref": "6de116d0-dbde-49f4-998a-81aedc2d539e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "11a1c47c-baee-4955-9ad7-9b2f690e3265"
        },
        "item": {
          "id": "4a9edd4f-ba0a-4b89-adf4-a01edf230cd6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d403c59d-9cee-4ee1-904f-134987cfbfca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce64e4e9-b9fd-492d-853f-965254533236",
        "cursor": {
          "ref": "e548b3a8-365f-46f2-923e-317937896f98",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c1f8740e-ab55-4c02-aff2-09eae6c7ccaf"
        },
        "item": {
          "id": "ce64e4e9-b9fd-492d-853f-965254533236",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "655d324f-9677-40ba-b566-c39a5a0a0eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9e6415-7d95-4c94-aea6-4b0231e72e65",
        "cursor": {
          "ref": "eb529b01-609e-480c-9f27-38ec53e02464",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5f627bc5-525f-4bfc-ab49-812c01f99db6"
        },
        "item": {
          "id": "8b9e6415-7d95-4c94-aea6-4b0231e72e65",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "01778329-e6d9-4412-a706-341453b9b164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b15ae7-7aa3-4ccd-a788-3c12e8e26a22",
        "cursor": {
          "ref": "4b836cea-a623-4894-a2be-0976a12deb5f",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f12159bb-e18e-42ca-a8db-962d9b0f2203"
        },
        "item": {
          "id": "88b15ae7-7aa3-4ccd-a788-3c12e8e26a22",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "860978b0-3b22-4520-a979-e59613cce47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c6b84b-dc1f-4bc9-a859-695ff5519125",
        "cursor": {
          "ref": "f8ca9aa6-6c59-4eb7-9f78-8e128619db66",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "629ab485-97fe-4b06-a1d7-785b67ae6aaf"
        },
        "item": {
          "id": "46c6b84b-dc1f-4bc9-a859-695ff5519125",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3bc839a3-02cc-4430-96be-362be50b8fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7453c34c-c48e-4f1f-a4bf-f4519eb98ac3",
        "cursor": {
          "ref": "f6cb0529-bdf3-41e4-89ec-3cd93f7450fd",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "01b7c58f-9640-456c-b2c1-2fe32b55ef5c"
        },
        "item": {
          "id": "7453c34c-c48e-4f1f-a4bf-f4519eb98ac3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9b4f57d1-a3a2-41c3-9eb6-0fc1f18580d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca83a67b-96e8-4ae5-b42d-4b87447a0d1c",
        "cursor": {
          "ref": "ca398782-4cb1-40bc-b567-edbc8d6f6a1c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f7b0b61d-093c-47c1-baec-39f8a8a2f298"
        },
        "item": {
          "id": "ca83a67b-96e8-4ae5-b42d-4b87447a0d1c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2931eafe-8f14-4ff9-bf58-a65cc152c78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ef1979-1283-47cc-b37a-7f47378f9047",
        "cursor": {
          "ref": "43fd1e26-d900-4d67-b335-41d95f63efcf",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eb7b96b5-805d-4765-83d1-f74e6aaa01e5"
        },
        "item": {
          "id": "d8ef1979-1283-47cc-b37a-7f47378f9047",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fb82aa5c-a92d-4334-b296-f40433efac28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7057298f-91e9-409c-8f3f-fb17ab3a243e",
        "cursor": {
          "ref": "9bc8dbf0-834f-4030-962c-a4c7f08b5308",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "62adccfb-428b-4518-9196-527c45615c8f"
        },
        "item": {
          "id": "7057298f-91e9-409c-8f3f-fb17ab3a243e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "42fbee99-3f03-4e35-9ca0-8a4b5b72100d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef345b4-0d7c-4936-b6fa-86037be2ca80",
        "cursor": {
          "ref": "fa7d529b-2c9a-4d0e-8767-5a9829270af5",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cccd17f6-5e9d-4388-98cc-91dc71d7d8d5"
        },
        "item": {
          "id": "eef345b4-0d7c-4936-b6fa-86037be2ca80",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "99a3c999-2d73-4b65-96c6-a383a47c82df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b747b7-d92a-40d7-9437-1e9772bade0a",
        "cursor": {
          "ref": "279b8de9-0b1d-43e0-8598-bb76e6bebb4f",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ee52a106-56ee-4da8-abaf-606e2c34dec9"
        },
        "item": {
          "id": "c4b747b7-d92a-40d7-9437-1e9772bade0a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fccd9499-be71-46b5-834e-85a56eef3285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f020484a-f5d8-4372-b06c-ce4397db4bd8",
        "cursor": {
          "ref": "c5f4373a-c7d8-4091-9de5-429170c4d4e9",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1aeac8ed-d48c-4275-9e99-8f6d6b20f78a"
        },
        "item": {
          "id": "f020484a-f5d8-4372-b06c-ce4397db4bd8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dbb6b7a9-5884-4575-9ee3-d7a8204c0b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4947e103-7d34-4ae2-8ea0-4afd2b7f5fbf",
        "cursor": {
          "ref": "28687dba-a01a-4d04-9a5f-0a554c1b1855",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4731c701-7de6-4831-9bdc-72a4171251c3"
        },
        "item": {
          "id": "4947e103-7d34-4ae2-8ea0-4afd2b7f5fbf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "30eeafb7-80f2-4a6b-996f-d55480c9846d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e5e913-d1f4-4d3e-b0bc-52beeab8ed5a",
        "cursor": {
          "ref": "5b0344d9-4df7-4889-b5c3-2788ea7eea38",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4e8523bb-22ad-4176-8f19-faa9a0897b80"
        },
        "item": {
          "id": "a0e5e913-d1f4-4d3e-b0bc-52beeab8ed5a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cdd54a6c-2cc4-4905-9c60-361efc987088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce61bd53-85b4-40ec-9bf4-6257c2424923",
        "cursor": {
          "ref": "b561d986-786e-4dd1-92ee-fc39af3908f5",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "83bec469-3c63-46c9-9f80-176dfab8658b"
        },
        "item": {
          "id": "ce61bd53-85b4-40ec-9bf4-6257c2424923",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4b46afd3-8535-402a-bbec-119be8feb80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22db001-b8ae-4b62-80dd-92b6ccf2a2ba",
        "cursor": {
          "ref": "d461d157-8754-491e-a0a8-9114ae6eaa78",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a03ad40e-334f-48fe-ae89-de106f761915"
        },
        "item": {
          "id": "e22db001-b8ae-4b62-80dd-92b6ccf2a2ba",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "25e5a6b6-8007-4f97-b5b2-0c919749caa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5b4dad-2e6d-4814-9e48-d866c14afedc",
        "cursor": {
          "ref": "88f1f9b5-59ad-44af-9738-c4d579e7ff99",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3ef24c05-3825-4e11-940b-62995939b5fa"
        },
        "item": {
          "id": "7e5b4dad-2e6d-4814-9e48-d866c14afedc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "34503dfb-e9d6-4235-823b-88414b55f2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcb7ee9-0747-4b73-86cf-7f71fdc5fdd4",
        "cursor": {
          "ref": "1c86e057-c2da-49b3-8546-10b2cb7323a3",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "81117e3b-f82e-4b31-8089-7d81150390f1"
        },
        "item": {
          "id": "3fcb7ee9-0747-4b73-86cf-7f71fdc5fdd4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8c0c9b79-bddb-4b58-9b88-a87b3fbc0936",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd3d6c6-d10e-49b9-aeae-e9d616615f94",
        "cursor": {
          "ref": "179db211-77a7-46bc-b17a-8a179c09afdb",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1225be0a-1acd-42d9-8e12-7113c0327fc3"
        },
        "item": {
          "id": "bfd3d6c6-d10e-49b9-aeae-e9d616615f94",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7f96a522-336e-4922-8849-66b373820d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87e4ef3-8355-44f3-aa69-9486167b1b8f",
        "cursor": {
          "ref": "eed63065-69e7-403b-a2a7-a422caecb566",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4c350f64-dd5e-4d11-8b8d-1773ede9f7e4"
        },
        "item": {
          "id": "b87e4ef3-8355-44f3-aa69-9486167b1b8f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d1f58834-e48d-43ce-a119-40034db9a2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4309cb58-5b84-42c6-b099-0a2532a50001",
        "cursor": {
          "ref": "89615b56-218b-4b9f-9307-6c88328c735e",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0e62bbbb-12a4-462e-8bdb-7b31adc3fc76"
        },
        "item": {
          "id": "4309cb58-5b84-42c6-b099-0a2532a50001",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "251241f7-beb0-4aa0-bdd6-3a6ea596a9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c930fa-225e-4d4f-ad67-ade06d380124",
        "cursor": {
          "ref": "09563e47-00f1-4f8b-bcd8-57eb8c481464",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dffa16df-4da0-4c91-8e9b-bab27f1788b0"
        },
        "item": {
          "id": "08c930fa-225e-4d4f-ad67-ade06d380124",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d7bb2476-f566-4c4d-bad5-1fb221f7c800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63956dc8-896f-4343-ab29-cf4db905d930",
        "cursor": {
          "ref": "95a03353-2e1f-4c28-a26a-ba75fdb5bf44",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7cb7073c-6d07-4134-bc01-de5a783b589d"
        },
        "item": {
          "id": "63956dc8-896f-4343-ab29-cf4db905d930",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6a9bb4d4-9eec-4043-93db-1945d115eef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2a63fe-9500-4857-b2ee-4a80627b6d13",
        "cursor": {
          "ref": "876a122d-4e86-4d54-b286-330abb04e1b0",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4e06f9ba-9736-4da9-8456-ba620a91ef0a"
        },
        "item": {
          "id": "9a2a63fe-9500-4857-b2ee-4a80627b6d13",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1bccdaa4-941d-46ad-8cd0-c73d03f5aaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded8a196-8eed-44ad-815b-44e51904af0a",
        "cursor": {
          "ref": "f057f253-15d7-4d51-80dc-d7871f8badc5",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c3db1ea2-5667-4476-8e23-22b277c51bcc"
        },
        "item": {
          "id": "ded8a196-8eed-44ad-815b-44e51904af0a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "88d21e69-e384-45eb-8133-f860f397e4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc4e177-963f-46f0-ae64-cd898bb4cc70",
        "cursor": {
          "ref": "92d01958-b0d6-4e3e-afca-12c6081a54d8",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b481ba3d-4ef7-4264-adfe-42ccbfff1aa6"
        },
        "item": {
          "id": "fdc4e177-963f-46f0-ae64-cd898bb4cc70",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "99e5011a-5251-458a-965c-26d1743fcff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d22ad1-7a44-40a8-8290-7e4295e7ebc9",
        "cursor": {
          "ref": "97cdfa00-48a4-45d4-ba57-2e84f99a269b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7db00756-294f-400f-88bd-e7b1a22206fe"
        },
        "item": {
          "id": "b2d22ad1-7a44-40a8-8290-7e4295e7ebc9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7c6c7bd3-853c-43b7-8bc2-26e046813fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f5e54a-1f7c-4e9b-8b23-7ed6b8469ce4",
        "cursor": {
          "ref": "b25e5eee-8796-45d1-a249-d952fbfa62b0",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5383e030-b52e-4a13-adef-7c7607b6551a"
        },
        "item": {
          "id": "53f5e54a-1f7c-4e9b-8b23-7ed6b8469ce4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "aa0a479e-e535-4c2d-b329-e27c532b065a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acbaa8f-2048-4ab2-9b80-375694ac025d",
        "cursor": {
          "ref": "3f6705d8-a9c9-4b33-a6fb-277f7c4786fe",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3bfa49e8-3ce5-444c-920a-d81552b9e6a4"
        },
        "item": {
          "id": "6acbaa8f-2048-4ab2-9b80-375694ac025d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "46fe6a23-3129-4714-b95b-c950a0b495d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe4b94d-638d-4859-aeb3-49b743e5a0e1",
        "cursor": {
          "ref": "f40fa740-9b23-47d2-b04a-b65e54977dd8",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b3fc0cc6-0b8e-4d8c-b83e-14147c298143"
        },
        "item": {
          "id": "6fe4b94d-638d-4859-aeb3-49b743e5a0e1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c2eb0c25-6805-4c47-8852-f606efd9f9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d262af-0711-4a60-b926-78d6e9995f78",
        "cursor": {
          "ref": "989f17a2-98da-42dc-b071-3eda1b80e348",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f7c43d57-95b2-413d-a78c-0528025d86a9"
        },
        "item": {
          "id": "a8d262af-0711-4a60-b926-78d6e9995f78",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b1fd6ca3-333d-450e-8b92-3218e0fd6c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9784c40-681b-4cd5-b479-ae1eb02a5589",
        "cursor": {
          "ref": "d664b98d-937c-4636-8712-544cb04e1dab",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c9a74f23-f884-402b-97bb-cd59a45fa0f1"
        },
        "item": {
          "id": "b9784c40-681b-4cd5-b479-ae1eb02a5589",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fbc5528c-42cc-4baf-8c28-b3b888beb9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae94ad64-a7c4-4512-8cc6-5c4695b0a2a5",
        "cursor": {
          "ref": "8e1aca15-9145-4f92-8b17-5e94e3e2d03f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "06290437-4148-450b-8fc5-cfaad4c3ced8"
        },
        "item": {
          "id": "ae94ad64-a7c4-4512-8cc6-5c4695b0a2a5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "436efdf6-ab39-44e6-8912-49d915126009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f31b2e-8ddb-486e-bd05-d822dbe5398a",
        "cursor": {
          "ref": "a436f10c-d58a-400d-9174-17c604b6217f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e9e830f5-2fee-4328-bcc5-484692fd5474"
        },
        "item": {
          "id": "75f31b2e-8ddb-486e-bd05-d822dbe5398a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "59e186df-543e-457e-8389-d1d7cd53101e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f1bd3c-1569-49e6-bf44-9591670ea8d1",
        "cursor": {
          "ref": "77620775-69d9-4727-9693-0bb15f410bcf",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "42b4fc7c-66ea-49df-8530-05743474cbc4"
        },
        "item": {
          "id": "37f1bd3c-1569-49e6-bf44-9591670ea8d1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "be24bc15-8116-4cf6-8ef9-3df5f3d0a600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8b7411-9799-4f3c-888c-194175dfbf23",
        "cursor": {
          "ref": "4bd686a4-5062-40a8-bda1-ceb826150251",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1d5ecb3c-2c10-40cd-a28e-77d5d7b638f3"
        },
        "item": {
          "id": "5c8b7411-9799-4f3c-888c-194175dfbf23",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "36bbf62b-f9ca-4c6e-8d66-cce4850e94b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc946dd-f6ca-4171-b718-e1cf849b9470",
        "cursor": {
          "ref": "9dcd79bf-d39f-4c7e-ac4f-b9a1904a5db5",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "434c03bb-3f7b-4231-9f6b-b6c9b6cfa975"
        },
        "item": {
          "id": "3bc946dd-f6ca-4171-b718-e1cf849b9470",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ad6dbda8-639f-4e7b-acc3-3d0d0a938190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f903a55b-c254-4ca3-8344-90b5ad7da0bb",
        "cursor": {
          "ref": "e6e2718e-cf69-4518-b819-cc77fafd2e8e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f45b16b4-9e02-45f5-8f9b-733090e6f355"
        },
        "item": {
          "id": "f903a55b-c254-4ca3-8344-90b5ad7da0bb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ab217d93-5575-40e8-b4b7-c74e5d69ec88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476fbde8-c7aa-44a3-b46d-ab240d414ef6",
        "cursor": {
          "ref": "5e41ea22-d0b5-43ab-afb4-aef758ac8bb6",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ec92ff09-470d-4f9a-b4c5-6bf66020b3f2"
        },
        "item": {
          "id": "476fbde8-c7aa-44a3-b46d-ab240d414ef6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fc6a2b84-f79a-4626-895e-d57b4e538e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225095db-8f49-4f6d-af58-cb801da0927c",
        "cursor": {
          "ref": "a38198f0-5ef9-4a03-a94c-e5c89d7cabdb",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "22524bbd-46b4-4d1d-ba36-246d554b93e7"
        },
        "item": {
          "id": "225095db-8f49-4f6d-af58-cb801da0927c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dd7e661a-a22d-4db4-a7b7-78d3512e0015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7fc225-28ea-459f-9c6e-89f3c9cab942",
        "cursor": {
          "ref": "e6466772-e665-49f2-9fef-570d110bb50d",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "27befa3a-9530-4323-8c69-eede7c7d9b1f"
        },
        "item": {
          "id": "bb7fc225-28ea-459f-9c6e-89f3c9cab942",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "feecd4ae-04ff-4666-8710-18147cd67efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a1a43b-f76c-46ea-ad4d-6024969defd8",
        "cursor": {
          "ref": "726d5a6e-0152-44d9-ae16-5b4f9eaabad1",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "36ee8a9c-8ba7-48e1-b44b-d55abecd8fd6"
        },
        "item": {
          "id": "c2a1a43b-f76c-46ea-ad4d-6024969defd8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "98bd087a-a1da-46a1-b176-f7df4e13e05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015f37ff-acd3-412c-8a21-e6ea5afc8056",
        "cursor": {
          "ref": "371bea72-69e3-4f4f-b19f-d473fc73126b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "43b612a1-2334-4168-a2b9-90c5f9bad33c"
        },
        "item": {
          "id": "015f37ff-acd3-412c-8a21-e6ea5afc8056",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "35bdb2f2-0dc7-4362-9f6e-0c9b24a924b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413407fe-8625-405c-82c2-b93c392260d6",
        "cursor": {
          "ref": "ab1db41f-669a-4df9-a1f8-6c4c414d90aa",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c56e69ce-1071-48c3-85b0-53e4e0b0ec68"
        },
        "item": {
          "id": "413407fe-8625-405c-82c2-b93c392260d6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "acccc37b-15f8-4e0e-bc8d-079a79361645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d55f67-6e3a-459a-9fff-179b44bb7360",
        "cursor": {
          "ref": "a8b609ee-046b-470e-b512-67bb6114345e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "32737cad-8a79-4b3d-ab44-2620f1287687"
        },
        "item": {
          "id": "26d55f67-6e3a-459a-9fff-179b44bb7360",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dd61361e-8832-4bb5-85fe-41e4418cd685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b19d6fd-b0b5-4893-bc27-f1cc92472d49",
        "cursor": {
          "ref": "c8cb2e60-e15d-4fa4-b881-f40e669626ea",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "886e3a88-3c77-4e2c-8649-103d49b1a8d7"
        },
        "item": {
          "id": "2b19d6fd-b0b5-4893-bc27-f1cc92472d49",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "451a0219-97c1-42a3-9752-9b6dbb785668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eb12a5-a4cc-496a-ba87-1e49f1973af5",
        "cursor": {
          "ref": "521a2c42-bbe3-4c21-bd0a-76bdfc99329e",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "022dfa05-26e9-49e7-b9de-cd911c58e323"
        },
        "item": {
          "id": "72eb12a5-a4cc-496a-ba87-1e49f1973af5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "161874a3-cbe4-42cd-966d-bb331b5fa749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cab1d0-fc9a-4c83-b45d-b2e19196e2af",
        "cursor": {
          "ref": "243b2df4-5396-41f7-b043-8311fb3fa83a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7c8ffd52-eb04-4ab9-b774-877dbc271110"
        },
        "item": {
          "id": "65cab1d0-fc9a-4c83-b45d-b2e19196e2af",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c79ae4d6-e46b-428d-a337-576df4ff43fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83fb9cd-e984-4241-ba31-7ac17178f411",
        "cursor": {
          "ref": "7ff3bc6e-9e7d-4aed-8534-e9cd31903b77",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5d227f9e-d4cc-419e-9fdd-54a9372ddbb9"
        },
        "item": {
          "id": "d83fb9cd-e984-4241-ba31-7ac17178f411",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5298180d-851a-49f9-9166-09e4b4aa929b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69bf4f6-3979-4a08-bada-009029e1c21a",
        "cursor": {
          "ref": "65f11742-4c3a-46d3-aab3-3fd347d4807e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c01993bb-ac70-496e-a6a0-ca0404b72970"
        },
        "item": {
          "id": "f69bf4f6-3979-4a08-bada-009029e1c21a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "249919e4-76f1-4f80-a5bd-a8abed3a3628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86038ea-7607-4e9f-ae69-5a2156932901",
        "cursor": {
          "ref": "d0ab8d1a-2756-4c51-a076-6ed551188a94",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f10e6998-0e49-47e3-bdcf-a856ba273f5f"
        },
        "item": {
          "id": "b86038ea-7607-4e9f-ae69-5a2156932901",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b1501192-826c-4640-acf6-a9760a24adc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a449509-d6e1-4fd1-896a-4008df669412",
        "cursor": {
          "ref": "8e73c856-7d43-4642-8446-b2a051ee3c10",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e277a5b9-49ac-45d4-b62a-072a61a5698a"
        },
        "item": {
          "id": "0a449509-d6e1-4fd1-896a-4008df669412",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "027170ea-1273-42bd-98ba-946e5bbe8f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503efeb2-76d8-4add-9581-1f10d4d96cff",
        "cursor": {
          "ref": "52a47d96-f431-4a40-aa27-67be399ef0da",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a8b03d8a-5f02-4cef-a310-39da94bdcbbd"
        },
        "item": {
          "id": "503efeb2-76d8-4add-9581-1f10d4d96cff",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ef529001-0e51-47f9-a447-7ccd9ac40782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d4400d-1187-4575-baba-188deef7b890",
        "cursor": {
          "ref": "794718f8-a834-4f94-8f3e-5077a317bf1b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "91e75c9a-75ec-4a9a-baa2-1292820078fc"
        },
        "item": {
          "id": "41d4400d-1187-4575-baba-188deef7b890",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "98cc094b-75ba-4fe0-9c89-4c8cb501782e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227e3766-eb1b-4606-8c1a-6c8b12fbfc86",
        "cursor": {
          "ref": "1e41ad96-3f6a-4ac3-9c92-7fbf59a58bb4",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5e122fcd-8b30-485f-be68-143e9001a2a2"
        },
        "item": {
          "id": "227e3766-eb1b-4606-8c1a-6c8b12fbfc86",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e9970a04-8805-47b8-8699-7aefc8b750aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1cc778-b150-4f0b-9495-c2f5b827d4b2",
        "cursor": {
          "ref": "33ef1184-9db9-4c3b-aac8-3dfca19cc5c8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cc13aaeb-000f-4eb0-94bc-8883d2b30ea5"
        },
        "item": {
          "id": "5b1cc778-b150-4f0b-9495-c2f5b827d4b2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e2a11791-7ef9-427e-8d84-7822ceb9bd81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab93863c-8ed1-43fc-a5c4-e218fe0f1e3a",
        "cursor": {
          "ref": "04341640-2b64-40eb-a292-1fa4882d838d",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "99891aa1-f89d-48da-9aba-5a91cd565413"
        },
        "item": {
          "id": "ab93863c-8ed1-43fc-a5c4-e218fe0f1e3a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "dc3d6930-5aff-43f4-a005-d855e5aea69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4939e10-5cfb-4e6e-bdba-be68edf86ba7",
        "cursor": {
          "ref": "5d40bb10-0811-4aee-8baf-ce183d8b5c72",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f7ebdf82-b104-4939-b940-11eaf7654632"
        },
        "item": {
          "id": "a4939e10-5cfb-4e6e-bdba-be68edf86ba7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "49b6ff02-a890-412a-aec6-13e6765648ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091a39ec-aeb7-4a50-b875-d33457c275d5",
        "cursor": {
          "ref": "213d8c7c-58bc-40ce-b83a-bd556b1c641d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c1b000ab-f8b3-4e15-8864-f5c45a71b97b"
        },
        "item": {
          "id": "091a39ec-aeb7-4a50-b875-d33457c275d5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "266725da-2a35-4914-bfc5-ce09fabbcd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321f26b1-38a0-4a44-97f1-ee4761da4286",
        "cursor": {
          "ref": "705b4dad-4d6f-4c33-8c43-f033516ec49b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "48180551-eb3c-4f28-b8ce-36bc4d0399be"
        },
        "item": {
          "id": "321f26b1-38a0-4a44-97f1-ee4761da4286",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "00558e3a-ca1a-4d1d-b8bc-3ca4dbed0039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbd329c-e101-427c-a011-f230025f54c7",
        "cursor": {
          "ref": "304d3429-3c54-43ac-98ff-e50270f053ca",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "09401e54-ab78-42fe-9c09-556e9f8b3462"
        },
        "item": {
          "id": "dfbd329c-e101-427c-a011-f230025f54c7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6de5ae91-71f7-4919-b06b-197f596f355f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658a7885-1054-4029-989b-87255f40c058",
        "cursor": {
          "ref": "7c631d9e-d17f-47fe-91f1-7aba10d699d7",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "94abbb72-da82-488b-b5b7-fc64601c90a4"
        },
        "item": {
          "id": "658a7885-1054-4029-989b-87255f40c058",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7569e112-da12-4b60-b557-c328dcb9c2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1796c9b7-f1ec-4d63-a219-86f58a78de2d",
        "cursor": {
          "ref": "9bc5a61a-78e6-4be6-bceb-1be423e2d491",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8c822317-79d3-48bf-8df8-34d6c779d285"
        },
        "item": {
          "id": "1796c9b7-f1ec-4d63-a219-86f58a78de2d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e743547f-b94b-4055-85ff-4887c0268883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72b65c9-5aa0-41c8-8842-5edb5a97baf1",
        "cursor": {
          "ref": "ade0f4da-4386-4e4c-8cb0-8b81a2ca9ee9",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f66b58ef-7b14-4a8a-841e-d11fbbcec391"
        },
        "item": {
          "id": "e72b65c9-5aa0-41c8-8842-5edb5a97baf1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cf33b4ee-57f2-4bd0-ba49-a8ead81ac275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9227762a-83fb-48bb-993a-d15968ba4543",
        "cursor": {
          "ref": "e39b96ed-698c-4943-b4d7-39eb9dbaed89",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9d52dc53-b9d7-4ac4-9e83-ae88beabc59a"
        },
        "item": {
          "id": "9227762a-83fb-48bb-993a-d15968ba4543",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "89d6297e-d93c-4fd9-88e3-6585826026df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95254d3-b9fd-4e26-b409-3697be47e171",
        "cursor": {
          "ref": "c65cc9d8-4624-4bdf-9ff5-008b0b362a04",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1736aab8-e887-4e18-986b-af5c80b8f096"
        },
        "item": {
          "id": "f95254d3-b9fd-4e26-b409-3697be47e171",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7b2a3b9d-b780-4016-a280-98131b2b6a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cf62c3-d9fe-4905-afc8-7b1533811efd",
        "cursor": {
          "ref": "36a57745-46e9-4680-8eb0-cd428ecd5d2e",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "066afaa9-731b-4c2a-b163-79e9bfb8386e"
        },
        "item": {
          "id": "c0cf62c3-d9fe-4905-afc8-7b1533811efd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9defeb7e-d78f-4626-879e-66639897081f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626fc5ec-0385-4271-99f2-23448fe242d5",
        "cursor": {
          "ref": "172b269d-127d-4a3d-ada2-2864062f26a7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "41044749-be3d-40be-805f-1c6cc55ae38c"
        },
        "item": {
          "id": "626fc5ec-0385-4271-99f2-23448fe242d5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "62ce1900-8400-4112-bfda-83586b5c70e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716aee7a-87ec-4c54-a0a0-325fde52bb7a",
        "cursor": {
          "ref": "c1a138d3-9db0-4564-aa71-53c055a8fd36",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "53cba1ff-cbb1-4892-8f95-86cfd7d34bf4"
        },
        "item": {
          "id": "716aee7a-87ec-4c54-a0a0-325fde52bb7a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "724eb0b0-cc2f-4a0d-b744-79e9a925bc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9d6e1d-b226-44ff-beae-02ec84ea6b70",
        "cursor": {
          "ref": "15020bd9-39c0-4374-9b73-a5d3fd8d1356",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8c6e424e-6357-452b-8992-b90c7a928db6"
        },
        "item": {
          "id": "fb9d6e1d-b226-44ff-beae-02ec84ea6b70",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "65102a8f-ef72-4f7b-99de-45170f6fdece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3432f7-848b-445d-a828-7d9c64a7e17f",
        "cursor": {
          "ref": "0003c489-990d-4791-a8ca-1bb3f22b90b3",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5cdc089d-f8b7-4abb-9d4b-9792efd3c891"
        },
        "item": {
          "id": "ce3432f7-848b-445d-a828-7d9c64a7e17f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "38dfc443-d2b4-4878-955e-75aeba446050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050fa4ca-f514-4875-81ff-8c8407e4bf83",
        "cursor": {
          "ref": "408636f9-7397-4146-a268-0f9923d7b938",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ebc61c90-855f-467d-95a7-fe6a2007fc45"
        },
        "item": {
          "id": "050fa4ca-f514-4875-81ff-8c8407e4bf83",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dfcf941f-799a-43dc-9506-b265110161f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632c2c7e-b6b3-4a58-af6e-0a932cd4f094",
        "cursor": {
          "ref": "ba0f57b7-f414-4614-b106-d9f0d1ee23f5",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f7a5d6b8-993f-4302-8a34-7e57c10130a1"
        },
        "item": {
          "id": "632c2c7e-b6b3-4a58-af6e-0a932cd4f094",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1eb606e6-203e-4a4c-b9f5-581ecbb6437f",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "8c312a63-41bc-4580-b410-63a987e843a9",
        "cursor": {
          "ref": "4834bb7f-ac8d-477a-8b94-029aef21b62e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3e6cf3e5-4811-4060-bc2d-a8c13e74ed18"
        },
        "item": {
          "id": "8c312a63-41bc-4580-b410-63a987e843a9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fc9fbcd9-e070-4aa9-aa14-fd240f8cece1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d548da5-d694-4ebb-8be3-f47647b10153",
        "cursor": {
          "ref": "0f494a71-b963-4c51-b276-d751abf7e10b",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ac35ac02-d69e-4dae-9f47-5d237a02ada3"
        },
        "item": {
          "id": "0d548da5-d694-4ebb-8be3-f47647b10153",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d6b13533-6304-415d-beb7-e535ff6d0437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adfa7c5-9795-4987-a0ae-e26ced819739",
        "cursor": {
          "ref": "5e144fca-08a9-4d34-9677-d4ec874cb881",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5b622d76-c644-4c19-9845-52f93e36aa85"
        },
        "item": {
          "id": "1adfa7c5-9795-4987-a0ae-e26ced819739",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "30decd27-a949-41da-9d37-7afba7f6b2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fef4a8-2fcf-4db1-9f6a-5f1a0876c953",
        "cursor": {
          "ref": "3993d684-942a-4ced-a0ab-4fcd7d130c37",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "89b1dad1-5403-42b5-aa6e-adebbd0a6862"
        },
        "item": {
          "id": "c5fef4a8-2fcf-4db1-9f6a-5f1a0876c953",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "99912ddb-d7ec-4701-a108-20b4f259346d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b293a1e-2949-4507-9bb4-1c86177372b7",
        "cursor": {
          "ref": "faa5f392-4846-40c8-8c98-0159e869faff",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "45860266-59a7-4e50-a8db-320c53be1bb5"
        },
        "item": {
          "id": "6b293a1e-2949-4507-9bb4-1c86177372b7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9b2f54fa-8211-4063-b52f-f756be50f2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44865e62-03d3-45e7-8ca9-4b769ed54641",
        "cursor": {
          "ref": "285eb66e-a9b0-4c6f-a393-f257351d5677",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c2ef420f-c4d4-4064-935f-47188fcc5279"
        },
        "item": {
          "id": "44865e62-03d3-45e7-8ca9-4b769ed54641",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fc788021-bd1e-47f5-9dec-e0320f8877d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981fd31d-92e1-4561-b100-c9ca49107eb0",
        "cursor": {
          "ref": "cf5ab6ff-c1a4-415c-a03b-b6ba51edaecb",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a6aaffce-35ca-4963-86b4-9ef2b02737e7"
        },
        "item": {
          "id": "981fd31d-92e1-4561-b100-c9ca49107eb0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a136464c-fc21-4b45-9178-ac72b621f21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33163cba-d19e-45c4-9d32-2e99f6957591",
        "cursor": {
          "ref": "71535576-b5cf-4b9f-a957-f7b4ca9e6207",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e262467f-be83-4ac4-8845-0238f541c7b7"
        },
        "item": {
          "id": "33163cba-d19e-45c4-9d32-2e99f6957591",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "690a462c-7073-4233-b27f-18238950fbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c911811-a628-4e0a-a9b2-46719c2460b3",
        "cursor": {
          "ref": "c658379a-dc8e-4dee-b787-f26745531743",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "de9085ad-dd07-4f43-a4cc-cf36bc947c14"
        },
        "item": {
          "id": "2c911811-a628-4e0a-a9b2-46719c2460b3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d54a49f1-8352-4a13-8f50-1ba9d7e32391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14c37f8-a00f-4976-b73c-7ca60ed7dec8",
        "cursor": {
          "ref": "0f50d359-cc8d-47aa-b7f7-30c18988fb0a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a9a0ea22-b236-4c37-9ea3-4e812b7373c2"
        },
        "item": {
          "id": "b14c37f8-a00f-4976-b73c-7ca60ed7dec8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ae39b568-6bb3-4032-b2b0-fa03878aa0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b8218c-aa34-46f2-811a-b54732eedcb2",
        "cursor": {
          "ref": "ecf8432f-6ef3-4d25-b2a8-ce074e9c9e81",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4f34c4ac-bd67-4f8f-8776-47cc2c81cd6a"
        },
        "item": {
          "id": "e4b8218c-aa34-46f2-811a-b54732eedcb2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cf11fbfb-c27f-41db-9cc8-5ffbdfbfdc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce73de1-cf38-43a3-b3ab-5361bdb288c5",
        "cursor": {
          "ref": "4c872849-58ba-49f8-b064-4a14b76ce550",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4d6d8f2f-4a2c-4fda-8d64-e92884cdc521"
        },
        "item": {
          "id": "7ce73de1-cf38-43a3-b3ab-5361bdb288c5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1ff69f4b-71bc-4314-a86e-5fb22890b5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2beaf4-2b4f-4d44-a33a-c201a88a8d66",
        "cursor": {
          "ref": "9f594423-8a49-4a8f-99d5-94d4eb19b933",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dffc4e6a-0126-4457-be3e-8b2dd46e3886"
        },
        "item": {
          "id": "2a2beaf4-2b4f-4d44-a33a-c201a88a8d66",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "951e4916-7e44-46de-8860-f2231eba2986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a1e325-d635-4691-abc9-1a688e55f229",
        "cursor": {
          "ref": "d3ca0b9d-1211-4678-9cbd-c9786ed4ba40",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cb6b42aa-4933-49fa-8868-4290980633b8"
        },
        "item": {
          "id": "65a1e325-d635-4691-abc9-1a688e55f229",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2e10c248-c08f-43c5-a903-c843bab16c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a8201b-1653-4098-932f-dedc63a16f3e",
        "cursor": {
          "ref": "ea892588-c60a-4460-8628-99c7f026ee3f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "11b6800c-961f-4a26-bff9-a97375fb2bc5"
        },
        "item": {
          "id": "87a8201b-1653-4098-932f-dedc63a16f3e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5b194832-a528-4317-8a10-6c73ef7070d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69985716-a66e-4abf-b370-fe287c0ced62",
        "cursor": {
          "ref": "b96a82d5-eaa7-411b-b550-872339200208",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3ec1dbf2-cefe-47e4-9f22-48a5ec54c959"
        },
        "item": {
          "id": "69985716-a66e-4abf-b370-fe287c0ced62",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7ac7e665-cc76-4d4b-8b34-2c6f22268e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f1a303-3dd4-4dee-8011-500610b29e5c",
        "cursor": {
          "ref": "14f6678d-eee9-46c7-92b4-49bf5c2ca084",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d0e8620a-3b67-45df-a006-43efd214a4a4"
        },
        "item": {
          "id": "b4f1a303-3dd4-4dee-8011-500610b29e5c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cbce3bfd-8b41-45e2-9f8f-5530eaa12058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f3c84f-d946-40d0-ace0-878d489ced1c",
        "cursor": {
          "ref": "a3a88831-12ee-42c3-92c6-eeb2f29b168a",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "994c11f0-8478-4379-bb18-3c8723d02217"
        },
        "item": {
          "id": "78f3c84f-d946-40d0-ace0-878d489ced1c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "39edb560-5c4d-4a4c-9b14-d3f9b3607c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d65449-c612-44c3-b655-f91fe8d61a6e",
        "cursor": {
          "ref": "63f4f952-f51c-493b-bc74-fe5d410fa7e6",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e6d9d54a-125b-4e98-bfe5-950c8c378841"
        },
        "item": {
          "id": "42d65449-c612-44c3-b655-f91fe8d61a6e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "48376561-3319-478d-9c24-7a8df6e2026e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906c370f-bddd-45df-883e-884bad7d1f85",
        "cursor": {
          "ref": "209708f7-152b-46a6-89e6-b3de98cfc577",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0e517299-2c7f-4983-8d70-a8e8c2a8b966"
        },
        "item": {
          "id": "906c370f-bddd-45df-883e-884bad7d1f85",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a80a482b-f66d-4c88-b4da-4aa933b45996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab99cf9-a6d5-4906-8883-140bb44af66d",
        "cursor": {
          "ref": "55367c44-fe97-4020-9f16-852783fc6e47",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "68b658e5-e50a-4660-bfd5-89e0cb13313f"
        },
        "item": {
          "id": "eab99cf9-a6d5-4906-8883-140bb44af66d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "737d516f-4050-491b-96f4-53a071774905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfddef1-d1c1-4f7d-aee3-d5b899985fe9",
        "cursor": {
          "ref": "97512ff6-a29c-41d7-8abc-c4ac65057542",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ba1f1092-5549-4e0e-b7fd-1152e92a9242"
        },
        "item": {
          "id": "cbfddef1-d1c1-4f7d-aee3-d5b899985fe9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "90c38099-2e27-4599-9abf-0f9b2b49fb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0d4a51-c7f5-4429-892a-9c3048dc6457",
        "cursor": {
          "ref": "ae49eaa9-be89-41c2-a975-65c039bacc19",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6fa4c27f-944b-41e0-989e-e4130c418b78"
        },
        "item": {
          "id": "ed0d4a51-c7f5-4429-892a-9c3048dc6457",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "95a5d6cb-4ba7-4d1a-9c74-014fb76cf7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de89056b-365f-4b7c-98d4-7020dbfd42b6",
        "cursor": {
          "ref": "8589cab0-b018-48f8-ae83-7ba206e03da0",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ddb76b4c-5972-4479-99d7-b4026350b3e9"
        },
        "item": {
          "id": "de89056b-365f-4b7c-98d4-7020dbfd42b6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4bde17ae-b4da-413c-8539-6a70700578a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fd6ad3-53b0-4c1b-9ec3-8e856dca7ae4",
        "cursor": {
          "ref": "3b78c3b1-6e84-4f47-a534-e15bbe5f45d6",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0d27d893-f6bd-4a50-8731-1f0bccb311fc"
        },
        "item": {
          "id": "f0fd6ad3-53b0-4c1b-9ec3-8e856dca7ae4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a0c738b8-4318-4aa6-ac4c-840ee09e7fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf2f06c-7ae9-4eff-8fb8-e57b1fdc413f",
        "cursor": {
          "ref": "95741a6a-267b-4b8d-a722-4bd3c59155e1",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d80c262d-93d8-416f-a0b8-5a2dba652a5c"
        },
        "item": {
          "id": "aaf2f06c-7ae9-4eff-8fb8-e57b1fdc413f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8c9aa07e-72aa-4597-9194-a63be37f37de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e135a71-9a83-49fc-a7bc-945e58d08c3b",
        "cursor": {
          "ref": "b30efbab-279a-493c-af84-af16d2730ecd",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "408bb920-1363-4bbb-a310-fb1c4790a5cc"
        },
        "item": {
          "id": "2e135a71-9a83-49fc-a7bc-945e58d08c3b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "47885280-61ab-434c-ad1f-0ccc58a5485a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9770b01d-3a44-4c7c-bd8b-2e40945adce0",
        "cursor": {
          "ref": "c96ec512-480d-465a-b434-cbf3b4a7d5ae",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "72ffb0b9-91c0-46a4-b347-e869ec51d9fd"
        },
        "item": {
          "id": "9770b01d-3a44-4c7c-bd8b-2e40945adce0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "af5fb95a-a612-44d4-b6a4-be40fa0a5614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4aef3e9-2541-4df8-830a-953f17342236",
        "cursor": {
          "ref": "567fb4d0-9f15-4d2c-8894-a744c5045e89",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1ebab7dc-0298-4358-bed3-9a1ce006fde6"
        },
        "item": {
          "id": "c4aef3e9-2541-4df8-830a-953f17342236",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "713e464b-b707-4a8d-b7ea-0e8670484d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334836c2-93ec-4bfe-953d-8cfce341a037",
        "cursor": {
          "ref": "c6fbb0d3-4bff-4aa8-a0a6-bdddcd8c915b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ebf757b2-f585-45f3-b27a-69afa46db0fd"
        },
        "item": {
          "id": "334836c2-93ec-4bfe-953d-8cfce341a037",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a147438f-a095-4781-a3c9-4f8f47467f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b828f5c1-bdc3-4942-aaed-b52bbc0f5827",
        "cursor": {
          "ref": "37083d0d-1df7-4d15-86fa-28608ef58790",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3775fc26-47cb-4fdc-808d-455febb25019"
        },
        "item": {
          "id": "b828f5c1-bdc3-4942-aaed-b52bbc0f5827",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f3d9b3f4-e2f1-418f-a2f7-09166af620b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810ce61b-262e-4ccc-b6b7-354acd28e7a2",
        "cursor": {
          "ref": "224524a1-cccb-4729-afe9-ab7ba45afb05",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "52fb8575-2ea3-421c-8787-299eeac0c70b"
        },
        "item": {
          "id": "810ce61b-262e-4ccc-b6b7-354acd28e7a2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f8ff3b27-179f-4dd2-9940-862f8530f532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4700dab8-bb0f-4df6-aa5b-35dc5273cc3c",
        "cursor": {
          "ref": "3be1a45d-e2bb-4f96-a97c-e5c17d40dd4a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6d315782-ae6b-40e4-a0d1-d189f5f09ed6"
        },
        "item": {
          "id": "4700dab8-bb0f-4df6-aa5b-35dc5273cc3c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "da3d5c1c-3e68-4e29-b2ce-81f047dc93ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dfe4fa-e1c2-475c-bc26-a9198a579167",
        "cursor": {
          "ref": "af9285d2-29b0-4d3b-930a-12b2f4f8da26",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1ba5ed51-274b-4f5b-bb2f-4b0798ded9f5"
        },
        "item": {
          "id": "e4dfe4fa-e1c2-475c-bc26-a9198a579167",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "db3a7eb4-5ef2-4cbf-9cab-a5c058a5fa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb38dc6-f080-4888-a860-6ffe6f071d4c",
        "cursor": {
          "ref": "5985dd7c-16ea-4dd3-a5af-6c8eea8ed35f",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "85bb0b8b-b95b-499f-8885-d64864f8de72"
        },
        "item": {
          "id": "6eb38dc6-f080-4888-a860-6ffe6f071d4c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2833230c-d846-460a-b2b4-22941fc6ea12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fa7db7-f9e8-4fa7-ac41-24c35c0f9718",
        "cursor": {
          "ref": "42ad0a1d-5aeb-41a7-ad62-230d288bfc88",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4694e3d8-6997-4b68-9795-c9ff3e1a5b0b"
        },
        "item": {
          "id": "55fa7db7-f9e8-4fa7-ac41-24c35c0f9718",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fb24cec2-9fe6-4f1e-8dc8-a47cd43aff23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f941ecac-f316-4a21-b900-3602029adeac",
        "cursor": {
          "ref": "97dbed6d-43fb-49a1-8ed7-cae663c024fb",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "97742970-219e-4fdd-a236-0d412a7e21a0"
        },
        "item": {
          "id": "f941ecac-f316-4a21-b900-3602029adeac",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b3298e3f-abe9-4c6a-ab31-1b4a905b95aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b594629-de74-40df-8679-33388d25fdd7",
        "cursor": {
          "ref": "04e9a897-6dca-4a87-87bc-094f5edb8574",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0bd7fef3-9ff6-4d53-9961-92fc02bd048d"
        },
        "item": {
          "id": "2b594629-de74-40df-8679-33388d25fdd7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6505eed7-8989-4282-acae-9812b2b136c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cecf0d-6b75-43ed-9183-ad69302f2bf1",
        "cursor": {
          "ref": "8d1682bc-619e-4912-92f2-f14d25853796",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2642b0b2-aa14-4185-b829-c5310f706e05"
        },
        "item": {
          "id": "55cecf0d-6b75-43ed-9183-ad69302f2bf1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fc5406a0-a95e-4539-81fa-fff4d46dcfdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978b3068-5bb4-411d-bc47-83e7ae2f9f23",
        "cursor": {
          "ref": "441ef6a9-aed9-47e4-9fe0-93a5e70c559e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d650bdc6-7f43-4f57-b54a-eb11c5d06038"
        },
        "item": {
          "id": "978b3068-5bb4-411d-bc47-83e7ae2f9f23",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "249dd08c-dbd0-4f24-ac70-09dfb274c250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822ede22-78ec-43ac-99d6-3729f02d29e3",
        "cursor": {
          "ref": "fde2f2f4-3b86-4792-a8d3-0a449267b7b3",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "519ba68e-e70d-49fd-9aab-8b46ebeee0fe"
        },
        "item": {
          "id": "822ede22-78ec-43ac-99d6-3729f02d29e3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "644545a8-8e8d-47e0-8343-a70d9af316b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab643100-c149-4287-97f5-42f367208a59",
        "cursor": {
          "ref": "7e9851de-b3d0-4205-8117-eb7958a88566",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "332e3485-0f32-4759-9dfd-8fa9f2b8bd2c"
        },
        "item": {
          "id": "ab643100-c149-4287-97f5-42f367208a59",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7c67e2ae-3ea0-463c-a704-02b7f1597573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d515b6-925d-4176-a8ea-f8b4bd9f479e",
        "cursor": {
          "ref": "743b3f8d-c239-4d08-a47d-4be56c859d21",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b251c387-225c-424a-a022-0675e3d5513d"
        },
        "item": {
          "id": "d6d515b6-925d-4176-a8ea-f8b4bd9f479e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "998e0fb1-0960-499d-8676-8e3119794542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad55728-4ded-472e-a8b0-7bbe41739fb7",
        "cursor": {
          "ref": "e10d93fd-6f79-4755-a64d-f5ccca444732",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "290254c0-7468-4801-94cd-e309dae47300"
        },
        "item": {
          "id": "8ad55728-4ded-472e-a8b0-7bbe41739fb7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a0af956e-d640-4bc6-bb26-0c81a48e24a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227d042a-a2fc-4011-93ab-72e360cc7dd6",
        "cursor": {
          "ref": "e3e7a98b-ef77-498c-94b9-97b32206095f",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "06fb38df-d47d-44d4-b0da-4e4907fc14de"
        },
        "item": {
          "id": "227d042a-a2fc-4011-93ab-72e360cc7dd6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8bd28f3b-fb08-48b6-8571-3ae62de3d32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32afbb55-8a3e-47b9-8eae-5cf38515ccf0",
        "cursor": {
          "ref": "bb301a16-9e7a-48a3-9889-e4bcc4ede395",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "36156edc-9e5f-4205-b7ac-b5d052ed8591"
        },
        "item": {
          "id": "32afbb55-8a3e-47b9-8eae-5cf38515ccf0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8594c9c7-e7d1-4ba2-b942-709ab07ffec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e652df1c-5b89-495f-8072-f59e7225c4da",
        "cursor": {
          "ref": "815ea700-f97d-4110-b1e1-ce5c22415683",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6a41483b-0bbb-4520-b860-d755d025efa6"
        },
        "item": {
          "id": "e652df1c-5b89-495f-8072-f59e7225c4da",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "defddc87-a066-419c-ba7c-60251c098c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520c0fbc-4f2e-42d3-b7a0-f2ac87023eee",
        "cursor": {
          "ref": "87e6afde-41a7-4d49-8401-4f24f26979b6",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e63df6aa-ac02-49b7-b942-b5912a1d8731"
        },
        "item": {
          "id": "520c0fbc-4f2e-42d3-b7a0-f2ac87023eee",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b247d27c-696f-48d3-aac8-b585403f5cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ffff66-3bdb-4f8e-a743-041ecfd15b78",
        "cursor": {
          "ref": "a5522dc7-7e1f-4db8-ae36-a93f797e3e0d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3a1ef647-6bcb-493c-b199-ebcd48f12d85"
        },
        "item": {
          "id": "45ffff66-3bdb-4f8e-a743-041ecfd15b78",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7173126a-1d7a-4339-8bc8-e6a4f58ec6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a23a961-4f5f-46ec-b486-6b4d82593ee3",
        "cursor": {
          "ref": "23fe4da5-a9bf-4bd2-960c-8d84177cc49e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3da6660c-8952-4172-bb34-d931057901fe"
        },
        "item": {
          "id": "2a23a961-4f5f-46ec-b486-6b4d82593ee3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6431b3ea-24d3-4d7f-b1b4-225803e58983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f450fc0-d1b3-41b1-8e73-65f5c0e75cee",
        "cursor": {
          "ref": "37ccb4fa-e3b2-48f2-93ff-6b059b13bb58",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4a4e73e2-c306-4fe3-b206-5e46552cb9e2"
        },
        "item": {
          "id": "7f450fc0-d1b3-41b1-8e73-65f5c0e75cee",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e899bf22-84f2-44d8-8da4-2a770c312f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fe4da1-6fd9-4c1a-8988-661cbeb472f0",
        "cursor": {
          "ref": "db155801-fe8d-40aa-a632-dc325f02e07d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fc2fded0-d8d9-48b0-b87b-83f735502157"
        },
        "item": {
          "id": "d5fe4da1-6fd9-4c1a-8988-661cbeb472f0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f769898d-be86-4b00-9f1d-b7ad8e80a0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e891d04-ad6f-4bb3-9214-751683c8773e",
        "cursor": {
          "ref": "07de0ae4-994e-4e43-b7ca-2fc6f00ee618",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d9eb8ac6-2f95-46ea-aea8-8118a2293cf1"
        },
        "item": {
          "id": "5e891d04-ad6f-4bb3-9214-751683c8773e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "050c401a-26b9-4775-8945-6edee34646dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba3096f-cd2e-4bcb-9971-85cc7beaa44c",
        "cursor": {
          "ref": "ee3a7d92-90e6-414b-897e-1fc62bee9c6a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ff816a4b-61fc-49ac-b56f-b3298db7d066"
        },
        "item": {
          "id": "5ba3096f-cd2e-4bcb-9971-85cc7beaa44c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b975de3a-672e-45ec-b49d-b4b3399a80d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a372424-bdce-4bb8-9eb3-6e15c376b913",
        "cursor": {
          "ref": "f027a15a-9aad-40e4-95df-a0d0caf79269",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e57d0ed7-d9fb-4ee1-b9e7-32094a6b1e3f"
        },
        "item": {
          "id": "5a372424-bdce-4bb8-9eb3-6e15c376b913",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "513e32dd-58af-4535-acf6-0af4604a6ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4048ad-cf59-4ff6-927b-fb161fd9b2c8",
        "cursor": {
          "ref": "d7c6a0bb-3e09-456d-bde3-8960b30369a0",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4d514776-9d5b-4d6e-ae84-8b8c3947bf59"
        },
        "item": {
          "id": "ee4048ad-cf59-4ff6-927b-fb161fd9b2c8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cd4ff7f6-9d2d-4ae4-bea2-906d84c9245b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac9159c-6052-4c59-9145-1197ecd36516",
        "cursor": {
          "ref": "d4b8f7b6-2bdd-4082-a94b-b4d6ce9509d0",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e564f1ec-89fd-4789-8240-03e43c7aef50"
        },
        "item": {
          "id": "cac9159c-6052-4c59-9145-1197ecd36516",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f58f791f-b745-4d9c-b01f-5b0a4fed946b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b46e268-ba3d-4957-a409-5aa23fb1aebe",
        "cursor": {
          "ref": "850b66dd-2205-4c1f-862c-7d5018e1d953",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c7c2b36e-f05e-4709-b016-fda13d6b1475"
        },
        "item": {
          "id": "4b46e268-ba3d-4957-a409-5aa23fb1aebe",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "abefee69-23c6-4f36-842c-fc20e3bbdc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3c3dcd-f505-4525-bd0a-8cbe292adb61",
        "cursor": {
          "ref": "b24f1bed-1702-415f-899f-24ef18df08a3",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "cb9348f7-e262-4e14-a8a1-2966e334a9cc"
        },
        "item": {
          "id": "db3c3dcd-f505-4525-bd0a-8cbe292adb61",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5aec32c3-73ba-4182-acfb-5d86f7a3b077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9194e8b-8de0-40b6-96d5-350e5cd4c7f1",
        "cursor": {
          "ref": "a085895f-3e80-41a1-931f-8abad27f156f",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4212d845-6a59-4604-a3a1-5a938580a972"
        },
        "item": {
          "id": "c9194e8b-8de0-40b6-96d5-350e5cd4c7f1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3fe26334-8625-4680-a21d-00d67616b4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd0e01a-9dd0-4de6-9d54-02801f721503",
        "cursor": {
          "ref": "0a89a836-73aa-419a-845e-fdcfcf0a12f4",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "27f889a9-2b98-429a-94d3-404de9024415"
        },
        "item": {
          "id": "fdd0e01a-9dd0-4de6-9d54-02801f721503",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5f59044b-1b9e-438a-aeb3-c8958240e6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed36bb96-caa5-4776-a5e9-5b411065ba47",
        "cursor": {
          "ref": "32350cc7-2107-49f2-936c-2c7a663d5a7c",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5845f4df-00cb-4e75-b83e-87b95eed170d"
        },
        "item": {
          "id": "ed36bb96-caa5-4776-a5e9-5b411065ba47",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a683b05c-73d3-45b0-9417-173576567fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0254e6e3-ace9-4359-88c3-c55941e05825",
        "cursor": {
          "ref": "ad0d7e6b-ab3d-4caf-b31d-201b9eadc6d6",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c5644531-b6b0-4556-8c5b-c43a7142bbc0"
        },
        "item": {
          "id": "0254e6e3-ace9-4359-88c3-c55941e05825",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "968d9b2e-ea0c-400f-a392-de23a374feba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5188d98-77e2-4155-b952-cea6d1d6e2ce",
        "cursor": {
          "ref": "b29be309-a8d1-4246-b8db-3693cbb5dec2",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "64ce56e3-d883-44ee-aa15-4fc5fafa37bc"
        },
        "item": {
          "id": "c5188d98-77e2-4155-b952-cea6d1d6e2ce",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "91d9368f-9a8d-4c4c-9425-7928e8dd2eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7eae3f-eef6-4381-b507-f079901d59f9",
        "cursor": {
          "ref": "3d08a2a3-90a1-4c83-acf8-33dea453d833",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "aaaa3f28-1d81-449b-84a3-72183e92ef21"
        },
        "item": {
          "id": "5a7eae3f-eef6-4381-b507-f079901d59f9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4f055c3d-3c36-4f23-8021-aa39bd601d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897cc5a8-7df7-4fcd-9d12-aa8226fc8f04",
        "cursor": {
          "ref": "9385764d-64e0-45fc-a243-6649bd8593c1",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "946d41bf-24a4-486d-a112-7cb6598d09dc"
        },
        "item": {
          "id": "897cc5a8-7df7-4fcd-9d12-aa8226fc8f04",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2b617e5a-5ed0-477c-ad40-d4df2c33ce99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb7f36d-4f3a-40b7-a54b-b9cf61054c9d",
        "cursor": {
          "ref": "b4101eb2-b549-47a6-99e8-1dda99c3d007",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c8cf12b1-8bc5-4ed3-bb0d-a9896230c39c"
        },
        "item": {
          "id": "8bb7f36d-4f3a-40b7-a54b-b9cf61054c9d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "96062f64-9b3f-471b-b530-64d9df5fe759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f946ce-1476-4947-90cc-798692478b05",
        "cursor": {
          "ref": "561684e4-8fb4-4ecf-9add-cfcdb767af2e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "0c752a5f-3e50-4786-b47b-c7a99bb51085"
        },
        "item": {
          "id": "03f946ce-1476-4947-90cc-798692478b05",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d6c3b1a2-d288-4e76-8b70-c8defe356de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19ef0cf-7e25-4a65-81b2-8c8559c02fab",
        "cursor": {
          "ref": "1cfdfab2-52d9-4817-b903-2e02a44bd851",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b6b6e247-e939-42f5-96c6-bbcb615aeb97"
        },
        "item": {
          "id": "b19ef0cf-7e25-4a65-81b2-8c8559c02fab",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d589aa96-3d50-44b4-8af0-c5ec6bffb55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000a7fdf-45f8-4f90-8d00-be74c47b6e88",
        "cursor": {
          "ref": "463b5e0f-ed42-4d0b-89e3-4f5cd9348c16",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3dd62327-cdcb-4823-94a0-5377e64dc55d"
        },
        "item": {
          "id": "000a7fdf-45f8-4f90-8d00-be74c47b6e88",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cd5f9293-e047-4580-9da5-80074f45ab09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17370344-f3f5-4dd5-be88-56556ab74771",
        "cursor": {
          "ref": "37706833-605d-4824-9155-b038ad093b98",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9398ebf3-6389-46e2-86b5-d86511fe7eac"
        },
        "item": {
          "id": "17370344-f3f5-4dd5-be88-56556ab74771",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7296df7a-cbce-448c-8ef6-5e9048f06b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03162fad-7791-4c50-8334-1d22a58d060c",
        "cursor": {
          "ref": "4906edaf-d891-4dc3-b538-66138f8d242e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "774d6714-3174-4e9a-8a19-d3733e0dbfc7"
        },
        "item": {
          "id": "03162fad-7791-4c50-8334-1d22a58d060c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e63010d8-357d-4398-85f3-ef1163b547e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccbb5d6-4345-4523-ba45-f7db2b2f580b",
        "cursor": {
          "ref": "5e5be03d-49cf-46e9-983a-d96d4814b816",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "df8c6b1e-2adb-474b-9983-fed934931463"
        },
        "item": {
          "id": "1ccbb5d6-4345-4523-ba45-f7db2b2f580b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9563a2ac-6364-4b6d-bee1-63af34a6d5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0945f950-95bd-41eb-a346-680b7e536670",
        "cursor": {
          "ref": "4ae35f9c-0fd9-4405-ae70-f8f68f9558e0",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c5411ff9-7cc6-46c2-b5d2-c541331421b3"
        },
        "item": {
          "id": "0945f950-95bd-41eb-a346-680b7e536670",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ffaebb19-8de3-4883-a0fb-639c704c3c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7739295b-23e5-4638-ad8f-f73709a8ee32",
        "cursor": {
          "ref": "300391bd-ac5f-497f-a73f-e26e57238d17",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4165a716-768f-4269-ad3b-ef5949e62df1"
        },
        "item": {
          "id": "7739295b-23e5-4638-ad8f-f73709a8ee32",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b7586097-5084-4389-8b5c-40335c124fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7703d74a-e508-4f86-a6ca-0db0a782543f",
        "cursor": {
          "ref": "78f08c9c-83a2-4387-a3cc-afb60efabe21",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "fa26ef6d-5a38-4e7d-ac05-87e4c9f00811"
        },
        "item": {
          "id": "7703d74a-e508-4f86-a6ca-0db0a782543f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "54e5667b-060e-4b9c-a907-f5c15380da3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc1a83d-c0e3-4e6f-bc4e-bbd467c6f666",
        "cursor": {
          "ref": "6ee31f0b-a702-4be8-9ef8-10f70e360a4b",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d8bffdb8-ab7b-42ac-8ebf-4f7e9fca3a8b"
        },
        "item": {
          "id": "5bc1a83d-c0e3-4e6f-bc4e-bbd467c6f666",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bde213f5-1151-4437-94b3-8445707da96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aef4be7-852e-4203-82ad-6c1e3db6b494",
        "cursor": {
          "ref": "06319734-6ad1-4eaf-b614-9a3165a20290",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "205bfef1-5234-45e5-a1fb-f1ab4683adc9"
        },
        "item": {
          "id": "4aef4be7-852e-4203-82ad-6c1e3db6b494",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ad945e92-bb52-408e-b349-63dd96274c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def2ddd3-f665-44f5-964c-71c0dc4ec2e2",
        "cursor": {
          "ref": "36673459-666a-4949-bf03-c6f5c817de00",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3743ce25-102e-4b54-a6ea-5a734ab2f535"
        },
        "item": {
          "id": "def2ddd3-f665-44f5-964c-71c0dc4ec2e2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3746c177-a748-4634-9ec9-4c4475e49b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd21c7b1-628c-417e-92c1-b8833dde8f89",
        "cursor": {
          "ref": "fa2045f2-b1d8-4d0c-a293-5b4e40ed1ae9",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "029dd527-33b6-4302-8c5f-21b787c5d7a5"
        },
        "item": {
          "id": "bd21c7b1-628c-417e-92c1-b8833dde8f89",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6c76bc10-a33d-4e97-a6d1-cdb99cc62712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e81723-d348-4384-a1b6-60bc280227fb",
        "cursor": {
          "ref": "12130fe4-3a67-44c3-a6d6-e37ccd535bc2",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3f55772a-85b0-410c-acc9-7fa49971560e"
        },
        "item": {
          "id": "30e81723-d348-4384-a1b6-60bc280227fb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "72dda37b-2fc2-447b-bb9c-603909f37d22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92b3131-a792-47ef-85ba-70afda1c8467",
        "cursor": {
          "ref": "737dec06-81e5-4ed1-85e9-117585ee4c9c",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e8c607e7-de59-4871-b753-36f867dd9afc"
        },
        "item": {
          "id": "d92b3131-a792-47ef-85ba-70afda1c8467",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bcf7fec7-ddf9-4d2e-a373-efc69ed3fb65",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b922e797-1db7-45ef-b560-09db14d75c50",
        "cursor": {
          "ref": "3749ca8c-b242-4875-889a-ee8e681d8b7a",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7f7f8e41-6e2c-4422-8aa3-f068dac5bed9"
        },
        "item": {
          "id": "b922e797-1db7-45ef-b560-09db14d75c50",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0a64b353-802a-43b0-9295-705f0bee1561",
          "status": "OK",
          "code": 200,
          "responseTime": 3420,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "26da01e9-a00f-4e98-ab3e-9740cb53fb5e",
        "cursor": {
          "ref": "8eb0c79e-4051-4017-9d6f-1afa53a576f7",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d7df2629-c2e5-49a1-91a0-a862f0b60cf9"
        },
        "item": {
          "id": "26da01e9-a00f-4e98-ab3e-9740cb53fb5e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "817ab121-d7c6-4eb3-ad4d-92fe9e7bfb42",
          "status": "OK",
          "code": 200,
          "responseTime": 4541,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf247cd-89c3-4c4e-b5fd-af22728fb383",
        "cursor": {
          "ref": "9fe4b5a4-ab54-455d-b54e-86bf7585fd09",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7f807158-cb94-4bf6-bcd7-12d33882e269"
        },
        "item": {
          "id": "dbf247cd-89c3-4c4e-b5fd-af22728fb383",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "be85086a-d9ea-4a19-8a9a-2afdc5566dc2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf247cd-89c3-4c4e-b5fd-af22728fb383",
        "cursor": {
          "ref": "9fe4b5a4-ab54-455d-b54e-86bf7585fd09",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7f807158-cb94-4bf6-bcd7-12d33882e269"
        },
        "item": {
          "id": "dbf247cd-89c3-4c4e-b5fd-af22728fb383",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "be85086a-d9ea-4a19-8a9a-2afdc5566dc2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe215e9-8649-4e20-8e11-6f438310cd42",
        "cursor": {
          "ref": "2422a3f6-8a16-4d87-9979-513dbfed2b4d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "15126721-8c08-4263-a7ff-48832f92ca27"
        },
        "item": {
          "id": "5fe215e9-8649-4e20-8e11-6f438310cd42",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e59041b1-d5e1-4d7f-b6b8-edb26bc29932",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a59dec-6b79-4e74-a264-b15577aeca69",
        "cursor": {
          "ref": "d4d50161-fac2-4a15-b72a-c2c5cbb9de66",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "51f206a2-fb69-45d0-9167-2a8bc80ef352"
        },
        "item": {
          "id": "13a59dec-6b79-4e74-a264-b15577aeca69",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "58b4f386-b4d3-4810-838f-0a3be13a2f95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}