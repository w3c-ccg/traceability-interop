{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b23877a7-8daf-4844-9434-dbd67324f089",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2cbbf9e6-4fd3-4269-85c4-969be9a6c726",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5badb534-47fa-48df-b080-ab7c5ae50b23",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9481c56c-9b57-457a-aef6-b2667e8c285f"
                }
              }
            ]
          },
          {
            "id": "5d39f011-24f3-4925-a371-fb7bd94fdbb3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75cb89a7-78f3-4551-a86a-dbd68150e7c0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f5cd8ddb-3298-4bd7-8a67-12cf228d590c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9d261dcd-bf33-4fd3-9c25-0ab2c6544ad1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3a35f871-ea40-46a1-8e12-6604c48cfcf0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1b3c2694-7e5d-48a8-8201-d6b6def92a50",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee95432a-c6c5-46fd-bd0d-fdb313237efe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab434ab5-e3ff-430f-83f8-b83c65fdee79"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96811a26-0453-4e8c-822d-77787e91178b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba1e162e-b611-4e2a-bad4-973d35d28a03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f140b0ff-743c-481a-b73a-adf7c63c568c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68d6fd69-264a-4c1c-aef4-d668064e67b1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c4cbf4d-24b3-45f1-b3b0-bc5db494d65b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dc7a4fed-4e88-47cd-9305-640ba189eff4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fc5161c-cce6-4ac5-a342-6602859a4d16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d36c0e16-3580-4b3e-b1a4-2f22ec58dde9"
            }
          }
        ]
      },
      {
        "id": "8de12f50-2747-4d65-b1dd-ff274fd770fe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "626c0468-7c6f-4a70-873b-2640c6be1d10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa448c70-c534-4486-8288-975db3c72b99",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "538a467d-6ecf-4885-b97d-d3b1f5c6683f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596400ec-d4b3-477d-98e5-218a5e36ba43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "275558de-f93d-4aa5-923f-342b2825dd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe14f02-8b42-4127-93c7-2b722bf14f58",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125fad1e-0caa-44bd-b030-3e600b9f0d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddcd7151-69e6-41e0-9794-06b4ed6a303a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd4cc97-6a62-426f-a994-7a8ddeb20b59",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7160f5-51e5-4b3b-b457-0c9399e860fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6fdbe11-cc53-4f5d-be1e-86d85cad2313"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e0fc7ce-e54c-46ef-8caf-a072c8e250c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42921c8f-85f0-4df1-83ac-8ac54f7a32dd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc204114-a596-4fb5-8d51-de2fd4d61e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a16005fd-1e23-4517-910b-f1a7e140a5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18aef00d-cde1-4ec6-bc02-b02dc42554f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a512c19-bf84-4feb-86db-ff8e3d5998c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda69df8-96c2-41b1-b7cb-1910720f5e91",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905102ad-7bfa-43ec-99f0-a2f25a93785a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c31703c5-ed4d-448e-a948-c0d4a7461fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d645a8-6db4-480d-88ee-0c773db9efb6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "0f95ab9c-9236-45d5-982b-4ba51a44ef13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "85414eba-e32b-4dc4-a4a1-0e033f0a1838",
            "name": "Positive Testing",
            "item": [
              {
                "id": "308bb47b-bab2-4701-ba49-d34f2c5de047",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5f7021b-e2dd-4a40-a42e-2a520968ec4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9b770c1d-1ef4-401e-a9a0-e4d250ba7f2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "139418c3-665b-4141-ba52-9d9eb70ab06b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1de945d1-7bbd-4afa-920d-b1531403bf3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90a7380c-1a61-4925-a5ac-bcdd472fd97f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c01a3d5-b1ce-41be-8f4c-f25f9dcd2eba"
            }
          }
        ]
      },
      {
        "id": "1f878abe-1477-42f0-9d8c-36304a5bb561",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "868e9520-fb7b-4d19-ae7c-afaf093958a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d87a13d3-e34c-4fe3-883e-6364d198cb46",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "399bac06-f961-446a-95db-23d95ac45251",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af540f5-4229-46ad-ae2a-e1a9d4acacdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ed9855-5c9e-4b0e-bbea-ca7d50f91426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33ecc92-50ba-4d21-85a7-0c08b5334204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4e1fb2d-923f-4a26-a431-8c9feffc8919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3eb14a-0bbd-4a22-8d30-3485509e4b3d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33eaaef9-36cf-4146-9099-73e3c53d7525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3ccba4-b4f3-489d-af8c-6a581ba2b3eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95419302-46e2-450e-adf8-ecc3f9f8584b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce2a8aed-cd00-4d1e-866f-dc151a4bbe1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db7e56c-4c4c-402c-b682-912b9c5f7ea3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba87b8d3-2c8f-4fa5-88b4-171efd977d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e92dfb-323d-478f-a887-cd0d76e4a8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49197749-3ecb-4d63-a936-0781bd8f14f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "784e5b5f-02a5-49c6-9168-1ad4bc2d5e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b4281e-eeff-40b5-a5dc-98d5e551bbfd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed866bdd-c4fd-447a-b24c-b8695ef35ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ac1fbf-5d75-4cad-901c-cda87425cad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041921ea-2c55-47a9-bbb9-789031ba9403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e3c66af-816a-4069-8d33-afb2b00d27e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5787a2d-c894-416b-97d4-79e4b273249f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4163975-15be-43d7-b3b7-adb014a427e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef2da7c-61db-4b7f-8868-6bd0b69ce55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4058199a-9e2e-4a79-b31f-28a43c510f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88bafd86-a341-4f01-8bc8-1c9f628702f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34891d3c-f149-4fc4-9c29-a847e4a12616",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cdd82e-0d8e-4f69-94f3-1dbc42b3636d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67c6c4d-194a-4767-87f5-9858198c649e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf91c773-5725-44d2-8e76-b9d926155271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b05ec07a-5935-402d-9c8f-ef779b715c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb7a3ea-7cc9-4205-b0d0-942a97fb27bf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b9bd7f-f888-4082-a8c4-1a4dbfebf6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0630304d-54fd-46d3-a314-1241b04a3e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7c1022-6e5f-44f5-b13b-554f69b9edf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "934b1e11-558f-4c0a-bdbe-f61517b63937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448b2566-b280-4819-8ac1-b46fda4b3168",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ed02e7-6747-4a1d-822f-b62acb4106fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16e9cc4-1299-400d-878c-83fe4ce53a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413f2719-8e6d-48e1-ad79-b9051cf2c5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a70cd59-e1e6-42dc-a6bc-0fa62dfda3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893e9765-a4f1-4132-959d-5718a34e57b3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a15bc53-11db-4c29-91e9-19f07d790ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe419fbb-58ac-4024-bfd6-1f1dd7a7e49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd77b02-ac72-4a28-8988-ef081f9ec242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efbfe3bf-f5cd-47f6-a40c-74b2b7e8cd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f7d2e0-d099-4753-802c-2c6e5bc2ce30",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f896fa-1643-4334-afec-8d4f674025e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0875cee-8c76-45cd-b9b5-f927f6bd44c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d34543-bd65-42f3-92af-73fee22dfb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc813716-e763-4618-845e-90b7d80ad03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a596ab42-ecde-4925-ab9c-7659d8a6ade7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6183e4b-47cf-4981-a416-3fc9574619e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616126e6-0c30-4246-87a2-7d2a8492bdb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812b552a-0204-4d3c-b191-2407ac4b6178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abb9bb94-ffa0-4803-bf77-c84d1e7b27b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fab14d-0b89-4f24-a13f-926737efe723",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00ee5b7-3777-4c4c-b2ff-f704ef4f9d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6ad240-e173-412f-82a5-34d8205a56ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3f26f1-2e67-4187-b99e-ce9f338a99d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21402460-eceb-47df-a644-7a0dcdf3c997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce56d41-0485-434d-aa06-fc133f580b1a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe0ad2e-3a86-4be0-899b-bee41b1516b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdfacc1-03c0-4203-8de7-06f2733e7583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8950fb-ccdc-49d2-8a95-234b5c480a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ce8e3b7-3795-4a18-b740-306fc412b453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b61e76-2f2c-42e9-aa17-b867d391757f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91a1139-2d56-4833-bead-9f1e0dadef6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c166f59a-d87d-4719-aee6-c9a6300a71f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097f0f0e-e3fd-439e-9ba7-919c88b83c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "632e896e-a7c8-460c-b02c-6ff6c63f7499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc7d870-ad5f-406e-b5e1-4868a437719f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a84e3ca-5105-47e2-8fdf-1490a29ef71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe42fbe-8f06-4920-b708-9932040da45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5f5699-1aca-42cb-bcba-5fb329a1a059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29d6aa2d-1402-4f96-946a-2254a95c4dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e76631-e410-4d28-b148-bc42ed29d9d1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a30b62-d26a-4978-948a-e4fa551adfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65497f37-c4c5-4ae5-bf8c-04c5862439f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bfa35a-c5fe-4dbb-807b-77b781d37f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "107b0d78-3753-44b9-9d95-2a2c21197450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45df890c-c9ba-40ba-9c5c-f4ee0d075ead",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0d4c58-e5e3-46cd-8892-c14dcf4d1f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16159daf-8707-46ba-b89e-879ddc614ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf230c6-86c5-4251-987b-926aa41e0a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5137bcbe-99a3-4dba-99f0-dd6f7c174900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac37937-1a9b-408e-8d3e-1935bf01302b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cab4516-53c8-4ecd-9561-9a221e741d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf84c9e-2158-4799-97f8-9c8d8b08f9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039e9936-3508-41a2-92a9-362372ebd20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2a7ae2-8f48-420f-ae08-f2e94b0a1f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96a8295-bcbf-42bf-b7f0-d71daa6140de",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b2f1ee-1da5-4105-a7b0-2425a0ef5054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63391517-bd4b-4c36-b660-922ca3b2b665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b63e63-6575-4e2b-93d9-a7fe3f0f8f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b8356ea-92a5-4456-9559-b721e316d345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821600ee-8cbe-4e70-af90-ea7eb49c5c8d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2922a75c-b293-4d6a-b478-ad2954258a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bf1b05-37fb-4794-96f3-20a93cf6101d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bcfe39-2027-4e48-b78b-8e21dd36757d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc8913a-766f-43aa-92ec-cc8547ed9800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8942a79c-6d46-47ca-b1cf-3bd13669278e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a606514c-cf56-44c3-a327-32e00ada7cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3aaec3f-f938-46af-9d53-baa4c58017d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05970f94-4205-45b1-ae46-901bcf67b82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02a7ab39-4c49-40a8-ac34-04fbf3575f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3590b2b2-f660-4248-875c-865693a54765",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55fdaeb-dd4c-450d-92cd-ab98dee20e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3523568a-e322-465b-bcd4-972eff634e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa08578e-7c24-4bf4-bf44-5a8f8bb2d152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59b2ee30-c935-4072-abf4-6c13a7438d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d791aeb-440c-4b96-80df-40a172d318d8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd655ac3-8be8-40c1-b7d1-68c28e428bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34b528e-00c7-4b03-bd5f-5bc1dcc8d816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcff5d68-c38b-4f11-bde9-3d944ff86e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb294d57-0e3a-453e-8a3e-fa1928ad94cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7e2af1-b000-4e23-808c-c7992991522c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4f1c81-e83d-432c-bb4e-354278a5cc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111b0641-7fbf-4838-9b8b-a5caf2b93aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b9af08-b053-4545-b413-9bf0359b3665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c22a6f7-bb1e-4721-bb14-fe19e3dc1458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162c3493-4dc3-410a-91c4-6573d90cd477",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff608ce-bba1-4618-839e-d8bd04b018b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946cff53-cf96-4678-a2d7-a89238bad09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2deab6ff-d33b-48a0-84df-d1b9d9824496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5deb3298-4d89-4143-9dc6-cfd582ec3671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81213c71-1b30-49c6-9be5-79a563957858",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d067533b-f944-4a4a-9a1d-033878b2a4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ebaaf6-2c6b-41fd-9642-c6db852762b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a08bffd-2cd4-4e2e-84f1-107bc9b325aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c801686-7b2b-4097-a5b8-6a6c31e1db5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06bd712-556b-4c60-8e1c-0afbc44b0a73",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ad9572-d509-4966-aac1-f331de0dd728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb391f8-93b9-4b37-b791-818851e7c7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bc87f7-ee9c-46b3-a326-2423c88a29f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6872a181-e921-4593-a281-d91dbe7dff1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f997291c-212f-4a46-ad44-3a0a56a4b444",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6fe0c0-a6dd-4af6-84dc-172e812e03c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312d3487-cdc0-41ee-b360-a6b2cae02b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d55a234-4bc4-476e-ad66-12362e4856a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0825c499-f32d-4295-8d57-373d25a9f711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0bd3e1-2e0b-419d-9557-37116f5fc0b5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809b137f-169f-4781-b495-be0a7e40c0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ba5f0b-4297-449a-867e-1a7ca5eafe83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d8bffe-882c-44e8-bc1c-ec77d2dfeda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8b16ca-de1e-421d-ac82-8bdf12b5e909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91232a42-2f09-440a-a92e-5344fd8d24a4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad7fcd2-06e9-4173-85c5-08cf1b645105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0281c497-23f2-4444-9a44-ead8ca56f49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f2ed90-c92c-4cf9-a237-d96fbea4f43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "edff39e6-7183-4cef-9652-0079c6d3f460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3514bf00-266b-4f15-a9b3-302c846163f8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1dcbd5-35f2-4c73-823c-8e7776e2c63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10932d30-2b44-4408-9305-4dc3e074d89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c1b6b7-2834-4625-a33c-94659ff6da91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "233752c4-068e-4d5a-b94f-e78ef80c0b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a8576b-6b38-4495-be29-a09c36e19ff5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a754598-876b-4953-9a55-ba5cbb857eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f223a7db-6187-402c-a89e-2ca8902dfa42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59366977-93ab-43c2-acb2-0c63f16c86f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f36beab-4fa8-4040-aa0a-e468e0595848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27202fda-387f-4a42-92ca-d9425203819b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb3b338-3d71-423f-b907-9c35cf4e8f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16426fbe-47c3-4263-8628-86704a06e5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8e4796-0226-4e48-9eaf-f514db5b2ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a91907-0239-4001-9bfd-2541106dde89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b954594d-3648-4bc0-bf94-144f7e49ee3a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa0c28a-6c9f-4685-8dd0-1887db127802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62bce63-be0d-4766-8d5c-5104cf443cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48d119f-65fd-4f47-9387-539797a60ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41bcb9f5-eb2a-468f-845c-79b9bc08ec6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0644d15-51b8-4a32-9c05-7ff33fb0072d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0920c5a8-a78d-494b-b769-2a94d32ab6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f6ff08-b51c-4f74-a346-3dc30dd41645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb3deb1-cc81-4634-bd25-41e92857e933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "65d78df5-3fdd-4a95-b3be-28eff3dd8ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3bcf65-7fe9-4b88-90d2-0cced69062d5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e919499e-7fc5-4137-87f3-85b87de172e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7375e125-cdba-421b-9685-09d6c8d1dacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767c3776-1375-4415-bc03-c60fd3f16f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc74a6e9-bfac-4d8b-8695-2f9e49cb8463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c40e28-d012-47bf-8beb-44d4688d6ec7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cd4731-d0fb-45b6-99b8-4a4e1495a2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da39d92-23c5-4a33-bedd-b6fe1608eac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86c5a4d-2bac-4c5b-a2c9-e3123e6e80ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "acd48ebb-3030-4f7d-84d3-8d350d982f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b8ce21-a508-4292-b47d-37438736fab9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e5f659-9948-41a8-89db-0eab7768af1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056d58b3-0e6e-4cdb-a559-fd323d5daa12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84bd9c7-4606-4c86-a31e-d9e0dc7fab95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "be536d6b-eb5e-4a8d-b3a9-f2de47313758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94c6b2d-4858-4aa8-b72e-48125376b274",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c4f11c-4fad-4f36-b222-2a57203126f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f02bee3-1908-4e28-9462-56b3ddf68bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2c77fa-6daa-4bb0-8954-4cb51986a501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f38eca7a-0d14-4a77-8b73-8a5e37dbfa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e81d20f-13ea-4bb1-9c73-69c593fa2cad",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb515da9-d307-4a11-9934-f6230ac48f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c540d8-b74e-488e-b635-c79db364c064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee4d82a-a346-4fd7-9960-f86a845bd4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "60fe987d-71b3-4bb4-ae59-cd2047c54fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b21945-81ae-4668-ab7c-f8bacb2f41fa",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253f31df-9080-43ef-9b50-cb3720aacb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21482f36-83bb-441b-ac7d-0245e168863d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea454e34-5f42-44e3-8e48-1b1969e888b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbed3f9-f4af-4fc8-8348-07fb816c071f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5083976-b367-4a4b-822c-2f50a988d186",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0020b725-abb9-4733-9577-93097a2f3435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239ed9ed-9962-4775-97c7-72995a8f1f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fd1789-5dd6-4e03-9d3c-bb5c6b1164d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2e6b7d-e071-45e8-b702-e1bf5ccf8a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5691892-b9ce-42b8-bc27-12990bdf381b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0c9d8a-4c64-4a03-b513-06e1abda0cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17382f77-39c6-4838-947c-cfe0688b87e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944f87a8-5909-4d4e-a524-0ae183eee5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3807390d-4cf6-4c6b-86a0-b0d6dfb74bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34ea545-d919-462e-8480-f8128fbfe276",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a105da-3efd-4f3b-87f5-d4d3af9859de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce7e571-ddec-42b8-bb09-41d5d5de0417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a579d91e-d0ba-4b5b-8cc2-36af4068cfd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d7ad76-09ce-4119-aaf5-5d7106550396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42552e29-ac54-40a2-a6a6-7bae8d9513d4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018fe122-b67e-4f56-8bf8-af4418da48c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5dd5cbc-b740-4878-9229-d8030d51a3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4aafb7-ee7d-45f9-906e-43e2a05ac411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a082795a-5e41-4e6f-b689-d4cc9c04c475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482ad941-d3a9-4e60-bf10-046f3374644f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524423e3-7637-4630-a6a3-4c0d7b37c7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70342fd7-94d3-4fd8-bc15-1c460269442e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c87d7d1-34e5-43c7-88da-ddf14f2b6cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93c177c2-0a4a-48cf-bce8-89c28bac4502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfec660-9f1e-46f4-bdd0-a3e33460eedb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdd0380-5063-4412-ab2e-0336f5f54635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3159cac-e5d8-4497-9bd3-d0585897f643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf6940f-4fc3-4ea2-b6b5-e9665070cd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1515559c-ec2b-47fa-86cb-861813923dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16dab47-345e-4e70-a5fd-5451c2f0944a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e48868-6302-4f5b-8f25-ea6a1f26db46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed427364-408a-41aa-ba47-067f91705e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34216ed9-1df1-4e44-b52c-49360d1721b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b87c935-5c60-4c77-bff1-b27078d76e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd7f4c4-bccb-46ca-a717-3e981ae14d20",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c58c8c-060d-4fc5-889f-d2ae0cb09f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c1be6c-6f2a-4eb4-a60a-94482586e01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718b531e-d23f-4f52-b061-66c146ad4f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c17b3a2-2bed-45df-b286-ec60b842062c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddfba51-7b36-49fe-823e-5a5964e99508",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fa453f-b6a4-4aae-8ca9-4944b24591a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6b1f45a-f5cc-4613-9273-1e07b83e4062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6772da8-2b10-4beb-915d-a1a135780207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19e1f4a9-1b94-49ee-804b-9bb61203521a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6514a77e-344c-4f89-9260-45ad1b1e9d78",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0341ba-c15d-4e94-b507-533264fa6274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df4829d-bb48-4a34-bdd0-35be906482d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef7ed7f-91d1-447d-b359-e091a11d2bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbaef9a8-f6bc-4648-8b7b-a1044c540053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a210299c-b48e-4be8-a6b0-95b6596f54d6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a666c89-17ee-4fa8-aa1b-3938e4cc1451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95828a4-c5f4-48d5-b6d1-1fc20b38ade6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0df18cc-b02c-4794-91d8-de05ed72e0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c88c66af-367f-4601-9d93-7cb83a749d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba833c16-b9f0-4da3-895d-537364e1c79d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a746be-eec2-4231-be19-4683c19f09bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9921b63-2b69-4b71-a93d-899d96d582ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6578792e-2851-49b4-bd5a-d5473c7d1fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef415fc3-b220-43fc-8d84-5a4ed4a6406f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd744ea7-6896-4de7-af7a-18e99463621b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023a191c-2b15-4827-8463-2033e107cecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240a656b-53e8-4276-84ef-2198f9ea5a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782ede28-6b6e-4d8a-bb06-8ec38d3d1ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca544b95-0905-4d83-a23b-994a798d118f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669c225d-edb2-4218-80fa-4dc9ab77ce28",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33495442-8c1a-494d-b588-e292deb37085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fd7bff-1611-4475-8fd9-11439150796d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fcc843f-e4aa-46c1-bca5-49645e672a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "230790c7-4be0-4234-a974-e69596433439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd16b4c-8754-4fbd-958d-b6500cd634b1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6408b8ad-425e-4bb4-81de-802f6924d406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399caea5-a4a9-444d-aa37-9b10a8bfd1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a7b435-75a7-46e7-89c5-de097502625a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "49149961-5c6a-45db-8e7b-d39d5c7ccb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3476c9dd-decb-4873-a6fb-029b4a24e7c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a36a4d-52f2-452e-8746-3959ec5a88ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e060ba-2873-4cee-959b-1dd0a43c5a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19162973-e267-42b7-82f4-93112d04ddb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb25ee7-891d-4636-9b9e-d64c04de023f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca0aec2-fe7e-4fa2-8186-de0bd9dc3e7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75746ad4-f7da-4f0e-8c75-b1afe734eee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b67914b-e249-4ae8-a69c-ce821fc06be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cf5b99-f7e1-4b47-bd9e-62da78427f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccae6e2b-fa5a-43ba-a576-4db62db27868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204e6f2e-d17a-42b3-9d3c-8dc898e96ccf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9a555c-f96f-4b22-935d-47eddf766e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4d9d2d-cf56-48cc-ab1f-b5627e927f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb55b5b9-d7ef-4906-b720-6070885a3145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1452b983-89de-44f4-b286-aae41a9fb065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f746615b-2465-434b-bdd4-4ae92e3d183d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0792c6-1e38-41e5-9117-bab2448687d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612f0c8d-f44d-4098-806b-ebdbb437bbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbb68ad-1634-41cd-91c8-019085776d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc81ba8-91df-49e9-9c04-15964665325e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85210c5-4794-436c-96d2-615efe33b556",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e30e61a-21f3-4e78-90d9-7b333b7b3427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2df82f-29cc-455c-a7bb-572ae212b759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72c1245-7c41-426a-b379-894cc2fb333a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "64ecec96-b9f4-4aab-848d-deaeb85e893b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e097f96c-1772-42cf-a505-e7821529f4e9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db75189-f770-4765-8731-e130bd745cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4e72c5-d196-4c14-85da-ca1c7d014ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f95183-d0e1-4c42-97b1-b84e1fc2ad61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba4b31d-2ff2-408c-a6c6-b6fe2d0701d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d5921a-ad58-4ef1-af6b-2b8e3afd1675",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046514e8-2f1d-4b8d-a2a4-8bf52415f86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a1a5a5-77dd-4a72-bdc9-eacef2d65062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6c9a50-ecc5-4b64-b03e-bd266d1b6383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "de38f7e3-b92d-4bda-b970-159eb0ed5448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c925546-739c-47f4-b841-5248ea2f0266",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682f0b29-e7ed-45de-b81e-bac71464e01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522a79bf-9e25-4b8d-995e-b89b3f22bcaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e4c20a-4cf2-4387-b188-5169102431af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "72840d8e-360e-4457-bfb0-3c57e690e67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddfd978-ea2c-4a64-abef-100b00bda640",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf0d8fb-733a-45f7-b2fc-1ddc472c8f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8185fba9-c692-4d22-943b-bd8272b4ec4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7543c2db-12f2-4d00-ae4c-1b5f0b533bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93b59e71-1fad-4967-a9d0-cee2abbe49b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33444708-d9c0-4db1-ac28-10092bb7e9bc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c610381-0936-4c76-87e6-c9cc20bc5e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86be01c4-cfb3-4905-8ceb-5489b574b53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bbcb27-a820-456b-9a3d-e4c517ea7055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8f219b-fa95-42a6-b97a-1035259a569e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83db9e17-228a-4441-bc9a-ba00e0050a3c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c97c95-5267-4838-a65c-df0f38b3a56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4006e375-f521-47af-ab9b-7ca7bc13f67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7d46ca-c7d5-43c6-a357-6c4896898ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43b5e218-0812-41c5-b391-957f3a06f68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce630c86-a782-49fd-bb8b-b4999d648979",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16efd0db-c112-431e-94a0-2aef32b01f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926f884f-8708-4e3d-b50d-71d40fc74aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9a01f4-5b8e-41bd-9805-082a375fd0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a764dc2-2cf6-423c-95b7-8076bfc8cc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e107b770-8666-4e50-a355-8eda0a2b9c9f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bea98ef-e2bf-4c81-844d-60a65377e5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475f4db4-38a9-4569-b595-66545c1e0dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c8d781-a021-4c43-91e2-52dd1bf78670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16d72ad0-562a-490e-8ce1-7b248822bca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e9ad4e-3ac6-4c55-ba73-b68aa7d6b75c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc1b38f-9bed-4b89-ada9-327817bfa9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75212476-13ae-427a-bbf4-8904b0d2ee37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e9fb02-9289-4fd4-a01e-6598db0a3281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d596a75-76b4-4136-8a96-2559970655b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2de9c16-0aca-427f-9b78-ddd3450bb7ea",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbed302-0671-4be0-8472-bba455fe789d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5fb78d-8901-4ec7-8619-b77413d63ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce79f4f-011c-4ab1-bfae-48cc53ef45e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1f49e9-9163-419a-9073-123bbc337c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62058d5-5653-4db4-ab9f-57c081f2f6f6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1032d75-3778-47f6-b3ad-f38bfc9f18f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fb767f-f5bf-40cc-beb4-1c802c2a13e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a99270-9c77-46f9-8319-9efd45acbe64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a74376-e953-46a9-b06f-c8062357b25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba39fc2-3afc-4bc7-8af7-8fd148680f68",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d4cec6-f699-46f3-bf09-8f948ebbe291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585f17e3-7a3e-4cbc-aa6d-63b200183a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1c7226-c3ab-457f-ba71-a31da11cb0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c026157e-669b-4884-af50-85e21f2d16d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7913f6f7-2231-4eb4-824f-d9c2781525dc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707cd352-d3e1-4680-9619-e1945d69f883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5563364-8450-4435-b985-a76ea251a909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e24f428-b6e7-44b4-82c1-4b44ac1e1d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f1e706-39fc-4e89-b743-a2338fa50ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ad5eb4-d9a9-4b69-a115-f3c71d542ca6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf18e20-c297-4e50-98a6-2ef34841ff59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a4bc31-5ddc-4276-8464-47a2f55f3a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c4e791-6c21-41e0-9418-a1a72906b9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "178a45b8-f54c-4c5a-b6e3-6a743ccd3517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a00a1d7-2784-4ad6-b3e7-52b0bd5b0138",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d5223d-01c7-4b5d-a746-c7b4701579a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b264d815-cb19-4df3-b868-3e2856586f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b7d2ff-3f04-4c23-8769-9578b98ab8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "824e9322-3246-4803-8845-ad85f5c94632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6f97a5-d15e-4b6d-8e48-1c5a9f85e72b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1a10d5-1bf9-4ebc-8c31-d8df82da3930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c649e485-ede6-4cf3-a118-73cdac6df304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e04761-e08a-4fe1-9d8a-ce32dbcde76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa31ec3-f8df-4f17-8b3f-139e03e12b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64424e02-1c31-4e59-b5fc-f54e0a239ba8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f46b32-1a5e-4979-8d30-4a2d95e36866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ff52fa-8eb0-452e-b6dd-916592278abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9c8747-0da2-463d-b538-dc53f1a96bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "681d983b-09ba-414a-a5d2-2cd0b2442678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdcec37-a36d-46e9-9ac5-93458e0f7acb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3754b800-45ef-41a0-9086-fd1fdbdd3cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434bb590-9b41-4913-b488-c97aab2462a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f639527-0c4f-429e-a803-0b7fe5afc0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "831ac084-9fc2-46cb-9c19-3e2f01db98c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e708eb73-6ab3-4ca1-b5be-337ae511086a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6795d980-8490-4405-bc9f-56fe370aebad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574a44a6-55dc-4631-a8ea-bbf37d1879e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f8d9d7-e87d-4fe7-9945-ae9c62f50032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c51c777-9e72-45a4-8a0f-12b48853a1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0f2621-cf03-406b-a345-ec2b1173d121",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c7caef-dbf2-4ee3-9452-b70f6bc29de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef679bc0-967c-42d5-8245-1ee83767a860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8ad9d5-8169-41e7-9acc-ca3728e940db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d1d093-ffa7-4323-8164-0bb002022418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6f95e4-45ec-4b7f-b1dc-8fc826681dc6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc002ef-6f1e-4213-a226-d9d20c129476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fb420c-654e-4483-8a11-6a0f957e46c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246a42bb-89ef-4213-8009-9373bf98f969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2447b1e-4a0e-485d-835c-2b85864ae1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc8dd4f-1529-46f7-b74a-3e0918bcea3c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e726915-7665-4957-9d93-571f6007361c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2d2bbf-91f8-4e61-9e64-d8ee0dec5070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47f061b-df4f-46e0-9e62-37a5a4481f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a166752-8b35-4853-865a-037c8af3bede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a13d2a9-aa68-4989-8bf0-227466c5bd6b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319ed54e-a251-4b13-a6af-a8079d69b967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261becd1-10fe-4a3c-bf8d-6b9025f90cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a366c4-9939-498d-a448-455f576937b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4ac093-2845-46bf-aff7-44d4ad6e2f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c44de94-70c0-4779-a524-0236117f5645",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184b045e-33a9-4b08-8616-734ae60baed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5f60f6-d761-41cd-8c30-6af56ca7b09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e67be3c-72fd-43bc-9e2e-23e3f1307d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1050c5d-eaa2-4e51-acf7-1b4e7276af47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748f00bc-171a-4f3b-ada3-90125e3f1bb2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd64d050-9ade-4da8-82c2-05f844efc855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1205a0-b972-4c7d-9e77-32e5d13c44d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e1e72f-e286-40d3-806c-52b09df69cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c57c01-8bba-460a-bf60-34c4ff446a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a65fc5f-e743-4427-96f7-e37c7e2fce56",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7958e85b-6f87-4339-b814-0909a99f980e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ad1551-ede6-4212-a869-57ec7da88760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fe2475-7659-4f20-b397-74078dab4dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4161aa-fc08-480a-b715-2599329d390a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bca10b8-f338-446b-9b8b-33fd621b5ead",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e53dce-b97b-44e6-99de-7ec2823566bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774efc0b-b016-4a60-a6a5-348280f2b094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a54fca-7a10-4b0b-8366-ac6cc901c55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "955341b7-ba69-42fc-9e89-214c26579c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82635017-1334-42c5-ae11-195845600490",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04664ebb-8439-4792-9da7-6940db8a320c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caea4c24-f1bd-4e2a-a012-5ee74e4280a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585f5bc7-9693-4883-ac09-e5dd2a62fdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "96325c2c-7dac-433c-8eae-88da14e4493b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f2af5c-1974-4488-a8f3-badb68495a7a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392461f0-c022-4a94-b23a-24bae95cc371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb4e251-3fd4-44cc-b185-bed6808e7b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2ffee7-c35d-432e-9070-dd838f308a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b94b2e0-484d-4283-84ef-8e9efc7503a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7237b3-6ac9-472a-9767-7d39f3758a95",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a53da7-79fa-4b11-bf30-48a7209ea81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0d8b20-1386-40cd-a153-54f226a03381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a11fe07-f232-43ea-88a2-c962704beb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b72544-7299-42b2-9e46-595021923067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb017cdc-e14f-49a1-bff3-b258586f077a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee690ade-c359-4ee0-aa04-922950b4c3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8f8550ed-cd27-4195-bc99-f8cceafffa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7629d5-f325-4dbc-ac95-66684e28d44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec96f91-d348-4642-92ec-5b81cb741064"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf5a5dff-277a-45b1-90de-432e3d663794",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ff7c0d0-4038-4add-95f2-781ba84337ba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ce3ec7-3f1d-4471-a1fb-ee2f12af68d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f47a9747-d3b3-4fde-a406-9bad60c99118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0190b43-1dad-4a55-af83-755b72bc6e5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "634f0f21-f94b-4fac-aa50-7890b6c70b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf1036d-9714-4fce-83ee-5c94a7abe5cf",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afb14f5-d21e-4037-b324-08093d8f30b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ccc8d53-45ac-4c55-945f-c69e389c668d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7da9b48-3f68-49a1-8dd9-1c8d9e205d16",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0836c5db-d735-4d31-8736-8be4967c5d54"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6300c4cc-d3dd-41c0-b5b1-b9682db0f20a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28c36406-c9a1-40a8-9275-9a191f6b7486"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4551d03f-98ff-4f17-9525-10d21df8f3c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5efc6c3-c292-4cea-aa38-b6623de6771a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41be44b7-64bc-459a-8182-24c1dee620cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46f1b330-98ac-41ab-ab43-0bb789973549"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f917c0f5-ee03-431b-bd4d-e39acc7425fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ecdecbf-cb70-41f4-bba7-d2b56458fe69"
                }
              }
            ]
          },
          {
            "id": "2831ba63-1859-45e7-bf16-39ef42b8a254",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf332e27-f086-45a7-906b-f4a9579d046a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a82ba323-e1c8-4fa0-8f70-d13f7c70252a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9d9e7da-19d5-4539-8477-68a292f2a8b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e36fa69c-a43a-4d55-8a62-b801ecc5d834",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f8db746d-0213-4e2c-93bc-3dc7d743fab1"
                    }
                  }
                ]
              },
              {
                "id": "b3834a53-b299-4e0e-aaee-a2435951b7a9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "668b72e7-3ee9-40a6-aa46-0a689a396f18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af31c761-7589-41b7-bec2-4e28e96a76c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fea7c40e-755f-4f53-881f-c0b7487918af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e483a1e6-d4c1-4628-86fe-6e5fd7fae67d"
                    }
                  }
                ]
              },
              {
                "id": "b67d2a71-fb29-4412-a903-627b76c2e4c3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7a65895-a66a-4cac-81d8-6fc23b4d29c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33fb4085-71b1-4be1-8572-ac6f69be0b64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35a935fb-9908-4aa4-a5f1-5d3c78dcec18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c77effd6-73c7-4c77-9170-faf7ce6f2c5f"
                    }
                  }
                ]
              },
              {
                "id": "5c1e8c48-d3c0-4228-88a4-301077ed8fb1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b872e09-be2e-4d09-acd9-3f46977e4946",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f184558-9e4e-4194-a882-02d36aedaaa3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15e5a5e3-f811-4f14-8d3d-6e52a7992d2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ee25eec5-280b-4a89-8387-19100a6d64cf"
                    }
                  }
                ]
              },
              {
                "id": "17aca678-b51d-43b3-b553-d9916e90d472",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7d9f6e4-32c7-4e81-b0fd-1b96188b7754",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d899c0e1-3bd1-4da2-ba56-e77451b5c07d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc1ec0fa-2759-440d-9c99-210d0eb492f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "96942c32-58d1-49da-9034-b3a2279a7e54"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ea13a70-381f-46c5-a5cf-24771c02f065",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd5e1cf1-c175-40d5-b514-b7dbbd1a850d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e6e48320-dfa4-454d-a260-e50540f06c90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "880cce89-e411-436f-a0f9-e68e40263f30"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85a2b776-9b5f-4275-9c01-884a66a0ff99",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7f0c3b9d-56a1-43c0-853b-9a2c9475a91e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bba8bc55-97e7-400e-9e37-ebbffd074db4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1078cfae-ee8f-4c7b-a1a9-01195379f062"
            }
          }
        ]
      },
      {
        "id": "1275a02c-7341-4b09-bbb7-0e18e199515a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4d3e3d45-43d0-4410-80ec-2a7544476282",
            "name": "Negative Testing",
            "item": [
              {
                "id": "296de845-2dbd-4384-9fe3-4b13146ad83b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be638f66-9d77-480a-a9d3-fcbf43e42ece",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbe308a-43c5-4668-ab21-5fae85d8c913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b223813f-743b-4502-b83b-7eb5c6f37421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468085f0-ffeb-4993-8015-a82fb520b2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0293907-c26d-4358-b1d6-8fc2b8dde573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a287e0-8f8a-43d0-86bd-7a7c7a3f68f0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b0c24f-d4d0-4ebd-b44c-08496468313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8728502-035c-4dbe-a91e-7515fd69a363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c5dec0-4383-4f2e-827e-2e5f59c687fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d06a355c-b9b9-4244-b90c-27b4a51abd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07b9523-94c0-4187-aa99-65ab67267622",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917530cc-49ce-4a9f-99f2-511dd0d4cf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9271e4-919f-4f79-ac76-c56111dd1643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6372268-2f59-4682-a0b6-ef7dca6e2c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d406f1e9-a281-4e45-9ebd-ba4ed9484279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b027ae4-3ef6-41d2-9dbf-8c94ef103ef2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087781a0-2b4f-48c2-9509-4bde60005808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04eba7dd-eb99-4c59-a4ab-b8e67b8a5e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93415a53-0410-4f09-b2a0-6e5ab80adb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc9b357-c47e-47d2-a724-3675e0353281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1f7a6a-7e5e-4f92-a712-27ce99d2f0c3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e25383-c0ab-4b60-8413-12030a33af71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2018b9ec-856e-48f3-9ec0-9256e011897a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cfeda8-03d2-40ac-8622-b3410eb63c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f13c79-a597-4a3a-a86d-cd4e236af3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ff8953-9858-4871-be14-444bc2d03e17",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7b9181-654b-4e48-855b-7d82de259215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2013c358-786a-48eb-b068-1069752c3067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73acac44-eb06-4d0c-9766-389d6cc78e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c90b76b4-58a9-49ed-b4fa-6961f2613fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728fbbac-06c7-4d5d-9806-31a2e34268e6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0809178b-2913-4242-9d4f-bcbbe6f88fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f27409a-cd21-459b-b6f4-8b22a89c6c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133fe579-c0ab-481d-8211-1c013005052c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "081ad890-286f-4284-bb75-7f33f1e9081c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6895fe28-93f9-4841-a4a6-d6a93ab04fb5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40b6941-9539-4d05-9b2e-f0ee737b792e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bf5695-bfe8-4071-bebb-ab4db7312541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033d4d8e-668c-4e51-b92c-b15c3c0f861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f52dbf-84a7-4340-90a8-44dfd628bca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a83fc21-ac77-409f-934e-678b82138fe5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca580ab-af5f-48c2-ae1e-c1491dd0b983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0bc860-a9bf-43ef-b40e-17e181dca422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ed5f8d-6017-4ed7-aa00-0a77c59b7cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d4a7a1-8dfa-49a4-b32b-f220d2060508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855c949f-af40-4dd2-a416-711120f64e64",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d4907a-9442-4dda-a3ec-022c9ed4a534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b27fdc-b4ac-47cf-8765-6aebf6fea134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1463d3-212d-4ddf-85e9-b48705969db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a50f23f9-506d-4508-a656-780dc86384ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9566d1d-eebb-4ded-b297-9549c3389318",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3783b7ef-4f7b-4e55-aa8b-d8dfdcf26ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4dd7ec3-2c93-44b5-a32d-3426d669ee0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28f7429-d427-4b68-b911-53f2075f9b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "076406cb-ebbf-4ed5-8994-ee4cd8c6d6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff208ce-5567-4a0d-b14f-7fc53ab361d4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f555d58c-c85d-4e4d-b51e-7b871606a4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c74a195-a8df-4e58-9dcf-c86d45ccead7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12b1e5a-01e0-4bce-a372-6fab3c830514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b88fb456-76fc-4561-906f-73c7e66d50cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2915a808-f145-4b0c-b0ad-3497c5684193",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dae0f1-bab1-45f9-8a8a-516fbed7200a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bef75ac-5b21-4695-a188-1fb5f59f6303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30b9f8c-72ea-4044-a7c0-11aeeed0f119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "346bff05-cd25-413b-b503-281e86980022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd576a71-af3f-43ba-bcdc-28737c86b555",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcadee4c-ce26-4b2d-80e4-c76ce155ba01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7305d227-0ba3-4107-84da-ae91e3a6a849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d20d236-6b3a-40e7-bab5-77c5d1369611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "21529b4b-f63a-4df3-b59d-7ba425a65b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c1b1c7-633e-4552-b882-b7374cdb2f1f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0113f6-6a77-43b9-a38c-e2632210ea9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60318a1-6780-41b7-92c4-4df5e15461ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96e9db5-d8c0-43e0-a3ed-69de3ddefb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "074029d3-cdb2-48cd-8956-98da7462ee97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b6a6d1-cdef-4362-a234-8fc6c00913dc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ed4210-d41a-4448-ad7e-0397c14f0478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45d51e8-cd33-4938-b6be-3add0f50839b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7a3b0f-505a-4b8f-8dcc-aceab881d5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecfd4b6-0c98-4d51-ad73-0ade30a65133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d9eb98-26f7-48de-99fb-cd7127b09312",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8c26d5-b07a-4c53-bee6-af67f71e68d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df794ab3-ea46-40e0-81ca-2fc866306a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a971a19e-42e9-4908-bd0a-faaca1c4c0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf0d01c-89fc-44a5-8cab-3b9381f548f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424afcd9-335e-40e2-a66d-001f055ca3dd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597aa5d6-d12a-4475-a9cc-5ee10c09d976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1138162-5196-493b-a0b5-95705c2f1e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b37d94-969c-4651-9599-f63f34c4c1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73de3163-d0d7-456a-bab8-c9e77887a206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ba3c36-0b1d-4084-87e0-aa376c6bc5a5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f888e13a-19c6-4ff9-9e72-e8308306a30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4dc58ba-af94-4072-8010-23ec91a89d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda9d811-7335-4229-ab93-799efd8dbb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "163b99a7-ee43-42d0-886d-519edc68430b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8137ae5-28c5-473c-91e0-332fcc5cfcb3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ed1431-ff29-403c-8038-226a3f171c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2b8a5a-5e13-482a-9147-3e8936ab9faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b129be-903a-46a1-9cc9-f96535435f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ed6dac-e92c-4af1-8274-e6c4aa272ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac3725e-85ad-4829-af60-0f756b5c46f8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34325e9-cd07-440e-a5fe-3bd1b9b8d483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5a4cea-45a6-4563-b81e-c01672e2a134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d6b303-13fe-477e-a3f7-339f8e773ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e652667e-5e7e-4ea6-8575-c6d370f6a47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383dddcb-7b40-4b38-a40b-c92676c3b130",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b38271d-e89b-49b7-998d-ba461a1a0057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db6249d-fc55-4de1-a6ab-08f203e0d936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c994d2cd-1d6b-48c4-ab61-4cbf9f3671e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b860435b-1802-4513-ab0f-6e352d6cb8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c98777-ca6f-41eb-a342-22f5a0af94a9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a194fc-81ef-4ccf-b158-1287adcc7415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77df4066-e33c-4126-9f63-fd8bb4c5b807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234e9176-8c79-4d3c-b027-65b0fbe9765a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acba2da8-0094-4c7b-97cd-997eb951d308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431d1714-31b3-4269-8f03-9e05e395c007",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ea16b6-c9bc-410e-bd1a-7c763ed42d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ecba54-6705-4e76-bc99-7137e6118c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091af700-96f3-48dd-945b-85e68d0a85c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01572a3-6776-411d-a15f-18d453a929d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0216caee-1fbb-495d-8b64-82239a816f17",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a26831b-cdd4-4ffd-87c0-e28b5bdf1645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b9897f-1001-41f4-abfe-ea207a244773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37753a6a-b43b-48fa-9cc8-8ff09cc9fc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e6a0b9-17f4-477a-9b6b-79b6bf729e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9ec27b-f875-4c95-b4f5-a96981c1caf2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8055673f-c1a5-43d3-b897-a6052418587c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274049dc-abe7-4269-8307-9d736ed789a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcbc186-6ec8-4474-9f34-97519a132050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb89e209-df0c-421f-8609-a63ac6186422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d63c8d-49be-4444-8de1-e3e285baaa1b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee4ccc4-230b-4a55-ba61-87f9a7dad0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9fb499-eb4f-4601-90e5-c79b11f75fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e4b915-27ad-42c8-a60c-72972cb16821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba6afb6-ef11-4086-95e6-c9e198646b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d60fb4-9e9c-43e1-9d05-0b613533ac88",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1f069f-04ab-4e24-b61c-3039c524ac7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624d6b94-63d7-4a15-9d1d-648703b91063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aed5817-de60-42d9-801c-f5341d8a48e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40d82229-fe1a-4e52-8f99-90961ab206a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620e6b06-7c02-4eb2-ae83-afba88d675e2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86e32bf-410f-49ce-a6ee-8addcb949dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dee25d8-40be-40f5-8458-5e50d67f18ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6da359-3067-4ff2-8c08-230c30044c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e15ae52-ef74-4a58-bd63-b7e78354ee90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e325dd5-ca03-4c07-acf0-e1ddc8b80d1b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f244e4-89ad-4787-958c-88e92778f08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2c2f7a-36d4-423e-9630-d033f15fc219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d52d4f-9e8a-453c-9bc2-850be74d7fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34f819b5-5e62-49aa-b92f-fd120ccd1522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76837423-e5ef-4e67-87dc-7558a460c1e3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00669319-8cf3-44be-90c2-23c74d9c8ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd11736-75f5-4b5c-8f33-11a42a42bf76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773709ed-8885-46f1-820b-d89b5e4987ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8cc925-f02c-4db6-a594-3802e570f31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6a47bb-07bd-4af2-8c5d-9abd43b8ed3a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ace99b-1d3c-4c80-8fc1-7ec3ff810638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a33356-4004-48d2-bfc8-63362d551bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3f4757-31ea-4127-b3ab-45fb20ea5d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f577aaa-da03-4228-bf93-1b5ef7c68ac0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee9e4985-3d2a-4a65-9312-32e352c652e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10f8682f-ed2a-4f29-90a8-3f29c925e197",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df117094-3ccb-480c-a59a-887a2c674fd3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b35e6a52-fb75-4bda-a201-a359cc5594b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4e4d1c-bb67-45c7-b19d-f2d1a1f5539e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e842b455-f5dc-4731-96d4-f71342dbae02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5814f3fd-a688-4649-bf64-2c1690986114",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ca627c-305a-40a6-9984-ddf6cb54947b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a5693d2a-831a-4ba3-9bcb-bab3b8c46fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7bcbaa-e1af-49e2-bdac-5aa9ce3401c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f6404a7-1e15-4fec-b167-ab021087173e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83a9d72c-bcd8-4516-8514-ec2c69abdc6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fc3f4e0-07a4-4378-8678-221dc9e34c87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc903d3d-f956-4060-933a-d74aa0b40a85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b935519-6183-4833-bcf3-f982e8ac2398"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "047f3134-4198-4036-8ce8-1308a47a74f2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1aac9056-2b86-45b1-a053-8f9bed23f787"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "498578f7-41e3-479c-bb39-dbe0f33a5a5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9395518-f388-4e7a-8c6b-3e1ebea082d7"
            }
          }
        ]
      },
      {
        "id": "e7cd25f8-74db-40d3-9695-60ef1edbc134",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "573377b4-c453-49b9-b1cf-8220a86be42d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "176b7481-c5eb-4ae1-97f7-b678ad001b2d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fef7ca57-6ebc-4030-b859-5980b4b07c97",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fa3a4d-f489-48c1-a95a-deffc30ece25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2369f874-5dfa-4b67-b422-858ae4ba8f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6187053-952c-491a-ad26-9d94691f06a2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f14b008-3370-49f2-a723-b9f751eea1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66643296-ac77-4ee2-9e96-e58ca83dac04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df2952c-4dd2-44a3-97d9-1cf8e4721162",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4984181-ebad-4ebd-a325-423912568f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6e1392-4e1c-476d-af02-1b0d81253b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719be96f-4d92-403e-87cc-10ecf27ea950",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db93912-e8e8-408a-bd61-2b6746239092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f02c6b-d341-477f-b0d8-1f994985a8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf485f8-c010-4782-bf20-e671b65ef157",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a968d253-2fe2-4852-89ae-45151bdd3b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f100fbf1-997a-40cf-96fd-2939b647eefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7cfc00-8764-478c-bf90-b71875fd2b8f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275c3d65-c71d-4d74-8ac5-9b2942e1bc8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e075d8ca-a894-4da4-9577-f7c5e50da668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417b1eef-fc0b-45af-9561-6ea3a1cc73ea",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8811c8e8-46e5-4c43-b1e9-b55490cb6f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47699c8-58f5-4116-a9c8-12fc649a9311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1877529e-7855-42a7-bcfe-bfdfb9dfb840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3a4684-5134-460b-8996-7445d4200840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f6b73f-1ed9-4907-8788-d8812ca72816",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8162df-e2bb-4960-8edd-f904e9e59f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a9ecbd7-1ebf-458f-b2c9-3d4599aebf5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bf1c4c-48b1-4d10-98fb-10d57e70a73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c23142-2ceb-4cf5-aefb-e15f39db04b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58edd1a4-073c-4c05-b4ce-35252aa5bb44",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115dd161-7e3a-4c87-af0f-2698059a2f45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c198b77-1ffc-4670-8ae6-ed59254654a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffe8bdc-960e-46d8-8e29-b17e74d6ef15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cd071c-01e2-426d-9a26-95cfa5d5f08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4be8432-2428-49d9-9364-bc8b5925a9f6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da8634a-0acc-406a-9250-7bad161f4899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b122ce-fd22-4ab5-bfe6-2ce60a3f63ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a69cf05-11b7-4abd-866d-048e0652f457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a38f612-0f42-4f1a-9c6b-4f44c7b6d308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc3547d-eb35-4705-83dc-c4d5e28c1b92",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c3479c-2919-44f3-b3ed-6fe47d2f8b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c4b4f8-5408-4731-ae15-259489a6880f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011eef82-5af2-4372-bab3-314dddace4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47645def-bfa8-432d-a143-8fea9b81bc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483c6903-2f0f-4e24-a4a5-9d1829db0739",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a290786f-e4cc-40f1-9374-ea3fac6ab1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd5418b-ce55-4bf2-b25d-48bd71d9dab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381b477a-e888-4c01-b2ff-b2c44e504cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b183089-ac3d-447a-972b-a597580763e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4e6634-f0f0-415c-afa7-8dd1ac05f554",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f02c5a-7907-4556-8148-cdaa8a24d6be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a745b4c7-8868-4944-9288-a13c2697a204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e4d87f-5916-473d-b0d1-b23f9f40dc19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ac74cd-70c5-475d-b3ec-24f1a56ab6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567992a3-da98-4089-8041-6f5d75692787",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b8c873-1150-4717-a74e-18bec13e07b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "906eddb5-e0fb-4d7f-a056-2eb4c2a6d74d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c31f97-8823-4bee-b996-0c498931776c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df67fa6-8948-458a-bdcf-4569a6819e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f399f44b-d5f4-424e-a47b-17ca2bc50866",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5315e78-8a77-4056-977d-a8a24b6f71e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f26b3091-168a-44f6-9b76-4ffa5f85da96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002bcfe6-c3dc-4019-9c4a-378a483b1074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636ac85a-60d1-45d0-9df0-c0fa95b8bec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0ebdd9-60e2-403d-8b47-407a35a0b450",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59df1d8e-4a2b-47bd-99a3-3895333bf695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81dffaf3-7b7c-4885-a150-c2b3092dd2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449968c8-a963-46e0-a936-430acef94a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8f837b-9204-42ec-b058-7da13c54ae99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55efaa15-1d00-4b27-a565-415ec9284dd2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f00efe9-9845-4a84-8572-f6e02991d40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac43283a-d062-480f-9aab-80f8c3de8eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685793dc-10b5-4aca-8387-1eff96aea2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf83caa-89b9-4ea9-ac19-a1fa9fcf3ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee8ae58-1e62-4ec3-9a1e-ab42c29aa28c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a29dca-231e-4b97-a16d-e3a568cd4487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb8ff6c-6ada-4d8f-be81-c477ceed2591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29abc9a-4e7b-4ed5-8308-387fa2151452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e36aa25-7c80-4416-a8a6-6ee380875ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677bf582-8006-483c-bf3e-3a6f97958ed0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3762b05b-1397-4842-affb-8bdd37e0bf58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e342b4-baf8-4020-95a1-b751d0518b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afee8a01-7d26-4575-8065-d6c02c99da12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5762f2b1-cc94-48ae-b38d-7e22a873b7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cb484a-86ac-487a-aa81-0150d3ff33ba",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd865547-9e1f-42e1-85ec-e0e129cdf6c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1f7e65-abe9-4605-ad8b-d2578ac07f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4c291c-0848-4de7-981d-c858e029083a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa3d6ae-b734-4936-9adb-3dbd73b563fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a534ca-84b4-4728-8465-3ddb9038f74e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890127b0-68c9-4853-8732-32d9224851aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d827f1b-8d81-4122-bf05-802334432e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5ebf0b-90ca-4612-b047-1b0cf98ae4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35c6be8-759f-43b4-991d-4c4d1a4354cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057c86b5-8148-4d67-8462-627c5d1a7b34",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4284c4f8-edfa-48da-8186-cebfa889c550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5456705-1b84-42b3-9096-cedef3c1e080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0d1ab4-5f34-45f9-a02e-4b12c8049b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb92e75-9c94-49e0-97b8-3e0f865514d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d3dfc0-31a4-4a4b-96d2-ddd64d3be26f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63e1a46-8a8a-4553-81f5-ed92f417e9a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea861939-5392-4947-9bd3-9d126e4c0c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113a2bee-efc1-4c1c-8cee-f34d22011db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c15559-a569-4f91-9387-9a0624163a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78418df9-d352-4db2-bb1e-2faae708bcb5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a386663-4a42-49a7-b700-3ec125a401f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc4bbe24-d5d8-455c-a933-4b38240ea779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e4f9f8-bb78-483a-a6c9-01beaa35bad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5ccecb-2f01-4ebd-9599-78bcf1cc67c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ac2100-ad4e-429a-b95a-47ac38f5ca45",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ad82b5-7f2e-4802-97e4-791a7ab1d39b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a999d95-6e53-4a73-a38e-b37458cda6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0763f42b-a8f1-42c4-b94d-3962e5e5b541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96780fe1-c96e-4264-97b8-8f3d37923e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1eebde-0faf-49bd-ae20-305f4b38d9ff",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c07ca5-b68f-417a-80d5-2f86094de37f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60bf16a2-27dd-41aa-9c69-91a0d4b48ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3b6366-c73e-4f64-b426-2cd4a4686431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51dfe466-3164-4c4b-af5b-7251c59ea0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffa6612-cc81-4db1-a968-1c9535fb41d8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55611eac-486c-42bb-8fea-ffa24c4b5cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a55540-a318-404e-a8e5-1d97cff2e5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4d5334-3978-4501-a170-f0b0cfbc0b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3296a3f9-84d9-428e-9ecb-7c7a8e5248d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4262ee3d-0025-455f-8197-13c2c515369b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454e0b89-45bb-4dba-9a34-a4c43167261a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f662246-a3c2-4286-8bc3-d7196eab1245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbeca7e4-f4b0-44dc-8db7-204c68983137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c433ccbb-1756-4480-b4cd-c88fb88c02a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586c302f-1223-47d1-a58d-8ccce82563c0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df777443-4c11-4cd2-96c1-156fa6282084",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff3f6d39-fe54-49ba-995f-54e9667691f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e13d2b-7171-4cef-816a-9b2c3d2de6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e48060-4b90-4fb9-8ea9-f4af82943ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0347de3d-ae41-4084-a2f7-7bb3828795ab",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95dd7f3-d029-4f82-abba-d7a2a08184a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abbcf336-1a27-43b3-b468-f042f420a0ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea245ae-6e9b-4ab9-b90a-33653b6c823b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ef8af2-791a-4c4e-8075-0aea864b5db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17b06d9-d509-4ab0-acb2-3c9af8b4c0db",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8c5f25-36b8-486a-9833-5efcdc3b0fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13778947-ddfa-4b8b-9faa-6f2f4565175b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8648828e-1f83-40ea-acd3-468edee85b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3681d475-5bf6-4b17-b44c-9771fa05cbd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bb4400-466a-4de9-8f24-f27a78738b72",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f8d335-ccde-42da-b0eb-62d6d17d327d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2cab3d6-a61b-4928-b702-37b3bd943b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaacef4-c35d-4bf5-879d-c59f0b256ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b405d3e-b85f-4919-956c-0c41f7d12fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8ed911-6987-43cf-9ea8-83604ef04f2d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccffeef-3f31-428a-aebd-a9661fd7e658",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a08650e4-6438-428d-b207-d5fd93ec24e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bbf7f2-06cf-4e1b-88f1-9d9f0beed960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47153cd1-f1c9-462b-8fa3-159120dcbd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35956ca9-a696-47b7-81b4-0fcc8351aa01",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d9ae1a-1695-4f77-a5fc-e2275a1e0913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36d80de9-2929-4292-8b23-7e3a0d521683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f77cec-dfa4-40b5-af14-de8bd6da17ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f69e2a3-a5d1-42a9-be79-dd0daf4c92db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4f48f5-1426-4769-9cb6-7d47bd9ca086",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8274f20-ad21-4a7c-af47-ef7f427e65fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a165b90-3f8b-47ad-867a-0c86a026105e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4f15ff-ec22-4ef6-8327-9defbafa083b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83198f6e-d59d-4522-94ed-979bcb2025b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1700dd8-ecdb-4f8e-933e-2cbaac2d76c1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce845c2-c624-495b-b7ad-54431402969e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd48fa4-d13f-4c29-9d13-9a01b632e4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3ec469-c742-49b4-930c-3b644ff07ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563fbdcd-4237-4322-b0a3-6ab39038e92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a93582-4fd3-4ba4-8ed0-894aabab12fa",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ceeeb2c-e431-4380-beeb-c519510686f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd111245-ed70-459b-9133-8867d0b29cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "377cb894-6344-45da-b174-c0951fb699b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8c6d64-51f1-4bf9-927c-5961db047b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4302e35-42a4-40a6-80c9-949092ebd129",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fee785a-ba5a-46c7-a849-76077b3f027d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bf1824-2d17-4666-9465-410891fc1392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2719161b-467c-42ea-90c3-dc9d8cce9a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b8c06e-1da8-44ee-bc0d-220811c98f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbe8ca3-d1f8-4620-b643-735210263235",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dda3f3f-8aaf-438d-acd2-b7e97a644566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3d1c82-e1cb-4086-bc61-17d736567047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ba4ece-c101-41f1-ba61-839c28a57869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c371bb8b-36f5-46d3-a1d7-444f5320d4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a75dea4-b337-4c4c-a367-d97391039ac6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b498d528-9e95-47da-a803-9729d7bfc2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff99de2-3e99-4229-ba46-8370eafdb299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc52af2-2e81-495e-a35a-8f2b9fb3bb6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca219ed-02e5-4b3b-a8ad-7f327c408d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab33a277-98a3-49a2-9691-0a5d8b38fe7b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6ee0c2-dfd0-4083-8fdf-8f07f9e7df05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60faf38-9293-4925-8aa8-f7f697fb7611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69eb24a-32cd-41b2-b5cd-3579f2596424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af4a1c3-bcaf-409b-bab8-41e7ff4ffb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba20fd8-c0eb-4f8e-afbc-2d0b0b6c7db8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080ebf63-68b2-4920-b3b6-2c7aba35c12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5775b2-7546-4f93-8d29-472404531fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de45cbb-fb7c-407a-aa79-9a6ca66f65ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d4b501-d3ef-4b43-9aa9-91ed8c2c5e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1a6b5c-6810-40c6-8431-4098a25b42f8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c52d33-5b8c-4734-a5b4-ae3870dde713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4748c21-5cb2-48a4-a1e9-1bf66298a7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec81dc84-de34-4871-8204-aa34f2d098d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e5a45a-627a-45e9-8c2c-48149be94710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be503874-364d-4883-9ee0-3532932db07b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15b5cfb-667d-4cfb-813b-283414002f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83200479-16c2-4a7b-8bf1-6fde9aa78c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1262c1-8d0e-4b32-8823-7301a907bd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e7ff91-b81c-40cb-addf-874ffcd87233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7a3eb2-df9e-4d18-aaf8-9c52a3d93ed1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010dcb7c-2bad-43f5-9c78-fb8737656c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373d1269-332d-4887-bf96-16dab06c90e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adeeee95-cdee-48b7-9477-206209f53351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddac809f-eee5-40bd-ad74-73b51c5cb6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec539173-f927-4d73-89ed-4303a044fbba",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8914de48-7a82-463b-b900-4442b4852331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a65c839-a464-45e4-870e-94b5a668ac02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4b72fe-c743-4848-9aa7-252ceea214bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec10002c-4266-46ec-99cf-2376c4d94b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64181da5-7127-47d9-8e10-6bfe630b186e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878ef7d0-e859-4c35-9a4b-793756eee558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24be188e-fb1f-4dee-98ab-fce258251ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e869bcb-83a9-493c-9fbf-88328e6078c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81debcfb-233b-4620-af3c-ec7e67cad6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9764d9-4763-4cb5-8767-19ca75677911",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce60c42-8dff-4b98-bb1d-359d95e5bdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be41bea-3262-47a7-a4b6-b05d4a0448c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c411a687-ced2-44c9-a87f-16a837242eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb086f6a-ba7a-4698-9b27-278d1371d0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecf171d-1536-440a-8afb-1b895a3d6f41",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e5b6b0-4c75-4c12-b4a8-d5b357b29823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b235ae-c1e3-44d9-b78a-c61a239d7567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2aa047-1837-4fcd-b6a9-3c7edfa9a690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c34c09-5674-477d-bbe0-bfff999b838e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5380efb2-88b8-4819-ace0-acf23018f631",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0a0e61-a389-42b9-878a-9b311e024e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dbf081-156f-4bad-9d03-bf5571481b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a942a344-a883-4544-870d-d55ae404b835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cc0841-b8fd-4a22-af87-e86a241937d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651fa578-06ab-4f7c-96d0-cfdc686098eb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90a8ac5-9bc0-4051-9b3d-035c75a12811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0c142a-ecc4-476f-9975-507b39949c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b0ee8f-8508-4391-950e-c9ad7fae4814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f565cb-0c1d-4083-b986-7043dc7fdbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bce5f91-53c5-4a9d-8609-6156961b52db",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d646a59-c8bc-4e82-8150-50ddbf2c29d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e84e88-b65e-4b82-8b37-86fd140bfea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735b12f1-3b34-4d21-9c67-416a51209e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815ddaa3-0196-4544-a682-8418922911f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd280f55-db08-4ad2-8f21-0e64e39e72a3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4830d14-a27b-4d2a-a925-17449f209f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33489273-3e57-4405-9569-255540a888ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c6e41c-54a2-4a49-9310-a9b054830c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbb710e-9ca0-4eca-9c04-c5849f2f8957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad81dc81-28f8-4d5a-9087-444e873485dc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881e7e6f-0245-4e0f-bc9d-f2728b4f288a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac953aca-b384-4f0e-a1ad-b0ea2c74a657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d12f882-4d32-49cc-952a-332f16dbe57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250575c2-a8f2-4a2d-985b-db98c0ac59d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d4a53d-1dc9-4087-85ea-0aa7e6fb7d61",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90c3115-2a93-4f1a-9358-c1c9a6422e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80fe5dad-444c-4327-b452-df95e9b0f547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0388005e-ae33-440b-934e-61a973edb078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4ba1c9-d838-4e1d-b86e-9b5d6caef4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d299b1e0-b079-4522-a57c-00a4770734c2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6188b971-c48d-454c-ab55-33c69c9611fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b034c2d4-4148-43ee-bb67-07c100694686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5c5579-cbfe-404b-bd08-136cb18e2aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ceb37c-63e8-409f-bb02-1766edf150b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0905fdf-2c5c-4ad6-a268-b2f1fb41f927",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b316bd3-e7c0-4a5d-8547-cb7c8d21a188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77c488a-34ba-432c-a33c-c08b72d820cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e694955-bb08-4f6b-86b0-14fe00206e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1300d5c5-9d9f-46b2-a254-7efc0f234367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e8b2e0-0a38-4f5c-933f-31c940533faa",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b06cd6d-09d6-4479-bf58-cb272eee43bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fa857b-b336-4240-8144-5dfadabfb249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a75b5eb-1062-447e-addc-59278ed429a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca9ccca-f080-4393-baae-7cb76dab2a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a899b74-6056-4fad-922d-50dc5062e52a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30336df9-d747-4a5f-8069-decb9009f1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82963556-b896-449f-80f1-828bedb76303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d473af-7500-4e34-90ec-fffc374c9688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17162f4-2fec-46f5-a328-9223106356d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da62fd63-aa47-4acc-91c2-efbc726c700d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30b9fbd-8d90-414b-90b7-534b699f4e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc08fd9d-2109-4873-8f86-82551844bafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450ec430-1947-4e03-b2f7-5b77ab186152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d5d924-bea2-4bbc-9935-d215993a8a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997dfbb5-bdb9-444b-84f5-56f62cf60b9f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1612a3f8-c6ee-4cda-87c4-655f1d62f7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a045d33e-c6b1-4d79-9188-03ceeeedcc67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84f3141-0e71-46e1-b308-46623f30bab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f539740-3654-4704-a9f2-b780d33e5e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc1473f-fb09-46ab-b756-b83e7da51c08",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abe2d4e-a56d-4ce6-b0f0-2e245365fa24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03fe6d9-cece-414d-a21e-374e902fa8d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2f1f02-fca3-44a4-8ca0-82c757b2b218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fcac54f-40e8-4554-b733-762a2b36b194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead83042-2438-4e75-896f-7e8a322abded",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677dc834-31e7-46ef-8b88-60ff361e51ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8c7a06-4596-45b4-83c0-7bf73e4509e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8b1a40-5620-47db-b392-fba1b762390b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce91fe7b-c5c6-43d3-8914-e792d7327b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c345eb6c-9a4c-444c-835c-2ed66db64d29",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea908be0-e750-49a2-8039-41518a2d3f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "358655bc-a10f-40c6-8525-7d566b09e7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883ddfe6-aa10-4b16-87e7-0aeef8b7bb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0b0dd1-7972-4b19-b00b-5638101a7863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9b4253-ef65-4add-9ed5-53de92f0335c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d7b065-4693-4cc1-a761-69253704b289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148ea0f2-07d9-46d1-80b3-07cd6c16ac31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6934ba76-58d0-47c0-a386-8982283467f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e15993b-ecf3-473e-b6f4-7a942da6f527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193dc2c0-2a6d-46b8-bcac-39d5a1f85743",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260228ff-494a-48ad-8303-acabfe6eb906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1863cf4-def4-48e8-a056-4ce57b12557b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c392f2-4d80-4c69-b699-eddee16ff30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3407246-54b1-45a4-9c8c-71b68f19e2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10226bc-1d18-40d9-bddb-4a53b1603650",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb8b4f8-cb12-4c6d-95d1-84d91542d8a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f5b8400-b41a-4d88-9ca0-5234f0e14e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a342986-425d-465d-936d-05b2defba70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d5a567-b09b-49ce-b519-3aa8dce45a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b5c17a-0658-48ac-90fc-15a8b4bfb3ec",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9fdf23-824a-4d2e-9fb2-df266a052848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e3cac6f-0765-492c-8742-defe5d773bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a9c50d-a286-4f6d-8128-40b743153153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16cfec2d-5a01-4025-8ee2-d887d5699d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d5680b-e959-497e-8e7c-c1091bf1d245",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0261dc-f9a6-4fe1-ae5d-fbf33156645e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f41ea3-d1b7-42db-b8a1-119ad558610e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34e75d4-ecef-4268-8a26-7a3d060c8d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2b1447-9474-48fe-b554-f155d9df8930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b4c04f-b5b9-4a9f-a955-0e88d4e390ac",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2569fac-6639-41cd-9cab-30ae9a5ea820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44c204b0-57db-487d-b9a4-ad9949459fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8237d2-da9e-4094-aa2b-fcdcfb49ba3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0ab54a-04ab-4e97-88aa-c200c1346ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41796e92-aba5-4611-b7b0-227fc8b0a531",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcb23e4-8bad-4217-99e5-e6a228990380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "affc1557-5357-4159-b8c8-8328240437c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00399bd7-229b-4af9-b8ad-0908dbe97ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a242d3-43d1-47b2-93c7-1473b1d75273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1945293-e65b-4c38-b9af-6c843de9ac73",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293446b7-4805-4fa5-ae20-ac0435462b1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "868acf89-4073-4eb3-adb7-3cb35b919e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2469ec5a-2841-4341-bfec-c52cff19e168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec4b8ef-3725-4d7b-a97c-f436c44bdd39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a033a4a-99e1-435f-82f9-33bdac5dc106",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b81ef97-28f8-4b7f-bed5-4aef90920443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cfbe3f8-5454-4539-9855-2c333988ee39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194f429c-2d28-409a-aa48-b11bc76125d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440cba03-dc3f-439c-8708-5d557bb8f071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7144ec-045c-4c82-8bd6-392687e5578a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bd2b70-62b1-4008-8cb3-9a602eb61b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ce17007-7495-4254-a1dc-a069af2bf2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d516f96a-65e0-43d2-8414-915f1a914284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff2cc6a-8755-402f-a4fa-06ae7ddfb15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373bc4a2-fdf9-4c9e-ae08-79483eb0959b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c33a06-86cc-4eb2-b71e-197e3496a70d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4a937d-cfb6-4e8f-88cd-dc6d0640f310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b124c41-4809-4579-b502-ddcf85c11fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868c1bdb-bfb4-424a-908c-6994191313da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954e2ba3-9c0a-490b-854b-61380d438028",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1e5bb5-13d3-454e-bfe2-cd534617f346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93ba7077-4bfa-41ed-b2d6-98de0fb24ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4df6777-c302-46bf-9bb4-ead9f21ea88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab18f6c1-e1ec-42e7-89bd-56909b2d8dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b91f407-7f9c-4c4f-ad0e-109553e41ecb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d70617-0577-4219-923a-72c944d00ef3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27a81039-9714-4f60-b29f-274e4d271a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "398db71b-e6d9-463a-b242-1249386d5a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44efaf2e-0b5b-4598-bd77-f519f07b952f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd03327-6475-4d3b-9949-45709262312b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93615f20-8aed-4178-ab4c-4fc44bebe88b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56bb20a6-2f52-4b55-bb8d-6b8d98a560a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a774722d-eaa1-4edc-b10f-4ca5e223e840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b42aa3b-1224-48f5-9e35-f9fd5f1e0297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2221207-2177-4f57-b378-dc3223a77199",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b9288c-09a5-4a9f-920f-e8c8eda88283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8c8e59c-55d7-449e-9b82-1752ea86d397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f16aa20-96fb-476b-bd18-4a42fe0f23fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d851085-5fea-45a9-afc8-b34ccfa645a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5147d5e-91a3-4dd9-93f8-f747ece17bbb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d821f2ca-3c5c-4447-97f1-e93bd7fc66f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2689788-71c4-4d1e-866a-ac339e026acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218ded33-db48-4805-b075-935ecaa4c0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632280a2-3ed4-4504-a3a0-38f660dcfef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dba3b15-2749-49de-8156-784117dba662",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaa3d84-d167-4e5d-92e5-ce8f9d812011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f8a8e75-cf14-4d1a-b498-08327963f34d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d100ec4e-c134-4680-87e4-68a28d70a775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef488d5-49d6-4f2c-a3c0-40fd35c8b24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226b7c76-41a2-44fe-9fcc-06b0457678bf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba90c2a2-3991-42d2-85b9-06f4838590ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7dfd049-d0d2-4d84-a6d2-aa6df666a034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29df705-2658-4b22-ab0e-29bb99fe2349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17ac769-94e9-4374-829c-8aac16d2b48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6743c4-d0b0-4821-a868-18f57600b58a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cc45f5-87ea-4857-8cca-de2d26225c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18f1b68-f4d8-4423-9940-9b9de445945d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a103d8-d6c6-4f70-8e0d-02e8878f84b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fe73a2-fd9f-4b60-bf95-bdf1e764d78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bdc759-3083-4750-9596-1608b4452152",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600dae72-a02b-4be8-a43b-ca73a16bc790",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb1ff013-64b3-40c2-b6b9-f46c0e31fe9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04af2da9-adb9-407d-a3f7-fa576a91b57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20e6bd0-86a7-483b-8d99-9eeab4a93f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106fad6a-7d87-4d09-a3db-646223f2df82",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6bd4c7-9686-41fe-9b3e-0e408d489034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70c1bc62-866d-420f-a4bd-b8cb5f389ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2e4fdd-c8c0-485f-93de-2b3d28c43886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ba3b4f-df7d-4b41-8ed7-db7e134aef41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f9ab1e-7d9f-4011-8c49-97af3a332010",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712dd2f5-459b-42d3-96b7-aaaea6cccabb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b92ab1-d4d1-4615-8166-f2b5adc89c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af08f5a0-d21d-4290-ba0b-ac040d579115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc23163-9f73-4ee0-abb8-913a033d2cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3583f9-e510-45a8-82da-80de88f07eee",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fb812e-a204-47e7-ba96-0fff6ef6505c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "966f650b-d912-48c1-ac3c-62e9629cf69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8def5cc-07f3-48a4-bafb-6770e31b9f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66512f18-04e2-474f-a5d4-1cbf8be31a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5259221e-59d8-4b50-8e0a-ed262cac39ea",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc5d113-2b7d-484f-bf35-1e310a442511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f335837d-fe5b-41c7-b258-af0c972ed9f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68aa78bd-34b2-4f1b-9367-ae8c6615bb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b159b161-71af-453b-b90f-08d0ca3e3985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be91b263-38a5-41f1-a8e8-3edce4bfd4b3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6d9e87-8c4a-4793-b63b-a360e8598f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3adf1fa-a934-497d-9485-8f494c8f74f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8c1b64-6e87-4600-bdb2-91394ddbf503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bcd973-6316-4d92-8e4a-3e69eaa66a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab21ce12-eaa4-406c-a99f-2ed1eaa29fe4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc76e73-8f28-48b9-b99e-3fad3966c1b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6e75ff2-bfcc-42e3-baa3-161e2832add1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b24e497-76dd-40c8-b105-e608dde9d735",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9001979d-b695-4c34-bb69-33914c9dce78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ff5b9e-32e6-4c75-9985-20a6de79c76e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae73a2f6-06e8-4e1a-b3b4-5980b8226c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d172cacc-6e97-4bca-8632-8bcfac2eb28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23647a29-0314-486a-a031-0e147e3c3a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261443c3-9c93-48bb-a677-ca810432599a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6af055-58d4-4199-9f67-eb6f0e3c52b3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617f99a8-a563-4aa0-9d4e-17a0ae9c2d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb17b769-109b-4842-b259-bf9157e0bb04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe45882-bae6-4b6a-8bfd-0aa9c5b73ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a66bbf-c766-4f8c-91f2-0e76349bf83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459dcd5f-c57b-48db-9b3c-04677cac5b2b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07379099-5eee-4e13-ac57-9ad8df2c571d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e85d589-92a9-4f3f-bd95-432e36955e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01493dc2-cc4c-45ea-aac4-21d19c8e1381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da58dc31-2ad7-4705-9a9a-f111277ec2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe3280e-eb03-48b2-ae91-b0b9bc9617e1",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c89c7e7-710b-446f-920c-64ead83d4dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2cc4a49-e50b-4387-83ba-5604e3b0869c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f719c33-8cad-42a7-9b0f-478c1f32badb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65bc420-55b6-4128-9de4-68d991e42b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d463e3-e11d-4447-a964-119d53098b8e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7452f2c7-77c9-4f31-9949-4df01b0a4a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83376c16-7afd-4f49-ab41-f91d299c5a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd5c3e7-ea9c-4a12-9057-f18b5d0f4abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595baf55-3dac-4752-9f7b-0d1b55c297ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36d4c39-fb85-4ffb-b4ad-f13d6c8b721a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a373199-6d3a-4853-88e5-56114272de09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a611966f-0354-45f4-924a-55c02d4985f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de41db4-d5cd-48f3-9774-9d24c92b904a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b383dbfc-5c5a-41ec-84b9-1ea8de876b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd033a61-b435-4b4e-a5ad-51dcc446a773",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91ba245-7b2f-4d97-b5d8-8d8fd4371197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6273f9d-a52e-4cfe-8fbf-52d24ddd4462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482e681b-6ba6-48fe-85aa-f576955f4c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd6f68c-e37d-477e-b9cc-fadf28b9a18e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "141f6881-0e2c-4cf2-a571-84cf6084f6a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "032d30ae-cf23-495c-ae30-8b831cb79a42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64cff430-150f-4524-b175-8367fb086b0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dec1ccd0-6f68-4799-bd25-e731e2686eb9"
                    }
                  }
                ]
              },
              {
                "id": "e6fc93ba-d75a-4c13-b7da-f1ba5f901172",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98b10e1a-693d-494c-a32e-0777cb2f623b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e251163f-ed4e-44d5-a2b0-cf651dcc119e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "08b050ee-1350-4464-b516-0d389bc692c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c739c6cb-830b-4586-89ce-e9f760620dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "685b4ab0-dad0-4534-ae4b-1ec620880249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67993f9-9ec9-4c8a-b3f3-6834337a44b9",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b62b51-03fd-48f8-8020-a441a6c27d74",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "953996e5-7f83-4df0-885d-8cec8f2ca6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fc78af-042d-402d-94a3-7501dda20f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f42307d1-142d-498c-9b25-cb392e36d407"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f1ca781-9a83-48fd-8e59-e39e380e69f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68217d75-a462-4566-b944-88f2024cb58b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b0afe62-a39e-4747-9016-d610c4c89048",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "128d1213-2412-4062-80b6-3c6bebdf0103"
                    }
                  }
                ]
              },
              {
                "id": "848dbb40-83fb-42a1-869a-76cfcd821255",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "274b7b02-c58a-44d7-bf28-0d9d463aed6d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eab54df-1915-4e2f-b370-04a323fe095b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5c971c6f-5617-47f2-8a71-f84285eb6f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb48a5a7-741b-4695-abb3-66a055e4b7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43fd547-7a24-4207-92d2-c8344d731cd6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1e4bf8d9-1be6-4cec-801c-fc6c0b308c8f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e582737a-f852-48d3-9203-2edfe42a4f16",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35b203b2-5246-4d93-a56c-0fdf731f235c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "144f0e74-38a1-428d-b4cd-8c4d786fb1eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08d7b087-6be6-4ca5-9fce-73d72cdbfda5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "047f6990-2f10-41ed-aa54-e45b0c03ba2b"
                    }
                  }
                ]
              },
              {
                "id": "0c76f85c-b43c-4665-9590-c31d0ec37054",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42f08c17-e590-43db-af16-a9c29300f8e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cb2c5ea4-fc89-472f-bde5-c86c2298d7ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99bd6f9c-b5d6-464d-bd9d-603bd0d8056d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff955528-5190-45e1-9531-b94d9386c98f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88c8726e-f30e-43f8-a308-0155f68a9832",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a199c09c-ebc9-4f28-914c-94f969e4f11c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5df755f6-5718-4879-be82-64139288a7a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86f3eb9a-0adc-491d-a641-2a872fabb584"
            }
          }
        ]
      },
      {
        "id": "43684a5e-1007-4d0f-ab89-2dbf056d2b0d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d8fd564e-4fb0-4cb4-ba23-fd2fd24dd735",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45a2209e-c248-428a-91fb-198aee3db140",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbb02580-0b78-405b-82e1-73a9656e530e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a243a73-1cf0-4eda-ab46-9b0a996932c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c5115e0e-8d36-4de8-ba3a-f0d5fe4517e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b8429d-51e1-4e9c-8472-59cbf5f14d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d95b5c2-122c-45ee-9850-68841859e73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b245cb-ebf4-4b8f-bfd4-1121f22603a9",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74cfe8f-d99c-4a0c-be3a-f2c05cc92dd2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5fea112c-84dd-46d8-9df4-174ef79458e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e865e2b-2574-4462-a38b-f0ac99ab4c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9789ab3c-5f80-4dce-a687-5aafb03a5e52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "998fb8ff-d1c1-41e9-bee0-00499f4e9da9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dafeb6de-1001-44a4-bc58-2b0c2ef22f29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f52196c-8dc1-42dd-84bc-1792148cce71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "383ccfd9-ee4f-476b-b392-e91ff9faad97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "116b862b-490e-4829-a919-c6293a768069",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0e355633-e700-4388-b524-462995f64f63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b43aaef-5d68-4907-863a-a503ed8ebd95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b56bcc4c-7c7b-486c-8852-458a5b1d0b50"
            }
          }
        ]
      },
      {
        "id": "07e95901-4615-4e0c-9656-8472aec23837",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "55361193-8746-418d-9190-9e04eb50b5b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "365ab18d-21f1-48af-9b4a-64cb0dff3f5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71464a3b-fbb1-47de-8d1b-4d1f25323735",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fab674-2258-4fbe-b8e4-3cc802517590",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3385ef8-ea39-4a6d-be98-effee88dccde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3840657-bc0f-4caa-bf9f-3d684423d580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8953d15-de3a-47d1-bcdd-0d6853cafd63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aafa8c1-bbd4-4e3f-8389-b727aa508b70",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30220d5-8665-4c6e-93bf-e92a6c4e20c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a626a6-12e6-44af-99a0-391e920dbe07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fe3106-bf56-4248-ac8c-736d3d5c60f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86109cf1-d139-4078-a481-71140da22985"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27ffb695-07da-4d37-a08f-4a57d1067fe9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05d2ae84-0c8e-4d4f-bcdf-2f180bd27a80"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27ba140c-1584-4e20-aac8-70b79f8e3f2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e4d4c2e-cbf0-4c54-9790-f854a5aebe99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "366a84d1-b2c9-4e1b-afd1-bdfcb9c83a39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57a8aebc-cf49-4b96-8c3a-173153469eaa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31973cca-28c7-484a-8cf7-989e1041bc43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3eee017-d11c-4eb3-a898-4479f6fee0a6"
            }
          }
        ]
      },
      {
        "id": "ed605fea-f32c-42b4-b1fa-cd5c2b644518",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6ad9ff8a-b31e-4f5a-854b-89541c0f49d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "165dd438-b9f4-45ef-9094-470c7ce148e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85382176-8a8b-4db9-b700-b50e3a98ca29",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fe72ad-9a6f-4abc-8527-85f10ecac075",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61875226-6113-4eb1-bc1f-42ca5233cb69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297af8da-fde3-4623-9c3a-4be1f0aea9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "deba01c7-1d6c-421b-ba79-4b3293993059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de25df99-d069-4016-962d-c00255f17a79",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68c6db5-5484-4463-908a-a2e2a5f503ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "814176e5-3c56-4796-ab5c-62af36591b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6c7d5f-70d1-4c4f-b640-dee41d37d115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "854392b9-9cbb-4686-b7a7-eabd0aa605ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f02808b1-8191-467b-8983-9759cf2f4543",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b1dfd7c-ce38-47c4-9a7b-ea3ab5269daa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a5ff9fc-429f-46d4-81dd-90dae1ca9d52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cef2878b-d5b9-4678-aace-296f88da6d70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "793e056e-f395-4059-a67b-b47b40983087",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b97abcab-778b-415a-b9c0-92968af4d073"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f3102d8-bc84-466b-a530-a9111d3493f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63ea5823-1bd3-492a-a88f-4b051d682a9d"
            }
          }
        ]
      },
      {
        "id": "a50680a0-536c-4d54-b9cb-3fe6dc661366",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c15de438-f336-4c62-a46f-8cf4365da00c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c54e6076-cc4b-49ea-b2ab-ceff2a3ac283",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "65a72e93-b400-46ba-ab2f-500566ad7a8a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a50e785a-362f-462e-821c-30b6fb1d0314",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b99db06-3688-415b-b94b-ecb5ac7768fe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 614.447876447876,
      "responseMin": 13,
      "responseMax": 6919,
      "responseSd": 711.700166918637,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1678236186904,
      "completed": 1678236356552
    },
    "executions": [
      {
        "id": "2cbbf9e6-4fd3-4269-85c4-969be9a6c726",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7cb128c9-7c09-4a46-b469-78e8dc02fa30",
          "httpRequestId": "bb579d87-f739-4868-a638-abeb7b3fcc44"
        },
        "item": {
          "id": "2cbbf9e6-4fd3-4269-85c4-969be9a6c726",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e65b5a8f-628e-40af-949f-896944fcb4d4",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 0
        }
      },
      {
        "id": "5d39f011-24f3-4925-a371-fb7bd94fdbb3",
        "cursor": {
          "ref": "ab93fa12-a338-4711-ad77-a1126b0f30fb",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "66ba86a9-325f-4f91-92c3-42bb38037e21"
        },
        "item": {
          "id": "5d39f011-24f3-4925-a371-fb7bd94fdbb3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "207046dc-6613-4aa4-9c29-184fc3826293",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "1b3c2694-7e5d-48a8-8201-d6b6def92a50",
        "cursor": {
          "ref": "61c6edb8-0666-488e-ac55-a7394fc655f6",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "723e4136-b4fa-4fc6-95e5-4c9c645c8d39"
        },
        "item": {
          "id": "1b3c2694-7e5d-48a8-8201-d6b6def92a50",
          "name": "did_json"
        },
        "response": {
          "id": "06175796-34c3-469c-9e58-df727a918a11",
          "status": "OK",
          "code": 200,
          "responseTime": 1135,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538a467d-6ecf-4885-b97d-d3b1f5c6683f",
        "cursor": {
          "ref": "0294961b-7e6d-4112-bb20-faef80950841",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ec36388-1a8f-447c-b89f-bee7a0a93bc1"
        },
        "item": {
          "id": "538a467d-6ecf-4885-b97d-d3b1f5c6683f",
          "name": "did:invalid"
        },
        "response": {
          "id": "1fd82d42-24c6-4319-b470-afdc30bcb4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538a467d-6ecf-4885-b97d-d3b1f5c6683f",
        "cursor": {
          "ref": "0294961b-7e6d-4112-bb20-faef80950841",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5ec36388-1a8f-447c-b89f-bee7a0a93bc1"
        },
        "item": {
          "id": "538a467d-6ecf-4885-b97d-d3b1f5c6683f",
          "name": "did:invalid"
        },
        "response": {
          "id": "1fd82d42-24c6-4319-b470-afdc30bcb4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe14f02-8b42-4127-93c7-2b722bf14f58",
        "cursor": {
          "ref": "d51f2541-e775-463a-b934-38dc5a6890cb",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a4619144-fca8-46d0-b93c-763b8b74f7d5"
        },
        "item": {
          "id": "cfe14f02-8b42-4127-93c7-2b722bf14f58",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "44e62433-7269-49a4-933e-54de32aab33e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 606,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd4cc97-6a62-426f-a994-7a8ddeb20b59",
        "cursor": {
          "ref": "b1228c20-7a8c-41a7-bee1-74763e26ff45",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "30eb559e-bc3f-418a-821a-003e06b0ed61"
        },
        "item": {
          "id": "acd4cc97-6a62-426f-a994-7a8ddeb20b59",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "943e24db-ee60-43ff-9486-4c2191d1e1c1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 518,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42921c8f-85f0-4df1-83ac-8ac54f7a32dd",
        "cursor": {
          "ref": "bf26beac-4702-46dc-b6d8-9a3fbe460533",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "435bca9b-f74b-43f0-b42b-58a7b0a66c26"
        },
        "item": {
          "id": "42921c8f-85f0-4df1-83ac-8ac54f7a32dd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d661e4f1-fc12-4853-9c0d-58d55cd18c6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda69df8-96c2-41b1-b7cb-1910720f5e91",
        "cursor": {
          "ref": "c1f597b6-c4ac-408a-bf5e-615507570d7e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c1dce7ef-5d80-4054-860b-ca728ec464c0"
        },
        "item": {
          "id": "fda69df8-96c2-41b1-b7cb-1910720f5e91",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5606579d-6a27-4302-8693-6b8b466b75e7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 588,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda69df8-96c2-41b1-b7cb-1910720f5e91",
        "cursor": {
          "ref": "c1f597b6-c4ac-408a-bf5e-615507570d7e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c1dce7ef-5d80-4054-860b-ca728ec464c0"
        },
        "item": {
          "id": "fda69df8-96c2-41b1-b7cb-1910720f5e91",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5606579d-6a27-4302-8693-6b8b466b75e7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 588,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308bb47b-bab2-4701-ba49-d34f2c5de047",
        "cursor": {
          "ref": "c19ecc60-9005-4d52-91f3-a7ffd2ada34d",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0084b5cf-02b1-4bbc-b844-002ea6878a62"
        },
        "item": {
          "id": "308bb47b-bab2-4701-ba49-d34f2c5de047",
          "name": "identifiers"
        },
        "response": {
          "id": "08d36993-07be-4c77-bcda-79688477e78e",
          "status": "OK",
          "code": 200,
          "responseTime": 1769,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399bac06-f961-446a-95db-23d95ac45251",
        "cursor": {
          "ref": "6a2a8ded-b9a1-480c-876d-55ff065879d6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9b87c9b6-89fc-4105-b10d-cf5c19b1bfa1"
        },
        "item": {
          "id": "399bac06-f961-446a-95db-23d95ac45251",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "06c84ec4-fae9-4a8f-b053-7f960deee9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1440,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399bac06-f961-446a-95db-23d95ac45251",
        "cursor": {
          "ref": "6a2a8ded-b9a1-480c-876d-55ff065879d6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9b87c9b6-89fc-4105-b10d-cf5c19b1bfa1"
        },
        "item": {
          "id": "399bac06-f961-446a-95db-23d95ac45251",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "06c84ec4-fae9-4a8f-b053-7f960deee9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1440,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3eb14a-0bbd-4a22-8d30-3485509e4b3d",
        "cursor": {
          "ref": "1af8427c-6963-4bc2-a897-afcda0cc640e",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "305698c0-197d-41ca-8d69-cd3db6cced10"
        },
        "item": {
          "id": "fe3eb14a-0bbd-4a22-8d30-3485509e4b3d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ff234718-ae35-442d-ac08-9415f70789ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db7e56c-4c4c-402c-b682-912b9c5f7ea3",
        "cursor": {
          "ref": "393bb349-8103-40d6-a511-744c7de33a5f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "76f42e31-0704-458f-aca8-c2093cc34232"
        },
        "item": {
          "id": "6db7e56c-4c4c-402c-b682-912b9c5f7ea3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9e5f39a3-0172-4e93-8e9f-61c6e65e6be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b4281e-eeff-40b5-a5dc-98d5e551bbfd",
        "cursor": {
          "ref": "edd5a9a4-433c-4000-81e4-2880a5ee5054",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "80a70728-0a13-47b5-bd9a-eb7c59678726"
        },
        "item": {
          "id": "a6b4281e-eeff-40b5-a5dc-98d5e551bbfd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "35ae5ce2-6d3f-49f5-9d78-899b77f393d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5787a2d-c894-416b-97d4-79e4b273249f",
        "cursor": {
          "ref": "f372d65f-4fa3-4845-9ac1-cfe51089efcd",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "79be2812-0429-481a-8925-efff750369ae"
        },
        "item": {
          "id": "a5787a2d-c894-416b-97d4-79e4b273249f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "424268a6-06f7-4b03-bbf6-b582c7e76878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34891d3c-f149-4fc4-9c29-a847e4a12616",
        "cursor": {
          "ref": "53598437-544d-431b-be25-740c0c0ca24c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a6da44bd-479d-4e06-84d1-b96a59d17b21"
        },
        "item": {
          "id": "34891d3c-f149-4fc4-9c29-a847e4a12616",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "aef62eef-0afb-4c67-9030-8c1409d65d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb7a3ea-7cc9-4205-b0d0-942a97fb27bf",
        "cursor": {
          "ref": "9d0d7b6c-4fe4-4eb2-8de8-a1d7e50a190b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "74abda85-b1dd-4161-9fdc-0652af46d43e"
        },
        "item": {
          "id": "7cb7a3ea-7cc9-4205-b0d0-942a97fb27bf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3f92a726-63c7-4857-9ad1-e6451dd96ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448b2566-b280-4819-8ac1-b46fda4b3168",
        "cursor": {
          "ref": "fb7f10be-5546-44c6-9531-65ad7cd32871",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4ef90d0b-ff80-4915-8031-92ba1fea4fb2"
        },
        "item": {
          "id": "448b2566-b280-4819-8ac1-b46fda4b3168",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "74d45e31-b4b7-461a-8186-36d11818f37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893e9765-a4f1-4132-959d-5718a34e57b3",
        "cursor": {
          "ref": "6f9de195-bd86-4b6e-ad7c-3c7c21d5d41b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1ffa581a-687b-4dae-bdca-3aea4b645cca"
        },
        "item": {
          "id": "893e9765-a4f1-4132-959d-5718a34e57b3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e7cdb513-d8b9-4175-b55c-f9e4e9395e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f7d2e0-d099-4753-802c-2c6e5bc2ce30",
        "cursor": {
          "ref": "014b563c-92f8-4990-be77-d968a7bf67cb",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "58da5c1c-8b74-4653-a85a-bbc365fdc585"
        },
        "item": {
          "id": "86f7d2e0-d099-4753-802c-2c6e5bc2ce30",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f8ee13f6-0e52-4f56-8e59-35db1483e891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a596ab42-ecde-4925-ab9c-7659d8a6ade7",
        "cursor": {
          "ref": "ca646106-dec5-4520-85a7-e6513272376d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9f8c0745-95ec-4572-85ad-83f8c3af280a"
        },
        "item": {
          "id": "a596ab42-ecde-4925-ab9c-7659d8a6ade7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9bf22894-6e81-4f76-988a-cda72d7d1368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fab14d-0b89-4f24-a13f-926737efe723",
        "cursor": {
          "ref": "7fdb975f-aead-4a54-8cb7-02bfcf3008d8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c98bfb86-c123-436d-a1f9-97fa6c6cfa04"
        },
        "item": {
          "id": "e5fab14d-0b89-4f24-a13f-926737efe723",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bd274797-20bc-4b0b-ae15-aa27af0ee97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce56d41-0485-434d-aa06-fc133f580b1a",
        "cursor": {
          "ref": "c52abecb-4fc8-4de6-a43f-c0e105624dff",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ce5c26f4-ce2d-4b8c-97b5-8d64be9d1418"
        },
        "item": {
          "id": "0ce56d41-0485-434d-aa06-fc133f580b1a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5025140d-e2ae-46d2-8807-9bceff9b2d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b61e76-2f2c-42e9-aa17-b867d391757f",
        "cursor": {
          "ref": "85b798c1-35d3-4777-9de3-de39745cfcbd",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1ffad7f0-4eb4-4f70-8f6c-e194c1fdb789"
        },
        "item": {
          "id": "a2b61e76-2f2c-42e9-aa17-b867d391757f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "26b30a0d-24c7-4118-838d-ae93e0fc8512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc7d870-ad5f-406e-b5e1-4868a437719f",
        "cursor": {
          "ref": "f8b1a121-db09-4410-b419-879ec6de405b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7e3a4e58-1412-4486-bd5a-698b6bc591a3"
        },
        "item": {
          "id": "ecc7d870-ad5f-406e-b5e1-4868a437719f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "acfa991c-ca73-4710-8f93-9a62e2729726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e76631-e410-4d28-b148-bc42ed29d9d1",
        "cursor": {
          "ref": "b802bb8a-e229-4675-9ede-e1ca80c57a60",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d1d50e35-4ab5-46d1-b6ae-17890373eeff"
        },
        "item": {
          "id": "02e76631-e410-4d28-b148-bc42ed29d9d1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "245341f2-0ddc-4456-99d3-2b25339fb80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45df890c-c9ba-40ba-9c5c-f4ee0d075ead",
        "cursor": {
          "ref": "e4b1e8cb-5a25-4033-808a-ce2b2e7f7013",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "dc121869-ff85-4301-bb11-7d1ac331c150"
        },
        "item": {
          "id": "45df890c-c9ba-40ba-9c5c-f4ee0d075ead",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7a879e70-235f-4e73-b95d-343789746c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac37937-1a9b-408e-8d3e-1935bf01302b",
        "cursor": {
          "ref": "25f6e737-1d1d-4b2d-82c9-52a30e5cd876",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fd174897-f012-40ec-93ab-ec8416e8e723"
        },
        "item": {
          "id": "1ac37937-1a9b-408e-8d3e-1935bf01302b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b375c6fc-0d6b-4dbd-bb34-3954c290c285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96a8295-bcbf-42bf-b7f0-d71daa6140de",
        "cursor": {
          "ref": "052c28b3-f3b2-4ddb-94b6-853e0304a9ac",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7c4fa6ea-573b-42bd-9a6b-02c86a18d9dc"
        },
        "item": {
          "id": "f96a8295-bcbf-42bf-b7f0-d71daa6140de",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "20013a08-1ce6-4320-ad1f-ce9bd8968fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821600ee-8cbe-4e70-af90-ea7eb49c5c8d",
        "cursor": {
          "ref": "66207e09-42f3-4552-8634-7085557b2185",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4b9c143c-063b-44e7-9f8c-3831bb600769"
        },
        "item": {
          "id": "821600ee-8cbe-4e70-af90-ea7eb49c5c8d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fd1e472e-386d-42a7-85e3-e061ebd2cd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8942a79c-6d46-47ca-b1cf-3bd13669278e",
        "cursor": {
          "ref": "dd519fa8-d8eb-4e21-ae3d-58d00c242e52",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3e5332b2-b505-4c19-9b67-289723ac1dbd"
        },
        "item": {
          "id": "8942a79c-6d46-47ca-b1cf-3bd13669278e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "690be2bb-9b32-49ce-a8aa-95471a1ede53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3590b2b2-f660-4248-875c-865693a54765",
        "cursor": {
          "ref": "e25c814f-7614-481b-9a87-52dcaf638843",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "236f6415-4f57-45ff-ae95-6de22f993c25"
        },
        "item": {
          "id": "3590b2b2-f660-4248-875c-865693a54765",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f4b36839-d06b-4087-984c-8d048f29e4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d791aeb-440c-4b96-80df-40a172d318d8",
        "cursor": {
          "ref": "a3a53580-e7a1-45af-9e5e-8d5a9549355d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "498a7456-8c6d-448e-be0a-e0027f37e9de"
        },
        "item": {
          "id": "2d791aeb-440c-4b96-80df-40a172d318d8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3423fd6b-fbf1-48ed-a00b-39d9cf79116a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7e2af1-b000-4e23-808c-c7992991522c",
        "cursor": {
          "ref": "86da2fe6-32df-4eb0-a491-b983ae6119b7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "25d808c4-f9f9-4a28-8fcc-86fc3c8b56ff"
        },
        "item": {
          "id": "ae7e2af1-b000-4e23-808c-c7992991522c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3ea91e6d-ac1b-4363-a13c-18f2ea1343b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162c3493-4dc3-410a-91c4-6573d90cd477",
        "cursor": {
          "ref": "92476273-c1a5-4b79-8f18-70c1b007ad5c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "af9ec3b2-b3c5-49fe-a696-25f10722c7b1"
        },
        "item": {
          "id": "162c3493-4dc3-410a-91c4-6573d90cd477",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "99e9168b-3e94-4d10-9f25-41da103f584f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81213c71-1b30-49c6-9be5-79a563957858",
        "cursor": {
          "ref": "72cca4f6-bc52-4d42-b005-2444cf562734",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bbe1fd4c-1e7e-465c-85ca-11eb4b401595"
        },
        "item": {
          "id": "81213c71-1b30-49c6-9be5-79a563957858",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "29dd32f3-378f-4538-b692-a5d289457050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06bd712-556b-4c60-8e1c-0afbc44b0a73",
        "cursor": {
          "ref": "15724a5e-38d2-45bf-a25c-894fa9aab4ba",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "eb2c137c-b799-4b7b-ac46-0077e1ae701d"
        },
        "item": {
          "id": "d06bd712-556b-4c60-8e1c-0afbc44b0a73",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d67a3fb8-8ed5-471f-b411-a50192de5653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f997291c-212f-4a46-ad44-3a0a56a4b444",
        "cursor": {
          "ref": "3d0b1b75-173c-47c8-afc5-228e0b6fddd5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dc9940bf-cde9-4058-8a2f-e73791ae3da4"
        },
        "item": {
          "id": "f997291c-212f-4a46-ad44-3a0a56a4b444",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "edbb2d0a-b2d3-49d1-91d6-88c835b4a602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0bd3e1-2e0b-419d-9557-37116f5fc0b5",
        "cursor": {
          "ref": "9d9d8841-4ed5-427e-b44e-ed27d1911289",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "20558fb7-99b5-4cf8-b45e-39d35bc8c4d9"
        },
        "item": {
          "id": "dd0bd3e1-2e0b-419d-9557-37116f5fc0b5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a828c833-e5db-4e50-8b22-a73661a7851e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91232a42-2f09-440a-a92e-5344fd8d24a4",
        "cursor": {
          "ref": "f734372a-146a-4c06-b979-7e2faeef6e61",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a31b40df-5640-4147-8828-84f6292ce37c"
        },
        "item": {
          "id": "91232a42-2f09-440a-a92e-5344fd8d24a4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "41ee7da9-b23c-4c7b-b412-aed2cfd2bbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3514bf00-266b-4f15-a9b3-302c846163f8",
        "cursor": {
          "ref": "49dfad41-984c-4792-93ae-1f3687fea212",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "680d89a8-9535-416f-b187-7f92f188e4a9"
        },
        "item": {
          "id": "3514bf00-266b-4f15-a9b3-302c846163f8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "52e6dcc4-8b54-4511-8438-2ca54728faf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a8576b-6b38-4495-be29-a09c36e19ff5",
        "cursor": {
          "ref": "d0ebacdb-03e3-4c45-bde2-d998a0e9dd20",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b3b1ce45-4f8a-43ae-b295-c664bf0506a6"
        },
        "item": {
          "id": "b2a8576b-6b38-4495-be29-a09c36e19ff5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "31eedd94-6ff3-4586-8756-3643b66be88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27202fda-387f-4a42-92ca-d9425203819b",
        "cursor": {
          "ref": "29b83e84-1444-4e74-9e67-7e8ea38ca87d",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "85a4e554-80ab-430c-8d8c-d2b2ee9960f2"
        },
        "item": {
          "id": "27202fda-387f-4a42-92ca-d9425203819b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8eb65562-518f-46c7-beb1-3f424e3f70db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b954594d-3648-4bc0-bf94-144f7e49ee3a",
        "cursor": {
          "ref": "8516fbcd-d53a-40fb-bcbf-45e77cb32654",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bde10697-f88b-402a-88f0-ef95be96d41b"
        },
        "item": {
          "id": "b954594d-3648-4bc0-bf94-144f7e49ee3a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "de98a123-7c05-4ece-ba1b-16056f51b4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0644d15-51b8-4a32-9c05-7ff33fb0072d",
        "cursor": {
          "ref": "e7d96863-e2f2-4061-b3c6-379a0a061c38",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b8103a78-9e31-4124-969d-8ba8858330b3"
        },
        "item": {
          "id": "b0644d15-51b8-4a32-9c05-7ff33fb0072d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "22e0fc88-bfbc-464b-8cf4-93083c154b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3bcf65-7fe9-4b88-90d2-0cced69062d5",
        "cursor": {
          "ref": "e295d49e-3548-4ab5-afa5-9e4bee8cb87b",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6d15c29a-c696-4a88-9f55-e17ecd9b55ab"
        },
        "item": {
          "id": "4a3bcf65-7fe9-4b88-90d2-0cced69062d5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "608e279c-a732-4b6b-b199-40488e380bdf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 638,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c40e28-d012-47bf-8beb-44d4688d6ec7",
        "cursor": {
          "ref": "78a2f767-1516-4b44-8363-630dced4c067",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "229e578c-3fdb-4359-af4a-70d57f4f9aec"
        },
        "item": {
          "id": "73c40e28-d012-47bf-8beb-44d4688d6ec7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bd811e22-8ec0-4eb2-b3da-e0de2d4823f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b8ce21-a508-4292-b47d-37438736fab9",
        "cursor": {
          "ref": "fc7baad1-143e-40fd-b2ca-8253b034b46e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "562262e3-297f-4d97-a845-b15afa56160a"
        },
        "item": {
          "id": "73b8ce21-a508-4292-b47d-37438736fab9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4bd68cdc-1b13-4900-8f15-ad34668879a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94c6b2d-4858-4aa8-b72e-48125376b274",
        "cursor": {
          "ref": "393a64aa-6427-412b-abda-ce21025aea7a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3a131ec1-b36e-4950-9ada-6278ce890e3e"
        },
        "item": {
          "id": "c94c6b2d-4858-4aa8-b72e-48125376b274",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1e37a6a5-f421-41e3-a943-4f402b79ecee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e81d20f-13ea-4bb1-9c73-69c593fa2cad",
        "cursor": {
          "ref": "9c8ff083-b652-4bad-9a72-0e56d2b420ff",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "10a51b57-7153-431e-99db-8a0b59cb05c4"
        },
        "item": {
          "id": "2e81d20f-13ea-4bb1-9c73-69c593fa2cad",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "44bae596-f701-4d0a-b0b5-6ca2ae1999c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b21945-81ae-4668-ab7c-f8bacb2f41fa",
        "cursor": {
          "ref": "530ba320-1eb2-4d57-a837-457e0a6adb10",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "01f83605-1cad-4609-90f2-883a97c54430"
        },
        "item": {
          "id": "d6b21945-81ae-4668-ab7c-f8bacb2f41fa",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "83e0f19f-da78-46a7-babf-af7dff30a9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5083976-b367-4a4b-822c-2f50a988d186",
        "cursor": {
          "ref": "e954c252-2e2c-48ec-b010-7eb926d3c6fb",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2797c3ec-7c38-45e9-8ed4-d9428f615b35"
        },
        "item": {
          "id": "e5083976-b367-4a4b-822c-2f50a988d186",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9ae427b6-a24c-4263-ba97-e11d0bfa96ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5691892-b9ce-42b8-bc27-12990bdf381b",
        "cursor": {
          "ref": "9e8d5b27-aadd-4026-a872-1dccf48f8505",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "39d8f662-58b7-4ecb-8bac-6462ac7a8128"
        },
        "item": {
          "id": "a5691892-b9ce-42b8-bc27-12990bdf381b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "eb565c4b-457a-49ed-bd4a-22cd5989e023",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 608,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34ea545-d919-462e-8480-f8128fbfe276",
        "cursor": {
          "ref": "9738a26f-a6df-4024-a881-f98b5250014d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5319e73c-d6b0-4690-a47a-a41b33e1e26b"
        },
        "item": {
          "id": "a34ea545-d919-462e-8480-f8128fbfe276",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "eae515e9-9105-4b9e-b010-f8f2fd686cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42552e29-ac54-40a2-a6a6-7bae8d9513d4",
        "cursor": {
          "ref": "ea158a1f-da4e-46fc-857c-078809eb197d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0abfc36c-b2a1-43e0-b607-eeccc944809d"
        },
        "item": {
          "id": "42552e29-ac54-40a2-a6a6-7bae8d9513d4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6034d4e4-b835-4074-a184-9e1d074c7585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482ad941-d3a9-4e60-bf10-046f3374644f",
        "cursor": {
          "ref": "3b888683-3802-4514-85ad-03eb10715ae8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "16b8c01f-b21b-4b78-a120-2227df0aa3a0"
        },
        "item": {
          "id": "482ad941-d3a9-4e60-bf10-046f3374644f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f7f55044-eefe-46c3-9802-be7740b6e674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfec660-9f1e-46f4-bdd0-a3e33460eedb",
        "cursor": {
          "ref": "8613701a-5387-4b82-a12d-7b62c37da4cb",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7697844d-93f5-49bf-bdc8-4cdee7463bd1"
        },
        "item": {
          "id": "acfec660-9f1e-46f4-bdd0-a3e33460eedb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fec47909-b88f-46f7-a7bf-7e3b3c79a854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16dab47-345e-4e70-a5fd-5451c2f0944a",
        "cursor": {
          "ref": "8bd97f75-96ae-43d5-8745-cf4d7e331b94",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8e58be47-a5c9-4f3e-81b4-2a6177c1bf52"
        },
        "item": {
          "id": "b16dab47-345e-4e70-a5fd-5451c2f0944a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "68c10196-b0f6-44e5-87a1-0c7a1bdb9d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd7f4c4-bccb-46ca-a717-3e981ae14d20",
        "cursor": {
          "ref": "aac964e5-2ac4-4a37-812a-b320acb1ed3e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0231082b-b88a-46c0-bcfd-3cbb0ebe036e"
        },
        "item": {
          "id": "fdd7f4c4-bccb-46ca-a717-3e981ae14d20",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "93ac1f3a-e911-417f-9739-cb2f993324b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddfba51-7b36-49fe-823e-5a5964e99508",
        "cursor": {
          "ref": "e7904409-40bc-4018-8789-2d1cf14b1d34",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "081e1d58-8c85-422c-b492-f5bca1e960fa"
        },
        "item": {
          "id": "6ddfba51-7b36-49fe-823e-5a5964e99508",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4370695c-0934-460e-8647-7ba201bab6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6514a77e-344c-4f89-9260-45ad1b1e9d78",
        "cursor": {
          "ref": "3a98e468-945c-402b-a75b-c9485e6bdaa6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "af14c278-9121-40cd-9569-9c5fa17385af"
        },
        "item": {
          "id": "6514a77e-344c-4f89-9260-45ad1b1e9d78",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c980fcbd-47d8-41b4-a8f4-637477edf590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a210299c-b48e-4be8-a6b0-95b6596f54d6",
        "cursor": {
          "ref": "ba949aaa-e48f-40a5-ab35-d6410a0219dc",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0ffaf588-5ce0-4474-a692-535bb09be27d"
        },
        "item": {
          "id": "a210299c-b48e-4be8-a6b0-95b6596f54d6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "622ad272-4353-439b-9532-688ad023868c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba833c16-b9f0-4da3-895d-537364e1c79d",
        "cursor": {
          "ref": "dac6f622-5338-4330-80a1-2aec1c0aa30e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d87560b0-c350-47d4-9894-dc99d1e9a8c0"
        },
        "item": {
          "id": "ba833c16-b9f0-4da3-895d-537364e1c79d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fb85d494-0d7a-4144-9b36-9e5782d66dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd744ea7-6896-4de7-af7a-18e99463621b",
        "cursor": {
          "ref": "6ffa43d3-6841-4d95-bdb1-f926b09d55ea",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bb15d5f6-1830-406c-a1c7-b9069a4c4bdc"
        },
        "item": {
          "id": "dd744ea7-6896-4de7-af7a-18e99463621b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d41c7c07-9981-49d6-b8ad-9b830ae917c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669c225d-edb2-4218-80fa-4dc9ab77ce28",
        "cursor": {
          "ref": "0caf3edb-2fd0-45ee-a210-921cb71f2d14",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b13a2b73-d60a-46cd-9dd1-4a29537178a3"
        },
        "item": {
          "id": "669c225d-edb2-4218-80fa-4dc9ab77ce28",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0ba288db-3a87-4e53-8a25-e76837573d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd16b4c-8754-4fbd-958d-b6500cd634b1",
        "cursor": {
          "ref": "31b5da04-c163-48d1-b4a7-7e8f07da03e3",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "93b846b1-20fe-4b14-9f6f-c88e6f03a986"
        },
        "item": {
          "id": "fbd16b4c-8754-4fbd-958d-b6500cd634b1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8468e569-bc42-43db-b25e-fcc5dafef758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3476c9dd-decb-4873-a6fb-029b4a24e7c9",
        "cursor": {
          "ref": "1f937dc8-c7c1-49c2-918f-01a64240a224",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a5b2e9d8-da85-4a5e-8384-3f07b0403972"
        },
        "item": {
          "id": "3476c9dd-decb-4873-a6fb-029b4a24e7c9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "607fb0a2-0322-4848-a62b-90d99088e697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca0aec2-fe7e-4fa2-8186-de0bd9dc3e7f",
        "cursor": {
          "ref": "7ee67c70-9799-4645-a427-49bb044c877d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ddf4e81b-ed07-4808-9ff2-739a4ce3ba91"
        },
        "item": {
          "id": "7ca0aec2-fe7e-4fa2-8186-de0bd9dc3e7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "16fe4ecd-3961-4484-a55c-8a05f2aed62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204e6f2e-d17a-42b3-9d3c-8dc898e96ccf",
        "cursor": {
          "ref": "cedecd87-7dff-42fc-b7b3-546bfbfc226d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "277394bc-44b1-4dca-be1d-cbb1092ec051"
        },
        "item": {
          "id": "204e6f2e-d17a-42b3-9d3c-8dc898e96ccf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9bff19b6-81fa-4707-b9af-ead2724c1701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f746615b-2465-434b-bdd4-4ae92e3d183d",
        "cursor": {
          "ref": "f28dddb3-08b5-40b5-95f6-e35b2b667be1",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ab5ec95e-9845-4f2c-846e-2b7699bcd8e9"
        },
        "item": {
          "id": "f746615b-2465-434b-bdd4-4ae92e3d183d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0a2148cf-1508-4223-aa40-0ff0749c6efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85210c5-4794-436c-96d2-615efe33b556",
        "cursor": {
          "ref": "2d69cf37-55bb-431c-a32e-0089713054b9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6c631e30-595d-4349-b931-b966227391f2"
        },
        "item": {
          "id": "a85210c5-4794-436c-96d2-615efe33b556",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "eec6187b-88a3-49e9-905a-e3885b4f23c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e097f96c-1772-42cf-a505-e7821529f4e9",
        "cursor": {
          "ref": "3cded1ab-c2f1-47af-b297-b92909f41e24",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "02907108-cfbe-4cd5-a494-392966eaf18c"
        },
        "item": {
          "id": "e097f96c-1772-42cf-a505-e7821529f4e9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "aa3a0d21-2856-4881-a846-439500ae60e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d5921a-ad58-4ef1-af6b-2b8e3afd1675",
        "cursor": {
          "ref": "5a2d37c7-4cbc-4a7d-8cf6-88d190aef539",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "18b78f03-bd58-4209-ad4c-ae1746cc12ef"
        },
        "item": {
          "id": "d1d5921a-ad58-4ef1-af6b-2b8e3afd1675",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8911d0ce-ecae-4047-9d2d-8dbb5f92479f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c925546-739c-47f4-b841-5248ea2f0266",
        "cursor": {
          "ref": "11a9b617-eac3-45ff-872b-21f7f7cd7e95",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2effdee5-719c-4f3f-93cd-e57997010881"
        },
        "item": {
          "id": "2c925546-739c-47f4-b841-5248ea2f0266",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2b263c2f-4d8c-44ac-9989-dfd5637afe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddfd978-ea2c-4a64-abef-100b00bda640",
        "cursor": {
          "ref": "206cfdfd-530b-4c5c-b855-8d6be81200d3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6f9e3099-8f88-42d0-aa2c-58d0ea5a0c1f"
        },
        "item": {
          "id": "3ddfd978-ea2c-4a64-abef-100b00bda640",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3c9b1366-f5c9-49a5-a404-c82cebd562a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33444708-d9c0-4db1-ac28-10092bb7e9bc",
        "cursor": {
          "ref": "8dbe508d-2dff-48c4-9476-5306978a0fe4",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "88479da3-d1f2-47ac-bac5-9a10fdd78318"
        },
        "item": {
          "id": "33444708-d9c0-4db1-ac28-10092bb7e9bc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5a225b98-44c9-4c34-98e0-b64acaa4f791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83db9e17-228a-4441-bc9a-ba00e0050a3c",
        "cursor": {
          "ref": "deec10b0-b9a7-4453-a75d-4712b0be208d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "53deb661-4c98-4de5-b91c-5d0e70a6a81a"
        },
        "item": {
          "id": "83db9e17-228a-4441-bc9a-ba00e0050a3c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bdb083c9-2c41-4f4d-89ec-a0703b3ecf93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce630c86-a782-49fd-bb8b-b4999d648979",
        "cursor": {
          "ref": "e3adf1b8-8523-45b3-92ae-8dec3af0549f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1a20e73c-e428-478f-888e-9c5156372448"
        },
        "item": {
          "id": "ce630c86-a782-49fd-bb8b-b4999d648979",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "057e3d69-89c6-49d7-91ce-ba73a69ef615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e107b770-8666-4e50-a355-8eda0a2b9c9f",
        "cursor": {
          "ref": "7bbb2f50-5695-41a3-8cbc-bf42bcb86b33",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "34aa8338-cb60-4207-8f55-43c08050d890"
        },
        "item": {
          "id": "e107b770-8666-4e50-a355-8eda0a2b9c9f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "688c4a27-30e8-4a04-9c66-3bc5595ff40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e9ad4e-3ac6-4c55-ba73-b68aa7d6b75c",
        "cursor": {
          "ref": "50afe3f2-9ea9-42be-85e4-bc311b5775d2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6a247a75-bff1-4ea8-beda-c866eec031e3"
        },
        "item": {
          "id": "34e9ad4e-3ac6-4c55-ba73-b68aa7d6b75c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c59c4b0e-0e9e-404d-9384-972acb76dd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2de9c16-0aca-427f-9b78-ddd3450bb7ea",
        "cursor": {
          "ref": "86dccdab-59d3-47d3-8e43-c8bcceb472ab",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dae8c4bc-7c24-4cb4-9c99-e04588b75542"
        },
        "item": {
          "id": "e2de9c16-0aca-427f-9b78-ddd3450bb7ea",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "45fb66f2-0da6-4e20-a84d-ec35ad9b6711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62058d5-5653-4db4-ab9f-57c081f2f6f6",
        "cursor": {
          "ref": "1a678d1e-c043-42e9-93d2-4cf2647eaaf1",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5e319c47-4675-4364-9167-429fdbe3b9d2"
        },
        "item": {
          "id": "b62058d5-5653-4db4-ab9f-57c081f2f6f6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a549051c-f8dc-46ff-a557-f9afe94e2139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba39fc2-3afc-4bc7-8af7-8fd148680f68",
        "cursor": {
          "ref": "135dd41c-2665-467b-9528-a99dd1a09397",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6cb96570-ddf6-4210-a42d-4d6335b36be5"
        },
        "item": {
          "id": "eba39fc2-3afc-4bc7-8af7-8fd148680f68",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "83d3e74c-054c-4c00-a365-e9f9fe536d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7913f6f7-2231-4eb4-824f-d9c2781525dc",
        "cursor": {
          "ref": "997410d2-4d20-45f3-bf30-d2189c27d6e3",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9c102384-b1be-4587-b67c-30c08244b51e"
        },
        "item": {
          "id": "7913f6f7-2231-4eb4-824f-d9c2781525dc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3ba7fd75-adf4-4a0e-af2e-f766a028b74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ad5eb4-d9a9-4b69-a115-f3c71d542ca6",
        "cursor": {
          "ref": "e1266061-aaef-4bd8-b0a2-7aefa25cd758",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "797a2045-7d38-4860-be61-56eae7be649a"
        },
        "item": {
          "id": "f5ad5eb4-d9a9-4b69-a115-f3c71d542ca6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a2176a88-051f-4a50-947d-6ca69c46ecac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a00a1d7-2784-4ad6-b3e7-52b0bd5b0138",
        "cursor": {
          "ref": "e532d176-e695-4b02-b2f1-f9b2a585b040",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ad0f971c-e79a-4785-a2da-c90ab877f5ed"
        },
        "item": {
          "id": "4a00a1d7-2784-4ad6-b3e7-52b0bd5b0138",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "04846f8f-c0db-4525-aa13-a229002db970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6f97a5-d15e-4b6d-8e48-1c5a9f85e72b",
        "cursor": {
          "ref": "0e8fce8f-e514-44d2-b5e9-c961d32565c8",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ca64ebcf-e87b-4605-ace3-e0a831a3131c"
        },
        "item": {
          "id": "0b6f97a5-d15e-4b6d-8e48-1c5a9f85e72b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e90f49ac-f6f6-423c-8b2f-86f4109637f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64424e02-1c31-4e59-b5fc-f54e0a239ba8",
        "cursor": {
          "ref": "08367302-1865-47f3-84a0-4b6af0c518a5",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ae84fea5-97e7-4a15-8a18-35c0c360972b"
        },
        "item": {
          "id": "64424e02-1c31-4e59-b5fc-f54e0a239ba8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d829625a-4006-46b8-8cc2-4b254e62151c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdcec37-a36d-46e9-9ac5-93458e0f7acb",
        "cursor": {
          "ref": "78b083b5-f654-44aa-b2e4-34587d9cd729",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e9965b36-53b2-4449-b1c6-91579cf7d25c"
        },
        "item": {
          "id": "6fdcec37-a36d-46e9-9ac5-93458e0f7acb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bf278162-30b6-4634-8642-ca14698993a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e708eb73-6ab3-4ca1-b5be-337ae511086a",
        "cursor": {
          "ref": "00ad4dbd-ca63-4244-8edb-090224ada7ce",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0bef8b37-318d-49f5-84c4-d59d5bac0826"
        },
        "item": {
          "id": "e708eb73-6ab3-4ca1-b5be-337ae511086a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0ba931ec-9a89-4de0-8ae5-8df494370b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0f2621-cf03-406b-a345-ec2b1173d121",
        "cursor": {
          "ref": "9b0df1b6-14de-414f-81b5-7afc81dbaa0e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0289d0fc-2bca-4ea4-8eae-12afa369cc7c"
        },
        "item": {
          "id": "7c0f2621-cf03-406b-a345-ec2b1173d121",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0b424b8c-9bb7-4cc8-8f58-86f3101262d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6f95e4-45ec-4b7f-b1dc-8fc826681dc6",
        "cursor": {
          "ref": "3291304b-055a-4cdb-8a35-93147d08e6f9",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c62891d2-e2ac-49bf-b89d-1b47a7826d2a"
        },
        "item": {
          "id": "bd6f95e4-45ec-4b7f-b1dc-8fc826681dc6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a29bffde-2b9c-416b-a43d-3265138efe8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc8dd4f-1529-46f7-b74a-3e0918bcea3c",
        "cursor": {
          "ref": "da0f73e8-da64-413d-bdf9-82c03886d226",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "da7b3912-4f73-4f67-a182-0f5d69ebab26"
        },
        "item": {
          "id": "1cc8dd4f-1529-46f7-b74a-3e0918bcea3c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f7e3eb21-cfd1-4dc0-a188-38c7d972f526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1044,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a13d2a9-aa68-4989-8bf0-227466c5bd6b",
        "cursor": {
          "ref": "2977cce3-9d1c-4da5-91f5-88f2e55c48f4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2095120e-b6f2-46c1-a206-65dd9be71c49"
        },
        "item": {
          "id": "2a13d2a9-aa68-4989-8bf0-227466c5bd6b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6b01210a-16e8-40c8-a8a9-7afd3c2893b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c44de94-70c0-4779-a524-0236117f5645",
        "cursor": {
          "ref": "7599b4e2-fb52-4368-8a8a-29cb407e8e9a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "492305bf-9692-418d-a369-9d592df4248b"
        },
        "item": {
          "id": "1c44de94-70c0-4779-a524-0236117f5645",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b1fb0bcc-b343-43f6-aeed-d65a2130cfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748f00bc-171a-4f3b-ada3-90125e3f1bb2",
        "cursor": {
          "ref": "43bafde2-fce5-4c96-ada0-345b9630f775",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d193cf5c-e7f8-4460-b3a7-64157af147b5"
        },
        "item": {
          "id": "748f00bc-171a-4f3b-ada3-90125e3f1bb2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "23ebeea2-edfd-48bc-ba87-5469c857885a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a65fc5f-e743-4427-96f7-e37c7e2fce56",
        "cursor": {
          "ref": "36c6cdd2-b30b-454a-9abf-cadf3fca0efa",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "44d87636-b608-487b-a9d1-24cbffb21783"
        },
        "item": {
          "id": "6a65fc5f-e743-4427-96f7-e37c7e2fce56",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6cbc349a-4b0b-41dc-821f-539547085968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bca10b8-f338-446b-9b8b-33fd621b5ead",
        "cursor": {
          "ref": "06a58f9c-d35d-43af-ad3f-159c9272470e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5a377735-040c-41d6-965a-87a1bc6d511a"
        },
        "item": {
          "id": "4bca10b8-f338-446b-9b8b-33fd621b5ead",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "32628860-504b-4c34-9a49-17e78a4e2154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82635017-1334-42c5-ae11-195845600490",
        "cursor": {
          "ref": "2465d449-44da-4cbd-8cfc-6687a2184952",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7633a8dc-6c56-42f4-a79f-9a75888340a6"
        },
        "item": {
          "id": "82635017-1334-42c5-ae11-195845600490",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d93899ed-432f-47ca-8632-75aa4de0d682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f2af5c-1974-4488-a8f3-badb68495a7a",
        "cursor": {
          "ref": "2762f4f9-3d91-40f7-a1a3-721f7a1c548e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "57492b37-e464-4080-8577-e02039c06858"
        },
        "item": {
          "id": "29f2af5c-1974-4488-a8f3-badb68495a7a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2dcee46c-5772-4cce-bbea-80193111d7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7237b3-6ac9-472a-9767-7d39f3758a95",
        "cursor": {
          "ref": "49a3ed81-ae2b-49c3-8dc5-311f2bcbeb9e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "13b290c7-b221-431a-aa51-11ec594c4cfe"
        },
        "item": {
          "id": "ad7237b3-6ac9-472a-9767-7d39f3758a95",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1db12d8a-dca1-495c-a330-8bacd8df19a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb017cdc-e14f-49a1-bff3-b258586f077a",
        "cursor": {
          "ref": "97ca52ac-112c-43dc-a026-443bf18f94d3",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "186a03dc-efbd-4884-ae06-3652f42f77ef"
        },
        "item": {
          "id": "bb017cdc-e14f-49a1-bff3-b258586f077a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9ba88e83-0e42-4c1b-908f-19e0e33a56af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff7c0d0-4038-4add-95f2-781ba84337ba",
        "cursor": {
          "ref": "c885c90a-05e2-4b4c-89ac-1b063281558a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "214e3578-6609-4b65-92c0-18e6c19191cf"
        },
        "item": {
          "id": "2ff7c0d0-4038-4add-95f2-781ba84337ba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "087f2b74-81fe-497c-9e9b-18c04803bebe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf1036d-9714-4fce-83ee-5c94a7abe5cf",
        "cursor": {
          "ref": "5cd76abd-edbf-4d2c-8049-536bbb473b46",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "411f6244-b417-4209-8015-1f5d4a8b409a"
        },
        "item": {
          "id": "aaf1036d-9714-4fce-83ee-5c94a7abe5cf",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "8c88b834-c539-40a8-a67f-8cad4237fc13",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 910,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf332e27-f086-45a7-906b-f4a9579d046a",
        "cursor": {
          "ref": "801d2859-9aab-48b4-8674-da66bdfd9e48",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e5297a7b-5ffb-497f-bf48-2dff5674084c"
        },
        "item": {
          "id": "bf332e27-f086-45a7-906b-f4a9579d046a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "170b9d19-0365-408a-b09c-2ff3781a4cd4",
          "status": "Created",
          "code": 201,
          "responseTime": 6919,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3834a53-b299-4e0e-aaee-a2435951b7a9",
        "cursor": {
          "ref": "7d85198d-8909-4dac-9161-fcdb7c07cbc0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e88c91a5-a15f-4c32-9470-41a092b6a434"
        },
        "item": {
          "id": "b3834a53-b299-4e0e-aaee-a2435951b7a9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0ea87a71-3573-47a1-a664-f57800485c71",
          "status": "Created",
          "code": 201,
          "responseTime": 5241,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67d2a71-fb29-4412-a903-627b76c2e4c3",
        "cursor": {
          "ref": "a3f802bf-1a7a-4054-b4df-68a234a9db69",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c70e8b45-9eb4-4812-a7b5-abc820146ec2"
        },
        "item": {
          "id": "b67d2a71-fb29-4412-a903-627b76c2e4c3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ec278ea4-4153-48b4-aa9a-50a3696d398d",
          "status": "Created",
          "code": 201,
          "responseTime": 4607,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1e8c48-d3c0-4228-88a4-301077ed8fb1",
        "cursor": {
          "ref": "22114e4d-fd46-4b02-b384-2b6abad950b0",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7c66c8ff-f900-49d9-9502-3d2bc824711b"
        },
        "item": {
          "id": "5c1e8c48-d3c0-4228-88a4-301077ed8fb1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8f095983-21c6-443a-afcc-95fde888cd2b",
          "status": "Created",
          "code": 201,
          "responseTime": 4802,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "17aca678-b51d-43b3-b553-d9916e90d472",
        "cursor": {
          "ref": "d04383e9-026e-48a9-8879-910987d02d7d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "510d9060-65b4-4ab3-99fa-ef0e23e47ae5"
        },
        "item": {
          "id": "17aca678-b51d-43b3-b553-d9916e90d472",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "62610e5c-19b5-423f-9121-0e9fd7543483",
          "status": "Created",
          "code": 201,
          "responseTime": 4989,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "be638f66-9d77-480a-a9d3-fcbf43e42ece",
        "cursor": {
          "ref": "76059ff9-643c-43c9-85c0-e27a7a800fcf",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "40de3478-783c-43fe-9e82-987e41b64267"
        },
        "item": {
          "id": "be638f66-9d77-480a-a9d3-fcbf43e42ece",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8c213215-8b18-4502-8993-02fa1249b786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be638f66-9d77-480a-a9d3-fcbf43e42ece",
        "cursor": {
          "ref": "76059ff9-643c-43c9-85c0-e27a7a800fcf",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "40de3478-783c-43fe-9e82-987e41b64267"
        },
        "item": {
          "id": "be638f66-9d77-480a-a9d3-fcbf43e42ece",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8c213215-8b18-4502-8993-02fa1249b786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a287e0-8f8a-43d0-86bd-7a7c7a3f68f0",
        "cursor": {
          "ref": "09463a7e-6eef-40a8-9cc8-288df98b9057",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "150fed02-54ff-4d8b-844c-2fee5091afe1"
        },
        "item": {
          "id": "22a287e0-8f8a-43d0-86bd-7a7c7a3f68f0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "13ffce40-bbf4-4ee2-9794-0676f6e88698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07b9523-94c0-4187-aa99-65ab67267622",
        "cursor": {
          "ref": "de33c88e-957f-446c-ade3-5e513a1e71f0",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9b8bc8b3-4b6c-49d0-9b85-985794ae3c1c"
        },
        "item": {
          "id": "b07b9523-94c0-4187-aa99-65ab67267622",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7b768606-85cf-405f-b395-060e965ece08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b027ae4-3ef6-41d2-9dbf-8c94ef103ef2",
        "cursor": {
          "ref": "535e2fee-70ec-49a3-ab9f-cbcc570ef1ea",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f3c1a743-2623-4fa1-afb7-d0953efc1dd2"
        },
        "item": {
          "id": "5b027ae4-3ef6-41d2-9dbf-8c94ef103ef2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cfdfa05c-77a1-4898-aa54-0732fb1f1c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1f7a6a-7e5e-4f92-a712-27ce99d2f0c3",
        "cursor": {
          "ref": "ef732a75-f427-479f-9cab-608d5a012703",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c2b26812-50c8-44e9-8c2e-74917a838cc2"
        },
        "item": {
          "id": "1e1f7a6a-7e5e-4f92-a712-27ce99d2f0c3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "90629842-e9f2-4150-98e9-f1b2d87ca609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ff8953-9858-4871-be14-444bc2d03e17",
        "cursor": {
          "ref": "fbbbf865-795c-450a-99d7-9df24932e055",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fa9c78f0-1f4d-40dc-b6e0-8247c2b7aafc"
        },
        "item": {
          "id": "e8ff8953-9858-4871-be14-444bc2d03e17",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c4e1df24-b87c-46e5-87cd-5b6a8ce7b705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728fbbac-06c7-4d5d-9806-31a2e34268e6",
        "cursor": {
          "ref": "d9697ab0-c047-4640-a578-d9eb6c94e92e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2f152e3c-befd-4679-abce-636864d620b5"
        },
        "item": {
          "id": "728fbbac-06c7-4d5d-9806-31a2e34268e6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b2ea3d90-2c57-4d0f-bdb1-f186dc346e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6895fe28-93f9-4841-a4a6-d6a93ab04fb5",
        "cursor": {
          "ref": "a1cf1c19-4a82-454a-96fc-1ee96bbfff37",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ac12ba0e-7575-4497-9896-1a2b128ceb39"
        },
        "item": {
          "id": "6895fe28-93f9-4841-a4a6-d6a93ab04fb5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d686490d-01ef-4dd9-9323-d409b3989281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a83fc21-ac77-409f-934e-678b82138fe5",
        "cursor": {
          "ref": "76314eab-84b5-4694-9ceb-6f366974e2a2",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ba13384b-ae26-4f01-b7dc-893b9be1a258"
        },
        "item": {
          "id": "4a83fc21-ac77-409f-934e-678b82138fe5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "630d19d4-1af8-45ce-9c29-4aaa57af937d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855c949f-af40-4dd2-a416-711120f64e64",
        "cursor": {
          "ref": "fd0bfd83-096d-42a9-be78-949894fde5a3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "613aee48-760a-4d6c-b351-517d2df8d159"
        },
        "item": {
          "id": "855c949f-af40-4dd2-a416-711120f64e64",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "404db421-12db-4a18-ac7d-fc887d13990a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9566d1d-eebb-4ded-b297-9549c3389318",
        "cursor": {
          "ref": "bc0cb177-6518-493e-910b-8f9d9feb30dc",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6fc3d72f-e1ef-486a-b5c8-4b3e9eca2851"
        },
        "item": {
          "id": "e9566d1d-eebb-4ded-b297-9549c3389318",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "756669d0-0f5e-46b0-800b-d5a7f23e43be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff208ce-5567-4a0d-b14f-7fc53ab361d4",
        "cursor": {
          "ref": "c6198d08-0ae5-42a9-8986-fca1443663e9",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5527dceb-d5c5-4bc8-a6f6-87f5bd797999"
        },
        "item": {
          "id": "dff208ce-5567-4a0d-b14f-7fc53ab361d4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "13ecd4c0-d510-4277-a7f1-096fa33ce934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2915a808-f145-4b0c-b0ad-3497c5684193",
        "cursor": {
          "ref": "7688130f-9847-4aee-8fcf-230c3528ba40",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a45ec254-797f-4c1d-8b05-3d16897fb303"
        },
        "item": {
          "id": "2915a808-f145-4b0c-b0ad-3497c5684193",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "01e09236-cc57-4aad-9b50-daf7303b3241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd576a71-af3f-43ba-bcdc-28737c86b555",
        "cursor": {
          "ref": "9a14c74e-e3b5-4ef4-99b3-c16cf4039b8b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "058ed8f8-0121-4f76-b0e1-f0dad367e5e3"
        },
        "item": {
          "id": "dd576a71-af3f-43ba-bcdc-28737c86b555",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9833a32e-e05b-46a2-9cb8-411a4b1cd118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c1b1c7-633e-4552-b882-b7374cdb2f1f",
        "cursor": {
          "ref": "4d66ab4f-17ef-4d29-9acf-1b6f481ce66b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2243afb5-693e-45f1-839e-2327dbc55854"
        },
        "item": {
          "id": "a8c1b1c7-633e-4552-b882-b7374cdb2f1f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "891f1742-dc5b-413d-90e8-21d3482569eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b6a6d1-cdef-4362-a234-8fc6c00913dc",
        "cursor": {
          "ref": "53a65973-bf31-41e5-8dc6-484cac8e9dc2",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6325c4f5-64cb-433a-8b13-929252ed581f"
        },
        "item": {
          "id": "63b6a6d1-cdef-4362-a234-8fc6c00913dc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8d25fea2-d29f-40db-9f4e-c05f1f61243c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d9eb98-26f7-48de-99fb-cd7127b09312",
        "cursor": {
          "ref": "36b6baa9-384a-4dee-adb8-eef863b427d5",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cc5e6d11-ed90-40b8-83f1-3cd81a9f231f"
        },
        "item": {
          "id": "a4d9eb98-26f7-48de-99fb-cd7127b09312",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "65f7d637-4060-4956-84dc-2918099d3ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424afcd9-335e-40e2-a66d-001f055ca3dd",
        "cursor": {
          "ref": "7968f898-48e5-45ed-b471-97c2280cc01a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9ba6e189-e379-49cb-9f54-3f59dfe28867"
        },
        "item": {
          "id": "424afcd9-335e-40e2-a66d-001f055ca3dd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a2b15d76-1aac-4eeb-a9f5-6311ec58f6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ba3c36-0b1d-4084-87e0-aa376c6bc5a5",
        "cursor": {
          "ref": "a785bb1b-ed12-4f3e-a3ed-22226cd310bd",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2f90a383-4388-4613-b987-1b7644b7f955"
        },
        "item": {
          "id": "33ba3c36-0b1d-4084-87e0-aa376c6bc5a5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3466e2a6-badc-4ffa-a3e7-4bd66eda4e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8137ae5-28c5-473c-91e0-332fcc5cfcb3",
        "cursor": {
          "ref": "79e5b407-0d97-4e7f-aeb4-61c118d94231",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d557eff2-c32a-4840-9ed0-92796c665b70"
        },
        "item": {
          "id": "f8137ae5-28c5-473c-91e0-332fcc5cfcb3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3e416476-8c05-472e-85b7-0ee179e6f96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac3725e-85ad-4829-af60-0f756b5c46f8",
        "cursor": {
          "ref": "362f9ed5-2973-4f2f-bf91-83d14aba98e0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "40ab4fe1-4e10-48a6-bfa6-b8c6055fc81a"
        },
        "item": {
          "id": "3ac3725e-85ad-4829-af60-0f756b5c46f8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "99f7aa0f-4009-4327-a618-ee5050d1fe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383dddcb-7b40-4b38-a40b-c92676c3b130",
        "cursor": {
          "ref": "9c62a2c3-ddb2-4f39-9d66-d8224e53bc9b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "224231a7-edaa-4db7-8710-82afa7d9e1fa"
        },
        "item": {
          "id": "383dddcb-7b40-4b38-a40b-c92676c3b130",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "eecfc608-a215-4fb9-ac1b-9997a377a96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c98777-ca6f-41eb-a342-22f5a0af94a9",
        "cursor": {
          "ref": "61b7766b-c320-4d45-b2cc-a71d2444b425",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "df4f3cc4-1e27-491c-b223-4d68151c79c9"
        },
        "item": {
          "id": "08c98777-ca6f-41eb-a342-22f5a0af94a9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5cd47e45-381a-4be3-9f7c-4e72347459b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431d1714-31b3-4269-8f03-9e05e395c007",
        "cursor": {
          "ref": "c8ae8621-a8db-4ec2-b568-5c1b4f1f59d3",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "daeeb6d0-0aa3-4604-bdb9-1da042e68ce2"
        },
        "item": {
          "id": "431d1714-31b3-4269-8f03-9e05e395c007",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "793b9a98-1818-43fa-a125-6e06393f7a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0216caee-1fbb-495d-8b64-82239a816f17",
        "cursor": {
          "ref": "48c06d30-ddee-47a5-9b60-2e83c4dcc81b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c24407cf-77be-4661-937c-782b2b5296c1"
        },
        "item": {
          "id": "0216caee-1fbb-495d-8b64-82239a816f17",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3e294917-c408-4251-b879-caf13c0a2b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9ec27b-f875-4c95-b4f5-a96981c1caf2",
        "cursor": {
          "ref": "21d9127d-83bb-4a6b-b5ff-0b4e2a150629",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6456f39d-7e67-42d2-9554-011e462e41ee"
        },
        "item": {
          "id": "ed9ec27b-f875-4c95-b4f5-a96981c1caf2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "94b524b7-60a8-4a39-9a3d-315ab4c57875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d63c8d-49be-4444-8de1-e3e285baaa1b",
        "cursor": {
          "ref": "e696bff2-0f7a-49b3-8592-dc0a98c4ef1f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4350a52c-b572-4564-b52b-c1cb9c8e3d56"
        },
        "item": {
          "id": "63d63c8d-49be-4444-8de1-e3e285baaa1b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6870cbc9-d9f5-4921-8aa7-64c3ad88c12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d60fb4-9e9c-43e1-9d05-0b613533ac88",
        "cursor": {
          "ref": "d81cb1c9-4a04-4acd-a6d2-433ba318217d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fe720ac9-5d03-465c-aee7-1434d21c3410"
        },
        "item": {
          "id": "95d60fb4-9e9c-43e1-9d05-0b613533ac88",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4afb3122-c0bb-4cf7-8f62-a36f24951858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620e6b06-7c02-4eb2-ae83-afba88d675e2",
        "cursor": {
          "ref": "9e7e79aa-0ce2-4c65-8d67-3dbb48805d5b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f7c2dd30-83ea-4788-8789-9fa80b6320a9"
        },
        "item": {
          "id": "620e6b06-7c02-4eb2-ae83-afba88d675e2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2b501e06-3939-4d48-bbc9-7bf4b55e4653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e325dd5-ca03-4c07-acf0-e1ddc8b80d1b",
        "cursor": {
          "ref": "2b9ceab6-7918-475f-87d7-00a0dc7ed104",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b7047b88-3df0-46f0-a242-be212110a3ec"
        },
        "item": {
          "id": "2e325dd5-ca03-4c07-acf0-e1ddc8b80d1b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ef001887-dd0a-40fc-9a85-659ba4b54d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76837423-e5ef-4e67-87dc-7558a460c1e3",
        "cursor": {
          "ref": "7527f8a3-f6ee-42de-a70c-bd71aec21e30",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ed223122-86a0-4253-922b-7e7be57da53c"
        },
        "item": {
          "id": "76837423-e5ef-4e67-87dc-7558a460c1e3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5ea30ffb-338d-47ca-95ea-398f3a8b5eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6a47bb-07bd-4af2-8c5d-9abd43b8ed3a",
        "cursor": {
          "ref": "d2d7b456-c1d9-46e3-a860-892d20ede457",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5b7c812a-afd3-4540-ad98-f7831c7f3a46"
        },
        "item": {
          "id": "7b6a47bb-07bd-4af2-8c5d-9abd43b8ed3a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ee4451a5-58db-45f9-a0f2-a6b40d9f4cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f8682f-ed2a-4f29-90a8-3f29c925e197",
        "cursor": {
          "ref": "519c37d5-f506-4bd3-af78-1e26cd399ba7",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a69611a0-e20c-4c2b-8420-2289278b3677"
        },
        "item": {
          "id": "10f8682f-ed2a-4f29-90a8-3f29c925e197",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a4d3adcf-0c7d-488b-b20c-1ebd68b726ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5814f3fd-a688-4649-bf64-2c1690986114",
        "cursor": {
          "ref": "919bea39-719b-4eae-9454-051c55096c92",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d25aad1d-571a-466d-a7ce-941861dc542e"
        },
        "item": {
          "id": "5814f3fd-a688-4649-bf64-2c1690986114",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "b75577d1-d821-43c8-9ec4-d773b8a5831d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 594,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef7ca57-6ebc-4030-b859-5980b4b07c97",
        "cursor": {
          "ref": "c76644d8-fae8-4ec9-b4de-6fe1a5522b39",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ae6bf6eb-f596-4ab5-a4cd-ffc829456465"
        },
        "item": {
          "id": "fef7ca57-6ebc-4030-b859-5980b4b07c97",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a838d60a-0b2e-4c9c-b943-306870ca3198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef7ca57-6ebc-4030-b859-5980b4b07c97",
        "cursor": {
          "ref": "c76644d8-fae8-4ec9-b4de-6fe1a5522b39",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ae6bf6eb-f596-4ab5-a4cd-ffc829456465"
        },
        "item": {
          "id": "fef7ca57-6ebc-4030-b859-5980b4b07c97",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a838d60a-0b2e-4c9c-b943-306870ca3198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6187053-952c-491a-ad26-9d94691f06a2",
        "cursor": {
          "ref": "9f937585-8dd5-47a1-ab77-84a06854bd92",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "438b6ce1-d0f3-4ebc-97a7-955e5601f67d"
        },
        "item": {
          "id": "d6187053-952c-491a-ad26-9d94691f06a2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "edc1a043-5d6d-4c03-9025-f43b593cb3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df2952c-4dd2-44a3-97d9-1cf8e4721162",
        "cursor": {
          "ref": "13a14e24-0b8f-44cd-935f-f2b8a61fb4bb",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cc889157-1e22-41e0-9e48-dcd9328850dc"
        },
        "item": {
          "id": "7df2952c-4dd2-44a3-97d9-1cf8e4721162",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1b85f706-9a1f-4848-a370-9ae78c693c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719be96f-4d92-403e-87cc-10ecf27ea950",
        "cursor": {
          "ref": "c1f992bb-20a7-4344-80f0-ec646a79c5ac",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1d5b7e81-c208-471e-9e8a-d3bcc1d44f4f"
        },
        "item": {
          "id": "719be96f-4d92-403e-87cc-10ecf27ea950",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6e91edf0-72a5-4f65-beab-f792453ffa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf485f8-c010-4782-bf20-e671b65ef157",
        "cursor": {
          "ref": "17b176fc-ef3d-43b3-8931-02206c6051a2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "065f5b59-15cb-44ce-a7a9-a2c26276c8cc"
        },
        "item": {
          "id": "3cf485f8-c010-4782-bf20-e671b65ef157",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d7b491d2-abb3-4cc5-86a4-5939596a0045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7cfc00-8764-478c-bf90-b71875fd2b8f",
        "cursor": {
          "ref": "58a463c7-12a5-4dcc-bb08-ee65e7e5628b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1934143f-9242-4935-8bc6-afa07e96ab69"
        },
        "item": {
          "id": "1b7cfc00-8764-478c-bf90-b71875fd2b8f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d5904f3f-d9e6-4c47-b378-d44e72246ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417b1eef-fc0b-45af-9561-6ea3a1cc73ea",
        "cursor": {
          "ref": "1a81e011-0f40-4b66-b32b-4b7097c39bf8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "70594067-d86c-4245-816f-55eed0af0fec"
        },
        "item": {
          "id": "417b1eef-fc0b-45af-9561-6ea3a1cc73ea",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "282c4fe3-5409-4429-bb15-f44b9777fabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f6b73f-1ed9-4907-8788-d8812ca72816",
        "cursor": {
          "ref": "c18203de-d42f-425d-b8b2-71ad667749a5",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ab9d1ef8-5283-4e86-9259-35571cedd0eb"
        },
        "item": {
          "id": "61f6b73f-1ed9-4907-8788-d8812ca72816",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7168adb0-4b5f-4dbf-bd13-644fc3fa892d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58edd1a4-073c-4c05-b4ce-35252aa5bb44",
        "cursor": {
          "ref": "d114c288-61e9-45b4-8bab-8863937a127e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2890543e-587b-41ee-bccc-799f23b1300b"
        },
        "item": {
          "id": "58edd1a4-073c-4c05-b4ce-35252aa5bb44",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bc1dc432-7a5f-4b39-9bd5-8c813942cda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4be8432-2428-49d9-9364-bc8b5925a9f6",
        "cursor": {
          "ref": "6911ed29-9632-4cd0-87e5-528966c12cc4",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a94714a6-6a67-445e-ba92-4cb3b32823b4"
        },
        "item": {
          "id": "c4be8432-2428-49d9-9364-bc8b5925a9f6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4565f78f-ea75-4a12-af40-4e1d68109202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc3547d-eb35-4705-83dc-c4d5e28c1b92",
        "cursor": {
          "ref": "f5015a1d-203f-4393-be0e-a8acb279f244",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1eca7c6d-4e14-42f7-9983-709616f46d50"
        },
        "item": {
          "id": "acc3547d-eb35-4705-83dc-c4d5e28c1b92",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "edb49933-dbf0-439c-b69a-62631f4bd151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483c6903-2f0f-4e24-a4a5-9d1829db0739",
        "cursor": {
          "ref": "fb779b29-d780-4cd8-9b72-7212d83f60ae",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d2a38ed3-5c2d-455d-b37d-b2dcadd9b74f"
        },
        "item": {
          "id": "483c6903-2f0f-4e24-a4a5-9d1829db0739",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "dfd56764-b44e-4eaa-8928-de9aa233f293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4e6634-f0f0-415c-afa7-8dd1ac05f554",
        "cursor": {
          "ref": "d607d2df-1767-4b41-9654-824623561ddd",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "31e91d42-ef66-4ada-a5ba-ae781fc2ff95"
        },
        "item": {
          "id": "7a4e6634-f0f0-415c-afa7-8dd1ac05f554",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "53d9cb46-1054-4841-ad83-4cbf7b791c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567992a3-da98-4089-8041-6f5d75692787",
        "cursor": {
          "ref": "c382fee9-3587-482a-ab53-421819853e93",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ae483fec-f49f-4f23-bb91-1899afff0071"
        },
        "item": {
          "id": "567992a3-da98-4089-8041-6f5d75692787",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4112138a-bd9e-4e55-852f-5e24197298ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f399f44b-d5f4-424e-a47b-17ca2bc50866",
        "cursor": {
          "ref": "c52b5e6e-c93f-49a6-a527-82255bdb3bb3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5fea1a5b-aa49-4c31-b172-63f7faed11d2"
        },
        "item": {
          "id": "f399f44b-d5f4-424e-a47b-17ca2bc50866",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "29d51db8-6b67-4a05-b0f6-252335e80fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 962,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0ebdd9-60e2-403d-8b47-407a35a0b450",
        "cursor": {
          "ref": "fd5f91f1-690f-4bca-b67d-4eb0367ced52",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "279983eb-a4e1-4655-92e8-81f5bfd77b26"
        },
        "item": {
          "id": "3c0ebdd9-60e2-403d-8b47-407a35a0b450",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "02f5445b-3c41-469b-a5b2-5aeba1d0b664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1179,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55efaa15-1d00-4b27-a565-415ec9284dd2",
        "cursor": {
          "ref": "0059d52d-b638-4b34-aa2e-d031ce274c67",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ffb2e7ff-72e4-42ce-92e4-e8f0ebafe969"
        },
        "item": {
          "id": "55efaa15-1d00-4b27-a565-415ec9284dd2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d59fbb04-9f8d-4dc6-bdd5-add958d1b254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee8ae58-1e62-4ec3-9a1e-ab42c29aa28c",
        "cursor": {
          "ref": "932f99bf-3df5-4c1b-aee1-3bdd57871591",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "82c116cd-9375-4dd6-bfa6-d08be77d6665"
        },
        "item": {
          "id": "9ee8ae58-1e62-4ec3-9a1e-ab42c29aa28c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b8c3449e-ef44-404d-b2a0-57e464cfa3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1377,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677bf582-8006-483c-bf3e-3a6f97958ed0",
        "cursor": {
          "ref": "1e3eea45-5d9a-458f-bb69-2e2f29a32164",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0300141d-985e-4c7b-99f8-c58f433e5c24"
        },
        "item": {
          "id": "677bf582-8006-483c-bf3e-3a6f97958ed0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "40dd3f35-68d8-445c-8923-23fecebfe202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cb484a-86ac-487a-aa81-0150d3ff33ba",
        "cursor": {
          "ref": "31b46392-571d-4591-bb04-16b3eefaba16",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "36f278ff-ede1-4565-899e-190e43f497c0"
        },
        "item": {
          "id": "a0cb484a-86ac-487a-aa81-0150d3ff33ba",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "15267ffa-242d-4477-a730-f47bf9517d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a534ca-84b4-4728-8465-3ddb9038f74e",
        "cursor": {
          "ref": "8f43584d-c151-4b62-aa0a-fd567c131b96",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d302ae64-cd81-4670-8c13-398841791dcf"
        },
        "item": {
          "id": "54a534ca-84b4-4728-8465-3ddb9038f74e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f7816919-af17-4b0f-921d-7ba8a0f5dd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057c86b5-8148-4d67-8462-627c5d1a7b34",
        "cursor": {
          "ref": "42067a4b-717f-4717-b06a-93cd78b42c05",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c4c7210c-cbd2-4791-8a82-3be786b4e6a5"
        },
        "item": {
          "id": "057c86b5-8148-4d67-8462-627c5d1a7b34",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e1c61d96-17e0-4fb9-9de2-29e137031aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d3dfc0-31a4-4a4b-96d2-ddd64d3be26f",
        "cursor": {
          "ref": "9bd299d7-f9ca-48e3-b1e0-e5b24d338d35",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ac364c7a-e5f7-4492-8718-744a12b7ad51"
        },
        "item": {
          "id": "c4d3dfc0-31a4-4a4b-96d2-ddd64d3be26f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bc8f8035-1601-48f7-b066-47adefe19736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78418df9-d352-4db2-bb1e-2faae708bcb5",
        "cursor": {
          "ref": "8b1895c5-29f7-4ddf-b571-6b82318608c5",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9816e3e9-6e61-415d-a663-aad2cfb7ffcd"
        },
        "item": {
          "id": "78418df9-d352-4db2-bb1e-2faae708bcb5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "409c2f60-d722-4808-b156-d3dabf1786cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ac2100-ad4e-429a-b95a-47ac38f5ca45",
        "cursor": {
          "ref": "1a8545b6-3cc2-438b-809d-22fccff5b1f4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c1f03567-a484-42e6-9873-c5bb3d87e916"
        },
        "item": {
          "id": "f1ac2100-ad4e-429a-b95a-47ac38f5ca45",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "92b35ad7-b007-4cf7-8728-4d927095fd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1eebde-0faf-49bd-ae20-305f4b38d9ff",
        "cursor": {
          "ref": "00373e13-b5b6-4ea2-b7f2-1489b776161e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d0fe00fc-88b5-4f41-a90d-672c450824fb"
        },
        "item": {
          "id": "bf1eebde-0faf-49bd-ae20-305f4b38d9ff",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9fb0e910-8bc9-4816-9a25-a2d47ab8a88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffa6612-cc81-4db1-a968-1c9535fb41d8",
        "cursor": {
          "ref": "aabef798-387f-47da-8fe8-d2b4fcb03d2c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "94b199d7-fcd6-484a-a228-9382ea6c233f"
        },
        "item": {
          "id": "8ffa6612-cc81-4db1-a968-1c9535fb41d8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f6f000ed-6952-4a01-9284-cdd5b91899a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4262ee3d-0025-455f-8197-13c2c515369b",
        "cursor": {
          "ref": "2bf0fcf1-e7d6-4ba4-892f-783ef7b456c1",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c8013c12-457f-411f-9103-b2398a830587"
        },
        "item": {
          "id": "4262ee3d-0025-455f-8197-13c2c515369b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7cedafd2-e241-4a7a-b2d2-d0f1bb2e5ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586c302f-1223-47d1-a58d-8ccce82563c0",
        "cursor": {
          "ref": "2ece574f-6f6d-4e81-ba3f-da5545c5b796",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "02fca974-1ae1-4835-922a-3d2893fc8e6f"
        },
        "item": {
          "id": "586c302f-1223-47d1-a58d-8ccce82563c0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7cc72b30-b36a-4b21-bae7-be189df1149a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0347de3d-ae41-4084-a2f7-7bb3828795ab",
        "cursor": {
          "ref": "00b145e9-0088-4046-92a9-e3c40bfe5b8f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3c9f8903-5fd6-43c4-84ad-e26b0dfa280c"
        },
        "item": {
          "id": "0347de3d-ae41-4084-a2f7-7bb3828795ab",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "131cf706-fedd-402c-a6d6-7f238246e971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17b06d9-d509-4ab0-acb2-3c9af8b4c0db",
        "cursor": {
          "ref": "67bdb589-6c9e-4f71-83a3-1be745b232e8",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2027ff9f-2669-433a-a346-e34fdffff69f"
        },
        "item": {
          "id": "f17b06d9-d509-4ab0-acb2-3c9af8b4c0db",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1e0f75a1-75ff-413c-8566-8aba5b5bb8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bb4400-466a-4de9-8f24-f27a78738b72",
        "cursor": {
          "ref": "c24392da-ea03-41d4-9b16-430d80952327",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d69eb86c-f114-4312-bc47-0303eaa94bb0"
        },
        "item": {
          "id": "56bb4400-466a-4de9-8f24-f27a78738b72",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "785a7bb4-0e05-4d51-97ec-05cff530518f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8ed911-6987-43cf-9ea8-83604ef04f2d",
        "cursor": {
          "ref": "ff848b38-2de3-4ed3-98b8-817d641a19c3",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6c386b09-207e-40b6-8eec-7263252bab35"
        },
        "item": {
          "id": "8a8ed911-6987-43cf-9ea8-83604ef04f2d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c75ae981-a251-4eec-a1a2-f77f6ceebc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35956ca9-a696-47b7-81b4-0fcc8351aa01",
        "cursor": {
          "ref": "402f934d-a0a2-4066-bb7d-0567d248a440",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5d4642de-8397-4cea-88e8-8e3a2b6f44c1"
        },
        "item": {
          "id": "35956ca9-a696-47b7-81b4-0fcc8351aa01",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "53b19064-66cf-4ac4-8526-1aa560dd7a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4f48f5-1426-4769-9cb6-7d47bd9ca086",
        "cursor": {
          "ref": "32dd069f-584f-4f4e-85de-c0ad95685ee2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6bb03b7f-2e3c-4a0c-b740-bc4b0537c1e3"
        },
        "item": {
          "id": "6c4f48f5-1426-4769-9cb6-7d47bd9ca086",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d6f06d32-ab5a-435f-9b1c-88c3e1947ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1700dd8-ecdb-4f8e-933e-2cbaac2d76c1",
        "cursor": {
          "ref": "22bd9041-2481-46f9-846d-0e9fa365f3d2",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5675ba46-db1b-4c04-bc04-03234bf92155"
        },
        "item": {
          "id": "e1700dd8-ecdb-4f8e-933e-2cbaac2d76c1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a9e027dd-3785-4e9f-93fe-95e6398228e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a93582-4fd3-4ba4-8ed0-894aabab12fa",
        "cursor": {
          "ref": "4c04c4f4-86ae-4bf0-bfba-428b324d84f7",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0dd35e02-1119-426c-9536-863f1b279e55"
        },
        "item": {
          "id": "a1a93582-4fd3-4ba4-8ed0-894aabab12fa",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b4fd702a-8dfe-4d62-8be0-5553bd9f0494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4302e35-42a4-40a6-80c9-949092ebd129",
        "cursor": {
          "ref": "50565a52-7606-40fa-ab4b-f683123c649f",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fe2dc392-6d00-45a0-b892-0e07707bcc1a"
        },
        "item": {
          "id": "a4302e35-42a4-40a6-80c9-949092ebd129",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0ab46c4d-ab9b-4b28-8f2b-6e6ef32158ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbe8ca3-d1f8-4620-b643-735210263235",
        "cursor": {
          "ref": "d423582d-e8c0-47fc-b0c1-d77ac0252fe5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "acbf28e0-d539-4607-81d6-cc79853542fe"
        },
        "item": {
          "id": "8bbe8ca3-d1f8-4620-b643-735210263235",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8611664a-5015-4829-8bb9-325b2da4d5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a75dea4-b337-4c4c-a367-d97391039ac6",
        "cursor": {
          "ref": "96031597-d4f4-4f88-90ca-0412b43c5c5c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "feb3e8c6-0346-4253-b0f4-89323b995694"
        },
        "item": {
          "id": "9a75dea4-b337-4c4c-a367-d97391039ac6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "be1caacd-0462-4035-90ce-e8e122540ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab33a277-98a3-49a2-9691-0a5d8b38fe7b",
        "cursor": {
          "ref": "a0fa5e47-3a12-442b-9c18-ebf53002ebb7",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c0a69fab-e26d-4a40-b3b0-ef84a2aa399a"
        },
        "item": {
          "id": "ab33a277-98a3-49a2-9691-0a5d8b38fe7b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c2776eba-73f1-4bfe-acf3-a38f9c009f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba20fd8-c0eb-4f8e-afbc-2d0b0b6c7db8",
        "cursor": {
          "ref": "4e7a81cc-9f27-4482-867d-91c3a293cd92",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fcd1ccbe-85b8-488c-9335-e4cb3ab1e5c1"
        },
        "item": {
          "id": "7ba20fd8-c0eb-4f8e-afbc-2d0b0b6c7db8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d3b8eb42-7c64-4f40-bce7-c9e9591f81cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1a6b5c-6810-40c6-8431-4098a25b42f8",
        "cursor": {
          "ref": "c073b278-a7d2-4476-85ce-fab5277bdd01",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "896b642f-a456-4f11-b7fa-713dc2935f7a"
        },
        "item": {
          "id": "1f1a6b5c-6810-40c6-8431-4098a25b42f8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "90205c84-4288-4aa6-b0bf-13468dabee94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be503874-364d-4883-9ee0-3532932db07b",
        "cursor": {
          "ref": "68239089-dea0-4675-a3cc-0df66ccfc29e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3f49b879-1591-48e2-a1e0-a579549502c8"
        },
        "item": {
          "id": "be503874-364d-4883-9ee0-3532932db07b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6f782860-9ec8-4eb5-bfb5-de5f0d8f378a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7a3eb2-df9e-4d18-aaf8-9c52a3d93ed1",
        "cursor": {
          "ref": "9a0f14c7-4132-4e3e-9354-73a846b79b6f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a22a77b7-feb1-48a4-917b-2e83b919a084"
        },
        "item": {
          "id": "dc7a3eb2-df9e-4d18-aaf8-9c52a3d93ed1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d008c7f1-deed-4944-842f-1c003d2c53b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec539173-f927-4d73-89ed-4303a044fbba",
        "cursor": {
          "ref": "d93593b6-d160-4641-bd97-c4c89c224656",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d470929e-51eb-4814-9923-698eb8eb9d89"
        },
        "item": {
          "id": "ec539173-f927-4d73-89ed-4303a044fbba",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "babceafb-312d-404f-8c26-703c448b49c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64181da5-7127-47d9-8e10-6bfe630b186e",
        "cursor": {
          "ref": "c05195ad-269b-474e-aede-7d281c1e8978",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "482ce9c6-278e-40f7-b450-639397a0e665"
        },
        "item": {
          "id": "64181da5-7127-47d9-8e10-6bfe630b186e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b6b53b18-e20d-4688-8c3c-ff2ce4d7a223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9764d9-4763-4cb5-8767-19ca75677911",
        "cursor": {
          "ref": "a02bc2e1-57ca-4d0d-925e-e8afe17810b2",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d70d46d5-133e-49dc-8d32-f7b41969bb21"
        },
        "item": {
          "id": "db9764d9-4763-4cb5-8767-19ca75677911",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1204d9be-7855-4be2-9049-c6ff561e0ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecf171d-1536-440a-8afb-1b895a3d6f41",
        "cursor": {
          "ref": "21ece266-076e-4df1-8a69-86c7562975dc",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "40548028-58fe-4dc1-97d9-7ce24a8d4d76"
        },
        "item": {
          "id": "eecf171d-1536-440a-8afb-1b895a3d6f41",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0e97cec6-b06e-44f0-8bff-6a1a9b54470b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5380efb2-88b8-4819-ace0-acf23018f631",
        "cursor": {
          "ref": "8d7a855b-dfad-49b2-9fa2-322578c36c98",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "71b2fbf0-0fd8-46c1-828a-7beac22737fe"
        },
        "item": {
          "id": "5380efb2-88b8-4819-ace0-acf23018f631",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d0a03fa2-158d-4744-bcae-280e5e1761ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651fa578-06ab-4f7c-96d0-cfdc686098eb",
        "cursor": {
          "ref": "145bda40-29d6-40f7-a59a-881fcf44b542",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6f2b9607-2f5e-48ca-a431-d30ae86c904e"
        },
        "item": {
          "id": "651fa578-06ab-4f7c-96d0-cfdc686098eb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4b05c7c9-11d4-4996-b35a-5321c7073792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bce5f91-53c5-4a9d-8609-6156961b52db",
        "cursor": {
          "ref": "a2ba87e7-08e8-4a9d-9d16-6d034e955f3b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bc9ba1ec-11eb-48c6-a5c0-a56c294080c2"
        },
        "item": {
          "id": "4bce5f91-53c5-4a9d-8609-6156961b52db",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8054e38a-cd9f-418b-9880-63d3595763c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd280f55-db08-4ad2-8f21-0e64e39e72a3",
        "cursor": {
          "ref": "f0f02bcc-5418-4c96-a07e-b753bb0163a5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8ade8260-2e8c-48e3-8abc-60b982ab44ca"
        },
        "item": {
          "id": "fd280f55-db08-4ad2-8f21-0e64e39e72a3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9b3d1fc5-2aa9-4f65-9414-ebbf465cf208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad81dc81-28f8-4d5a-9087-444e873485dc",
        "cursor": {
          "ref": "3d905b4e-e861-415d-a35c-e4229df3f8a7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e92375c3-daa0-46c4-9c3d-ed5a4e2924e9"
        },
        "item": {
          "id": "ad81dc81-28f8-4d5a-9087-444e873485dc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4f4f742d-bd99-4d1d-8f80-2678f7a06681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d4a53d-1dc9-4087-85ea-0aa7e6fb7d61",
        "cursor": {
          "ref": "6ef07974-1fd5-41aa-b705-a6a9ae624349",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "67fd3407-34d0-4683-80f7-34da6a0bbfd8"
        },
        "item": {
          "id": "47d4a53d-1dc9-4087-85ea-0aa7e6fb7d61",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f9351b3d-87ee-4e60-8e8a-36515040d754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d299b1e0-b079-4522-a57c-00a4770734c2",
        "cursor": {
          "ref": "cbcab2a1-35ac-4ed7-b04f-468933d41891",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3015fa7e-e4b3-4183-8dac-68a80ff14530"
        },
        "item": {
          "id": "d299b1e0-b079-4522-a57c-00a4770734c2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "acab2735-284c-4f52-b5df-91de446a2f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0905fdf-2c5c-4ad6-a268-b2f1fb41f927",
        "cursor": {
          "ref": "575af382-92ec-424a-8020-3264ae384186",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "379dcdc1-af90-4f9b-a993-a5e183c2d514"
        },
        "item": {
          "id": "d0905fdf-2c5c-4ad6-a268-b2f1fb41f927",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1657e6f8-08c8-4e67-b44f-09345d16aa7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e8b2e0-0a38-4f5c-933f-31c940533faa",
        "cursor": {
          "ref": "6e115e52-95af-498c-8727-cecf236ef420",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "09091907-f828-4faa-a701-64d7d8e6855f"
        },
        "item": {
          "id": "93e8b2e0-0a38-4f5c-933f-31c940533faa",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "14e85bc2-d0ef-4d42-bf3b-0d4b84d84a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a899b74-6056-4fad-922d-50dc5062e52a",
        "cursor": {
          "ref": "dc8ee68f-f4d2-4f24-8679-72650f745081",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6987cd23-7829-4657-9d96-e6d3315bf967"
        },
        "item": {
          "id": "6a899b74-6056-4fad-922d-50dc5062e52a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4e8a7e74-2a3c-4e0c-955b-728869d13e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da62fd63-aa47-4acc-91c2-efbc726c700d",
        "cursor": {
          "ref": "4a8cd774-669e-4548-8f4d-a375a0e211cf",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2cf0402a-7f02-4e30-8610-ec0ca145ad7f"
        },
        "item": {
          "id": "da62fd63-aa47-4acc-91c2-efbc726c700d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3815518b-7ab3-452b-8f30-d571a0e75022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997dfbb5-bdb9-444b-84f5-56f62cf60b9f",
        "cursor": {
          "ref": "3f847afa-5169-4be5-897c-238998f1cf38",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e9d5fdb9-b00e-4c19-91d2-1d0790354b14"
        },
        "item": {
          "id": "997dfbb5-bdb9-444b-84f5-56f62cf60b9f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "51cc77f9-e4bf-4b5f-9b8c-56043bc5c8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc1473f-fb09-46ab-b756-b83e7da51c08",
        "cursor": {
          "ref": "0cee6e7e-42e5-4e74-bc36-8a354d54a36f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0b02d293-2c0b-4c30-999c-beb2fa9ec1b9"
        },
        "item": {
          "id": "6cc1473f-fb09-46ab-b756-b83e7da51c08",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "06c8e5d2-e094-48d4-9be3-629144902af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead83042-2438-4e75-896f-7e8a322abded",
        "cursor": {
          "ref": "5554c2dd-9d55-4218-9075-d570072d0c03",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ca0b9384-5564-457f-bf0f-53767f0d8129"
        },
        "item": {
          "id": "ead83042-2438-4e75-896f-7e8a322abded",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "66fd9e9f-b2b9-4b15-8aeb-18fa778d0781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c345eb6c-9a4c-444c-835c-2ed66db64d29",
        "cursor": {
          "ref": "336b532c-e06d-4ba8-84e9-25d2a4f06134",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "22361726-4ea9-4abe-ade8-a7c9c26dbcf6"
        },
        "item": {
          "id": "c345eb6c-9a4c-444c-835c-2ed66db64d29",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2e03dadf-ffcc-485d-8541-fd4afb341958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9b4253-ef65-4add-9ed5-53de92f0335c",
        "cursor": {
          "ref": "d1d79b19-3892-4520-89c0-50d68505e23d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f8832ce3-96c9-4896-8e56-6f0a35793755"
        },
        "item": {
          "id": "6d9b4253-ef65-4add-9ed5-53de92f0335c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fa399564-26e1-41cd-8143-52e0a184bb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193dc2c0-2a6d-46b8-bcac-39d5a1f85743",
        "cursor": {
          "ref": "19ef00a3-1ab0-4d6d-96de-5f52bd6912ee",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c6043cef-a3c8-4e93-b332-d018b0551e28"
        },
        "item": {
          "id": "193dc2c0-2a6d-46b8-bcac-39d5a1f85743",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d4323139-08ee-4331-aa5f-c0bee1864a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10226bc-1d18-40d9-bddb-4a53b1603650",
        "cursor": {
          "ref": "b746492b-3271-4ae1-a106-f941d9057944",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bc07d26b-5093-40ee-8d9d-e24d7ee33776"
        },
        "item": {
          "id": "c10226bc-1d18-40d9-bddb-4a53b1603650",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "89cef601-d834-475e-882f-72e847e99aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b5c17a-0658-48ac-90fc-15a8b4bfb3ec",
        "cursor": {
          "ref": "dfa587a4-b514-4a15-bfc4-8fde3639359b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a234a8cc-22d3-4490-bc5d-97c225a4b7e8"
        },
        "item": {
          "id": "70b5c17a-0658-48ac-90fc-15a8b4bfb3ec",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "22b0f53d-46e0-4b80-9a40-ddd48fba7e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d5680b-e959-497e-8e7c-c1091bf1d245",
        "cursor": {
          "ref": "8b887283-7216-4a9b-806f-8d7ef074160a",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "195dc6dd-0d28-4bac-a61e-d52b4eefbbcc"
        },
        "item": {
          "id": "f9d5680b-e959-497e-8e7c-c1091bf1d245",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1610727a-439d-46a6-a718-39631b83085c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b4c04f-b5b9-4a9f-a955-0e88d4e390ac",
        "cursor": {
          "ref": "09d2c1de-3d1b-4760-85a4-13bb5a587b39",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5f81a59d-e15d-46c1-9a54-e2bef534269a"
        },
        "item": {
          "id": "40b4c04f-b5b9-4a9f-a955-0e88d4e390ac",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c138bd72-c8b6-41fb-a347-cb3f2850e95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41796e92-aba5-4611-b7b0-227fc8b0a531",
        "cursor": {
          "ref": "570c8650-d847-4ce3-9347-3207d523d314",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "878ad7e8-11f4-4764-aa99-aa69254ea4ce"
        },
        "item": {
          "id": "41796e92-aba5-4611-b7b0-227fc8b0a531",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2172fbd5-8e68-4042-82cd-1a8e84c698fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1945293-e65b-4c38-b9af-6c843de9ac73",
        "cursor": {
          "ref": "77ce34b4-139b-48c3-b8bc-1416950b1cad",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "82a8b6dd-b549-45b2-8071-3d35edef84a2"
        },
        "item": {
          "id": "d1945293-e65b-4c38-b9af-6c843de9ac73",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8c917c70-743b-48eb-8bd6-e8c0b8f1fc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a033a4a-99e1-435f-82f9-33bdac5dc106",
        "cursor": {
          "ref": "8fed87ef-f28d-4c24-9255-d5b66dce9628",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "20f2b343-d40b-4afc-a414-93bbbbd79b9b"
        },
        "item": {
          "id": "1a033a4a-99e1-435f-82f9-33bdac5dc106",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b4882c0b-5be1-4876-b31a-b7b9654e7950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7144ec-045c-4c82-8bd6-392687e5578a",
        "cursor": {
          "ref": "311d83b0-ad32-4555-be2e-790fe32c313c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "da05bdb6-8c75-435c-9d0f-0d7d26808bbb"
        },
        "item": {
          "id": "1d7144ec-045c-4c82-8bd6-392687e5578a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "824caaa5-5c7d-4a4e-9f96-71372fa21e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373bc4a2-fdf9-4c9e-ae08-79483eb0959b",
        "cursor": {
          "ref": "0d89a659-313e-43c8-a5f6-a32768554868",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1445a214-7536-4820-9b7b-7dbf040b9888"
        },
        "item": {
          "id": "373bc4a2-fdf9-4c9e-ae08-79483eb0959b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a7b3edb8-3e52-4928-86ab-89c184f9a856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954e2ba3-9c0a-490b-854b-61380d438028",
        "cursor": {
          "ref": "4fde658a-00c4-498b-a0e5-66b8445f67e6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f6b8d958-c346-4455-b1ab-9c369a67034c"
        },
        "item": {
          "id": "954e2ba3-9c0a-490b-854b-61380d438028",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "73e1acf8-312a-4043-9bc8-974c0563f113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b91f407-7f9c-4c4f-ad0e-109553e41ecb",
        "cursor": {
          "ref": "36335407-896a-4571-b039-9e698cb2d8a1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e62945fa-8978-4ebc-b734-36e61b2df4a0"
        },
        "item": {
          "id": "5b91f407-7f9c-4c4f-ad0e-109553e41ecb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a3a6f7d9-bdc7-4930-b851-b3167b3273a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd03327-6475-4d3b-9949-45709262312b",
        "cursor": {
          "ref": "30a7cf4a-60cc-42b6-967e-11e85087a334",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e004e319-48fa-40ea-ac46-eb7b4dc35e67"
        },
        "item": {
          "id": "6dd03327-6475-4d3b-9949-45709262312b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d3d12ab9-dbf7-4991-b271-1350f52ba2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2221207-2177-4f57-b378-dc3223a77199",
        "cursor": {
          "ref": "061d82bc-7c32-4dc0-a486-4b05f482abf4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "215abcb4-c169-4413-afd1-a9e3cc75b3fc"
        },
        "item": {
          "id": "c2221207-2177-4f57-b378-dc3223a77199",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "53446b2d-d2cc-462d-9847-b5514c78c1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5147d5e-91a3-4dd9-93f8-f747ece17bbb",
        "cursor": {
          "ref": "c70375b2-384d-4e3d-aa70-1617b3f3a17d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "923680ae-6fc4-4968-a7eb-cd2b78e4036b"
        },
        "item": {
          "id": "d5147d5e-91a3-4dd9-93f8-f747ece17bbb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e14cc0c0-98e3-4eec-98a1-23ac478b70bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dba3b15-2749-49de-8156-784117dba662",
        "cursor": {
          "ref": "c7ff362c-6154-49e9-831a-8b4b94c02e7f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6d4ed6ac-018e-46a4-abfe-605aed53ddad"
        },
        "item": {
          "id": "5dba3b15-2749-49de-8156-784117dba662",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "49d7a7c1-3e97-41dd-a9b9-a800a7b34cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226b7c76-41a2-44fe-9fcc-06b0457678bf",
        "cursor": {
          "ref": "7fc856f2-cb65-4d12-835d-50117b659e6d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9b5137ad-5f0f-4653-8ac0-b72a64df0df0"
        },
        "item": {
          "id": "226b7c76-41a2-44fe-9fcc-06b0457678bf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "07c6187c-7213-4d60-b6b7-a92c8efaacdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6743c4-d0b0-4821-a868-18f57600b58a",
        "cursor": {
          "ref": "572e898d-f7bc-4919-8dad-0e20a75160e6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1f3b1163-1637-4bed-a5b8-98ae26839cc2"
        },
        "item": {
          "id": "de6743c4-d0b0-4821-a868-18f57600b58a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "55c90ab1-9be9-47b2-a126-7a21fdf30b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bdc759-3083-4750-9596-1608b4452152",
        "cursor": {
          "ref": "4acc9ece-c2fd-46c0-b302-3e8f17bf5357",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "28eb6d74-83e8-4f85-950f-322d8f9a6bb1"
        },
        "item": {
          "id": "23bdc759-3083-4750-9596-1608b4452152",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b85cabe3-d397-472b-8c78-0e9b5a0f4f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106fad6a-7d87-4d09-a3db-646223f2df82",
        "cursor": {
          "ref": "e18bc71d-eccb-4c0a-8a39-b3386408af0e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4f6085ec-2465-4987-b303-362888ab1323"
        },
        "item": {
          "id": "106fad6a-7d87-4d09-a3db-646223f2df82",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "95890f51-cd47-43ba-9a6d-abc718035688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f9ab1e-7d9f-4011-8c49-97af3a332010",
        "cursor": {
          "ref": "77dbb84d-45cd-47c3-8571-0bbeb932d72a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "06b620e6-04e6-41d2-9926-f69caf792205"
        },
        "item": {
          "id": "e8f9ab1e-7d9f-4011-8c49-97af3a332010",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b667d9b7-a64c-4b86-8de1-245168584e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3583f9-e510-45a8-82da-80de88f07eee",
        "cursor": {
          "ref": "385b5f3a-7af5-478c-8e46-6d887067d2c9",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "238dfe6e-fba1-4623-bc9c-f6de3c0032ad"
        },
        "item": {
          "id": "1f3583f9-e510-45a8-82da-80de88f07eee",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5ab84447-c331-4dcb-8520-00b28038dffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5259221e-59d8-4b50-8e0a-ed262cac39ea",
        "cursor": {
          "ref": "326061e0-ec51-4e76-ab65-183af5217d6d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "55308adf-4911-4717-909f-41e813762780"
        },
        "item": {
          "id": "5259221e-59d8-4b50-8e0a-ed262cac39ea",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3b171004-73e9-4c00-8592-4110e58047e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be91b263-38a5-41f1-a8e8-3edce4bfd4b3",
        "cursor": {
          "ref": "067356c8-c4ad-4995-bf62-a3841bd27cc5",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9c3463f0-ac9f-4ba4-ac28-30a83227e591"
        },
        "item": {
          "id": "be91b263-38a5-41f1-a8e8-3edce4bfd4b3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "427cf183-ca45-4748-b451-efd6cff70086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab21ce12-eaa4-406c-a99f-2ed1eaa29fe4",
        "cursor": {
          "ref": "28cd4fe1-fdd5-4604-bf76-6a14299e148b",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cfa8e8d3-5ad2-46cd-bebc-bcb880295944"
        },
        "item": {
          "id": "ab21ce12-eaa4-406c-a99f-2ed1eaa29fe4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c888f0ac-3621-40ae-8d26-d2459e7c035a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ff5b9e-32e6-4c75-9985-20a6de79c76e",
        "cursor": {
          "ref": "1a5dd65b-2e3b-459b-a21c-adcb461810dc",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "14d3e0d3-c908-480a-bbcb-5afe5a1ccba6"
        },
        "item": {
          "id": "48ff5b9e-32e6-4c75-9985-20a6de79c76e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "353437ed-82c2-4d49-92f3-578a967f48c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6af055-58d4-4199-9f67-eb6f0e3c52b3",
        "cursor": {
          "ref": "3ce2a48b-1623-4b63-8a0f-edb72b6ffb66",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "67cd827d-79d3-4dfb-85fa-a57276964bc8"
        },
        "item": {
          "id": "da6af055-58d4-4199-9f67-eb6f0e3c52b3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "653f632b-0bee-4e6d-9b93-8481c4e3291d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459dcd5f-c57b-48db-9b3c-04677cac5b2b",
        "cursor": {
          "ref": "a784d88d-75dc-431e-ac99-a24dfc17cd0d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9ce47bcc-da00-49f7-8d03-d631dfc40671"
        },
        "item": {
          "id": "459dcd5f-c57b-48db-9b3c-04677cac5b2b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "908dd0b3-49b7-4373-9d6b-1b175dd68501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe3280e-eb03-48b2-ae91-b0b9bc9617e1",
        "cursor": {
          "ref": "668ab749-7bcf-4acd-a72f-edbcc2753b22",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c8d2036e-c803-4dfe-917a-d7adc833fcb7"
        },
        "item": {
          "id": "cbe3280e-eb03-48b2-ae91-b0b9bc9617e1",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dd93d8d9-ff30-4f0e-8acf-8b8e173413c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d463e3-e11d-4447-a964-119d53098b8e",
        "cursor": {
          "ref": "8041e794-4ed0-4e34-aa06-3ae469463897",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c1612b3d-71fc-4903-bc03-95b92eb50db4"
        },
        "item": {
          "id": "13d463e3-e11d-4447-a964-119d53098b8e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "75518ae0-d8a7-45a4-8444-2e51c540601c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36d4c39-fb85-4ffb-b4ad-f13d6c8b721a",
        "cursor": {
          "ref": "b258d41c-ffee-4fdc-910b-b95dda176d5d",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "93ff6ea5-cc46-4437-8038-57808d9abef5"
        },
        "item": {
          "id": "d36d4c39-fb85-4ffb-b4ad-f13d6c8b721a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "804a74d6-8bb5-49cf-91ae-e9601804526c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd033a61-b435-4b4e-a5ad-51dcc446a773",
        "cursor": {
          "ref": "5db25522-3dec-4316-a3fc-2723089bc48f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b19cb41c-1f13-4d0f-bc84-f7e42a2174f2"
        },
        "item": {
          "id": "dd033a61-b435-4b4e-a5ad-51dcc446a773",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5d4210f5-1100-4b87-942d-db487f602441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b10e1a-693d-494c-a32e-0777cb2f623b",
        "cursor": {
          "ref": "fca80653-c93a-4373-94b9-30434d1c0a0b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f01bef45-35af-4f6d-bf21-5ba312fd01ff"
        },
        "item": {
          "id": "98b10e1a-693d-494c-a32e-0777cb2f623b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5d30569b-eb72-42d3-ac8e-75189499a550",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67993f9-9ec9-4c8a-b3f3-6834337a44b9",
        "cursor": {
          "ref": "22ea6c28-e03b-4cd6-8988-71b1062338cb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1512db32-ce07-434f-ac86-d91677d1a5f4"
        },
        "item": {
          "id": "b67993f9-9ec9-4c8a-b3f3-6834337a44b9",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "15355226-be77-4d5d-aba1-53533201caa0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 420,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274b7b02-c58a-44d7-bf28-0d9d463aed6d",
        "cursor": {
          "ref": "d5c5d7f2-97a6-4a9c-b8a8-9f434edd9023",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0304679c-6e30-4b85-aa60-25910a85dbb9"
        },
        "item": {
          "id": "274b7b02-c58a-44d7-bf28-0d9d463aed6d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "00ee0f2e-0fbb-4343-89c6-4c6ef9c49d72",
          "status": "OK",
          "code": 200,
          "responseTime": 511,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e582737a-f852-48d3-9203-2edfe42a4f16",
        "cursor": {
          "ref": "f3e9073d-0767-404d-ac00-2cc671a3cee5",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b50d7ff1-5bfa-4e00-b437-c5394014a3bd"
        },
        "item": {
          "id": "e582737a-f852-48d3-9203-2edfe42a4f16",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8225369f-9d2a-457e-9878-563f31b348bd",
          "status": "OK",
          "code": 200,
          "responseTime": 2137,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c76f85c-b43c-4665-9590-c31d0ec37054",
        "cursor": {
          "ref": "f32107f8-2e5c-4875-8734-3c2f4d4ee1cc",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "35fb2f56-6175-470d-ac33-99b645dd8d39"
        },
        "item": {
          "id": "0c76f85c-b43c-4665-9590-c31d0ec37054",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "801476ac-c2ef-48ef-a854-9e4c871590d5",
          "status": "OK",
          "code": 200,
          "responseTime": 1707,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb02580-0b78-405b-82e1-73a9656e530e",
        "cursor": {
          "ref": "f378eff0-9bde-43f7-a65e-a7db54e4ee5c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d117debc-bb5e-4483-864e-ae16e82e87f8"
        },
        "item": {
          "id": "cbb02580-0b78-405b-82e1-73a9656e530e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0521c15c-fbb8-424d-a958-0a5ba4c72dd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb02580-0b78-405b-82e1-73a9656e530e",
        "cursor": {
          "ref": "f378eff0-9bde-43f7-a65e-a7db54e4ee5c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d117debc-bb5e-4483-864e-ae16e82e87f8"
        },
        "item": {
          "id": "cbb02580-0b78-405b-82e1-73a9656e530e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0521c15c-fbb8-424d-a958-0a5ba4c72dd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb02580-0b78-405b-82e1-73a9656e530e",
        "cursor": {
          "ref": "f378eff0-9bde-43f7-a65e-a7db54e4ee5c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d117debc-bb5e-4483-864e-ae16e82e87f8"
        },
        "item": {
          "id": "cbb02580-0b78-405b-82e1-73a9656e530e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0521c15c-fbb8-424d-a958-0a5ba4c72dd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b245cb-ebf4-4b8f-bfd4-1121f22603a9",
        "cursor": {
          "ref": "7873a99b-f87a-4142-87fb-bc7f9cecb8ad",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5672dae6-3519-4f76-aa33-01810b499899"
        },
        "item": {
          "id": "63b245cb-ebf4-4b8f-bfd4-1121f22603a9",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "b04b010a-2ba0-4c9a-9bd5-98bf8014aee9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 457,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71464a3b-fbb1-47de-8d1b-4d1f25323735",
        "cursor": {
          "ref": "4fa927c0-a88a-45f4-986e-2b878b814d79",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1ef984bb-dd77-402f-8055-7e496c54d09b"
        },
        "item": {
          "id": "71464a3b-fbb1-47de-8d1b-4d1f25323735",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c35f0848-bf56-43e5-9ac0-79f83d4f8ea1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71464a3b-fbb1-47de-8d1b-4d1f25323735",
        "cursor": {
          "ref": "4fa927c0-a88a-45f4-986e-2b878b814d79",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1ef984bb-dd77-402f-8055-7e496c54d09b"
        },
        "item": {
          "id": "71464a3b-fbb1-47de-8d1b-4d1f25323735",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c35f0848-bf56-43e5-9ac0-79f83d4f8ea1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aafa8c1-bbd4-4e3f-8389-b727aa508b70",
        "cursor": {
          "ref": "6fb2d751-fd53-4812-adb1-e630b38702a4",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1163315b-7729-4377-b8f6-618b23a6db84"
        },
        "item": {
          "id": "0aafa8c1-bbd4-4e3f-8389-b727aa508b70",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "7e56ce81-9ac5-4d2a-b24a-26dd8d3b0252",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 620,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85382176-8a8b-4db9-b700-b50e3a98ca29",
        "cursor": {
          "ref": "c17548b5-9cc8-4a9e-a6b3-446396ce30cb",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "80a50835-14b7-49b1-a199-b98b0291ebe1"
        },
        "item": {
          "id": "85382176-8a8b-4db9-b700-b50e3a98ca29",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "778d5cb1-50c3-41fe-b239-66237a59d458",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85382176-8a8b-4db9-b700-b50e3a98ca29",
        "cursor": {
          "ref": "c17548b5-9cc8-4a9e-a6b3-446396ce30cb",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "80a50835-14b7-49b1-a199-b98b0291ebe1"
        },
        "item": {
          "id": "85382176-8a8b-4db9-b700-b50e3a98ca29",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "778d5cb1-50c3-41fe-b239-66237a59d458",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de25df99-d069-4016-962d-c00255f17a79",
        "cursor": {
          "ref": "fceb828a-8235-4a07-b769-08a6fa6ecca8",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eab0a879-a0b1-4b90-a37b-a81b87cde918"
        },
        "item": {
          "id": "de25df99-d069-4016-962d-c00255f17a79",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "ccbeb896-9e85-4e32-bc89-574c6258a812",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 636,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}