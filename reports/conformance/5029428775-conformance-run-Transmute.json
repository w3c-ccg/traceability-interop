{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ef0b0a85-7e1e-4123-9b0a-a3054b64b599",
        "name": "Clear Cache",
        "item": [
          {
            "id": "309fbdef-2e2b-435f-a697-fd81e36c6333",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48f69334-4abf-4b3b-a71f-9b915db3d205",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4593abbd-5af2-4f61-9478-fe8f40dc1baa"
                }
              }
            ]
          },
          {
            "id": "e0370d20-0483-4fec-8ee5-13138ffe8862",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7831306-0636-4876-9426-221690f74ed7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3162b6ae-bb13-4c23-80ce-b31afb6cdb31"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1a39d456-4ce6-42b5-a7de-b560dfa8b09f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f9e29a10-ac8c-43cc-870d-fb6ca9207802",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b4c5b715-9a3c-4c5b-ac85-f126ecafbd26",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3478899b-40bf-4652-b873-1a627e320e9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f723e679-49b7-4340-8cc4-17bb7d1a2932"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4a0b0b4-564f-4ba7-9705-f1dbbe0cfbb5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5bd06f10-7aa0-4dc3-ab73-bf9dcf19feb8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eebc59a3-819c-4d57-9af6-dfdb4ac32453",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d927f5d0-d838-4fd9-9e04-4870fd696567"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2705fc3f-5186-4dce-98f8-9e9eb2a9309e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5f45ce84-d72d-49f0-8208-05a7d6ae2a68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6abf2b1f-ac35-4945-8717-1785ded8b8a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff49c3b8-746a-4d94-984e-6f386e137a1e"
            }
          }
        ]
      },
      {
        "id": "8eab234e-b80c-460a-ab35-424174aa0119",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bc39599d-e71a-4428-ba89-faf953485e87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d005ca0a-7794-43e7-94a0-2ee2f7333ce8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d7d31acb-c6fa-4da3-8887-83e22268ed4c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383fb4eb-a214-414b-bafd-8d2530b61408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d880a20-56e0-4a38-8f9c-53f641766bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd46737-0204-497f-9beb-ecfade28aca2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b51b3a4-2863-47ee-b71f-398027ce3418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "722b9250-73cb-4579-a187-2e334ccf5919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13784f6c-190c-4519-a83a-3ed097e18457",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcd9853-770f-44b9-b555-47e041886314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f6fa0ca-e280-435c-a99d-acb0f1007de7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a942716e-1647-4496-8da1-cf54b16f6d7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c79fa116-ad0c-4551-bd18-4ea53861f1e9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fc0c12-dd25-4d7e-b2d4-0b9080ed7c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4caa1aa8-9ce0-413b-8887-f43f68178650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94728713-50d5-4fc1-8c00-bc860bdf39e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c56afab-e080-4025-ac1f-da53c31caa2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013a35b0-d99c-4411-b656-3604fa481ea8",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96307c65-8bde-44ac-b513-7a3773c5db24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8b0d7ff-efad-4853-b628-07da58ebd49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea722f7-c683-4ad2-8f21-2a8a281f780b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ae38bbd5-f4a1-4387-b6c2-2ef7be059505"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "11434694-6e70-4eeb-bc62-ae1763c2c722",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62263afc-fa6e-466b-acad-09c6113a302c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1a7d90d-d959-4c6e-8e3f-58d452773fa0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "93525305-860c-4ca3-8505-048681118642"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41b0c68e-53d0-4873-9076-3660fd59c26e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "7ee8a36f-4ba6-4b95-a2fd-652cece1dbaf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b8b1ef7-e167-4e28-9d5b-23145aa586af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96c08140-809a-48fd-8e7a-0732b3b4c327"
            }
          }
        ]
      },
      {
        "id": "e7fad859-0dd7-457d-aa9e-71ce6ce7f7a4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "867f5f72-bf63-40c1-841b-b86e2df92e84",
            "name": "Negative Testing",
            "item": [
              {
                "id": "863ea712-88c6-41f1-acf9-ead998e85ad5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bb97fc11-7a4a-4aec-926a-b743daf4bfbe",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172950c7-36b0-4ad2-ab8e-d0d7d5663fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a0598a-f36a-432b-8fd9-5440b3bf7528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20cabf3-9537-4c6f-9d76-80914160c012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95858d7d-bc2a-48ef-aaad-713876ee5f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4ecfc4-c8c5-41d1-8374-4ebf834bb823",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c760d6be-b253-47ed-8a83-30205791be6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7faae43-a9de-4ac4-8b38-f38459d4522e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f6211f-0a10-4adf-b5bb-45360612fce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e061eda-af35-4272-94eb-6a277ec2ebdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d4d408-cd48-4493-a1a3-4f63109e9a87",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2857ee9-789b-4761-b9e7-ec434681068d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4227ba29-75fe-4665-a0f6-0d92e48c78bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e747bde2-fa5e-43c2-a6ce-f8be091560d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11589048-6987-4dab-a38a-647dfdb8b575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e786291-1dcd-4f01-baa0-7ff1e673b548",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a455e2-7b6d-45e4-a10a-ac02fd956b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f23d33-5cf0-4c71-ab1e-d0c7791ddb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73868030-b1c7-421b-8d60-c6ab05d03e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1a4dbeb-4191-49df-b3ab-21f7feb00a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00bc770-b05f-43b0-a9fc-5f6c0326ce01",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf40059-4931-4f6a-a6eb-96fbda8e9782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f89c208-9bcb-4076-acc8-c8b835768b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6b18bd-bd6e-4876-a2f8-942ccbb120da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56887413-6903-45db-a52d-7d84b06b2ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590ce23a-6c8e-415d-bb1a-4e1207b6ef0e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43557e89-b808-4008-be81-cc43af39226e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94273379-cbff-4139-a460-0597e3fe73ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cacbea1-4fcb-4c90-a4c3-e7ca03e995a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a87729a-c5a2-49f8-a031-d02169e2c187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75c9321-ac45-4b44-b88a-4f7d255b3b94",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d40ec1-2abe-4a08-af6e-c6c7af98a7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3addbd1f-01f2-45c1-8ef7-30a1f4235000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316889be-488b-43c3-b772-5fac8b232b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d00eeea8-3ea0-43a9-879f-3ecda356c0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417180ab-baa6-4ff0-9de2-dd7ec634f9e0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65317194-3b6a-4f07-94be-b5ed0b0ed43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0add0196-32e7-48c2-8ff8-5c2ee79a2873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7eef1a-87d9-4dd0-afd3-5e2ff7fdfa98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adf88bf7-abb0-49b6-8b22-b4ba410cbad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fd76ad-aed0-4693-82e7-b40e0d2bfb70",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b608f2-b156-416b-aeaf-086561dda621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f7b643-cc9e-4eb5-b8f5-5196907b9338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4be9218-c56c-4d78-ab41-5469771673b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c79f145-025f-41f7-93b1-a21c504171da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9991ec-0330-40f1-8a6c-ffb04f4c5584",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f5ccd3-d361-4f2f-9f87-31d23bbb0306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b638d2-54f5-40c9-b007-fa49b8d4cf69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b37ed6-fe03-4ede-af54-236f4d350e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c11ff333-1ba3-4620-bec1-6459f4481220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98609c2-038b-4a88-a994-992fb917040c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a2c18f-9f5b-4d7b-951b-b55d9ecea28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453a33ff-e139-4fbc-a251-21426cfba461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317ed427-0cfd-4a9c-abca-d68a81cea98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d530aa68-7b87-4f0e-8fb4-db1e1f8e7bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570c9d09-aab6-40d8-89d4-60f168ad90de",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7df322-1813-4908-87c5-b7d12fc60797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945d36a7-27cc-44db-a1c9-bf7cf7ee4622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff1b7ca-a339-4511-947f-28e9100cf6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "427ebe52-1808-4bba-b3cc-78ffb0ea9078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4fbad3-0693-4f47-a5b2-7a343ccd2c56",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be718642-104e-47ba-acf2-3b3e391505c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee637107-c5bb-4e29-929e-24bc837256ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3552fa1a-947f-4034-a75a-f27af683bb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0faff3e8-6e34-46ce-baea-6489591c5571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8227f59f-2424-4f79-b87d-97c7db259af1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2cc55c-efe2-4278-af49-e17b5466dd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8e2982-fce8-4944-ad6c-99cf2913999f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a87043-d993-4a24-b2a4-e1534de63cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff411d46-f976-4f45-959a-1816eec5dff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010b052b-de78-4e56-8231-cacfb5548a57",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8412da8-aea0-4c99-b808-e212a7fc4ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4864124-a05f-45b1-8a7c-711e04de8958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecb581c-c4c4-46fe-8ef2-f844bf2c3cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "276f31b0-5ffb-487c-8ffb-164b3d34c104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4792bf67-848f-4b3c-979b-fdbc4a8fba22",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aca2a2b-9528-4c4b-99cd-d7d81ea8ac74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51996863-e53c-4384-8d8f-51498aaa1f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834d4990-55db-4b69-80b5-8361d4f4a95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94abd3c5-e4e3-45e5-b99b-6023368d3c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32eb1e8c-a368-4aa2-b77b-6b5de25be24a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8f15e6-c962-4ddf-9337-14e737403b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f32d32-1d5c-49e8-8414-748263aae038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63907447-25f6-41d0-9976-0ba6453b4eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1a281d7-ad3e-4641-9bc6-aefe5b45adaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d33fd4-31fc-4b38-ba8f-e591fc089dc9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e528f39-8594-464d-85d6-fa15d89526ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b62fb9-2c1c-4b6f-815b-7eaa14d08b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c112bd7-3e70-4b87-a859-9657acf0e584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b566a7-be93-450f-acb1-407350238db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db556252-5cec-4c6f-8e77-18e60298f3c1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ba9b4a-56d4-43da-96d7-ad00dc0b6af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af081d68-70f2-4ad1-903c-173374834835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03353d22-201e-4cd5-a47d-a91d7cdbb62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d59f6f6-d8f4-46c8-99c0-98edaba7f165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f886f7-8bea-4f0f-8044-54dce30d9f8f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e3289f-aa15-4786-ac6e-02a3d1748926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c0dade-349b-4092-accc-fad8525489b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f5cf43-8c34-4eb5-8465-f367f52f5fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "547bc0d6-7533-4b68-9909-f8e39797a288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded42d50-a5cd-40cd-8b15-571d3bdcbef0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9b4a70-cae4-4920-b77a-f1c054784fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f14269-c1e1-4b8d-aad0-f3bf485b13db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9e9fb0-675f-42ff-92dd-d692f724cf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e15705-e5db-4fff-8d7d-649af7d4a673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb76a6b-456a-4806-829f-5b54269eb549",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e6696a-bd7c-4dcf-a531-e3c483825bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea6618d-7e50-445d-8827-bac6ed11033d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d572bf-5277-4989-bd58-348bbd91817d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fb13a9-f489-4c84-b812-52ab8cf9da98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df70c85e-9ff6-4de0-a8fe-004b57f55256",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36dc0f8c-24ad-42e4-8a35-0016520b496d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e27b4a-8ee7-4406-a99d-7dbe87c7ab4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2eaa1c-f312-4033-b022-b1c3ac827510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "511cf76f-1853-46d3-acc7-89b589d1cbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55d8b09-451d-499b-bc7d-1a09b4c17574",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09774550-8050-4881-b5eb-727d11aa7a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf2a0c3-b327-4f16-bfb6-8f50151a3192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b8320a-0754-49e2-89d3-72d513b20f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaefbbba-dcba-4103-82e9-40bb55513ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401f3857-46c8-446a-88f3-17a46c9a0896",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ad55bd-086f-40d2-933f-e25c098ffb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587acbc3-79e0-478a-a6bf-4e297611facb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2903aa-8c04-4aa7-9515-c18773eef7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ceb346-d45d-4c68-abbe-849f78840bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d8f939-fbf5-453c-84a0-a65b0567d7b1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5999ae-06b5-436a-befb-a650c9016b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71792ce-b48e-4567-bec3-918cf245e298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477036ba-3f7d-4f9b-86c9-2047dc9dc72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c43951e9-12f8-425f-bc64-5ad5c8e3f44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39deb365-5ce8-445d-b91a-1105b2827406",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c6762c-8ee3-44fd-822e-21f30e67d0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f452ec-7a7f-4b84-818d-a7596283a9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2a3e72-05a5-4594-9f40-281684798346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46c037f-490a-476a-a4fc-e3af9b555a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bd5652-ae7c-4d19-8802-db37677e4a4f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267ba840-22e9-46eb-a051-7368dd809532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2237f73-a793-4ffc-858d-a441be19646f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545549e3-6bd0-4f7f-9ab9-a707dde98113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaad9197-2838-4a0d-ad16-83a16a0265c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f1fa01-cde1-4812-8b9e-d26095c0ae67",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ecdb30-e006-4177-8734-08e3f51ff6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4616d98-d37f-4fb7-80f8-c12b1583addc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9392ff6-e1db-4d66-b237-50d4de17a875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76211d75-71c9-4053-9440-85bcc6de711e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78da699-a0ba-4e73-8196-bd0a15e578b9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75391e1-e86d-4320-908f-325d4f71ffe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a2b219-c75d-4129-9978-b2b4c45586a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49077d3a-dddb-4d76-bcbf-2cc5ab732305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd0fb44-1af5-4a29-bde8-dd4217f42d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9599ea-6f67-4aec-bdd0-0046920f9fd2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1553b79f-963b-42b7-a14e-9670e7074258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852692df-394e-4c02-a7fb-94b1fa07cba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57ca507-502b-4769-be8a-384151168a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2d1c84-8b55-49bb-bfa4-afc7215ccb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ac3f74-7c56-4a9c-a2fa-805dde97095a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a674ed-59c4-413c-a8c2-73145de0b237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285dd4d1-090f-4c01-8b88-c970e15f73e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e39e219-c4a8-46fa-ae3b-2ca66b4537b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5581551d-8478-4010-807f-846ee48988a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21589cb7-1258-4d3f-af94-9d115cbda5f7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d39d6b-83b7-4b4d-94e4-666ac47a1b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7db1725-f84f-4e9b-a223-5b6cd13484f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292af766-c6a6-420d-b89e-9d16619985d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "244e6f8f-a7eb-48c6-a43e-8a0780483806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd28627-a7b3-45eb-a789-1281a99efafe",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45543af8-346f-4bf9-8643-6cec90533bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8254e2b5-0d37-4326-8cc7-94e3052dd2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc4d0bf-e703-4792-b5dd-c04283ff67c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61d3d47c-5ca5-44e8-a9e1-b23ca25de0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c38f38d-c43e-49ee-8e53-67cf9ebf9b51",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c18644-40b0-46f0-a6e7-3d8ba386581a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6616c7cc-bfb4-4d3c-acd7-8d204486a073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e7210f-293c-4677-a6af-e49583e17f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3141a5ec-87be-4a59-a653-24eb32057211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24697cb8-887e-4bbb-818c-e88ed1d13432",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b415d70-61d7-4a15-b664-d9f0565603c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "961cefc6-b399-4431-9f76-3135f8eecc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61868817-59a2-4c05-8592-25b1a23d6d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "012050c2-788d-464f-8a03-3258ae301200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dceed82a-7659-4cd4-b689-2f2abc7d6357",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f209aa-e186-401e-a9b7-b71bba2104db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13e8339-0066-43e6-b2cd-1bc209cd6db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64882bc-8f26-4ec7-9c5f-303639cd25c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "465b59a5-0dc7-4498-934d-5e45b382dfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d437545a-d42b-449f-bfa3-f18bd1ec59f0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234e1f5b-0da8-41fa-8efc-7319703b9007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03aa0da-04fa-4ce0-b5cb-c33d192e6502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f730fe-fb1f-45f5-aecb-a9414b5565be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "19b25b72-cad6-48fc-a59b-805aed47226b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee0657b-fcb3-4bbc-8d75-01cc6bdd5f6b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02c07d0-1a15-4e64-91cd-e01b1a17cb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5a5046-a4c9-445e-b278-d47ed9eb1c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edd5a64-a91d-4ad2-b5b8-a1a98f8949bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e44b7d94-526f-4291-ac9b-92af1abe37d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14b0d0c-38c4-435f-8263-ffa53cb817bc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1503e6c-badc-4ef4-8eb3-a76c58c5a5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c373763f-7ad2-4b56-8c96-a23046d75652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea99547-226a-4d3c-954b-f2676514bdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2da463e3-a730-4c3c-96da-5ee9a1f37d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af696c86-4cce-4776-a85a-ed4449da6ea6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b84a323-69bd-4dfe-b064-dfdeba5aba3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfeecb5f-ed27-4276-ae79-eedb8751790c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee96912d-01b5-4dc1-a49c-f1c29893834b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d45323b9-30c4-4af7-9394-74510ef8b555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1790809-45f3-45f2-a28d-1c64d59ff847",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667dd6de-134d-4e16-8596-3eafe3a1a369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fa735c-49b4-485b-8294-63b192fcae57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6bc4a9-8b41-4c30-bf2d-38f31e47ca84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "13a8c8e3-f820-45c6-b117-7341a5cbf95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30db3925-e0ea-4941-a0d9-b1b6cd64d7ca",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cea66c-c871-4940-9c96-7e8b06bf9e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f22732-52c7-4c02-ab37-d0a758a9d594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dda6fdd-0fdf-482f-9882-62c09ec2ae0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d34d8149-e3ff-4fba-8ee1-a9a4ac60d5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5beaf3-b71c-4283-b805-286e111656bd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bfaeb3-a658-4c27-a9d1-0eb91dc36450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef032e2-c6e4-45e3-b93e-8327e2a48815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91832ee4-3a93-444f-a9f6-6a46548ce334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c775c1f3-f4ed-46c7-846a-01c278883a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec534b3-5764-4cc0-b1ba-9d68ced77d12",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e927a63-3135-4a10-9d49-b6fee5710073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1b194b-ef0f-4727-93a1-780340d0de55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a6a83b-fef4-4984-9492-09120eb52d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba6705f-762a-4b08-8c2b-13b24bd52dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acf6f6d-e9bf-4213-9e2f-2ccef94f67f8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f030c2-9268-4173-b185-2b7582dd0b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c387fa5-ad1a-499b-af3a-e80508d72a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2358f5-285e-40e9-80a8-8cc31f1f0fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3add33a1-3146-4238-876a-b237f6134424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d73b9c-3c86-4709-a693-b21747a144cb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe7aab6-40df-42d5-841f-c3ade25bfbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27cded6-5884-4d66-bcac-7387e6bfd832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162850ab-5f0f-4b25-9285-9d4b2a92c24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c64b87fb-9e0a-4048-8005-2550bf97b190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e007038-61f9-4d62-ba0f-28b77cb8543e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0846cf6e-1236-4ea2-8b77-c46ac0e099f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8dbe9e-2e6b-46d7-873c-9de990429fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5653d297-6300-47fd-88e6-cae4cec82146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff6283b-d4a6-4a67-8a08-bd88b2b312fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b096f62-345c-4e19-9bfe-0993e8eaf031",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9112e36c-c97d-45c8-b787-72b8b9b9e9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d07b66d-8dba-48bd-b98f-2a6efe58cdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31da1e33-c7de-4b74-beb6-14bd4a21e889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae12e659-4e06-4616-9164-8b49cb0ea4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443996f0-a519-4df6-8e2c-1f93f4cb1efe",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6763967-3821-4e1c-b07b-864faac27238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36c03d8-0148-4de5-962b-9f613aa6242a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6c62ba-fc47-4504-9d59-6eb037de4f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23c0d68c-41ed-4a5b-b19b-6f0da34fde4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a0404d-28f0-4475-8c94-c2e402c07de7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6957f9d-39e1-41e2-8630-20c6e9f376bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0352fce6-4def-47d3-904c-f396d62aed0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72f0fed-6de3-4bb9-8a77-8579800c1119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c24e9d0-a054-417d-9113-f6fc7d6af61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c628ef-52ed-4192-8408-fe213f04f372",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d1708e-4b62-4a8f-9988-532e8fd6398d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bab336-f9eb-4455-a2b7-208b3c385b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61473a3-df7b-47a6-8c09-4855dc4774a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfe2c31-f2fc-4552-8341-d2be80c71c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf3e0f1-7c16-40b6-8f51-c7eb7beb156d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866132bc-bcd8-447a-aa0f-4bd4a855ff4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fb9e58-7ff7-4ac6-a2ef-12a97657792d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3ad165-877d-4ee2-88ad-16034ed6ae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3561ee2-4622-4937-b48d-30a2e881bc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b70337c-de49-4a31-8cac-6c98174b8184",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062321ee-b528-4a68-93fc-5e672088d617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222403bf-bb82-4c1e-ac89-905bc22e25cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b45b1d0-7491-4fc9-8f3c-aa67667ec08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7073d77b-f4f4-4791-b37e-6b149b097d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679a30e4-cfb6-4f50-8f89-066adbff8446",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a63211-01cb-4a4c-8019-0dae11d7dd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6dca401-a617-402c-812f-e5addf71c012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d227a7-2d3b-4839-9792-c1cb1b435f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59fe345a-ef12-4c62-88dc-35bf0405162c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d7f200-866d-44af-8854-f8b55c38046f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c4de0d-fdb7-492e-bf60-aece343611fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0264141-7b95-445f-9a4a-9278266973a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e338c8f5-0043-4cf6-8886-b41e314e0bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9e503b-758b-43d8-9f6b-4107d8e3d4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dbd223-d526-4e27-9d4c-dcd622aa79bc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03c1eb9-47e9-41a2-bae4-7c1aeda6bfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2d9bdf-3bbc-48e8-9917-1c49c2a56371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc8c6be-e914-43c6-9746-155ab1af2a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "79f9e90e-2879-426f-8e0c-2e2301fe7fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623aab8c-5653-4139-b79d-38376feaf292",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db083d3-0083-4dfc-a5ea-a964fa878da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109edfd1-1c9f-45bb-a084-2a86ffaafc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd1a8ba-e0d7-429e-aae0-cbfa5c397202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "477abdc8-b16e-4b25-bd5b-556d56c1048b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc9c45b-796c-419f-8fc7-2d93935faac9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26b4576-9876-431c-9c0a-fbc9467d7c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554d2c95-622e-41bb-b553-154badb912e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d425d3af-0f39-4b80-9ba7-be689ee61ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36eaf005-9217-47e6-8c31-a8af5cc71996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d49207-af3f-4a2e-b117-c8efe2352cdd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb2edef-f719-4435-8501-29faeb8b5976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849f46b3-6752-40e9-b1bc-4ae16b92725f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b7c9e3-13b5-4331-a930-eff569180d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c9b6a6-47fa-4917-9a53-c46f1d2f72cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12a0597-01b1-4196-a530-5c3f74452edd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bd97b5-a2bd-4344-acd3-36a662e5603e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a350984-7ffe-46fc-91a4-2937bc7f6e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49466766-71c4-41df-9297-853530db1e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bedb8d1-e259-49ad-88b5-44d948bb56a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7000e6-beaf-49cf-a471-9a693417ce2f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a393b2-5c31-423b-bdd0-e32a939936b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00db9f6f-f9b1-45d3-a52d-8a06c7635299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c347fff-b631-49af-b463-b0d006099a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "61919c5e-5f12-48c9-bb29-2c1e648b52a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c603a3-92c7-4714-8632-c6db94fe1809",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4de26de-e021-4a84-8af8-08749896b261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffef6e8-66f0-48ea-8767-4ff45c263033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49921680-c12d-4dcd-b617-dbe1cf5310a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaef2a02-a8e5-46e3-9989-47bcfd1228ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b023c89-a914-477e-bc9a-71c7bc430bf4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbed96a-c85c-4b17-9964-adfb8b97b20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2262f944-d924-4c0f-9560-5946282255d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204ed93b-d1b2-44fc-b716-e4f270549f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c15848a5-f580-4761-a147-5986c8c530b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f964bbe7-5af3-42f5-a280-76b883115795",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b325098d-b858-4c5d-8bd5-49a2bc4a6e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c10c02c-24fa-4cd4-94f6-251446d8c103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cac9ab2-5e64-48bc-9964-2124484c59d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c963003-e9d7-424e-bb93-4f4c75d69c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b12d29-e450-4d7b-86d9-da969ac87301",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9accf68-683c-4ca6-a197-71c1c692c8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490ef7b7-da2e-4dda-ae6f-12700fcf759c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cde8d42-e106-4e0b-828d-cf8aa45baa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1e9671-49fb-40f8-abb7-3c247d9189a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd09558-0a86-426a-bde3-fe662f757488",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7c5a2e-d437-4008-aca5-a5adbc22ef16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3acd84-7efb-47fa-85c0-840e2a8c1bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f954c8-597f-42e9-9bb1-1a31851e29b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1377a856-057a-4322-aea4-409c801d6475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdeef194-2fec-4a94-b52b-c6cae059cf66",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49d3093-31f7-4372-a9fa-c5d8641aff31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ba475e-cc85-4406-b9b2-78e7e168cf67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02799bc6-2ea5-47ef-b2d3-f48380c3cd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8624db5-8bb3-428f-9e98-6119dc59abf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d48361-da83-4781-89ca-3fb4bd138507",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c74b89d-40c1-4d75-a9ea-50ef05ac973f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8104d571-852a-4722-9bc6-07e8a3dbee6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fa3015-6fdb-4039-a365-5858201c2d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ccb0f2-6d76-4c56-aac8-e22f1f94af4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34beae7c-33ab-4fda-8f1d-4c943e464b11",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a20228-7e67-4276-be90-f65537f78a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664ade4e-e229-446e-b779-f23e7be07692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912d0b21-fc3f-4441-9e7e-678a61e726e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cfca223-bfd8-4ed6-8f2f-7e2b107ed997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b00413-dc0c-4e3b-a337-6f445ab48df0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034b4778-3dae-4c9e-99b8-6cb077a7fc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e833a403-a1fe-48ea-b82b-a2ea6496468a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfea5575-4b88-4411-bb08-4a3e181efbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc82e687-6eea-4f61-af69-9590a21b8456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cf31e3-318c-4fb3-9efa-bd622b182dc1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af4ccaa-2d8f-4fd0-945d-d1f92dcef787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb39546-62dc-44a9-a8d5-cfc9b631d83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d38a4eb-fe45-47c5-8045-b5e41276fc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cecff55f-0048-4335-9d56-45f35702580e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ddec9e-0cfc-469b-9cde-01de97e898e6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f765c941-b506-4728-921b-a82f2e8af204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166b21ea-9937-4087-829b-5f0b4b5b30fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eacbc0b-f08f-4aa9-b535-829a28d04912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96550d19-8506-447d-971b-adf04b5e88b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c77d73-b387-4773-a8b2-5af797106a72",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef3f1a4-bc2b-406b-9d67-0d47ee928163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec16c3f-bab4-4be5-aa1d-f9faf2a32e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7aec22-9a83-43d4-a2bf-0ea2f33c64f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83d0fd98-f558-4dda-8e24-0452fbdbbeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcaf720-13c2-4b11-ab3b-58937495048c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cdefef-7301-4828-ab3e-0f9d5465f420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10badffd-5c49-49b6-850f-1d15f8e3ee02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5442b43d-fc6a-4ad2-bc54-75022a3ce718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1925ee75-d107-43c7-b6b6-5255b88570e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a921d8be-f5e3-4068-ae2f-93ccf8d89498",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b5b6b5-af27-4857-9f3f-762ddeee8f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cd4632-80a8-44aa-81f5-1375db63643a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8163e5c-b693-4ef7-81c6-4be42303b6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df38cd1c-2d5a-4cb5-84b3-a6412421ec66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3627df7-2244-4d03-af42-f77389cd384d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336acd2f-fe60-4ba9-9b7c-ba300e3fe9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9e0155-c573-4217-8701-f7177da5c1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d81976-43f8-42b2-b70a-47cd3bddcb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a519ede-5131-452b-9cb4-62d5a773aada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e7532b-8af3-4456-bb9c-a9c764cf4025",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1a9051-ae8d-4cf0-9303-4b7ac05c54f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f040aba-be34-4fd3-b03e-48e3dafcd653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22065540-f049-4b84-8260-fcff42f0f1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "130f8f65-d56e-4702-b546-7b9f5b69ab64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63565a11-d6d1-4d5a-a36a-912be0bf40ed",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285020bd-b00e-4f45-9961-2d70905d0d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9abbc7b-4dd8-4624-8d5f-5609b77f3396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c371f4b-209f-4c85-b25d-6c208e331e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "821cbf67-d1d8-4663-bb1e-5e4be6cc7bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5a6760-fc40-4c5c-85c5-1d6d02d42497",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdccef4a-4d61-4cfa-91ab-2202b017ff61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4432026-01e0-4ff0-842e-abae12887366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11983c99-dc69-4583-b9bf-b4edefd486d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa6e456-7d68-4e61-9571-9f821a015b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6659462-8462-43b6-9936-d4ac5dec1bf6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af24fb95-24e5-4828-814e-d55b61433111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491c5124-1870-4074-9e39-1edf5a892ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c13ccf-4fcf-48a7-8337-0513f6ea3d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a8bd1b-64ed-4169-ad6f-b11f85581b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8da916-b4d0-40e3-bc7e-d82379b808bf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cbcb0d-1a5a-4812-b4aa-3d6314b094d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b538100c-d51c-4d24-af36-3023613ef16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be59c431-6939-4bff-9c95-625a74dee0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a256d12c-7dd5-4fe6-ad7c-d2aa9f4a62eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b980a03c-096f-4c3d-81ef-b77bc97aa7b4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f07f8a4-3b61-47dc-8619-a918a46cfbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9c03f7-f622-466a-97b6-4711417de583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4b54ae-b7b0-4426-abc6-e8a2816b6108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8b49c4-8c5e-4c08-bda5-d5c17600823a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feec9082-0a83-49f2-9a6e-2f2c5fd6372f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddb5e62-fa66-4370-b5f6-975851e74b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7679755e-3811-4cdf-bfe0-03eb7a463cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc58af20-ff1a-451b-8c1e-04513d312488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dde95d3-1aac-42f3-8cbc-b8978e6a3b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc60502-0977-4b5e-bef8-ec089c71d453",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14130f86-9e0d-44ee-85ec-ca09b90460e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba3363f-fc60-4e2d-99a9-9019bda0804f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9356da19-0e0a-4579-81da-0bc6f5522718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d15f1164-bd34-49bb-83b2-e51ad6d0d4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5270232b-6f18-4929-829d-465fdeceaf58",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb73973-0243-44d5-963b-9ac78454eff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c03075-579b-4e79-9c97-492457dbe9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e309f6-a7c8-46a1-b670-4b8457d61614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5db06fcb-99ae-4519-a8d4-0a8f1fffc7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42114bab-ea40-437e-9eec-7d82d4dff899",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839f0dd1-8481-4efb-9704-0358f3aabc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9364b049-39b9-4739-9bac-4f318bf6207f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1f84d1-6ef4-43da-86c5-e7d25ec62bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c6c43b-7378-4888-a58f-828efb9a85f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd23411-e1a9-4fc8-90e6-e6b70cfea73f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e914532-1634-4274-90eb-f5fa197b4b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb9505b-5368-4ffa-9118-de3d9321c87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb46e3d-7067-48e2-af4b-c0be236e4e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "708c326b-8401-4b2a-a0b0-1bf885455850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f51e424-98e0-4d5b-873d-ac782adf0952",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b720145a-4907-481e-b5a0-aab2eb881d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca665b99-6256-4a00-8063-fcfc5eb84d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c0966a-c0ff-433f-b79a-309ae1bb2980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "73ed830d-8988-482d-9fd7-99ab68004b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4925a901-977a-4616-b7ef-ca6decca6798",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5a8b80-cba3-4ec7-978a-5edc5bf749d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cff628e-70b3-4a39-b185-b4e560a33424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295562c4-9382-47da-93df-8ded227be934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2977397-681b-4675-985d-b3ece4ae1b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25ee82a-7388-41a7-8945-6fefeb23fe83",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea185c4-2a4a-4367-8475-e906d9f4c693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d096272-bb24-4976-b6f9-c3ca009cba98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e4f2e1-f038-4f22-a2ce-a654e02fc9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1050338-971d-4f8e-9a45-6d5f5e7cbf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c50a7ef-92f5-415f-913a-bde789ccd057",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad409cd-d291-40e5-9c52-119bb53d3b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "13957ad0-2841-4e06-b21a-5bd76ef44839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36494fb4-477b-42ae-9485-5be30dc8bcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "223001e9-24ea-4cd1-941d-187cf6ef384f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aa24ab52-21c7-4100-b200-99ac5819d2fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d541f46-7f43-4928-8f14-3b6fe12172ba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7a17c0-39c5-4c06-b209-acb265a6945f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb6cda79-19fd-415a-bcdb-28ff9d09a210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f10784-50fa-4e58-810d-eb2fe314da40",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf0d8b78-aac9-4253-8a4f-a155a2268e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b686d3-4154-429e-a618-7e837a2cf065",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e67f37-102e-442f-a905-afb56595f0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fcacc9d-0c2d-4e8d-8bf2-b492fa2adc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17067e8-08ff-4382-8766-50625bacbd76",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2a6c7bb-6c68-4f85-b0fa-aa01920bd88b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e7e55f4-9233-48cc-ad2c-e0656aaa2d2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f8bdac8-334f-4965-9f32-77354dde4b99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5f38d02-52e3-4d4d-b3c8-c8ee49fd398e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a45770a-680d-4acb-b664-fd7e0b820c46"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31681bb8-4635-43c6-8198-1a3506554a88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "895134fd-bb2b-40bc-8b97-df9066d0b790"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4cd583c9-ddb2-4715-bde2-f6a6dc516e72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "235919fc-a1de-4197-aa60-d58de1fe604d"
                }
              }
            ]
          },
          {
            "id": "983fa107-f737-4f17-ba8e-42c863ee2832",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f0c3e940-1efc-4984-9d3d-6d93a102e17b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18261253-3cd4-4674-9481-b1649bba9dfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7edf3075-e9cf-4d68-81b9-8e944958e9d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55fba032-0745-4601-ba0e-38e49f802c38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c5a790aa-cc7c-4372-8c48-5d5602ca136f"
                    }
                  }
                ]
              },
              {
                "id": "6ebcae07-51ae-434a-97b1-31587278989b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "143e8012-1e86-4abb-af4c-2fce43a09cf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62415e8a-3bcb-432d-a625-cd2882d0a4e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a5fe0b4-db7d-4acc-83e8-0472be983be0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a7fd629-a965-4c34-95bc-9902a8e93d52"
                    }
                  }
                ]
              },
              {
                "id": "78187988-a3f2-498f-97c7-abc982235387",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb26a95a-798b-4bca-ae65-b5f37bbafeb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7af61f46-6905-419e-96b0-9d88cf5c0619"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c68aa9ed-0d39-47b8-a72a-e5af4a195f04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b3efe5c-115e-4cb8-9e8b-5bd0a553a7a0"
                    }
                  }
                ]
              },
              {
                "id": "a4bbac3c-e13c-4e38-8d4c-612c46876e5d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "170dab3b-e478-4f46-b3e2-59fc23189cfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "300f77ef-64fd-42b9-82cb-42fe4b8b0862"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28adfc87-e5d0-4021-aff0-02dfcbe2de7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "caba276a-065d-43ef-8760-9328976b75b8"
                    }
                  }
                ]
              },
              {
                "id": "928bdca4-76d6-4724-b05b-d1b9f5bb02e2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f112db04-0072-41ff-95c8-dd670f1c1ae6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0b6d174-184a-459e-8939-b7517668ec22"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cd6e34e-2347-4076-becb-10920d3bfcda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3a234fd7-5d73-4ba4-9520-b38e89db1e22"
                    }
                  }
                ]
              },
              {
                "id": "d57b4b20-2128-4f15-9c56-871dffc3c267",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee0ef0bd-cdd5-474b-a736-a214f9c1b821",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98774e0a-6239-41cf-b033-57125c02487b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ff17826-eff6-4b79-9c58-e2a3acf7af3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b42e503-6bf3-43e1-9741-2c0d55d3062b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56fb8dc5-78e3-4e0a-bfc1-6cdeeda37d21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "956157f5-c8af-4965-8eb5-42dc442fee6f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d91e9bea-9072-4565-8c17-c8e516b98b04",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e848a92e-6bd7-4e64-b0f6-fa5c380f953d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33a58da5-8180-40ed-b80c-e45b56cb52ee",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7f5df038-7538-44fd-a896-978d3919f2ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09c75864-9c7e-4a15-bb71-4d537af13093",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c703da3e-ad8f-4ba3-9acb-681b61f0f381"
            }
          }
        ]
      },
      {
        "id": "07c92cf3-4296-4ec2-aa11-63c9cbd6fdbc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "59d8175d-b834-4080-bd50-2ca6d9d85f6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ccfe39d4-1c08-4c70-89e6-319ad8b14426",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b4333e6-3c68-4166-a154-08a45d849aca",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f212bc24-973c-4826-890d-3df707bddd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b6a330-cc21-41b0-bf69-c25f87079082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3a9967-3ee1-43ec-9c73-53724e58db58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4435159d-ef1c-4d17-819f-e5103ce17532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1570f431-5b66-4b5b-9e1c-558ec2a3983d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39db8c54-5625-4af9-91bf-71353751ed25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2892cc1-58d7-4928-9566-7237f2cebd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4773235-319d-496c-8cb3-9235033d88eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd9c4f3-b07f-42d5-ac98-845cb9eed534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123407fc-e3b5-47d8-ae41-52756ab02adc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16fda2f-4498-411e-92e8-1d439dd654c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d45037-ecd0-479e-9bd3-03799a491a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c1f0e2-86ad-49d6-be7f-cbe9c7e887e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7d8ad9-39a1-4875-a82e-ac5a344a7310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8bfecd-2029-497f-a7ae-304870e2108f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595d70a3-ed7e-44a4-9f3c-20c605062c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7200a413-9ea6-47dc-8511-03c199238efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005a59bb-df3f-4aa0-8ca8-39cb75761434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7fd8a6-9a9a-4ac6-916a-874dedace4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea89aec-ba42-47df-8e0a-baa9a04dfc50",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc266839-4413-48f7-b337-69fa35548722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9bb1a76-4406-4654-904f-313569952b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd56894f-da82-4975-9b6b-250ebbc8bd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6af8690-5b4c-49eb-b14a-cdf670177a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e712d4f0-a6d6-4fb2-826d-7e370c5a1f81",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa1afa0-d63f-4541-bf00-393982dbbfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7868c5f8-8121-41fc-95f2-70c6fc210c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a38dba8-c09c-4a0e-9365-f889a449755b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d965f687-4923-47d3-9af3-52fbb86fb5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18797e57-7ff9-4fc8-b04c-c54960b38a7e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ad37e8-e22e-4311-a61e-87836fb3db61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad2d2c91-ec73-4ccf-88ce-e9e6a1f12adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12ece8e-574b-47cb-b12b-d25315db837e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dded182-23bd-4a61-8e69-55e137c8a05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5cee10-77cd-4792-8029-a87d669e325f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d38e997-0466-43d7-a5b9-71884db7314f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb20d762-cba3-413c-b3d4-cc467928d028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffae514-1367-44c9-a931-2ba997f9fb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d2378d-823f-4f3c-8d06-9175a0769445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69069ba9-7b14-4c7d-9034-52742bd55654",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bc8793-4da6-40ac-bf51-c15dccf4cccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8ef94d-f654-4af6-88f7-4828d2455632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb80b961-e1e3-4817-a1e1-a062acc2fb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8b3761-6447-45da-8133-a8fc52bcd15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90473eb5-4e01-4dc8-88e6-3f3ea8b63f4b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1c8355-856a-4fb0-bb3b-5df6529ca522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e75add-9d0b-43c5-82a3-d5d8cfeaaabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8757423-db92-4cc7-b701-23d9cf6762d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a78a2d7b-8cad-438a-9564-062d92183a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4a342a-76e0-4ee7-8f76-f2dfd263a17a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3481cb-c36e-493e-98a9-d4631a86ebb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832f10dd-1ce3-46b2-bc40-a86f241ddb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb02db9c-b63e-4bdf-9fb9-61d215fdbe53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "25da008a-ee51-466a-bc8b-6e33b1a5cc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29401b5d-96ba-49e6-999f-1b8a18c19612",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3398c7e7-0366-4ed7-8693-87f805f19271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b99bd515-1559-4f82-b17a-b3870dc8ec56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e98fec-19dc-4a27-882b-16e4576e3be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6810b9-3424-45eb-9077-f31c8d511ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb7a679-e107-4db8-8eb6-1495538cff6f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a770e67-f173-40a3-a803-005c1de4bd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6ebbd2-4066-4b07-8189-480e27f52102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee176e8c-6333-4d74-9cf5-3d167b6e8092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3812f7-0f01-4a99-962e-96914efaa9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68baef6b-e3b8-48ea-9a79-709d14d54c41",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bd139d-4ab3-444a-ad8a-13cd5fc6244d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d72ff0-5bc0-42c1-b700-03b7acb74cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68c1995-5877-4083-a4c3-cb94da347a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "51020ea5-073c-41af-8abd-41278c09adab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1112b9be-88a1-48b4-aa28-79848a84be4e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c7b120-c5d7-4e84-88d9-28e936629c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b74973-0205-4d18-a48d-55c77c7ff409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d427d2-6bc9-4476-a645-0bdcb70bf949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "478e26e5-1325-4a94-946a-b4c07291a1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb19cfc-c2f4-4d91-b530-d850c0ef35df",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58643675-cfc4-4e31-af94-31b2002c7ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6258aa-6172-4454-a894-680ab00ea94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3e8981-d0e6-4860-a543-6e034dc8ff89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e41943d-5686-43fc-a162-b5951ab46bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b77e93-ba76-4067-9b47-0864e3d509c9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cee7115-c1f8-4a93-87d5-89e476a57f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a6223e-f31e-438b-b8fb-b0fb9e060c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17a02aa-05fd-4edc-b205-fcf57dcf8e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc191986-48af-4cde-9116-72bc17d61a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bd979f-b1a9-4d38-8919-8721b55f6f01",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c678dd12-9744-4e44-a7c0-18f00820959d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c276b08-7719-4743-b19a-f65be321f5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcadd500-2a5d-4a02-aa5a-ef1f707c546a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91c6b6ca-9d04-4504-9507-e1ea49e01304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3003c1-9adf-4440-a71f-577402ca612c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b74834-e33c-4ee6-8c30-e87a676c17c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665f5014-9601-4c37-a6df-04714df70f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cda4031-c2fd-4546-a64f-a2c4de162f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d91a86c-cff9-40cc-9519-1c811ff8ea08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f10b921-7db1-4779-bb53-adf799f76409",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f231a51-0a0c-4116-baa1-6f677ddd190b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a088d9c-a9d8-4f06-b3ae-d7606bb76663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c059c4c-430f-408f-949f-9ffb322cfdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f31a1d-7f8f-49ea-acb3-7bd4bc908740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2446677-e84a-4e00-8d17-354a49bf9fa3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20415b2-d11a-4e00-be0c-f32d187ccba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276bc3ff-585e-46e9-a723-da1ae76382c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef91326d-6cfa-472f-815a-afbbec235275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45712260-fad4-4cd8-80dc-2e8dad07a1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c456e5-aaaf-4dab-8f6d-33ecc608beb7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6a5a8e-63d3-4a6a-a186-d62a0dde168f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1999cef7-dd2f-4fce-9271-c427e3fd8545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b7ee09-1f23-48bb-a586-40bbf32be332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa7a47f-d86a-418c-bce0-25241977b490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef9f8f9-aec7-4ffe-b77f-2756231e7d8e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c66346-d38f-49fc-908e-807f392c14ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a568a6c-dc1f-49f6-80f2-fec11c62d426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87c3f8e-ebd7-433d-89c0-00a5fb769619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41868497-2629-4409-afd6-194bb8019cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b01e06-7f07-48bc-ad2c-0a21f585c2b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a3421b-ce0d-4f79-afc2-35be72376526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a4fc46-b722-4101-8349-51675c69716a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bcc707-f767-4a16-ba1d-9e4f3f82d349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7054e747-ab3a-4976-8451-72ca340125bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcff480-7521-44d0-8128-ad1bb86121ac",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240952a6-bd59-4729-86c3-054f7f121a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2999d98a-75a1-4a1f-b500-5700dfc06a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55748401-013f-483d-90f0-ec637534badf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bca0506f-66da-44cf-bcfc-7edd5b35ab0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc6851e-04fa-4868-8f6d-4204f1f90627",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b1b224-dd56-4498-828c-fbf659c95331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305dab47-704e-468f-a0c6-af778440a74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1685ef9-fd32-43cb-b7b7-8c1c28836ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a884d956-d16c-4188-b279-2b0d1c8f6bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9efbe1-71b0-408d-8c1d-7027db8e3cc7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f38bddb-e3c6-4683-bb58-75b4fa3b8fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55ab04c-ca5a-4696-8f32-0c90bd6f732d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdfbe5b-24c4-48ee-9982-ef06f56a2614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3a56f9-c009-4386-93ff-2b9ed8b5d440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca90907-ac5b-472e-8d73-51f1400010b8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e0085e-d317-4e21-a240-e161aa8f0a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b2500a-62f3-4e11-8d01-3905bf5fcc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30c40a5-fe77-4711-b557-6f0a7d9ce541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c834aa1-8fed-437d-a6d5-e46fa82b19e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed32daa3-91ce-4ae6-9830-849c71829b0c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc406b1-8a3a-4b6a-8090-adafff5a3612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b230861c-2718-400b-af50-391443a13c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7601028-0bf6-446b-9a85-901116bffa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0749b11f-f7d8-44c6-91e9-7ed6e58312b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1eca2e8-409c-49d6-983f-bf7bca66c2cb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d15364e-c7ba-4424-93ed-d1a24d76cb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9163d41-f7c6-41b9-b4d4-e000c1fa4c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82e592e-2058-4bd2-b6c2-28902a1c3a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebad4b6b-1087-4a98-847e-64e6e36cad52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b9d17c-e891-4276-979a-d3fd586f526c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013a143e-6b1b-44c1-ab01-c6739911d12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76aecae-f53a-4962-b2d0-854a6cb46488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbbb382-4ef5-413e-9bbf-2f7ab34bfb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92ccdd1b-1a16-4f48-8538-ba75ecb924a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bfd83b-ad94-4384-ae6f-da7a705736aa",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba92877-3039-40cc-ba5a-068bced9baf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88e3360-40a5-47a0-8f80-11547e02472a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebdde56-5f2f-4049-8f05-c97a67fe2c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd7203e-8992-4548-b79a-ab157c242448"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aeb6fae1-9127-45f1-941f-d67f6e615a60",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79fab1f4-d478-4696-acab-e77f180842c0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839c2c8c-8f00-4e15-8d40-0a8a54733a08",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4239bd5c-a996-4479-816b-00a303da5790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fc5d3f-c43f-436f-8fcd-05bf1d14f3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0ef8336-c80c-4a97-b1b8-d91790c38cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23eae0e5-14eb-4fe3-861c-c425a2073e80",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f0f4b3-08b3-4910-bab0-76f6d9bc5892",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea864fe-d47c-4a6e-85af-0f509f561055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47285708-f17c-4105-9898-1e78e030f7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94f979b4-1e43-4cd2-96e5-6f2c9bb13207"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7639eaaa-9ae6-45b4-8536-981a7b7bdcf8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "238ecc8f-94bb-49fe-b73e-f204b74a8e12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85392054-a99b-43f0-b1b2-e3c3691866d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1261aa6-b592-4571-8556-c2c37e2e21ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f2c065e-db57-45c5-9754-9b69443983d4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4ed485d4-fc35-4d51-9abf-93ed3c7b233c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92394dae-9818-4df6-8cce-34c66e51734f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfd01f0b-fbc2-49fb-ba4b-aaec80626b06"
            }
          }
        ]
      },
      {
        "id": "d285c59f-976d-44ee-8514-fb373a1dee26",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "26c69a55-823c-478f-bdb4-15a175ee8645",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88ba791e-89bf-4261-a125-6a49d5276687",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7301e9ac-22c5-4847-894b-4f8a261a96e1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70808405-872c-43a0-9993-2b66aea1806a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed87843-12fd-4842-984c-90ff4d7fa96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4482c91a-341f-4a9d-86ed-0508b69dfbf4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876701bc-2fb2-4510-9d0a-d09f2e09c41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d34f50f-6d49-4d64-9c62-186f23a9c430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df43c95e-4b40-471d-811b-fd5614acac5e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92272fdf-1f56-4c8b-a660-efbff687c0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbea49c-31b0-4c0e-8e61-406e6c5b65bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cc41da-1821-4817-86aa-bca567ac789f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e044d3-d177-4bd6-b827-667374a8714c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af220b0-6e82-43d6-aaec-74018f812a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9237ccc-c889-47ac-854f-800425d879fa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e802ff28-9805-46f4-8426-d22000c20fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7aac2a-5ad8-4288-b0aa-43c338e38a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcddcd6c-1dc2-42f6-9950-d13cc54d0296",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbdef725-46ee-4fac-b143-efb17e90247c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbc2948-be85-4c28-930b-16129f36906e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46172c56-20c8-4f9c-a8c5-afbb3a321043",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5d9a7e-9e10-466f-9d89-b3329d959496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00169de-c483-40a3-a1de-f977f37624f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9099b2-70f6-4e53-bce0-297f1cd299b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c582918-d06d-466c-9315-f1bcac0e5699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5184a0fb-9989-4f34-af3d-dd1dc5fd0970",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05ad4db-5087-43c1-bf54-10047bc3326e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f71bdd2-43f8-4870-a8c4-c9168405c737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c335138-636b-412b-b8a0-7b2c6e85ca12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c4e09c-db23-4ef5-8155-8f751c67223f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24454b4-6417-41ae-bb5f-87d10e57a5c0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa03728-1a2a-4477-8065-1af2e1720fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6019781-1998-4814-9ed2-4b922ce829cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b4ff1a-9efb-4f5c-9dee-aff344887db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d558a632-955e-4bbb-89cc-fd840e116a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8246ee68-c679-4821-a7a6-433a09eae2c9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563ee9ac-12c3-4fd1-949a-10302ea51f30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c77fbf7-5f60-4f04-9f5d-a38300943a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4514227-74b0-4ae9-ac4c-6dee1775bcf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce0b491-38d1-44fb-9967-8b668c565c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6ada56-d772-4b36-b55e-94282f797c0a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01692397-7ae5-4b1b-98da-b594747cb9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660a6b2f-9299-458f-90e6-568ae266cdb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773990d3-3383-480e-821b-2b1449d99ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6826b8-d406-430b-9a22-1fc309048638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaaa1fb-5b76-40f0-9d0b-5f68f242e53f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac40b9eb-4c28-47b4-afb3-dded74d3c6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd3efad-c5f1-469d-ab75-715ca0f3445c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf2aa9f-3e82-4a4f-81d6-4328246a48b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d709634-0e21-4fd8-a30b-246f57e1d22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77679961-5099-49d4-a4c7-85ce703c07e9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2746df06-01d9-46a2-b021-95be906fad3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdc45539-e4e9-4eb0-900e-40d3e43eb11d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b213c3e1-b38a-4170-9036-e776b4aa47c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4a3320-6043-44fe-b46e-8c58afd5c969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962b7338-cc92-4477-825c-d1ef683da550",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c20568-6950-416c-a12a-af5501ae4e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c616d9-ac97-43b0-806e-59cd3010618e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389cc64b-481f-49b2-9fb1-afb8289413df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cb167e-c6df-4e6e-8099-37efde32be29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0164030-a73e-4dd1-acf0-341baf90b97f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1285f7-6c17-40fd-9ad4-c28b34181ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f720f8e-4539-4d45-b79a-064133e3cdcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8eaae1-eb6b-42bc-980a-587d9cb06d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afb5246-1142-4b45-99ba-3a31eb427ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46440f4a-f12b-4dea-9b75-6f993d3d5b3c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04adc44-297b-4271-86cd-fc378d47cbd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69c7b8ab-6ce2-474f-8811-c28f6fc01446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47cf3a3-e42b-44ef-9087-239aa8ed0cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5561391-33c9-4017-a556-ab22c12d0165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a019dcac-157e-48ac-8352-fa7a38318b6e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0ecfda-bcaa-4f28-945d-18435c8e9c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3060011-eed5-43fc-b2a8-e1b1d537cc52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c10b035-e0dc-45cc-9b3e-ac6ca0b6ffc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72cf386-79eb-43fd-9aa8-afc3ac44c2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca30345-b2c6-40bd-9097-f1a3cc104889",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5da6772-68c3-4422-bbf7-b0cb9826db3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533e5c2f-25aa-4c49-a7d3-5f233ea2af58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd057227-6639-489e-a09d-f27f9f1a9c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54373d26-17b8-49db-9d7e-3e20cbae11de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e49778-f0bf-4be9-942d-58355d2fa95d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e26a4f2-1397-48b9-b758-c6d6e72dd3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63f4462-cf7b-4219-8f9d-ded5f1aa12f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481dab9a-ea77-46ee-81eb-6d28466a5f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602cd9e0-7814-4d19-80f3-6db668e6ae7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157ff113-05ca-4e0f-a77a-bc5316a48604",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacbcb6f-3134-4a44-9773-7a88dce73d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666f1d74-b39c-4797-9b12-6c94f38f440a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b833005-862e-4085-8072-adf47ec786cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7152d3d1-4fb0-4d57-b21f-df8cd9764d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6e0de5-bdcc-4ae3-9c7e-01abc5c095ad",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4c8fc3-c25d-4a24-8398-0eee03a2cae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acef758a-64a0-4b07-8943-4d62bf429243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0a3c58-b84d-4bd5-a9f4-45c08f8a7d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b0d9f1-4bf0-4224-9c44-87209a99e9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9147075b-8786-4c30-9ece-cba3a1b7000a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2b89ea-6102-403b-9b56-b0a7d611ab8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054e882b-7b4d-4823-a459-046c8f159ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3822b450-b7a6-4b97-8058-14734c2737bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a3665e-78da-4e46-967b-96d1d626e5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db26eb6e-4b6f-4f69-b78b-e38c9fd6f2b8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f1e4e4-576b-4f1f-8d64-7c39337664ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e6af29-cf53-4728-9625-66909a8e279c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fbbc6a-faa3-4e61-937a-dff099e3469d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0af65e-01fc-48f0-8370-8e7e0ae0cbc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7254e2b0-d3d5-47af-947c-050e180b8c3a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1599dfff-5124-4971-ac1f-ccae65d8c016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a8d672-3ce0-4f5e-8f4f-02d8c0dd41f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3584790b-f2e4-44b9-a18c-d66d8a8c2d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f3e7fa-484a-4284-ac8d-29a213636003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8899da0-6415-4dce-af0f-f5e97f14819a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f03d2b-afce-4412-9ade-511f399e38b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ece6db5-e771-426e-befb-c353cea4b30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049f888b-cc4a-4efb-9a17-efbd361e9aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d6192f-ad9a-4384-90a7-21835df19570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7697ae4f-e651-412c-903f-dcf25edd22e4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21491184-c9b7-4f9f-95f6-85825f306c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f249a51a-559b-405b-9ac5-9ff72cec1b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87390e8e-d74a-4501-9024-6fd523f6e58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f14e10-7f67-45b2-b5e5-fa923fc94588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d91cc4-2131-419e-83d8-9730339ef4f5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bc83aa-8a81-422d-a3ba-af084c3c4ce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989eeb74-bfe6-418b-a83b-fed336d2d737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fb3fb4-c7d3-4966-9d1e-ea3f729028c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a558394-26b6-4839-9444-13c27678e6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf0870a-da11-47c3-b3d6-a447d12f989d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081c7d3d-afac-4630-b784-2fb11018fb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92070c2-b6b2-48ec-9501-4d41e9eff248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5101199d-ac25-40a1-abe5-19eca83205e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d799c110-2d6e-4d15-ac7e-95b331d4e5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b22c05-c4a9-46c6-be9f-461627e210ac",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492a669e-e18d-4c21-a451-06b3ea87fa23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b508d4d-9d21-4954-b3bc-95bb63dc625f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e4c327-8cf9-4e3f-825b-99c2796ea444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e26c284-aef1-42f8-bb45-4985817f9582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854636d2-9735-4269-a2e3-d6a08a77d0ed",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f7fb88-21af-4e03-ad19-c538a3ed5e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b81a04b-bcd8-4cd2-840a-56d736ddd272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d4ccbb-fdc4-4199-a585-6e7c8cb1148f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c343977a-e78f-4cf7-ba5f-32cf8e02298c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a86085-05f1-4de1-b0c1-514620e1bb13",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2419840e-b8c5-495c-82a8-fe611e5e007e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6806dda2-b6bd-44c1-ae1f-65770c31aecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a821375-7963-4d54-aa66-da5c1641e9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8248659-88e4-4530-9e7c-dfb2708ab21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f598b407-5e43-44c3-a98b-3358c0fa4f0a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1ed352-6ec1-471f-9023-68477b027a7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db36bae4-1850-409d-9cc3-c17415e34eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51929f85-dbb7-4bc4-93a2-2f6ac322d82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2592d45c-5902-4a0d-812b-17c4f7720cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f10aef-05b2-453f-8658-1a9461b91d00",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce3ea5e-a802-4cfc-9e9f-98bd31e6107e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23cc8bdd-477c-4f87-8d34-84a49df3a938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5e7cf3-ed28-467c-a6a3-6cbde3dec331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2b5b45-54e2-4df8-b1c4-3fda7444d117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed82a483-8b06-4329-92e0-744acb7df15c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fb6041-a7d7-4cd3-9f71-98f718945ceb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "514c103f-4f9e-4399-9a89-aee17348e2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf55e464-d32f-4d2a-8e0a-032b3cc937f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc85d6d-d28b-4094-b3c3-59960b5a0f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a72dc00-a012-4c40-859b-30ff54372edb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbf6af2-92b3-4f33-8d98-11d59e81ae33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120ce4f2-d20f-4f59-8a22-e3e07ac4bc06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb76346-cf7b-42ac-8bd0-e5cc02f4263c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f036eb-3253-45f3-8c96-5136d1b18c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd18643f-f2e5-4beb-8b88-c3ef8d250928",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5744e1cb-2ed5-4faa-9621-b12c8293fd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b6785e-d7f3-42ed-86a6-d2100c6a7b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2de4b7-09a6-4a06-b0bb-a14c92557686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aff64e4-f01e-4ccf-9d93-538651e74714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46970026-74c3-4cc7-948f-b1b7c239d64d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381df668-f588-44eb-bd11-84f1c6a3a228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c81a94e-dee6-4dba-bc43-c348ff253fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607cd72c-08a2-4801-ac3a-e0fecce53ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7e48c6-318a-482c-85c6-8cf07d8dc411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccea1e3-acce-4200-9a2a-3b789c375339",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c51dc7-798b-4f34-8c38-13a1ef0ee84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2741bc-ca9e-4e00-b525-a8426a0ddded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fff501-9f64-4a71-b1ff-335fc475e2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057db389-042e-4fe1-808e-1831ab7ba6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b014fadf-4f7e-4f0d-acb7-749b6103893b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7897a135-d8a4-420e-8b68-29cf6d383ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b101eb2-2d29-4a26-a96c-9f10b4c8cf09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903fc494-9226-4783-94f1-92fe8abb50ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc66355-6ea7-4cee-a53d-ea6bf24de4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec724b67-29be-4053-94be-89feb09488a5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd9a909-2148-48cc-aa9b-b7515ab05cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79acbe83-84b1-4113-b65f-30f487736a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab446ff-765f-489e-a43e-f8d1f9249c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf598e39-1688-42cc-8ac3-2bb58196dfc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7157a0-3542-45a5-a2c2-ee01b0bdd607",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d4bfea-856a-411f-81f2-f7cb5bbdbb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0339df5-2cc1-4367-9851-9efdececfd97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16509ee0-9c44-4aa7-b79a-eb430338a2c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72678499-b960-45a5-99cc-079633f91376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8ede17-aca8-4fdc-87fd-598591ff3e10",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b6551d-96f8-4df8-9773-85a32a3263cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e2f60c-16c9-4a99-802b-a67f0ba3ec6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b588caaf-6068-46ff-a72b-e4013cf39057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf0eb71-8671-4afa-b203-e10066d71c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5426d31-234f-4f93-ab69-f8631e33bf32",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8613ca3-1dc8-44be-be19-3e9029eaebcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd3a093-e059-43b3-9dd9-b80bf7cebfa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f338d776-cd60-49e2-b3f2-701eab5e2485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09964a9c-17ad-43a2-a40d-6639275839ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6e72a5-c921-4a39-956b-63b5c4d35fba",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b071b3-2bcf-4b98-9887-5a1134e1ca87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac393ace-d402-4e6b-8ed4-328b7203292b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cfd4c5-ea46-4be1-82fe-fdeae7f4131c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cbb4414-0f3b-4cd8-9c23-6e65704fc8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf60c14-f34e-45a0-aff1-dbaa6d5d70de",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fa1925-5a90-42a2-8295-de18546e59cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8c1be0-6268-46b7-bf27-c4fc71153724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099ac4bd-87de-4550-b4d6-8797e7010ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf7d118-50f5-4c9c-b64c-057764b7ead8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb800e9-91a5-49eb-9fb2-a44fbc98f225",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0323e06-8e3a-452e-a734-38b36282818b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7440e7-172b-4bea-9a82-724d53da0fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f9a398-c456-4928-b4f5-a5ecc67538ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d73cd2-ba3e-4b0e-862f-6f354870033b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5cfe23-c35c-43b1-b317-d49316f9e116",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030fc978-6d77-4a4f-b738-43d3be6b0894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ca727d-f8e7-4399-9174-04c63d9aca3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad00eb3-9616-4726-ac48-c80dece2b48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b7ba5c-12ed-4259-8b55-f151619fb4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a516cab-ff35-40eb-8605-a76f50d32918",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31bd2f2-9d49-4df5-838f-98cedaec7945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e10d72-4024-424d-85c5-facc01fd29f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450c047e-4509-46a1-bc57-75cc1a1b66da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972cac8b-c3b3-47ed-afd0-9fe6682754d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59856e05-3b74-40f9-bc54-5c104cf476ab",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03863174-d6e7-4870-8264-4149c0812e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d59396a-11c9-4ff3-a427-fc237974f99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57a164c-b21a-4d23-8bbc-909088ad22ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a96b916-099f-4818-8378-4788518f5c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b125c645-074b-4f7e-8dc3-950d4d1dafe9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ddc774-0454-41b3-99c1-373361573581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae02044-790b-4348-943b-5e88307c3e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629f498d-7fc4-4fa8-a1ab-7af4dc942861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7acb266-7b96-4a4f-9c72-1ca14f872d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9fe651-2eaf-41c8-b630-23732ea7181a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dbb0e1-4bf4-4491-8b83-6584459c6f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2570fe07-c347-4834-8bc0-b91ee6a7a815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f97252-7dd4-4656-8aff-a4916fe3a318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c82571-70cb-402f-9f18-c7c170e76dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8625b8f-ac47-4343-a31e-392cd451ef0d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734bab54-55a4-42e5-99ad-63409802f893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289e1b4a-7a96-48c4-a52f-b50c30cc2997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c78dd7e-4873-4ec0-822a-db65c7e9327b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22bb49a5-aa35-4b34-b29b-832975c52767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c82141-e431-4358-8b42-73ba864829a7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7874e8dd-36e8-47cc-8be7-ff7bc3c021e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc866c80-2803-482e-a709-6d89cb08c7df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956b7701-ff88-4974-87eb-044f4391c8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0e9877-9add-4d87-84f5-34a8dec0e442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f1ef99-7390-401a-a6c5-f95ed23de7a4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5434ea4-b5e2-4d8c-acd7-ceb8af8a78c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c8eb99-8c1c-4988-a3e4-b5102ba5e925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fec73b-2de3-4472-92e4-37010a751788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33169b4-6075-41a5-b92b-51b7b5495244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cbfdd4-7599-4763-953d-bd17213be4d9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54617253-2357-4466-8344-bc9eaef7deed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85420ca0-34b3-4d2c-82cf-8dac50313667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11981e89-e58a-4acb-b707-77e41e057551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45075934-55f0-4bfc-8823-503b583ca64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6506a460-1f72-46b7-9e85-6f7354b5837d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03578626-f93f-4293-8fff-d464f43fa383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4f5c40-0b47-4d9c-8f5d-ac9f804bb3c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0febd65e-7841-46c1-b282-011954b623ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48dafdd8-2295-4f8b-8d90-7def933c1e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc9906a-aa8b-4e23-b67e-5d2e8b754ffb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edae405-8719-41ce-a04d-7230862ff47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7291ea-2efb-4479-9904-a2cba79c9059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49876c0-9a2d-48a7-b3e7-3c2a9610c5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75be20b5-199a-401d-b8c1-46479c90f5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67436b2f-6b4a-4d47-903d-1636f97e8106",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce02538-0ce3-4019-918b-d1c656809293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f1c613-666e-4068-a772-dcbcba06803a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ff4614-73f4-44f1-b4e0-8f6c3dd5c2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f164be8d-4ae3-4328-a7c1-5e9418eb5b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eb9bb6-00c4-406f-b9ee-493f8a5f94d8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f55b25d-50ed-4c6b-8d38-487671d285a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa6bf0d-23e5-44c7-aa36-10f2fc673f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de405b0f-a5ac-45ac-a422-a4d26654780d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688acad5-5177-4c89-8f01-bc4b85420a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50655946-ebde-4f00-af93-fcbf4b7da5e2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301f6fae-09bd-4f11-8b74-a3825e696d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a9dd16-c282-4f5c-93fc-3e804fcfdf2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f54a901-811b-432b-bbe3-4d51e537828c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8d6176-ac0d-40bd-9cac-6759be31d07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822c243c-4c02-434d-8167-676a8cca454f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4685c3-70bd-430f-90f5-935eb691c20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551ff865-5c73-4819-a7f7-aa21c2f835a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527129c3-3ed4-46ba-a53a-8b992b982cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560779b5-2aba-442e-90a5-e9dc2deb46f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d57e0f-987d-4191-8020-41729b64c3af",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c0dd5d-a56f-44a6-858c-b5fd03f6309f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6720d6-be5e-4951-96cd-3c8e636d441e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2d5e0f-c4ac-4778-9b89-444411703717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5092285f-7757-49b1-a3ef-914a8d02808a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6d660b-cccc-4461-a6c2-57b082345a75",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2747f69-300f-44f4-9dec-0111daf44576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248b8887-ca2b-40d3-8ca6-6bfec37c1aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbd8f2a-be75-4f17-80d9-2ce14c422f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44351082-e7a3-4a50-be80-cc3d99e6ee53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2fdc7d-b1f2-4861-8703-9f72d51a97ea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb511206-7014-4d4c-bd8a-584ae773e129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b43915a4-2cff-4570-8919-13305501a0c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ee1cf8-3701-4d51-ae78-34cd052954a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82f6bc0-b9a4-4c29-b780-d0c81e6dab96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2539d65d-3151-4689-bc69-02c87ffb9aad",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921a1009-8673-453a-b810-c2076ca8dcce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dae633d-5bad-4782-b36a-bd3708dc99f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f19262e-508c-4cd8-b583-607377756d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1eb41a9-d86c-40ee-b533-7f02ac76cf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f43d85a-cfcd-4646-9dcb-d62a9fc77387",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9777a76b-4ab4-4259-9a40-9e8e57bc9077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e598666-33f7-4c52-8754-bd54434b3aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e798ee-e077-41ab-8aed-38fc7ae3ae6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9258abf9-30ef-4135-9617-6c394d5d9a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459a7c71-4ab6-4e02-89dc-89c5d1bfd708",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2994e086-bc70-43d2-bc67-7616f26347f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d38f78d-69fc-403e-bb50-c1a57dcd245a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45180cef-7908-44a4-b308-670e2a2f31c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee5a355-d817-4d4f-8807-e5ffaf89b446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0536973-b77d-422a-a647-ea946e68f09b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c7c10a-ec8d-412c-a5db-1d7de58b8d68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf780c2-0a9b-456a-8035-d64f2a153108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7124cfb7-9efb-4fa5-a379-b65e1bfafd5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd636131-fb40-4f93-8839-2b2131287fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc72b2d-5882-4096-93b9-a97c39444b0d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8935d13-635e-4c1e-bc4a-8c070950d53a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c214178e-0816-4fc4-a460-baa374f2abfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1047232a-bf0c-4d77-bc95-8bfabff4ccd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535ad9b4-ade9-4932-8365-198f2d8905e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7e792a-2f9c-4be2-a29e-6296156d5b8f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8f2264-67df-4b62-a6b7-cc637bd29a5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4400009f-5627-4c8d-841f-4f7acd7a10f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e621efbb-600f-4208-89e7-556495bed7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d316e05f-406b-4660-bfae-cfd55e97784c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777bd527-046c-431a-a4e6-41384d9b76e5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7560de-5c49-4d42-86ea-d0a58fdc2bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "873579e2-d291-4757-91fd-669e12dc2550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c52346-8eb3-4b2a-8c48-fb16d634c99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f56991-06ed-4924-bb30-63dd39a58f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4776c186-76dc-4559-9a98-a8ee420d5435",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d979ce-605d-4dec-bca5-53aa45d63a7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372322cd-0a2a-45da-919e-eb0ccd0eb965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bc2d20-67c1-49c1-a917-6cfc37435393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f24238-887c-4d36-af6b-bea480db31ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72703b7-7a75-4e90-aaa0-f64353d96ff5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6b586d-13e2-49cd-aacd-97d0478e34e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "915734b4-6268-461c-b332-7b114278af80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24fa9b6-357d-4bff-be1f-ea7f1d1b81be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fab629-0582-4f8b-9f27-b71cd47b1212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dc63c3-5803-4be1-b2d8-ce7dc4d7e47c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bfdf22-db16-45d8-a84d-a73cd3ccc3b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09da9208-29c2-4632-bcc2-67f7f30fe30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d078b46-06b2-401e-b067-ac99cb6e675e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ed5de3-a2d5-4567-95c3-7d4d7bf23e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08674c84-f9d3-4a5b-bba5-c9171b3dc20e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6d1c47-0d2c-4ef0-a1a3-a58536af2377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "680a3c38-6a2b-48f4-a4f8-b8a1e832aa5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4759ffd-6420-411b-8f78-7a7a5152f6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70de4b47-7e59-4bc4-a47e-7a16398c4c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d845ac-e299-45ec-aba1-c0d9b7956646",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cff7a3-2fd3-4cbc-9f2d-544e1b8ef7e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33b3d945-ccd2-4194-83e1-257004ce8020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8597fec-f7a9-4a69-a8c7-c8f533111633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fa09d2-6c8e-4e9a-9998-5c26a8c3bb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fa77c7-b796-42b4-b424-2b78a962fb0b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30fe9fb-b3fb-45c2-be90-74a30d224154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deaf2451-2039-4891-8acf-aa06b0279dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f68e56-2f1b-46db-a700-2546989e35c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278c8942-4d55-4508-817b-83f176f2a23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2691775d-516c-459f-826e-0801f94532a6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507e9def-a948-4080-b80b-d57b32df813b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a122ff4-9041-44a5-bf08-ea37f8e37aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8771798b-1e2c-4679-b419-37545263c49f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f35d9be-3a13-42c3-b00e-9c4e960002b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4aee50-4970-43aa-993c-da8f59bd2211",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf3129f-86eb-42ef-a667-7af2c39d7c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9266f91b-728b-42d0-a33c-63856c6f9ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fbb414-b27c-4625-942f-678adcfae844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa748dd1-731c-4849-948a-01ffd7cebc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c676dd2e-6a7f-4465-838a-e0a1ca47a9b1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f34676d-bda1-4106-a1a7-fe610c628556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88697176-86e7-4023-b4fc-77e9bb736cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb382665-5eb2-42fb-b03d-0935488e0017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a27e6ad-d4fb-455a-a31d-e39db6d79ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f1e1c7-3b8c-4118-9753-e242c21eb6aa",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7363887-7347-47a4-8203-daba1f223338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca1e0df-9bea-41a5-8666-1012047632d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf957d9-7d4b-4939-afb0-d70fa3b71516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a282f6a-a75d-4584-8008-3c0ce92567be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56c0396-c485-4b16-900a-aeedcf2d6256",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d621718-3298-46c0-a418-c8d6645dc764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76c7fcd7-a0ce-440d-ad89-288e3381f5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b32f5a3-894b-4f7d-85ea-7cb5bf7d4034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c3bfe9-1159-41d3-8b21-2e72d1ff4bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd81196-757e-45ec-a670-cfb46e181b3d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9de9d0-e75a-47d9-90e4-7e6e914b6f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dd18876-8c76-4717-87eb-25929b9dd3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7434a1-14e3-45e2-be94-a2a87f7149f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716aa7b6-9a83-4099-97ae-5839e79cdd6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09571a89-34da-4cb5-aa9e-ae050fe3af4a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc85807-f549-4e4e-a95e-88166b02b5c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb3d3bc4-7ae5-4eca-9137-9408020db174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5778c829-dd6b-4f07-9684-8d3c3ce97ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a32926-9925-4776-abfb-45a93c3f648d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ce788c-335c-4c93-b399-a6183c5c10d2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc23e728-df0d-43a4-a5d3-44eb917e99fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e776dc21-7eee-4fd1-827f-527f81c649c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d54e647-1ca9-4125-aff7-10f108dc4790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfb0f66-b6af-4576-ab13-3614558b91fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3308922-ff23-4d3f-b659-ada362c47877",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33ece33-c6e2-4fd5-86b9-85a485c93d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b58f75-0a4d-43ca-bb80-73079751c1e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77e9d67-2324-4851-872c-5ee4ef591c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063da706-a555-4bf8-aae8-be26329c5a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12038370-a43e-499f-ad69-89b74b2b3488",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77808c68-040a-408b-9195-5f7b59000bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07b032f-93b9-4af8-9a92-8459a840c033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c7fb94-f43c-45aa-9079-1ea84bbda1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da594242-3f6f-427d-b4f4-a2910e252511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2d737e-f529-460d-bc8b-ad73111b47cc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a5da06-48f1-40ba-a379-3fc219ca1b3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e45143-9024-4b1d-b07a-0c6876e5129c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3354fb3-56f3-4d50-8522-6f791177527c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a03d05-57ab-496b-8873-28da19ddacc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38614b32-0a79-4445-a48d-f4538ccfe07b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e7a63c-c41c-41ef-bb93-71b7da3cb50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca37188-5fe0-450b-9325-bbd71945559f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394d8a67-d01a-483f-b507-217595186499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e92edcf-9f30-4f41-a3d4-cf9dfe2783b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23874f5b-4b90-4268-8a57-6e5c7c1a9aa0",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecb7f54-fa59-4c33-9492-390063be6478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8e011ed-4589-4d88-8841-f9436dd6b718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b73275-4614-435b-8187-44364c76b9e4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c615ce-b438-4f8c-a419-1ac4fe0722f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf00ed8-9088-4769-aac4-e84037b42638",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d912bef2-48d4-455f-b1db-b8053cdbdcf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a55fc255-d74e-4554-8b62-fc2d7ea13daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a288f0ef-b2f4-44ef-8a83-d4644ec506a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99aa993-ff1b-4dd9-af9f-921f9069ba13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1bb05b-26b0-4be7-bd94-d64f52bcfdcf",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322d073a-9f5a-4c34-a0bc-c70676987805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91d636d1-ddf2-4742-9711-a8b5fa033686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2a5c76-e4e6-48c9-a794-0e32819542cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037a6eaf-f58f-4787-8536-cfe60694adc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc59eb29-51f2-42c8-b766-ffba8be39ef9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b5f8e7-2ecc-47e1-b74a-2a136d85e2f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bd14fc9-483c-46d2-bffd-151b717a1513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d231e5-a686-439c-89cd-f9200f67e374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23dcd6c6-18cf-466b-ac43-67f23df9d56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7011f958-0d1d-4424-9b27-c237c413cd51",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e81659-86c8-417b-8125-925a50558ad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6c3960d-1d80-46d4-974c-bac6576a9ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686af40e-948d-4a21-84a3-1cf576a165f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3030ac-191a-44fd-9dcc-448fe80974da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd98c840-fc9e-4fb7-9815-2056f07aee36",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe6d95d-562a-4a60-9d64-12222268768c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c5426f0-1ece-48bf-be28-24c558654572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d84e882-4faa-42dc-8aa0-af3b82548719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1933f4c3-9d81-4f7b-9354-7cdeab7f3fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f3a7e9-53ac-460d-9381-378ed3016c10",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4262f9f7-144e-4bf7-ab1a-439a25e374e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46d89925-5d40-4568-9935-b5786e975920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1859da-5e88-4544-a3d4-0a5b9528e475",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e65e25f-381b-4120-b4c4-392b1aeb8a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a80b15-3a8d-4197-b222-2a11d42c2212",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534798ca-5a45-430c-8244-eaf2d4af264d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88123d19-b65f-4950-9a3e-1d0d5d134d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59105962-79c8-4c3e-b984-9058f6545048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f189ae00-9bdd-4769-baa7-a2a9961a1b61"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8571e2f1-3029-4450-8fc3-ded2fe7a6170",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f106bc4-3e17-49ee-9274-181a5248d206"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a0a2b54-9028-4b40-b1d0-980edde3992d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "227c26ca-338a-4792-ade1-dbc538ea8a55"
                    }
                  }
                ]
              },
              {
                "id": "7d45884c-ae36-4ff0-a33c-807a9f9c9b5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ad561ee-c48c-4578-87ad-e5d7dafc5d88",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfed5d0-7d44-4e56-8af3-b5aa85c20198",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1ae1a471-b64b-4cbe-bc76-8f01d3f1cf3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee254abd-724f-4479-8e61-4c767a0ff93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9006a42a-4791-477d-aaac-05b83da5e94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071f59a1-7820-4b24-b17d-9caf1741a2e6",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dde3bb-bdf0-4728-8540-2c2f853e30a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f6c6fcd8-a624-401a-963c-94a9e2886b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884ca2d6-8e0a-4e3f-a39f-52a837907510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f9fd12b-d8a7-4098-a79e-716c7ea89723"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e10edb4-27ce-4292-af60-53aae159dca4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4910fabe-eb76-4619-a504-b5cc78312abb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8e0a1f0-8fbe-4219-b1b5-adf73c21e72b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1a8d9bd-8dbe-49e0-b91e-c5431aaf44eb"
                    }
                  }
                ]
              },
              {
                "id": "aeea8d52-168d-4732-85a2-840772a8ad2f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a17345a1-4fb8-429f-a64d-bb872ac71422",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7b7772-b828-44fc-a552-146eebbd89cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "44ba2eaf-fac1-4a61-9cde-128df55f8540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecd6ac0-6bfa-4fac-ab4b-ca8c432cd121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040c2561-e7d7-4d8a-b226-b32f9421c737"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "76cf14d4-d995-4908-bcbc-fadbd59ca446",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e11d8e6e-dbce-4fef-93fa-e7525179636d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30e2544b-00b7-4d33-8b06-fc281970d61b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9ae9853a-d5b5-493b-ab3d-fa2b98bae543"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fb1be73-2f97-452a-b7fb-dedb5728b5fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb03e206-affe-44fe-b770-10a3d897320a"
                    }
                  }
                ]
              },
              {
                "id": "10e8f7b9-4c87-422b-b152-cf4412fb4073",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "167e3c64-1a31-492c-80cd-9a9e78659bee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6ec8e82e-a51b-4a7b-8d1a-0a79065c77ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52346368-956f-4b5f-988a-c46fe71babfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8f58754-9c4e-4f9f-b4bf-d733743b1a6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed6ae149-00ae-4f44-a3c5-83f76ada52ca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "788ca174-12a2-4ab7-af14-c953267163be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "addea33c-0df4-429a-9550-cb46c8de2753",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ead92368-6ee6-42da-9f12-9853ff2fa8ab"
            }
          }
        ]
      },
      {
        "id": "2c15c91f-efa4-401a-95fd-6aeec10166c0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "af3b3426-969a-459f-96dc-eeaf406aa165",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31d2ba78-b21f-479d-9204-34ccb4583ffe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "310c641a-79ac-4789-b2cb-454b00b3748c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755589ee-ea36-44dd-9d3d-1ae0a555b6da",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6d47b19a-c70f-4d62-ad3e-4a87fbfe2d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cd9cde-ef19-46b3-947e-b998d7bd31c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9790e6e-2706-49dc-885e-8db5a3c00419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687771a7-4917-4283-8ec2-ac9f0e091c5e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a811640-ec2c-479f-b214-caece37f3865",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4eb0a814-69b4-43b0-86c0-b3a42d0d3c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0840dccb-3b42-4496-bcd5-99ad56693f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d486f057-5f58-4c9b-9be5-c5786287134f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b86a769-f75b-43fb-bfe7-ac899d5ce369",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "594659f6-975e-4611-b93c-a62120b05992"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd2596c5-4927-4ce2-a3f2-9057740de8ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7b9eee7-4049-4c44-8259-c5f989a58a49"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "def249e3-4a7a-45e8-bdad-ff77bec4bb66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1383ca10-9733-4a47-9cb5-90fca2359bfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d72539f7-25cf-4eb9-af01-fd4f3080c1e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31e447bc-1466-42f9-ad0d-293a167a0d12"
            }
          }
        ]
      },
      {
        "id": "8bf17796-6fe4-403d-9ada-bed7f4f4ecdf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fd3e5071-3d95-45e7-bd4c-aecba1d9039f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae88af3f-43d0-4ed8-a736-cd5d15269746",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "031b07c6-3f32-4bb4-905d-e69c4c324058",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3948cd-7454-44e6-afe0-0352c109dcf6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "502fe6fc-46c4-49e9-8342-247e06abfb20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c3c9c2-53d4-4bec-ba2a-a1ddef7aa624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9087ddd3-068c-4a28-9c12-c1da30d3463d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503d0e69-2166-4546-9dfc-d7abda16d870",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611f9c29-ff09-4b2f-89ee-4d658383be02",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3cfdf9-8a69-4ce9-b25c-c5632f1b5e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763cd59b-56d0-4c69-b533-142d02bc0955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "726e4527-4bbf-427c-8ea2-d389846f5f11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "976cd575-0f99-4cad-bccf-4d02b47d3b8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "634eee4d-3997-49d7-a6e9-d11cd3ba791a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e6e8b92-49d5-4ac4-9c7c-82d12d030542",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65c81838-84f4-4409-9f6d-a695ccbf6b7d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e924e7c-bd02-4a8d-b9b2-7be5ffcab315",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e95258bc-dbcd-43e9-bf93-291cf1bb502a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8329585-eaca-4ad8-95e5-a2526c340a69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6279767d-3306-4c05-b10b-7d67b73f72f9"
            }
          }
        ]
      },
      {
        "id": "4de59fb8-d9d5-434d-9e3e-904203fff8aa",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "04a9cfac-e4c6-4784-ac91-a527a5eb84c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09529889-0769-4ca1-8701-e8b7514f2947",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a35b6cd-553d-4b4b-b9ca-61579a566ae5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8cb976-1f8a-4a53-a06e-40119aeeffef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0c78270-b954-45b8-a81f-0d0ecbf24012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96915ec9-a4d4-4e05-a0c0-b4a140ef4305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93039ad6-1e4e-45d9-ac26-8f7dc23c0f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e91a01-2fb4-4b6b-81b5-c38c4d89dffa",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14257e10-bc63-4d5b-a2d8-8e0c27e15455",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "040fd3ca-8f5b-4c27-a2d9-e4e8f26302c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ffba4c-15b5-496c-94c9-d928427e3f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cee39a23-6f7a-4ca7-84bf-e122260f9a48"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5d378c5-5450-49a0-868e-82cff9639bc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b594d9d-1c2f-49de-873d-c045f7bac89a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6b549b9-c340-474b-9481-651231ce982a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "212ec125-0c6e-4fb8-b471-d53caf1832fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f201573-2233-427c-b6f5-e616d6861c2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0235c9a1-8290-4e3e-ba23-1fb509d61629"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1274c66f-6213-49f0-bfbc-b6161b3f1bfe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af3ec57d-30c5-4657-a92d-83dbc1d067c6"
            }
          }
        ]
      },
      {
        "id": "9ee60b40-a1e7-4c26-8853-08dcadead336",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad042298-3eae-4079-9bfc-8ef2186c4a87",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "659947c1-9586-4f04-8fbe-5d56ee44d6f1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e856dc74-1a34-452f-b6fd-045d42c18f5a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83b216c4-12b5-4166-a4a7-f35335175204",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f18ab6e-53b9-40c7-bb88-c7f5c67e2c5b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 702.05,
      "responseMin": 14,
      "responseMax": 7525,
      "responseSd": 909.701088587303,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684542946190,
      "completed": 1684543139916
    },
    "executions": [
      {
        "id": "309fbdef-2e2b-435f-a697-fd81e36c6333",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4cb9c7c3-23fe-4f6a-ba84-7329657a382d",
          "httpRequestId": "136e0329-7ca3-4683-84af-477206b28ff9"
        },
        "item": {
          "id": "309fbdef-2e2b-435f-a697-fd81e36c6333",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3401a4f1-1636-41d3-98f7-482b30fa0bec",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 0
        }
      },
      {
        "id": "e0370d20-0483-4fec-8ee5-13138ffe8862",
        "cursor": {
          "ref": "71d5f7d7-c8d7-4b6f-a6e1-7f9e0b4f33a6",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0b9ae1bd-f810-4d5a-aea7-22ee69d180a1"
        },
        "item": {
          "id": "e0370d20-0483-4fec-8ee5-13138ffe8862",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "75cf6323-f180-4d13-85f4-341da3f221bb",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "b4c5b715-9a3c-4c5b-ac85-f126ecafbd26",
        "cursor": {
          "ref": "854fa12b-fe5a-4519-aff4-af39ba4bba35",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "23671137-f958-4f81-9fbf-b31c11700fd8"
        },
        "item": {
          "id": "b4c5b715-9a3c-4c5b-ac85-f126ecafbd26",
          "name": "did_json"
        },
        "response": {
          "id": "6c2906b9-80cc-490a-97c8-684201d6edf2",
          "status": "OK",
          "code": 200,
          "responseTime": 1204,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d31acb-c6fa-4da3-8887-83e22268ed4c",
        "cursor": {
          "ref": "376d2947-0365-4a19-ab7e-f0a4666c4c65",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3f38a157-27f4-45f8-a009-c84f5dbf4695"
        },
        "item": {
          "id": "d7d31acb-c6fa-4da3-8887-83e22268ed4c",
          "name": "did:invalid"
        },
        "response": {
          "id": "6aa1446f-d3a3-4c9b-80f6-b9acb78df27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d31acb-c6fa-4da3-8887-83e22268ed4c",
        "cursor": {
          "ref": "376d2947-0365-4a19-ab7e-f0a4666c4c65",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3f38a157-27f4-45f8-a009-c84f5dbf4695"
        },
        "item": {
          "id": "d7d31acb-c6fa-4da3-8887-83e22268ed4c",
          "name": "did:invalid"
        },
        "response": {
          "id": "6aa1446f-d3a3-4c9b-80f6-b9acb78df27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd46737-0204-497f-9beb-ecfade28aca2",
        "cursor": {
          "ref": "afd64ffc-9ace-4142-840f-a56092320e08",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5fa90904-4760-4bb0-a4b2-d5b330535bb9"
        },
        "item": {
          "id": "dfd46737-0204-497f-9beb-ecfade28aca2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8ce03d0e-e1da-4956-9372-ae984a9ca52f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 665,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13784f6c-190c-4519-a83a-3ed097e18457",
        "cursor": {
          "ref": "aadf9267-bf51-478a-8b5b-949b0f9ac8a6",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b90d132f-a9d2-494c-93dd-d11571bea9c4"
        },
        "item": {
          "id": "13784f6c-190c-4519-a83a-3ed097e18457",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "59bc2f1d-e1ad-4645-826c-40ef9797f8bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 628,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79fa116-ad0c-4551-bd18-4ea53861f1e9",
        "cursor": {
          "ref": "b7e93c85-6a27-423c-9db9-1e0b47aed3ba",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b87d616e-3a83-4332-903e-e9d54e75f00c"
        },
        "item": {
          "id": "c79fa116-ad0c-4551-bd18-4ea53861f1e9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "610f2fd4-5d1a-44e7-b3ed-b1d78b374d85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013a35b0-d99c-4411-b656-3604fa481ea8",
        "cursor": {
          "ref": "2d562e02-643d-4293-8930-1a93c8ba7c3f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d06ca2fc-0961-4ee0-be71-92a9da9d3fe9"
        },
        "item": {
          "id": "013a35b0-d99c-4411-b656-3604fa481ea8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f47c7c09-2c1b-44b7-93f1-9a484703dc88",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 602,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013a35b0-d99c-4411-b656-3604fa481ea8",
        "cursor": {
          "ref": "2d562e02-643d-4293-8930-1a93c8ba7c3f",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d06ca2fc-0961-4ee0-be71-92a9da9d3fe9"
        },
        "item": {
          "id": "013a35b0-d99c-4411-b656-3604fa481ea8",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f47c7c09-2c1b-44b7-93f1-9a484703dc88",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 602,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62263afc-fa6e-466b-acad-09c6113a302c",
        "cursor": {
          "ref": "0594e124-43b1-45bb-b62e-0a19368edb19",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "28715d79-e641-4e6b-a776-4ecdc87ce92b"
        },
        "item": {
          "id": "62263afc-fa6e-466b-acad-09c6113a302c",
          "name": "identifiers"
        },
        "response": {
          "id": "1f44ddad-7bec-437e-b004-9aca861f6b5f",
          "status": "OK",
          "code": 200,
          "responseTime": 1377,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb97fc11-7a4a-4aec-926a-b743daf4bfbe",
        "cursor": {
          "ref": "d9e74bab-9f98-4f5c-a1a6-1979c8e87a45",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8e4a7cdd-ecbc-40be-8d71-35ec818afcc6"
        },
        "item": {
          "id": "bb97fc11-7a4a-4aec-926a-b743daf4bfbe",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a9928206-7936-432c-b6c9-ed7180a26ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb97fc11-7a4a-4aec-926a-b743daf4bfbe",
        "cursor": {
          "ref": "d9e74bab-9f98-4f5c-a1a6-1979c8e87a45",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8e4a7cdd-ecbc-40be-8d71-35ec818afcc6"
        },
        "item": {
          "id": "bb97fc11-7a4a-4aec-926a-b743daf4bfbe",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a9928206-7936-432c-b6c9-ed7180a26ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4ecfc4-c8c5-41d1-8374-4ebf834bb823",
        "cursor": {
          "ref": "c87327b1-855c-4630-b46a-87ced1e38e20",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "501c72a8-1559-4127-9243-06dbcfee0dfe"
        },
        "item": {
          "id": "1f4ecfc4-c8c5-41d1-8374-4ebf834bb823",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "91e21351-3c51-4667-bac5-2bddf8970374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d4d408-cd48-4493-a1a3-4f63109e9a87",
        "cursor": {
          "ref": "0eb59bd0-0032-4b06-bdfd-4c58a28147aa",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8fd0f93f-04d7-4e7f-ad4d-bc235d0c72e1"
        },
        "item": {
          "id": "63d4d408-cd48-4493-a1a3-4f63109e9a87",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "293f1641-e38f-4952-8126-8e80f670360d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e786291-1dcd-4f01-baa0-7ff1e673b548",
        "cursor": {
          "ref": "d6edd4e4-7dc8-403e-a80e-762bad85a202",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8d7a0dce-7b9a-42a2-b75e-3381691fed58"
        },
        "item": {
          "id": "2e786291-1dcd-4f01-baa0-7ff1e673b548",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "46ad47c9-d471-4f57-8f48-34811d1d4bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00bc770-b05f-43b0-a9fc-5f6c0326ce01",
        "cursor": {
          "ref": "5d08d526-cc1e-4813-9056-9b3cda01dc1a",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "530e7752-c703-4f35-a5a3-8b5536d20f17"
        },
        "item": {
          "id": "b00bc770-b05f-43b0-a9fc-5f6c0326ce01",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ff14d093-9cd3-4f02-b773-8e0d20ec23e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590ce23a-6c8e-415d-bb1a-4e1207b6ef0e",
        "cursor": {
          "ref": "194a3e7d-47c4-4ace-b140-52f30d2a1a21",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dcc12359-4db9-4bf1-b467-68193c0c61b8"
        },
        "item": {
          "id": "590ce23a-6c8e-415d-bb1a-4e1207b6ef0e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "98df8267-c221-49cb-84ab-53f2be4164ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75c9321-ac45-4b44-b88a-4f7d255b3b94",
        "cursor": {
          "ref": "b791a9be-df7c-445b-8902-6c95a5d6af09",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "18a26e47-7b77-45f4-867b-5014ddc571dc"
        },
        "item": {
          "id": "e75c9321-ac45-4b44-b88a-4f7d255b3b94",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fb14b207-0dfe-4192-ae73-73c94517c5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417180ab-baa6-4ff0-9de2-dd7ec634f9e0",
        "cursor": {
          "ref": "519b1e77-82d8-4041-a8ed-c8d45c57e24c",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f6f9a8ac-2649-44ce-bb4f-57b3b7711acb"
        },
        "item": {
          "id": "417180ab-baa6-4ff0-9de2-dd7ec634f9e0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "639dee35-8d49-43ff-8aaa-4486dc61f605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fd76ad-aed0-4693-82e7-b40e0d2bfb70",
        "cursor": {
          "ref": "4945aeaf-1fcf-4dcd-83db-4fa534f95755",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f294ac49-21b4-4260-9b8d-55b3729d5d93"
        },
        "item": {
          "id": "76fd76ad-aed0-4693-82e7-b40e0d2bfb70",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5b6ce5d9-3b6f-4f06-ab3c-a15c2487ad3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9991ec-0330-40f1-8a6c-ffb04f4c5584",
        "cursor": {
          "ref": "f3ecacc3-a802-46f6-81d5-4c57c9a74031",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1d699507-e669-490b-a99f-091e333e96bf"
        },
        "item": {
          "id": "4e9991ec-0330-40f1-8a6c-ffb04f4c5584",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a489b892-cc04-4204-8731-884954ee61fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98609c2-038b-4a88-a994-992fb917040c",
        "cursor": {
          "ref": "8eaa5b4c-97fc-4a53-9f04-564a7fd44894",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f651186f-86bc-49e6-84c5-95fa74aef316"
        },
        "item": {
          "id": "c98609c2-038b-4a88-a994-992fb917040c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "55bb7293-5acf-4314-b99d-a1d282164594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570c9d09-aab6-40d8-89d4-60f168ad90de",
        "cursor": {
          "ref": "da364715-b2b5-4782-861f-5ddb5a50fa3f",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "666b2798-65b7-4bd1-9fce-e8fb7b86e9db"
        },
        "item": {
          "id": "570c9d09-aab6-40d8-89d4-60f168ad90de",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5b6878dd-0e21-4ad6-9e11-4c301664dc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4fbad3-0693-4f47-a5b2-7a343ccd2c56",
        "cursor": {
          "ref": "48e4a65c-baf5-4351-8259-3b9e809ce6b5",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "db615155-ae2a-4005-abb4-29e044fdc248"
        },
        "item": {
          "id": "ff4fbad3-0693-4f47-a5b2-7a343ccd2c56",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e2c9b18d-88d4-4489-b0c2-cb41bf64c0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8227f59f-2424-4f79-b87d-97c7db259af1",
        "cursor": {
          "ref": "193f9474-a12a-4e75-8d4c-c6f630921912",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5eaa8e88-8ff0-4e99-9c43-74e347d50136"
        },
        "item": {
          "id": "8227f59f-2424-4f79-b87d-97c7db259af1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c23bb905-a4bd-4e64-8f97-031379407828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010b052b-de78-4e56-8231-cacfb5548a57",
        "cursor": {
          "ref": "eb55dfa0-6184-4213-9318-9b79145d9892",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0ac71c14-409c-4117-be38-5e5e54b39d4d"
        },
        "item": {
          "id": "010b052b-de78-4e56-8231-cacfb5548a57",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cdfc377d-bac2-4f50-a414-51e9e6222e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4792bf67-848f-4b3c-979b-fdbc4a8fba22",
        "cursor": {
          "ref": "d039f050-b6f4-407b-98b3-68b71d156871",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "75b384f6-8848-4fea-8732-73c966806180"
        },
        "item": {
          "id": "4792bf67-848f-4b3c-979b-fdbc4a8fba22",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "92cd44c9-e5ef-4e55-b482-75d3a9f9cdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32eb1e8c-a368-4aa2-b77b-6b5de25be24a",
        "cursor": {
          "ref": "5678d842-1985-4174-a935-ed27ab94885a",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "63545520-3182-4482-96ee-67ec88b32efe"
        },
        "item": {
          "id": "32eb1e8c-a368-4aa2-b77b-6b5de25be24a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "561f5183-090b-45f6-8281-4e42a058f091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d33fd4-31fc-4b38-ba8f-e591fc089dc9",
        "cursor": {
          "ref": "1fe2ecd1-14af-4927-a1c1-8146b599172f",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b55e1a28-240d-49f4-987a-cef4603a755a"
        },
        "item": {
          "id": "34d33fd4-31fc-4b38-ba8f-e591fc089dc9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4db4653d-ad32-4408-b9a9-27cb3b956626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db556252-5cec-4c6f-8e77-18e60298f3c1",
        "cursor": {
          "ref": "a0bb8744-e7da-47d6-89e4-28f50ae48ccf",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fb217a77-268c-4b9e-a912-59bf90414aa7"
        },
        "item": {
          "id": "db556252-5cec-4c6f-8e77-18e60298f3c1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0f91607d-d25b-4cd4-aaf1-79785e9c3905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f886f7-8bea-4f0f-8044-54dce30d9f8f",
        "cursor": {
          "ref": "1f84987e-9b7a-4a61-bc96-0e56eac0b19b",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ad7978a1-497a-4a0f-8f8b-1a55dde214aa"
        },
        "item": {
          "id": "67f886f7-8bea-4f0f-8044-54dce30d9f8f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cfeff4b3-ad81-4d2c-86f0-099decf4662f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded42d50-a5cd-40cd-8b15-571d3bdcbef0",
        "cursor": {
          "ref": "b62f10cd-ed12-4e0a-8896-3c76fa41202c",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "94c67579-77ea-418b-a8e4-f684cff54549"
        },
        "item": {
          "id": "ded42d50-a5cd-40cd-8b15-571d3bdcbef0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "26cead6a-7507-467d-a359-eed0f41faa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb76a6b-456a-4806-829f-5b54269eb549",
        "cursor": {
          "ref": "996e06d3-7f04-47c0-b576-6bf88f464f82",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b75d9f3d-6b69-416d-ac03-e8a76d471e75"
        },
        "item": {
          "id": "fdb76a6b-456a-4806-829f-5b54269eb549",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8b874845-3c1a-45aa-bdcf-ff304361175c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df70c85e-9ff6-4de0-a8fe-004b57f55256",
        "cursor": {
          "ref": "495ffa60-cc0d-4a01-8960-60560082de29",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2df2c3dc-dfe7-4016-92de-8f0e6f97132f"
        },
        "item": {
          "id": "df70c85e-9ff6-4de0-a8fe-004b57f55256",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0eff9a43-9fa3-4df8-8456-2ed1571abde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55d8b09-451d-499b-bc7d-1a09b4c17574",
        "cursor": {
          "ref": "bafaceb4-83cb-4c6b-84c1-9fd75b885905",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "93107ff1-7b03-4d94-86f9-5a2b923ff835"
        },
        "item": {
          "id": "f55d8b09-451d-499b-bc7d-1a09b4c17574",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1fb45f44-76bf-4766-9853-ef31d62cba0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401f3857-46c8-446a-88f3-17a46c9a0896",
        "cursor": {
          "ref": "aee4b967-3171-49f3-ae0c-4f3648d2b5dd",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0de23ca4-91af-4a5b-9eb7-4afd240f3178"
        },
        "item": {
          "id": "401f3857-46c8-446a-88f3-17a46c9a0896",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "57f56ae9-be84-48af-b39f-e5a28e3eb52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d8f939-fbf5-453c-84a0-a65b0567d7b1",
        "cursor": {
          "ref": "a23f0d2f-158f-4d11-a8c1-85118d45bba2",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5bb664f9-7821-4d0e-a872-255d0f6af5c4"
        },
        "item": {
          "id": "44d8f939-fbf5-453c-84a0-a65b0567d7b1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8466f2b2-30a6-45ac-85c1-991765d1f1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39deb365-5ce8-445d-b91a-1105b2827406",
        "cursor": {
          "ref": "f97185bd-4fe6-4443-a253-3acf4462178f",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ede8419c-0d7f-4fac-8823-004d10cf0663"
        },
        "item": {
          "id": "39deb365-5ce8-445d-b91a-1105b2827406",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ac35f39e-3533-409b-8e37-041204c2cdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bd5652-ae7c-4d19-8802-db37677e4a4f",
        "cursor": {
          "ref": "0b250145-9cfa-477d-81be-bbf63ab5df61",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e95a6497-07d6-46f0-85c6-cc041efc3ce6"
        },
        "item": {
          "id": "02bd5652-ae7c-4d19-8802-db37677e4a4f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "42efd231-ce5b-43f4-96c5-c0533369a6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f1fa01-cde1-4812-8b9e-d26095c0ae67",
        "cursor": {
          "ref": "1e75436c-0e68-4be3-9d92-e6ad7984168e",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "489a5c46-72c6-45d0-91b9-e6c691ec1125"
        },
        "item": {
          "id": "d2f1fa01-cde1-4812-8b9e-d26095c0ae67",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9463473d-b6af-48bc-9125-8b10c3f1ae76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78da699-a0ba-4e73-8196-bd0a15e578b9",
        "cursor": {
          "ref": "46a3f0f3-44df-4208-b768-66a1ebb5b22c",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "30105866-9326-44eb-a9ba-e44ae0c9d141"
        },
        "item": {
          "id": "c78da699-a0ba-4e73-8196-bd0a15e578b9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ff5ca62a-e3dd-479e-8380-89c1ec2379ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9599ea-6f67-4aec-bdd0-0046920f9fd2",
        "cursor": {
          "ref": "7a3c53b6-8e8d-4491-b80e-cdbb86e145b7",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1995290b-f1b3-45cc-9881-a26f27bfefa6"
        },
        "item": {
          "id": "8b9599ea-6f67-4aec-bdd0-0046920f9fd2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "98896690-4318-4295-ab5c-85585e6c2fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ac3f74-7c56-4a9c-a2fa-805dde97095a",
        "cursor": {
          "ref": "c86224fc-67bb-4f34-8680-9b66275a2da7",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ccf3333c-3c01-46f3-85bc-00fb861a663e"
        },
        "item": {
          "id": "c8ac3f74-7c56-4a9c-a2fa-805dde97095a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4fde4665-bb07-47d8-9769-1aa84c415184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21589cb7-1258-4d3f-af94-9d115cbda5f7",
        "cursor": {
          "ref": "0bb63450-4688-4ea2-a9fd-745b785e0040",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e71e9f1e-bcae-4a7e-99e4-8883a1eb2744"
        },
        "item": {
          "id": "21589cb7-1258-4d3f-af94-9d115cbda5f7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "80a1c2c5-f511-466a-8eb7-1800cf085b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd28627-a7b3-45eb-a789-1281a99efafe",
        "cursor": {
          "ref": "50b8ca13-0f00-40ed-b1cd-3e706f86bf15",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a21f0045-2c45-418f-8740-27bf944f0af8"
        },
        "item": {
          "id": "8bd28627-a7b3-45eb-a789-1281a99efafe",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2b0d19c8-a721-4d5d-9327-0a6913505966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c38f38d-c43e-49ee-8e53-67cf9ebf9b51",
        "cursor": {
          "ref": "77c0752f-58ed-4417-8378-088d7be5f1f2",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e70e5e76-9228-45e7-aa3d-87b7edec256a"
        },
        "item": {
          "id": "9c38f38d-c43e-49ee-8e53-67cf9ebf9b51",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fa296c47-d941-40b3-8c8b-2963c83bbe28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24697cb8-887e-4bbb-818c-e88ed1d13432",
        "cursor": {
          "ref": "dbcaa453-54eb-48b6-9b2c-1ed0f092698c",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "549611e5-5f9f-4860-841d-335fe981afd4"
        },
        "item": {
          "id": "24697cb8-887e-4bbb-818c-e88ed1d13432",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a0ac4dd0-8db5-4295-8615-c723b58a433b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 785,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dceed82a-7659-4cd4-b689-2f2abc7d6357",
        "cursor": {
          "ref": "428359be-851b-4514-8f50-db0bc77764e4",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e0f81f11-7c0a-4202-918b-7aa5368a3508"
        },
        "item": {
          "id": "dceed82a-7659-4cd4-b689-2f2abc7d6357",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "508b406c-1439-4cba-b4d6-775acec80013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d437545a-d42b-449f-bfa3-f18bd1ec59f0",
        "cursor": {
          "ref": "27eb5cda-c47f-4f41-8978-1e633aa59590",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5ecd77b5-b54a-4419-8527-becfb8f9621e"
        },
        "item": {
          "id": "d437545a-d42b-449f-bfa3-f18bd1ec59f0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "64a4dcbe-ff2e-40ee-99f3-fa3abb5768d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee0657b-fcb3-4bbc-8d75-01cc6bdd5f6b",
        "cursor": {
          "ref": "7bb3b9bb-116e-496e-a07f-bf33e5033ef3",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "84765fd3-4c74-455a-b4d3-29821f3c20f3"
        },
        "item": {
          "id": "fee0657b-fcb3-4bbc-8d75-01cc6bdd5f6b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "50ee3bc7-b8bf-42f2-8cec-e274a5c00a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14b0d0c-38c4-435f-8263-ffa53cb817bc",
        "cursor": {
          "ref": "28f96d67-465a-4d41-88cd-d4ae884f5304",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e290b5be-2187-4362-b3dd-fac3477b91d4"
        },
        "item": {
          "id": "c14b0d0c-38c4-435f-8263-ffa53cb817bc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e962c574-2087-4228-87d6-70ee3663cd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af696c86-4cce-4776-a85a-ed4449da6ea6",
        "cursor": {
          "ref": "ef661f54-7420-4e0c-b9ac-fa6806327e52",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "27ecee01-0fb8-46ff-bb39-1484e7476aa0"
        },
        "item": {
          "id": "af696c86-4cce-4776-a85a-ed4449da6ea6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "eb13c8ae-56a3-484d-bef4-6f6814bbd087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1790809-45f3-45f2-a28d-1c64d59ff847",
        "cursor": {
          "ref": "2bcd6300-8cfd-4859-a8fb-f599d153b415",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "97e5aabf-4b0d-4e09-b81b-cc10356612d6"
        },
        "item": {
          "id": "c1790809-45f3-45f2-a28d-1c64d59ff847",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7cde7474-c804-4d78-a16b-e13cd200daf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30db3925-e0ea-4941-a0d9-b1b6cd64d7ca",
        "cursor": {
          "ref": "ce1e371d-0087-4a4a-96d7-7aaab6f97379",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9dc80435-191f-4d68-b660-fcff56797c2b"
        },
        "item": {
          "id": "30db3925-e0ea-4941-a0d9-b1b6cd64d7ca",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0d0ce075-510e-4c56-afa2-1aba76eaa35b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 738,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5beaf3-b71c-4283-b805-286e111656bd",
        "cursor": {
          "ref": "ae95270d-dafc-4a5b-a9fa-7e9bd0b36409",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "913cc36c-a20c-4fae-b0db-300c00e2fcd9"
        },
        "item": {
          "id": "6d5beaf3-b71c-4283-b805-286e111656bd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a3532b39-b514-4152-be4e-d781ac8bef88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec534b3-5764-4cc0-b1ba-9d68ced77d12",
        "cursor": {
          "ref": "50e7092c-84d4-4435-9bf1-040d9af8495c",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b78448c0-ef7c-4cfb-9661-602f6a4b2729"
        },
        "item": {
          "id": "9ec534b3-5764-4cc0-b1ba-9d68ced77d12",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8a729aa6-6070-4249-ab27-a20663a600b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acf6f6d-e9bf-4213-9e2f-2ccef94f67f8",
        "cursor": {
          "ref": "526204df-0d4c-4031-8108-1c17689e2c67",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a9df3421-dacb-4976-81f6-c4560787f2b7"
        },
        "item": {
          "id": "4acf6f6d-e9bf-4213-9e2f-2ccef94f67f8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "97fcda12-6e58-4677-bff4-6e3e411c553a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d73b9c-3c86-4709-a693-b21747a144cb",
        "cursor": {
          "ref": "8ae04088-fcc4-492d-ae7a-382ece15d524",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ec98d511-0e00-42c5-91e5-943a8b2d5342"
        },
        "item": {
          "id": "50d73b9c-3c86-4709-a693-b21747a144cb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e65f09ff-c4ce-4f7d-b53e-9206e9ad91ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e007038-61f9-4d62-ba0f-28b77cb8543e",
        "cursor": {
          "ref": "e8390baf-9b74-409d-9e9b-c08ca34a3af7",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c75946b1-4c82-4958-b130-2cd99348c790"
        },
        "item": {
          "id": "5e007038-61f9-4d62-ba0f-28b77cb8543e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "714bf789-db61-4471-9d41-867e2affdca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b096f62-345c-4e19-9bfe-0993e8eaf031",
        "cursor": {
          "ref": "180e3ae1-c416-4d78-aaa7-6bd61ca1aab5",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "95bbe0d1-a30f-4ec2-a5cc-5f18eefa15eb"
        },
        "item": {
          "id": "0b096f62-345c-4e19-9bfe-0993e8eaf031",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6d0b1b7f-737d-4a7c-8a74-e0930c551a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443996f0-a519-4df6-8e2c-1f93f4cb1efe",
        "cursor": {
          "ref": "64514609-49c8-4060-a4a9-2515b771a326",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9d359ada-5707-4cfe-a5e4-a552ff9f7812"
        },
        "item": {
          "id": "443996f0-a519-4df6-8e2c-1f93f4cb1efe",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2cb7716c-265d-423d-a9be-25c54f3ec13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a0404d-28f0-4475-8c94-c2e402c07de7",
        "cursor": {
          "ref": "54e71124-8521-4551-b536-806acc8de8e5",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "95f0c792-ed99-4e03-8b2d-926163fd92b1"
        },
        "item": {
          "id": "d4a0404d-28f0-4475-8c94-c2e402c07de7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2bd3b457-2a6a-4d96-82ea-81f525ac9aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c628ef-52ed-4192-8408-fe213f04f372",
        "cursor": {
          "ref": "e5931cea-abb4-4a2d-a0f0-cc59ce9c3027",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9f0dc540-4c9c-4fc1-83f9-eb36ead86be8"
        },
        "item": {
          "id": "f8c628ef-52ed-4192-8408-fe213f04f372",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a0349508-ec5e-467c-af38-a01ecf6dc3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf3e0f1-7c16-40b6-8f51-c7eb7beb156d",
        "cursor": {
          "ref": "44ed6e24-c854-4f11-9769-ab72df813403",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e06b0a3e-f66a-4e72-8571-0c8bbb69ddde"
        },
        "item": {
          "id": "abf3e0f1-7c16-40b6-8f51-c7eb7beb156d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ae0434d4-9ea0-422b-913c-c03ced50cd81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b70337c-de49-4a31-8cac-6c98174b8184",
        "cursor": {
          "ref": "389b6d5d-acc8-4c33-842a-5d0aefd6b1a0",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "29f3816e-7997-4d93-95d2-ba5b4c701f9f"
        },
        "item": {
          "id": "9b70337c-de49-4a31-8cac-6c98174b8184",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e49f93eb-b4be-4e06-8bbf-275ba9058993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679a30e4-cfb6-4f50-8f89-066adbff8446",
        "cursor": {
          "ref": "3e168109-2001-4af2-b413-442dd6754b4e",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0ec3e556-d1ec-4e65-82e9-2b42c6918648"
        },
        "item": {
          "id": "679a30e4-cfb6-4f50-8f89-066adbff8446",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "886f5e4c-9296-48d7-82d0-908f503a4999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d7f200-866d-44af-8854-f8b55c38046f",
        "cursor": {
          "ref": "8dbfbeb4-f5cc-4d1f-9e96-88dfff659bcd",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8a53942d-4dfd-4fed-8ae6-2121dfa17769"
        },
        "item": {
          "id": "06d7f200-866d-44af-8854-f8b55c38046f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0b3470b7-1a0d-4d6b-8ea5-b6b26ce4c4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dbd223-d526-4e27-9d4c-dcd622aa79bc",
        "cursor": {
          "ref": "23c933a7-a286-4428-85ac-2a3687f8c1b7",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d2f1354d-2300-4bdc-a174-bd4681f99ff5"
        },
        "item": {
          "id": "08dbd223-d526-4e27-9d4c-dcd622aa79bc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "080c36c2-42e7-49d0-bd0a-b43d734e2432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623aab8c-5653-4139-b79d-38376feaf292",
        "cursor": {
          "ref": "30d9b2a5-feed-42dd-aea2-0d1cbe830ea7",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "abe3957a-8a1c-4495-a628-b7d923be34eb"
        },
        "item": {
          "id": "623aab8c-5653-4139-b79d-38376feaf292",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "87aea069-82c9-45e6-83af-a007beb58bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc9c45b-796c-419f-8fc7-2d93935faac9",
        "cursor": {
          "ref": "41049959-4258-4e77-aa0c-ef852aa35b20",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "415b5aac-c3c4-4737-92b3-d4b66998baf0"
        },
        "item": {
          "id": "2cc9c45b-796c-419f-8fc7-2d93935faac9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b39088f0-bc83-4b85-93cc-f2e046d0884a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d49207-af3f-4a2e-b117-c8efe2352cdd",
        "cursor": {
          "ref": "67ecdb4d-591b-4fe6-b794-b27a9f41d3e0",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c84e10cb-4823-412a-a54b-5697d4974056"
        },
        "item": {
          "id": "34d49207-af3f-4a2e-b117-c8efe2352cdd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b45c608d-3ebb-4a12-84ab-2619faba77da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12a0597-01b1-4196-a530-5c3f74452edd",
        "cursor": {
          "ref": "0443432f-1f61-4bea-b7b6-e9d1aebf45db",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2789dd98-4bd4-48e8-9dc9-07ab0f4f92f2"
        },
        "item": {
          "id": "b12a0597-01b1-4196-a530-5c3f74452edd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8d9f1596-b433-4abb-be86-82684d66eaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7000e6-beaf-49cf-a471-9a693417ce2f",
        "cursor": {
          "ref": "88689d59-97cf-4fa6-b14c-2b7b1e4525e9",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c0b968b5-3fdc-4780-8913-f9734aee3dc0"
        },
        "item": {
          "id": "ff7000e6-beaf-49cf-a471-9a693417ce2f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "46d9a907-49de-47cf-94ed-480d85015673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c603a3-92c7-4714-8632-c6db94fe1809",
        "cursor": {
          "ref": "1dfeba01-b203-44be-8cf8-05bf23966527",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "558cf46e-2f95-4366-9738-ee5a3cff6b7f"
        },
        "item": {
          "id": "62c603a3-92c7-4714-8632-c6db94fe1809",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ecd2f398-1e1d-4341-81fa-624ea4fa9a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b023c89-a914-477e-bc9a-71c7bc430bf4",
        "cursor": {
          "ref": "450c4f27-f8d7-4426-bf75-742c465d227a",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d644aa4b-b68e-437d-807d-f85ce42eab2d"
        },
        "item": {
          "id": "9b023c89-a914-477e-bc9a-71c7bc430bf4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "eb5f3dae-4208-4167-af85-ed56ed227235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f964bbe7-5af3-42f5-a280-76b883115795",
        "cursor": {
          "ref": "3010fd59-aecf-4de8-9543-c54c56b647e8",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "51fcba78-8c96-4c34-9648-3e02cdd4fed7"
        },
        "item": {
          "id": "f964bbe7-5af3-42f5-a280-76b883115795",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a5815ca1-0c6c-44c4-9484-51ff2bda0c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b12d29-e450-4d7b-86d9-da969ac87301",
        "cursor": {
          "ref": "3ebb4ff1-fc8c-4ce2-8f8f-22cf3d776748",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7df47783-13bd-41f9-89fd-5dd3fc6820ae"
        },
        "item": {
          "id": "b8b12d29-e450-4d7b-86d9-da969ac87301",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "aeca7286-37d0-4195-b28d-da3d38ebcb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd09558-0a86-426a-bde3-fe662f757488",
        "cursor": {
          "ref": "44df634c-1670-46df-b92d-618ce6e8a66f",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6c549a5a-0616-4795-91d5-a12d3a6c4c8c"
        },
        "item": {
          "id": "2fd09558-0a86-426a-bde3-fe662f757488",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b1ec3f7c-64f4-4a17-9c87-39dfec5efc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdeef194-2fec-4a94-b52b-c6cae059cf66",
        "cursor": {
          "ref": "69415cd3-d045-4307-8260-8a5dd3b4eed9",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ae65e5fe-5b67-45fc-9d88-469d1e8ea44d"
        },
        "item": {
          "id": "cdeef194-2fec-4a94-b52b-c6cae059cf66",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5ae12fb3-1e42-4908-b164-8f1a73af9af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d48361-da83-4781-89ca-3fb4bd138507",
        "cursor": {
          "ref": "143bbf58-9bec-4dfa-aa72-1ecae2099b7e",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "27d1a40c-812f-489e-9c88-d1b8e337a1f9"
        },
        "item": {
          "id": "56d48361-da83-4781-89ca-3fb4bd138507",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "29af3cbb-953f-4329-bf10-393ca13114f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34beae7c-33ab-4fda-8f1d-4c943e464b11",
        "cursor": {
          "ref": "eb2d8e72-03e8-4ec5-a5a4-7a7945948d02",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1c5c7210-ad51-43f4-9a2a-3d9b742fb176"
        },
        "item": {
          "id": "34beae7c-33ab-4fda-8f1d-4c943e464b11",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9abf85a3-7bc4-4d5f-b99f-993bd64a4601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b00413-dc0c-4e3b-a337-6f445ab48df0",
        "cursor": {
          "ref": "31c72f07-8a63-4a97-b8d9-3f44c4b708ba",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c651f0ef-88e2-4326-8a97-334d4f1ee2f4"
        },
        "item": {
          "id": "06b00413-dc0c-4e3b-a337-6f445ab48df0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a621eb87-d232-41af-b6e7-2cd35dd80381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cf31e3-318c-4fb3-9efa-bd622b182dc1",
        "cursor": {
          "ref": "051f7edd-9d89-4ca7-a152-7ee368cc4487",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2b905304-7c80-4309-8f80-53f0dfb44ec2"
        },
        "item": {
          "id": "b0cf31e3-318c-4fb3-9efa-bd622b182dc1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "92654b6e-a26a-4c01-8d2a-08fdd788a085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ddec9e-0cfc-469b-9cde-01de97e898e6",
        "cursor": {
          "ref": "7408b743-dce5-4a6f-89fd-0d3300d6b405",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3b47336d-d298-4ae7-939d-b1a924dbe741"
        },
        "item": {
          "id": "92ddec9e-0cfc-469b-9cde-01de97e898e6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "986a2129-d8e0-45de-9bba-3abb59e2449d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c77d73-b387-4773-a8b2-5af797106a72",
        "cursor": {
          "ref": "69d8416d-4c6a-4220-8f6b-c3296c4192b2",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4447401a-686a-49f2-a6fd-6583624c4bdd"
        },
        "item": {
          "id": "61c77d73-b387-4773-a8b2-5af797106a72",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3680eeda-8a0d-4b6a-9c00-1edf727aa9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcaf720-13c2-4b11-ab3b-58937495048c",
        "cursor": {
          "ref": "ecd27122-5422-4a6c-9453-77c49844df6e",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a1ee908d-3317-4fa2-a67f-35ddf3d5a4bc"
        },
        "item": {
          "id": "dbcaf720-13c2-4b11-ab3b-58937495048c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1d11b028-6c3e-46ee-b880-aa10d8de35e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a921d8be-f5e3-4068-ae2f-93ccf8d89498",
        "cursor": {
          "ref": "e75037ec-9619-467b-8ee4-5c76b7c15a0d",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ff40db20-dc8d-4b24-8399-03dc568367ad"
        },
        "item": {
          "id": "a921d8be-f5e3-4068-ae2f-93ccf8d89498",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1de534c3-bc9e-42dd-b315-12d81d222f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3627df7-2244-4d03-af42-f77389cd384d",
        "cursor": {
          "ref": "19bccc18-19e4-4b03-8ed7-6cc8d5a054a5",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fbe9866b-16f4-4572-81d5-aba2efa1c5aa"
        },
        "item": {
          "id": "c3627df7-2244-4d03-af42-f77389cd384d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4308c303-3bee-4aa4-9e46-6490613d1423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e7532b-8af3-4456-bb9c-a9c764cf4025",
        "cursor": {
          "ref": "f092f2c8-c98d-4cb5-bdfa-ec3b73885995",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b49aaede-257f-4c06-9f0a-d7ce39debaf6"
        },
        "item": {
          "id": "17e7532b-8af3-4456-bb9c-a9c764cf4025",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e6ab15f9-1d4b-4dd0-b246-cbb0e3dccca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63565a11-d6d1-4d5a-a36a-912be0bf40ed",
        "cursor": {
          "ref": "e84eac9f-46b1-42f8-a2ae-f62d4790cf32",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aee75fd6-5ecf-4756-a5b7-fa5b0edca8e9"
        },
        "item": {
          "id": "63565a11-d6d1-4d5a-a36a-912be0bf40ed",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d1e574a2-50c4-4db4-865b-b2f1fe13d7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5a6760-fc40-4c5c-85c5-1d6d02d42497",
        "cursor": {
          "ref": "bff8520a-3838-496a-a746-0e790780f1e1",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9b42c0c1-2031-470b-a98b-7de6075f3488"
        },
        "item": {
          "id": "3f5a6760-fc40-4c5c-85c5-1d6d02d42497",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bc2ee6b6-6647-486e-93b2-50c6b27a53ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6659462-8462-43b6-9936-d4ac5dec1bf6",
        "cursor": {
          "ref": "36dd658e-8ccf-4f0d-bce6-874ac59c2e4a",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d14a9d32-e36b-4596-841e-0187ede20bae"
        },
        "item": {
          "id": "c6659462-8462-43b6-9936-d4ac5dec1bf6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "255f01ac-a9e6-4b2a-8e6e-200f4eccdb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8da916-b4d0-40e3-bc7e-d82379b808bf",
        "cursor": {
          "ref": "b759e9c4-b627-4875-bf00-1ed8d14120e7",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4748d832-0409-4b6f-8ac4-278561d8ef4d"
        },
        "item": {
          "id": "df8da916-b4d0-40e3-bc7e-d82379b808bf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "11478512-676f-4c5c-8741-3a893c984da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b980a03c-096f-4c3d-81ef-b77bc97aa7b4",
        "cursor": {
          "ref": "3df3893f-ddeb-429f-9dff-b1d5d46b3db8",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1a496595-2d8e-4cbc-b791-f828ee83bd4a"
        },
        "item": {
          "id": "b980a03c-096f-4c3d-81ef-b77bc97aa7b4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "30f528e1-4897-420a-b340-dab639d20319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feec9082-0a83-49f2-9a6e-2f2c5fd6372f",
        "cursor": {
          "ref": "7e687db3-60da-46cc-bab5-c724284f6d8e",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9c29f202-28ef-4bf7-a72c-9bbfeb94f9d3"
        },
        "item": {
          "id": "feec9082-0a83-49f2-9a6e-2f2c5fd6372f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c68cf84a-a722-4c57-a6e1-d9f67716dd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc60502-0977-4b5e-bef8-ec089c71d453",
        "cursor": {
          "ref": "71a76b7a-93c9-48b1-b7d4-3c496fdd4c06",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9731a7a7-e1c4-4d82-a386-e6422639deae"
        },
        "item": {
          "id": "edc60502-0977-4b5e-bef8-ec089c71d453",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "86f98846-93a3-4a0c-9a25-ccd7adfd46f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5270232b-6f18-4929-829d-465fdeceaf58",
        "cursor": {
          "ref": "b7b5d69a-253d-48f8-8910-0e942c905f28",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "acf5c3d6-02de-4e1c-a73d-5ba69837ffd6"
        },
        "item": {
          "id": "5270232b-6f18-4929-829d-465fdeceaf58",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "18ae7267-d1e7-4faf-9cf3-c9c07de50fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42114bab-ea40-437e-9eec-7d82d4dff899",
        "cursor": {
          "ref": "28cf3503-615a-48cb-b236-a1ce2be987b9",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bede5b04-04c4-4110-88f7-11ab28528d1b"
        },
        "item": {
          "id": "42114bab-ea40-437e-9eec-7d82d4dff899",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f974b51f-be30-4db1-aaf1-5a351b6bbf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd23411-e1a9-4fc8-90e6-e6b70cfea73f",
        "cursor": {
          "ref": "b28b8389-2c76-4ba7-bc1c-a5e7bfb8358f",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "56dc7f6a-0c52-4338-a9b6-93a3fc208a79"
        },
        "item": {
          "id": "8cd23411-e1a9-4fc8-90e6-e6b70cfea73f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d52f7c47-1b3d-4724-8eec-f2c06b875930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f51e424-98e0-4d5b-873d-ac782adf0952",
        "cursor": {
          "ref": "8bba292e-92ff-4a97-8fcf-45301df59464",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "85dbc30a-686e-412e-9c03-fe5567b48d05"
        },
        "item": {
          "id": "7f51e424-98e0-4d5b-873d-ac782adf0952",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "beb3e022-f859-4d89-83c8-3acb29e97a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4925a901-977a-4616-b7ef-ca6decca6798",
        "cursor": {
          "ref": "71c9ad7b-19db-4f4b-81bc-4ced8933e6f3",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "93ac4a8e-f1fe-4a7f-be8b-e8d0e6cc3c11"
        },
        "item": {
          "id": "4925a901-977a-4616-b7ef-ca6decca6798",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "819d54ec-fa94-40d6-ab05-5efbb91ffb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25ee82a-7388-41a7-8945-6fefeb23fe83",
        "cursor": {
          "ref": "93cfda21-8feb-4d05-bd6c-d800c022d61f",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1e7e74ae-5b25-44ef-913e-05dbaa131306"
        },
        "item": {
          "id": "a25ee82a-7388-41a7-8945-6fefeb23fe83",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "810797b7-9699-421e-936a-83e5727836b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c50a7ef-92f5-415f-913a-bde789ccd057",
        "cursor": {
          "ref": "6ed6d41a-1921-4538-8bbc-6a7dffe96efa",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "648ee6a9-933c-40a8-9059-60bf4cdc6ada"
        },
        "item": {
          "id": "3c50a7ef-92f5-415f-913a-bde789ccd057",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fc7b6a7a-d8d0-44e2-be4e-b8c871f638e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d541f46-7f43-4928-8f14-3b6fe12172ba",
        "cursor": {
          "ref": "7bfdf278-16f4-4682-a374-8120ff65f1ff",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d61517e2-1e8c-4b6a-b72f-566169c33982"
        },
        "item": {
          "id": "2d541f46-7f43-4928-8f14-3b6fe12172ba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5e6efd42-2d81-4f96-a486-ab9ce81a2e0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b686d3-4154-429e-a618-7e837a2cf065",
        "cursor": {
          "ref": "d113d4a9-43b0-4d07-a070-004ea73f999a",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c7954146-50c6-42cc-bea0-07f491941e87"
        },
        "item": {
          "id": "76b686d3-4154-429e-a618-7e837a2cf065",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9e261f3b-4b08-46b1-8836-379dcee85b33",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 719,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c3e940-1efc-4984-9d3d-6d93a102e17b",
        "cursor": {
          "ref": "90816478-4348-4a31-830f-bbc347013a9c",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "60cca8fd-126a-4928-ade7-612eba1be1fa"
        },
        "item": {
          "id": "f0c3e940-1efc-4984-9d3d-6d93a102e17b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5aa3f1bc-cd5e-456f-a375-e01de154ac43",
          "status": "Created",
          "code": 201,
          "responseTime": 6392,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebcae07-51ae-434a-97b1-31587278989b",
        "cursor": {
          "ref": "802e9340-7b2b-46bd-a0b3-76747c16eb45",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2e8c7859-1f5f-4168-ab85-128bc9cfb665"
        },
        "item": {
          "id": "6ebcae07-51ae-434a-97b1-31587278989b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bd80b7b5-cf14-4d90-9375-72b09004b8cf",
          "status": "Created",
          "code": 201,
          "responseTime": 5718,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "78187988-a3f2-498f-97c7-abc982235387",
        "cursor": {
          "ref": "703fd727-566e-40b5-b05c-edda948bc422",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "09aaa827-f6c0-4cf3-b16f-109fc161301d"
        },
        "item": {
          "id": "78187988-a3f2-498f-97c7-abc982235387",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9788c0b8-b63e-42bd-b98c-6a9176bdb9b8",
          "status": "Created",
          "code": 201,
          "responseTime": 6667,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bbac3c-e13c-4e38-8d4c-612c46876e5d",
        "cursor": {
          "ref": "436e4a15-85de-42d2-a4ef-75536a53e653",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "835dff96-c10a-4fb8-ad3e-6a69a8c8d964"
        },
        "item": {
          "id": "a4bbac3c-e13c-4e38-8d4c-612c46876e5d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "96b587b5-1f47-4c83-a75d-c97e67c3ba24",
          "status": "Created",
          "code": 201,
          "responseTime": 5887,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "928bdca4-76d6-4724-b05b-d1b9f5bb02e2",
        "cursor": {
          "ref": "26a63d9b-7edc-4999-9ea6-bb543c6610f5",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f221eb2c-ebb5-4ad4-abdb-2b778b40b029"
        },
        "item": {
          "id": "928bdca4-76d6-4724-b05b-d1b9f5bb02e2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c8ce0152-5b97-4cb7-ae2a-74e8e8c5739e",
          "status": "Created",
          "code": 201,
          "responseTime": 6457,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57b4b20-2128-4f15-9c56-871dffc3c267",
        "cursor": {
          "ref": "2904ad0f-0690-4402-8130-03bac6cd255d",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d3d38d83-70cb-4c8f-848f-20f0f3b0f893"
        },
        "item": {
          "id": "d57b4b20-2128-4f15-9c56-871dffc3c267",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0fceba52-e2d9-4b95-8b76-35d4a72999f5",
          "status": "Created",
          "code": 201,
          "responseTime": 7525,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4333e6-3c68-4166-a154-08a45d849aca",
        "cursor": {
          "ref": "250ad41f-3ec1-490e-9ce3-b7b77335dded",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0033b4f8-9a42-4fb7-8cfa-ecc3e60f7e89"
        },
        "item": {
          "id": "4b4333e6-3c68-4166-a154-08a45d849aca",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8a980b68-6283-49cb-8d87-d5879f6521bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4333e6-3c68-4166-a154-08a45d849aca",
        "cursor": {
          "ref": "250ad41f-3ec1-490e-9ce3-b7b77335dded",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0033b4f8-9a42-4fb7-8cfa-ecc3e60f7e89"
        },
        "item": {
          "id": "4b4333e6-3c68-4166-a154-08a45d849aca",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8a980b68-6283-49cb-8d87-d5879f6521bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1570f431-5b66-4b5b-9e1c-558ec2a3983d",
        "cursor": {
          "ref": "1d430b0c-a125-49b9-962a-4e492b24e69d",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "680a821b-ad5c-4fbc-a218-1f9b92a70f2f"
        },
        "item": {
          "id": "1570f431-5b66-4b5b-9e1c-558ec2a3983d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4ceb5c6b-b285-4cd2-9727-daff5f626116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123407fc-e3b5-47d8-ae41-52756ab02adc",
        "cursor": {
          "ref": "50e9eaed-8882-4a81-9b7a-a28f2a2e31ea",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e774586f-d130-4769-8064-dce2859197f1"
        },
        "item": {
          "id": "123407fc-e3b5-47d8-ae41-52756ab02adc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7cbb56d0-761c-4de5-848f-1ac7a7261f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8bfecd-2029-497f-a7ae-304870e2108f",
        "cursor": {
          "ref": "23077691-6a79-4daf-80bd-09309b012196",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "149a3a28-6693-4d98-87df-0632482c11a5"
        },
        "item": {
          "id": "fb8bfecd-2029-497f-a7ae-304870e2108f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9afbdc85-02e6-46b5-8bae-0d732f46f537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea89aec-ba42-47df-8e0a-baa9a04dfc50",
        "cursor": {
          "ref": "3e569d75-0747-467d-8e50-e00cdd9b5554",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fbc57929-7cde-430e-a454-0a3855a497dc"
        },
        "item": {
          "id": "aea89aec-ba42-47df-8e0a-baa9a04dfc50",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "050a022f-3556-4cdc-b776-b44a3b54b413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e712d4f0-a6d6-4fb2-826d-7e370c5a1f81",
        "cursor": {
          "ref": "26c05a97-15c2-4b03-a6b6-2f012316b179",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "96990733-77d2-416a-8cb8-48e7ed043e74"
        },
        "item": {
          "id": "e712d4f0-a6d6-4fb2-826d-7e370c5a1f81",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a19bf916-73e4-4140-9d89-d9ea85f0bf8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18797e57-7ff9-4fc8-b04c-c54960b38a7e",
        "cursor": {
          "ref": "23491486-7d98-43cd-9c68-4020e05134fc",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0439c1f1-e542-469f-91b3-75462592538f"
        },
        "item": {
          "id": "18797e57-7ff9-4fc8-b04c-c54960b38a7e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5db7ec83-6afa-4bcd-881e-8489e6940adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5cee10-77cd-4792-8029-a87d669e325f",
        "cursor": {
          "ref": "59af1d91-5934-47af-8547-7ebf9acc7648",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9bb566d7-411e-4980-a817-024017fdf95e"
        },
        "item": {
          "id": "ce5cee10-77cd-4792-8029-a87d669e325f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0d6420a2-1457-4afb-b87b-7328a07900d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69069ba9-7b14-4c7d-9034-52742bd55654",
        "cursor": {
          "ref": "5ad28ea4-bb4f-4d51-8acd-8f101ab76f42",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ba50d8f5-0f0a-4af2-a1d9-81c6beeb3376"
        },
        "item": {
          "id": "69069ba9-7b14-4c7d-9034-52742bd55654",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "50ee9737-d627-4b81-ba7b-c3a5ab90d2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90473eb5-4e01-4dc8-88e6-3f3ea8b63f4b",
        "cursor": {
          "ref": "beebcd33-829f-4558-8e40-46b0feace246",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0c4f4461-b34e-469a-9a8c-5fce4e734b15"
        },
        "item": {
          "id": "90473eb5-4e01-4dc8-88e6-3f3ea8b63f4b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "47ff8d1b-9a70-4bc4-8db2-a64bf927e328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1029,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4a342a-76e0-4ee7-8f76-f2dfd263a17a",
        "cursor": {
          "ref": "85c8e6f7-e889-4200-ac64-28a227f199d2",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b9464e50-2085-43de-813a-2e820ef887f7"
        },
        "item": {
          "id": "5f4a342a-76e0-4ee7-8f76-f2dfd263a17a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c89f038d-b1be-4a02-8dcf-18b8c7385310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29401b5d-96ba-49e6-999f-1b8a18c19612",
        "cursor": {
          "ref": "a26dd078-48d9-493a-a519-a842f26d0b81",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "500613a8-514e-4b71-8e17-8ccd3a0472fe"
        },
        "item": {
          "id": "29401b5d-96ba-49e6-999f-1b8a18c19612",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e3061765-082f-465a-803b-2bc689214de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb7a679-e107-4db8-8eb6-1495538cff6f",
        "cursor": {
          "ref": "dfbc5ca7-eff2-4042-9609-bec09703f402",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "75beefb3-ff08-4e38-bf34-abce7dcf499d"
        },
        "item": {
          "id": "7cb7a679-e107-4db8-8eb6-1495538cff6f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "14f23ff9-a69c-49b5-8e8a-aa8ebaf4a433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68baef6b-e3b8-48ea-9a79-709d14d54c41",
        "cursor": {
          "ref": "3cad4aa2-013f-496a-91bc-38208af85180",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "82fc0450-3e9a-4f57-b245-fe32eefff5df"
        },
        "item": {
          "id": "68baef6b-e3b8-48ea-9a79-709d14d54c41",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9bb04664-92c9-494d-af73-4ae262887d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1112b9be-88a1-48b4-aa28-79848a84be4e",
        "cursor": {
          "ref": "d3a9605e-054f-4812-bc48-e5583c598611",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6c4d6a81-7074-4d86-8215-753431ad46a3"
        },
        "item": {
          "id": "1112b9be-88a1-48b4-aa28-79848a84be4e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a7a00bfb-a888-4482-9609-c93778353c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb19cfc-c2f4-4d91-b530-d850c0ef35df",
        "cursor": {
          "ref": "7794b12e-96da-426d-8c2b-877d8901d699",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "05176f14-792a-4b82-9212-b3b24775605a"
        },
        "item": {
          "id": "fbb19cfc-c2f4-4d91-b530-d850c0ef35df",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5f13a9c1-8a06-416b-83b3-9b7b887dcb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b77e93-ba76-4067-9b47-0864e3d509c9",
        "cursor": {
          "ref": "0123425a-bce0-434e-a213-a9994ae067b2",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "16b7d923-db34-4f55-b99d-ff208c42af9d"
        },
        "item": {
          "id": "89b77e93-ba76-4067-9b47-0864e3d509c9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "db6f1a5c-93c2-486f-8852-5bcfb466c2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bd979f-b1a9-4d38-8919-8721b55f6f01",
        "cursor": {
          "ref": "8808701a-782b-4a14-a9ce-5f9d0975af66",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5c29fb7d-b8c5-4252-889a-a881c1bd5f5c"
        },
        "item": {
          "id": "58bd979f-b1a9-4d38-8919-8721b55f6f01",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "223e8f6e-c444-4c01-b8ef-338f6befdc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3003c1-9adf-4440-a71f-577402ca612c",
        "cursor": {
          "ref": "b1bccccc-4b9e-415a-b632-a41c72bf27a0",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c208baf3-8423-4a07-a65b-b4b174914dfd"
        },
        "item": {
          "id": "8f3003c1-9adf-4440-a71f-577402ca612c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "169aa00c-6a1b-4d2e-9994-8c49c533bf9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f10b921-7db1-4779-bb53-adf799f76409",
        "cursor": {
          "ref": "a6c5e2bb-3f91-4e88-8c7b-bc285cc46c9f",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d0574d70-d219-4023-84da-59289031ec1c"
        },
        "item": {
          "id": "2f10b921-7db1-4779-bb53-adf799f76409",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8ad97b09-e834-4cc0-affd-f8c3fdf19a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2446677-e84a-4e00-8d17-354a49bf9fa3",
        "cursor": {
          "ref": "fe9dd91a-aa63-4970-8e70-358db122fa73",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "81fc6816-ae9b-4ff2-8fbb-ba86a0bb57bf"
        },
        "item": {
          "id": "f2446677-e84a-4e00-8d17-354a49bf9fa3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d4411d2b-c86d-4913-bb48-90cb1bef4fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c456e5-aaaf-4dab-8f6d-33ecc608beb7",
        "cursor": {
          "ref": "4e7852a4-a568-4898-9f8d-48ed968c1958",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4f122a66-2b46-40fd-b51a-c62325776070"
        },
        "item": {
          "id": "c2c456e5-aaaf-4dab-8f6d-33ecc608beb7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3a3a8d0a-9c7e-43ae-a6eb-06edb3acd58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef9f8f9-aec7-4ffe-b77f-2756231e7d8e",
        "cursor": {
          "ref": "af98a78d-a4c8-4b57-8c8d-3cf43bdcd009",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c15162cd-5710-4e08-9268-08bbb27cd284"
        },
        "item": {
          "id": "9ef9f8f9-aec7-4ffe-b77f-2756231e7d8e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5739dcf8-7c56-423c-aa3c-01bca4553532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b01e06-7f07-48bc-ad2c-0a21f585c2b1",
        "cursor": {
          "ref": "22a2fa0f-d0dd-4b14-941e-65c936753672",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9e70b507-0424-419d-994f-24df9d334274"
        },
        "item": {
          "id": "e7b01e06-7f07-48bc-ad2c-0a21f585c2b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aacb5b69-6e12-45d6-8658-a64ebcaa7e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcff480-7521-44d0-8128-ad1bb86121ac",
        "cursor": {
          "ref": "f0536728-230a-446a-86e3-739f0e2e4bcd",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7099a87f-33be-44df-a0a0-41ab3977ad40"
        },
        "item": {
          "id": "ddcff480-7521-44d0-8128-ad1bb86121ac",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3672d187-9887-4231-bb8f-4dc758f14ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc6851e-04fa-4868-8f6d-4204f1f90627",
        "cursor": {
          "ref": "75f4a2a2-1c6b-4ee1-8717-ca24ec99de67",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "61392d53-ad32-4250-9ec0-1d321783b0ee"
        },
        "item": {
          "id": "0bc6851e-04fa-4868-8f6d-4204f1f90627",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "86817698-1091-4f96-a4bd-8e843b89a56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9efbe1-71b0-408d-8c1d-7027db8e3cc7",
        "cursor": {
          "ref": "cb170717-a8a1-4ebd-9c54-09418fdaa83c",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e0088dea-9c03-45f4-b672-74e04fd99980"
        },
        "item": {
          "id": "be9efbe1-71b0-408d-8c1d-7027db8e3cc7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c7cf5cc2-662e-4c2b-920e-efb282c179e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca90907-ac5b-472e-8d73-51f1400010b8",
        "cursor": {
          "ref": "20f32816-da91-42ac-ab15-f1ab26a8f1ee",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "84d917cd-c9c0-4d60-ae1c-418af6b26d2c"
        },
        "item": {
          "id": "eca90907-ac5b-472e-8d73-51f1400010b8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "533a1836-2919-4d94-9925-eaf919ca07aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 981,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed32daa3-91ce-4ae6-9830-849c71829b0c",
        "cursor": {
          "ref": "1da86011-4ad9-42a8-9a2a-1461ceb90225",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8993309a-e2d4-4e0e-97c2-bdd906d0e036"
        },
        "item": {
          "id": "ed32daa3-91ce-4ae6-9830-849c71829b0c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ee0d30df-8375-4d78-8c93-59005bbb2649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1eca2e8-409c-49d6-983f-bf7bca66c2cb",
        "cursor": {
          "ref": "a7749f67-3a35-430a-9b0d-e799dcb07b2d",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "747d67e9-b94d-4291-bcad-fbd675bed64b"
        },
        "item": {
          "id": "e1eca2e8-409c-49d6-983f-bf7bca66c2cb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d0bfa5ef-3c02-402f-9aa8-d1b9d11bcf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b9d17c-e891-4276-979a-d3fd586f526c",
        "cursor": {
          "ref": "8e9db48b-1d57-439c-a655-bf74e9ffd93a",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "95e015f3-4459-4053-9072-963638cffe07"
        },
        "item": {
          "id": "23b9d17c-e891-4276-979a-d3fd586f526c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7a4c700d-ac0b-490c-8629-554aed000566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 995,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bfd83b-ad94-4384-ae6f-da7a705736aa",
        "cursor": {
          "ref": "e71e2762-9f2c-4fa0-a977-2c08eaa54644",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d6da5fd1-4330-43d4-a222-6fb6f5288cb9"
        },
        "item": {
          "id": "97bfd83b-ad94-4384-ae6f-da7a705736aa",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0272c6be-5565-483f-ad80-96004f263fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1009,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fab1f4-d478-4696-acab-e77f180842c0",
        "cursor": {
          "ref": "931c8c3c-44c9-48b3-8255-a4aedeaf0da8",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a74d6d31-d087-4a92-9a0f-c9d29d04a637"
        },
        "item": {
          "id": "79fab1f4-d478-4696-acab-e77f180842c0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "af28dac6-df5c-4350-8d2d-cdeb42480cdc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23eae0e5-14eb-4fe3-861c-c425a2073e80",
        "cursor": {
          "ref": "16b29ae1-e1ee-4391-8345-47b9b7988fab",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0a2a8102-17b4-4dc5-b97d-494bba0a5968"
        },
        "item": {
          "id": "23eae0e5-14eb-4fe3-861c-c425a2073e80",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3a71a776-e2f7-4333-920f-66bff8a6a344",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 917,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7301e9ac-22c5-4847-894b-4f8a261a96e1",
        "cursor": {
          "ref": "3c10a850-e07e-4a4d-94c1-452441a29478",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e05adacc-93b3-4727-af2c-66b83511fc11"
        },
        "item": {
          "id": "7301e9ac-22c5-4847-894b-4f8a261a96e1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "366399c7-6537-46fd-a62d-5537010cd135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7301e9ac-22c5-4847-894b-4f8a261a96e1",
        "cursor": {
          "ref": "3c10a850-e07e-4a4d-94c1-452441a29478",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e05adacc-93b3-4727-af2c-66b83511fc11"
        },
        "item": {
          "id": "7301e9ac-22c5-4847-894b-4f8a261a96e1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "366399c7-6537-46fd-a62d-5537010cd135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4482c91a-341f-4a9d-86ed-0508b69dfbf4",
        "cursor": {
          "ref": "ab3fd169-9b78-4d97-af8c-18fd2f767b15",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a0d7f49b-0e19-43ae-9d59-1f5b66abeef1"
        },
        "item": {
          "id": "4482c91a-341f-4a9d-86ed-0508b69dfbf4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "95434f97-388f-4b59-894d-6a5c0e2301ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df43c95e-4b40-471d-811b-fd5614acac5e",
        "cursor": {
          "ref": "a7086805-de01-4e28-8032-719f7ffcbfee",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7c32cb5c-b293-4639-b653-7cbe0b516d3b"
        },
        "item": {
          "id": "df43c95e-4b40-471d-811b-fd5614acac5e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "930e8dbe-3836-40cd-83d8-6a82058be5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cc41da-1821-4817-86aa-bca567ac789f",
        "cursor": {
          "ref": "7ea39cf6-0df2-4197-94d0-b03320ee43de",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d61fd756-b40a-4ee4-b6f4-2a459e63217b"
        },
        "item": {
          "id": "05cc41da-1821-4817-86aa-bca567ac789f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "909f424f-82de-4c9a-b6d6-267e0ce09d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9237ccc-c889-47ac-854f-800425d879fa",
        "cursor": {
          "ref": "97216b63-dd66-4ec1-b717-f1186e879475",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9bb1bace-5e3b-4fec-8104-b0e84b16e8d9"
        },
        "item": {
          "id": "c9237ccc-c889-47ac-854f-800425d879fa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d04cd338-2730-472d-a275-10c86e5d7a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcddcd6c-1dc2-42f6-9950-d13cc54d0296",
        "cursor": {
          "ref": "3b9aa6cd-20a0-40cc-ae56-134da5ecf5b3",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ec95df20-94a8-4bd9-96de-8889afa946ce"
        },
        "item": {
          "id": "dcddcd6c-1dc2-42f6-9950-d13cc54d0296",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "07ae61f1-33c2-45d0-97ba-8ac9d95b93f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46172c56-20c8-4f9c-a8c5-afbb3a321043",
        "cursor": {
          "ref": "454ce5bd-abe6-48be-b5ac-e3a3e42d57c4",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "50f1a644-8f6a-4017-b8ba-7c7358f6a8e9"
        },
        "item": {
          "id": "46172c56-20c8-4f9c-a8c5-afbb3a321043",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "46fad9e3-e4d5-41e1-b2ac-4a5ba5ff4100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5184a0fb-9989-4f34-af3d-dd1dc5fd0970",
        "cursor": {
          "ref": "2bd5f963-ab77-4180-8202-250edf989b27",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ce1c9c00-2d41-4dd6-86f5-11d275870bdf"
        },
        "item": {
          "id": "5184a0fb-9989-4f34-af3d-dd1dc5fd0970",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6579b849-438f-4786-91b9-487509a0ffec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24454b4-6417-41ae-bb5f-87d10e57a5c0",
        "cursor": {
          "ref": "c44298ab-505a-4a3e-8bfd-56e5c9fbd260",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ab0a09ae-c36f-45e6-9609-238da358f472"
        },
        "item": {
          "id": "c24454b4-6417-41ae-bb5f-87d10e57a5c0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f8fc0375-669a-48ac-95c5-d05c346e3da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8246ee68-c679-4821-a7a6-433a09eae2c9",
        "cursor": {
          "ref": "591c1564-67dd-488e-9acb-d10f0e49b207",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "547b4414-2804-4822-ac9d-c440952a772f"
        },
        "item": {
          "id": "8246ee68-c679-4821-a7a6-433a09eae2c9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fd4c22f8-63b4-433b-b020-5d6ba44e561c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6ada56-d772-4b36-b55e-94282f797c0a",
        "cursor": {
          "ref": "4311f2cf-afdc-46be-b9aa-4b9eb0189b12",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d8ba4dde-9ca1-424e-a8ab-2153813252c0"
        },
        "item": {
          "id": "7f6ada56-d772-4b36-b55e-94282f797c0a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e21da310-1504-486c-9ccd-90e4c54918ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaaa1fb-5b76-40f0-9d0b-5f68f242e53f",
        "cursor": {
          "ref": "cd1f4858-caf6-4f76-a6c6-3a111229558a",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7a7fce31-708b-4aab-a89c-d436475cf021"
        },
        "item": {
          "id": "1eaaa1fb-5b76-40f0-9d0b-5f68f242e53f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8ee915df-fa4b-4649-a1a0-eb2cc340266c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77679961-5099-49d4-a4c7-85ce703c07e9",
        "cursor": {
          "ref": "7ad8738a-6b06-4deb-a917-27932b39a7a6",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "507d444b-1787-431a-b77f-2ff5cf0c0131"
        },
        "item": {
          "id": "77679961-5099-49d4-a4c7-85ce703c07e9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "38a265cd-cedc-4942-b401-e0ece4b6cd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962b7338-cc92-4477-825c-d1ef683da550",
        "cursor": {
          "ref": "04c781e0-11ab-495d-91d0-9bd884a12add",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2c11f144-c25a-4b23-815c-64fbdbc11558"
        },
        "item": {
          "id": "962b7338-cc92-4477-825c-d1ef683da550",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6529157c-2e48-4d7e-a76c-aac44ac3eede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0164030-a73e-4dd1-acf0-341baf90b97f",
        "cursor": {
          "ref": "e8b24cab-7bfd-4021-81da-cb8237b11c45",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b1a3bd76-94d9-415a-94c0-fcbe0220afba"
        },
        "item": {
          "id": "d0164030-a73e-4dd1-acf0-341baf90b97f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f8528970-4f2d-4a87-b3b7-b730fea576be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46440f4a-f12b-4dea-9b75-6f993d3d5b3c",
        "cursor": {
          "ref": "8976f672-ade4-4231-baa3-ad3b1f2b939a",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "908aff2b-523f-46ff-8e24-6dd40ebef247"
        },
        "item": {
          "id": "46440f4a-f12b-4dea-9b75-6f993d3d5b3c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "22220dbd-df98-4e68-8bf1-c070cff6b7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a019dcac-157e-48ac-8352-fa7a38318b6e",
        "cursor": {
          "ref": "4398cdfa-61fe-4e51-a0ce-13db55bb4438",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1533ecf3-b504-4d90-9e22-4ae392b5fa6f"
        },
        "item": {
          "id": "a019dcac-157e-48ac-8352-fa7a38318b6e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1adf4678-370b-4d2c-b23a-405059f9732d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca30345-b2c6-40bd-9097-f1a3cc104889",
        "cursor": {
          "ref": "c44201f5-e6c7-4a59-8054-98832d6b88a0",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c185430a-3c14-4e28-b3a8-6f189791f27b"
        },
        "item": {
          "id": "5ca30345-b2c6-40bd-9097-f1a3cc104889",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "31e9205f-0125-42ce-ad5a-980c1169eccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e49778-f0bf-4be9-942d-58355d2fa95d",
        "cursor": {
          "ref": "a12ab4d0-4d2d-40fc-851b-33d60f4481bd",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "567295d2-26ef-40b6-8b6a-a535435ceb99"
        },
        "item": {
          "id": "b4e49778-f0bf-4be9-942d-58355d2fa95d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a63d22b2-e4b0-4cd1-9be0-388e212edd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157ff113-05ca-4e0f-a77a-bc5316a48604",
        "cursor": {
          "ref": "3e40047e-05e0-4f24-b184-7810addb054d",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d852180c-3b3d-4c06-b7c2-bd6559f251bf"
        },
        "item": {
          "id": "157ff113-05ca-4e0f-a77a-bc5316a48604",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ddab68b8-8752-40c7-a886-0194c4fcfd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6e0de5-bdcc-4ae3-9c7e-01abc5c095ad",
        "cursor": {
          "ref": "12f1926a-2ddf-421c-a574-de3dbec54077",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "904637ad-9943-491c-b9e7-444152a3cde6"
        },
        "item": {
          "id": "8e6e0de5-bdcc-4ae3-9c7e-01abc5c095ad",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "58c9afee-000c-4614-94c3-45b3f3f9e8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9147075b-8786-4c30-9ece-cba3a1b7000a",
        "cursor": {
          "ref": "6f7a5b02-627f-4032-82d5-75626bdf078c",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "167742aa-f653-453f-89e5-922b65a32301"
        },
        "item": {
          "id": "9147075b-8786-4c30-9ece-cba3a1b7000a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "061ed24b-cf2b-4f76-abee-7bf7e85dd6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db26eb6e-4b6f-4f69-b78b-e38c9fd6f2b8",
        "cursor": {
          "ref": "4082cb52-a1de-4b5a-b34d-677c119381c2",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2a7e2cba-9ade-4932-8342-047b5e1d168e"
        },
        "item": {
          "id": "db26eb6e-4b6f-4f69-b78b-e38c9fd6f2b8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1fcdf3e7-c9d0-4996-9350-21f25db68d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7254e2b0-d3d5-47af-947c-050e180b8c3a",
        "cursor": {
          "ref": "864b571f-71a3-4db8-8c3f-25223f6f8adb",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "12931e32-fae5-4027-b423-2c2245766f6f"
        },
        "item": {
          "id": "7254e2b0-d3d5-47af-947c-050e180b8c3a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "77327269-be53-4f51-831e-dc2e8ff77f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8899da0-6415-4dce-af0f-f5e97f14819a",
        "cursor": {
          "ref": "f1dac381-f002-46a7-8f4a-fb38c6752b7a",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3e421bc0-0a9b-478c-9372-6e4a59bd64d9"
        },
        "item": {
          "id": "c8899da0-6415-4dce-af0f-f5e97f14819a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8bc9d947-729e-46fe-9d39-e0fec71c43c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7697ae4f-e651-412c-903f-dcf25edd22e4",
        "cursor": {
          "ref": "2b608193-3185-4945-abc1-5f9bc7f08909",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "eaff2d4d-3bdd-45ec-9db7-483044f4d275"
        },
        "item": {
          "id": "7697ae4f-e651-412c-903f-dcf25edd22e4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2d834223-82e6-4a73-a2ac-851de1f462b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d91cc4-2131-419e-83d8-9730339ef4f5",
        "cursor": {
          "ref": "4ff244fb-5d22-49c7-8bf8-a051153369f3",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e1d18693-3598-48e8-a943-9f881c6aa2c4"
        },
        "item": {
          "id": "64d91cc4-2131-419e-83d8-9730339ef4f5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b14c8bfb-b9b4-4591-8c4d-9ce6ef015381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf0870a-da11-47c3-b3d6-a447d12f989d",
        "cursor": {
          "ref": "6cc205dc-3551-4775-9a15-61cdbbabb3b8",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2d175ceb-b012-4627-a5a1-09ba8080711a"
        },
        "item": {
          "id": "eaf0870a-da11-47c3-b3d6-a447d12f989d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "072c7781-9a4d-46ea-a8e1-0a62eb25beba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b22c05-c4a9-46c6-be9f-461627e210ac",
        "cursor": {
          "ref": "1c678ae1-a824-4bbc-a419-daf20b5299df",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6bd9afe1-ae37-4f8f-8c96-3e000b8776d4"
        },
        "item": {
          "id": "19b22c05-c4a9-46c6-be9f-461627e210ac",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3909d965-bdba-4fad-8a8a-4d9567706faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854636d2-9735-4269-a2e3-d6a08a77d0ed",
        "cursor": {
          "ref": "7cbc4364-a9c2-47ce-9718-bf89c5feba58",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "750e3aab-66ca-4d99-9eb4-c08b68c9a2ee"
        },
        "item": {
          "id": "854636d2-9735-4269-a2e3-d6a08a77d0ed",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "557ad08d-520f-4169-803b-413c4012e11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a86085-05f1-4de1-b0c1-514620e1bb13",
        "cursor": {
          "ref": "29e2384d-d6bb-4fc8-a341-8f789af285be",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0568c317-7ec3-4cf9-9f04-980106576d9a"
        },
        "item": {
          "id": "f3a86085-05f1-4de1-b0c1-514620e1bb13",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e31a7424-90be-489f-af81-106fb2c37652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f598b407-5e43-44c3-a98b-3358c0fa4f0a",
        "cursor": {
          "ref": "9cb0fea6-23dd-4e9e-a4f1-482314ff2dd9",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "166f6898-688c-4327-aa0e-634e2daf9bc1"
        },
        "item": {
          "id": "f598b407-5e43-44c3-a98b-3358c0fa4f0a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7a2e80a9-3686-442e-b755-5af4a1c733a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f10aef-05b2-453f-8658-1a9461b91d00",
        "cursor": {
          "ref": "ab66268e-3167-495d-956a-245a2677c536",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "af95fe2c-58ea-4b75-9711-a9b54cd43634"
        },
        "item": {
          "id": "e3f10aef-05b2-453f-8658-1a9461b91d00",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "23274749-47ab-4d03-a834-de2996051c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed82a483-8b06-4329-92e0-744acb7df15c",
        "cursor": {
          "ref": "c3514a3a-ba79-441e-804e-69f30548cac5",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "12684fb6-595e-4930-ab84-6ed00eff1eac"
        },
        "item": {
          "id": "ed82a483-8b06-4329-92e0-744acb7df15c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "80712f32-bb7c-4a24-ba8e-e373f50bad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a72dc00-a012-4c40-859b-30ff54372edb",
        "cursor": {
          "ref": "566d22d4-dcb4-4da9-9cf2-58cdc8ce14c4",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "51670ed0-ae48-4866-b88d-1ef1b9153bd6"
        },
        "item": {
          "id": "5a72dc00-a012-4c40-859b-30ff54372edb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b9c8b7a4-e607-436c-b707-16d59a9a580b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd18643f-f2e5-4beb-8b88-c3ef8d250928",
        "cursor": {
          "ref": "347fbe01-87fc-4f84-88e4-cbc7eb8554b8",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "530e317a-fcce-4d30-bcf4-9347061b600b"
        },
        "item": {
          "id": "cd18643f-f2e5-4beb-8b88-c3ef8d250928",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9477e985-df3d-4ef7-8562-e3eaced7e709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46970026-74c3-4cc7-948f-b1b7c239d64d",
        "cursor": {
          "ref": "a8d346ef-fbca-4494-9189-e0a5cf6ade89",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ad65b158-addd-4fe0-94ab-e92ec0ed8bef"
        },
        "item": {
          "id": "46970026-74c3-4cc7-948f-b1b7c239d64d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4fb46526-94b5-41b8-8b89-6e1b85e19646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccea1e3-acce-4200-9a2a-3b789c375339",
        "cursor": {
          "ref": "cd14a32b-1e57-4da7-a185-253995e0967b",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a08af9dc-accf-442e-812d-6f7516b7ae3f"
        },
        "item": {
          "id": "9ccea1e3-acce-4200-9a2a-3b789c375339",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "024e157c-dc1d-478e-a0f8-13ffd0dd6355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b014fadf-4f7e-4f0d-acb7-749b6103893b",
        "cursor": {
          "ref": "0d602af8-7752-47c8-9126-d9db1b30abdd",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3aadae99-1005-4582-8aab-d58ba8fdce04"
        },
        "item": {
          "id": "b014fadf-4f7e-4f0d-acb7-749b6103893b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f11cb18e-8a59-48d5-9c4f-340debf45ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec724b67-29be-4053-94be-89feb09488a5",
        "cursor": {
          "ref": "27bf8918-df69-4bbf-9399-7015d3cf5ef4",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f58b1baa-36ad-4a13-afb4-9b70e4c905c0"
        },
        "item": {
          "id": "ec724b67-29be-4053-94be-89feb09488a5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1cc37a8f-05ae-4fd3-b7d8-0e973d27378f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7157a0-3542-45a5-a2c2-ee01b0bdd607",
        "cursor": {
          "ref": "c4e0a583-b352-43db-8400-afff684e067b",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4f3e5815-e443-4eb0-a487-f7ecdce44fce"
        },
        "item": {
          "id": "5e7157a0-3542-45a5-a2c2-ee01b0bdd607",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4143dc9b-e534-4959-9161-31cf3469f31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8ede17-aca8-4fdc-87fd-598591ff3e10",
        "cursor": {
          "ref": "e827c8ba-e80d-468b-8b0a-7507dae36ef5",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "65f05bce-1128-4659-aec1-9c737d2ee622"
        },
        "item": {
          "id": "7c8ede17-aca8-4fdc-87fd-598591ff3e10",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "52170213-ad12-40a9-9177-e4af895029a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5426d31-234f-4f93-ab69-f8631e33bf32",
        "cursor": {
          "ref": "d454689d-7e13-4429-80b3-f5c7b80ddf18",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c6272644-1198-47a5-84ea-76b9adc38d5a"
        },
        "item": {
          "id": "a5426d31-234f-4f93-ab69-f8631e33bf32",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "793ae37a-065d-461d-87b1-d3015eb39eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6e72a5-c921-4a39-956b-63b5c4d35fba",
        "cursor": {
          "ref": "bbf91ab5-2289-4c66-8f37-15fd8d6de999",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f87d7e04-013d-4790-a6c2-9f49f582e3bd"
        },
        "item": {
          "id": "aa6e72a5-c921-4a39-956b-63b5c4d35fba",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5b193bf8-d303-4249-a37c-fe122079baee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf60c14-f34e-45a0-aff1-dbaa6d5d70de",
        "cursor": {
          "ref": "c343c4e9-d9c9-4e26-918b-503b712f1dba",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1fac3ed2-60b2-49e9-8edd-88440b68d3db"
        },
        "item": {
          "id": "3cf60c14-f34e-45a0-aff1-dbaa6d5d70de",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "63b09dec-87ea-4aaf-9cfb-10876fe45c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb800e9-91a5-49eb-9fb2-a44fbc98f225",
        "cursor": {
          "ref": "de0d041d-7869-4b55-aedc-3bb5633ae22a",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c239fda1-3b08-4420-bc65-c887c1eec4b6"
        },
        "item": {
          "id": "ecb800e9-91a5-49eb-9fb2-a44fbc98f225",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "87d789f0-29b2-472f-bc73-a2e75eefa553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5cfe23-c35c-43b1-b317-d49316f9e116",
        "cursor": {
          "ref": "29428eb0-99d0-4fe4-99d3-9fec5ed36f03",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1f9dc087-e623-4025-86cf-4c42788f99fc"
        },
        "item": {
          "id": "da5cfe23-c35c-43b1-b317-d49316f9e116",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6f0bf112-4baf-4d0a-8810-7f42a18fa633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a516cab-ff35-40eb-8605-a76f50d32918",
        "cursor": {
          "ref": "41815a39-29f1-4f55-a435-3d8425fcfd6c",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fcb4d600-5b54-482d-95be-55ab26837c08"
        },
        "item": {
          "id": "8a516cab-ff35-40eb-8605-a76f50d32918",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9dd0e1c8-d0dd-4321-8122-4bd565f79aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59856e05-3b74-40f9-bc54-5c104cf476ab",
        "cursor": {
          "ref": "17e05124-da20-42b4-bea5-5013d01df17f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "de5b2d9a-8a3c-45d6-a743-1f84de573fcc"
        },
        "item": {
          "id": "59856e05-3b74-40f9-bc54-5c104cf476ab",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5e75ca65-704a-4fd3-9bf7-50e24e887729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b125c645-074b-4f7e-8dc3-950d4d1dafe9",
        "cursor": {
          "ref": "54e257ca-f5d0-46d9-8c45-b6b8bc335186",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6023fc04-843d-4de5-893d-e3a39b625c8c"
        },
        "item": {
          "id": "b125c645-074b-4f7e-8dc3-950d4d1dafe9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ba048b04-de34-4775-9a43-455444c9b1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9fe651-2eaf-41c8-b630-23732ea7181a",
        "cursor": {
          "ref": "9222682f-93fe-4e3d-a392-dccec0bd9f91",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "622d9488-1d02-4b13-b99e-41680d5220fb"
        },
        "item": {
          "id": "7b9fe651-2eaf-41c8-b630-23732ea7181a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dc389367-1427-42f9-84c8-f325e2a73951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8625b8f-ac47-4343-a31e-392cd451ef0d",
        "cursor": {
          "ref": "b814dad0-b900-4150-860c-73bbc84ce325",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "006e1828-02d3-4f41-8471-94a2fe7cdb59"
        },
        "item": {
          "id": "d8625b8f-ac47-4343-a31e-392cd451ef0d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1a8f641f-d4af-4885-b06f-ce953c85b9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c82141-e431-4358-8b42-73ba864829a7",
        "cursor": {
          "ref": "707dd7d9-d27d-478c-b2e6-14dac2776978",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ee2778aa-dfec-43ce-a85d-f5b2c7bb5407"
        },
        "item": {
          "id": "61c82141-e431-4358-8b42-73ba864829a7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f555afc0-9e32-4a2c-9314-ac2e4d7fd477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f1ef99-7390-401a-a6c5-f95ed23de7a4",
        "cursor": {
          "ref": "414f0a13-d940-4030-a9c6-dbbadd11e9a0",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5172a7fd-1027-427d-abf7-faf8c4e473d6"
        },
        "item": {
          "id": "64f1ef99-7390-401a-a6c5-f95ed23de7a4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "96d193bd-ca89-4f4d-a1e2-049ca1d42cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cbfdd4-7599-4763-953d-bd17213be4d9",
        "cursor": {
          "ref": "3501d86a-cb69-422b-8d61-499d84992689",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7fa490e1-da5c-4183-9b3f-7a2ced16e701"
        },
        "item": {
          "id": "92cbfdd4-7599-4763-953d-bd17213be4d9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "13dfca0c-b125-4627-8287-92d49288ae1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6506a460-1f72-46b7-9e85-6f7354b5837d",
        "cursor": {
          "ref": "6079ea21-66d5-4d40-993e-69282b7e0e64",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5d4c7591-1f78-48ba-8313-2722bccf4550"
        },
        "item": {
          "id": "6506a460-1f72-46b7-9e85-6f7354b5837d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "84fc3078-42fd-4fdf-bf5b-721c92c5d2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc9906a-aa8b-4e23-b67e-5d2e8b754ffb",
        "cursor": {
          "ref": "bc0a49f6-c650-43bd-9484-3517ac58e115",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9f516524-43b5-49f3-b11e-00555f5eafae"
        },
        "item": {
          "id": "bfc9906a-aa8b-4e23-b67e-5d2e8b754ffb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "66ea2057-f9cc-4df3-83a1-0ae5ddc36e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67436b2f-6b4a-4d47-903d-1636f97e8106",
        "cursor": {
          "ref": "205c3e45-fba6-4213-a9ec-ca0ac5536010",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "75049641-b430-44ae-b883-82b0d24b1b3f"
        },
        "item": {
          "id": "67436b2f-6b4a-4d47-903d-1636f97e8106",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ef782460-8b3a-4b5b-b275-49bc9d4b8519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eb9bb6-00c4-406f-b9ee-493f8a5f94d8",
        "cursor": {
          "ref": "98d826b2-9291-4329-b5b2-c93120775bb8",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2ee772cb-c264-4adf-9d50-319475cb3a97"
        },
        "item": {
          "id": "d6eb9bb6-00c4-406f-b9ee-493f8a5f94d8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e528b445-60ab-4011-8931-da559f3c89fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50655946-ebde-4f00-af93-fcbf4b7da5e2",
        "cursor": {
          "ref": "90f56da0-e79c-425d-aff2-31b1f8f33f0c",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5f868fe7-ca10-4453-8454-068a76710d9b"
        },
        "item": {
          "id": "50655946-ebde-4f00-af93-fcbf4b7da5e2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "631827a7-3cfa-4ea3-890d-07a1de495bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822c243c-4c02-434d-8167-676a8cca454f",
        "cursor": {
          "ref": "27d3f7b7-36e9-4f51-83e4-657285311273",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b88f1603-6d4b-44cd-8646-fec54f9aebf4"
        },
        "item": {
          "id": "822c243c-4c02-434d-8167-676a8cca454f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9f48e09f-dbc7-4563-9232-2d7fd69f4fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d57e0f-987d-4191-8020-41729b64c3af",
        "cursor": {
          "ref": "ae95883c-0d9f-44bf-ae88-345a9dff0a2e",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bf39e1c9-930d-41fd-bacf-fd40723e5120"
        },
        "item": {
          "id": "45d57e0f-987d-4191-8020-41729b64c3af",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "178f0201-35d4-4065-8b75-c7f0b4f67bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6d660b-cccc-4461-a6c2-57b082345a75",
        "cursor": {
          "ref": "16f5eb0a-7ef7-446f-b535-89cdb52cdb5e",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d276527e-c979-4291-af02-ece86b7ab391"
        },
        "item": {
          "id": "4d6d660b-cccc-4461-a6c2-57b082345a75",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ebc3751c-f23b-4b8c-a975-e66a95a56af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2fdc7d-b1f2-4861-8703-9f72d51a97ea",
        "cursor": {
          "ref": "2893c5bc-068d-4012-908b-596a5b0a0925",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7d7dcfd6-c337-41e5-bfb1-ba9dcb7556ea"
        },
        "item": {
          "id": "eb2fdc7d-b1f2-4861-8703-9f72d51a97ea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1212ecee-577f-4213-883f-31e8725bc2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2539d65d-3151-4689-bc69-02c87ffb9aad",
        "cursor": {
          "ref": "1b7175c3-659e-4e2d-ae37-75a15df33c09",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f294262c-9149-46b7-acfe-9711fb2c38ac"
        },
        "item": {
          "id": "2539d65d-3151-4689-bc69-02c87ffb9aad",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9f8e34cb-76d6-436b-a852-b92f41549cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f43d85a-cfcd-4646-9dcb-d62a9fc77387",
        "cursor": {
          "ref": "6d7f2a73-25e5-4d87-b39b-3000dc9b846c",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "eabbdd52-bda8-40ec-a9da-bd3bbb50de90"
        },
        "item": {
          "id": "8f43d85a-cfcd-4646-9dcb-d62a9fc77387",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3372ec4c-410f-49e1-8d61-63b709576d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459a7c71-4ab6-4e02-89dc-89c5d1bfd708",
        "cursor": {
          "ref": "d9656ee8-fc14-4000-856c-22c5141c44db",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c6b1c2c7-2681-4be7-aa60-26ac5864cc80"
        },
        "item": {
          "id": "459a7c71-4ab6-4e02-89dc-89c5d1bfd708",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "deaa0bd1-d7ec-4578-a221-e7704b5592e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0536973-b77d-422a-a647-ea946e68f09b",
        "cursor": {
          "ref": "27353462-6186-45be-8946-5b1df4e9dd78",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fbc08b9d-56dc-4cdd-a38e-d8f690033484"
        },
        "item": {
          "id": "a0536973-b77d-422a-a647-ea946e68f09b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cc4a3b3d-3806-41a9-8727-2f092f75055e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc72b2d-5882-4096-93b9-a97c39444b0d",
        "cursor": {
          "ref": "0d4bffa1-833c-4c73-9c1b-721582db2de4",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9b43aaf8-ab8c-4cf3-aeb6-b916d42a8473"
        },
        "item": {
          "id": "dbc72b2d-5882-4096-93b9-a97c39444b0d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cf33c937-714a-44a5-8a0e-0511d7280087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7e792a-2f9c-4be2-a29e-6296156d5b8f",
        "cursor": {
          "ref": "46b1457e-2c2c-4dcb-a409-a819b5d39768",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4c232a21-0b1a-4ce5-a3bf-84576f9e4078"
        },
        "item": {
          "id": "af7e792a-2f9c-4be2-a29e-6296156d5b8f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "146ae4c3-c143-45e3-8342-e1bedd65c451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777bd527-046c-431a-a4e6-41384d9b76e5",
        "cursor": {
          "ref": "cbdde364-4758-4ad7-a0a1-3f921a0c7fa0",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "07f5bbaf-ec36-451f-8c64-fd79aea50a07"
        },
        "item": {
          "id": "777bd527-046c-431a-a4e6-41384d9b76e5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3fe23461-4b24-4ca8-91bb-bab5177be1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4776c186-76dc-4559-9a98-a8ee420d5435",
        "cursor": {
          "ref": "63725e60-f847-4ac5-ab90-144f23e0c26b",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3f42a45f-5736-4c25-9df0-79aa7a196853"
        },
        "item": {
          "id": "4776c186-76dc-4559-9a98-a8ee420d5435",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "17bfa1ca-087c-4ab5-9bd2-c0989cfa5ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72703b7-7a75-4e90-aaa0-f64353d96ff5",
        "cursor": {
          "ref": "276a3c0e-1799-4a89-9d12-a5906c687de8",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fcd5b980-5806-4449-a551-5dd64eb6b4a8"
        },
        "item": {
          "id": "e72703b7-7a75-4e90-aaa0-f64353d96ff5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c4bfb0a6-5c22-4533-949a-c2d72251ea4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dc63c3-5803-4be1-b2d8-ce7dc4d7e47c",
        "cursor": {
          "ref": "6fe960b4-cff7-43af-908f-7eac8721f220",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ac6c4e38-3ebd-40e0-b486-a7c8707e9fe7"
        },
        "item": {
          "id": "f0dc63c3-5803-4be1-b2d8-ce7dc4d7e47c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a34b46c5-2b80-4a59-859c-caf2b06d5cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08674c84-f9d3-4a5b-bba5-c9171b3dc20e",
        "cursor": {
          "ref": "34d4e766-0019-466f-8932-4ab1957db546",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "62c1de7a-7d7b-4ced-b96b-04558f2a18f3"
        },
        "item": {
          "id": "08674c84-f9d3-4a5b-bba5-c9171b3dc20e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8e313bc5-713d-4f84-825f-e8464fd2f962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d845ac-e299-45ec-aba1-c0d9b7956646",
        "cursor": {
          "ref": "6fec707a-045a-460d-a7f9-b1c1d67ca056",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dc494e07-f31f-4702-8445-864e30b9590e"
        },
        "item": {
          "id": "a5d845ac-e299-45ec-aba1-c0d9b7956646",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2b1760c5-4d2d-4230-be69-9c98f616477e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fa77c7-b796-42b4-b424-2b78a962fb0b",
        "cursor": {
          "ref": "14df5845-7eba-4849-9e86-657021832753",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cb54822d-f730-431e-8402-7fac2a4b3747"
        },
        "item": {
          "id": "47fa77c7-b796-42b4-b424-2b78a962fb0b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "357a6666-a9a3-488c-a636-362891835e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2691775d-516c-459f-826e-0801f94532a6",
        "cursor": {
          "ref": "afe10172-3eba-4b0b-9923-50f5a4c7bb8d",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "faf8fe95-2027-450f-a084-9e4f49e3d54f"
        },
        "item": {
          "id": "2691775d-516c-459f-826e-0801f94532a6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b6a8cc3e-5fb7-4e01-bddb-8d4e9db9a2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4aee50-4970-43aa-993c-da8f59bd2211",
        "cursor": {
          "ref": "857c83e0-f3c2-4c90-852e-1dc3c64b002f",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "75372e65-9032-4836-ab53-88d185179c16"
        },
        "item": {
          "id": "dc4aee50-4970-43aa-993c-da8f59bd2211",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "446087c5-149a-4289-a502-19a8bc0f17bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c676dd2e-6a7f-4465-838a-e0a1ca47a9b1",
        "cursor": {
          "ref": "54542ab4-6b7b-4708-90dd-8fd9f274b472",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8dd41396-a767-48e9-bfce-ed72980500e1"
        },
        "item": {
          "id": "c676dd2e-6a7f-4465-838a-e0a1ca47a9b1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5506ea0f-2fd2-45ec-bb67-1e4eecb69a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f1e1c7-3b8c-4118-9753-e242c21eb6aa",
        "cursor": {
          "ref": "89db1c2b-b322-42be-ac74-569d704df042",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "19a569b0-fdd4-4106-b3b2-d8f8c2ee3393"
        },
        "item": {
          "id": "b1f1e1c7-3b8c-4118-9753-e242c21eb6aa",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "481f6ab8-3a2c-4fad-91c1-75547349c48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56c0396-c485-4b16-900a-aeedcf2d6256",
        "cursor": {
          "ref": "b5b42531-c0bf-4a97-958c-67c2a176af60",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "444f2c89-0693-404e-9ca3-a6b88f4c1ed9"
        },
        "item": {
          "id": "a56c0396-c485-4b16-900a-aeedcf2d6256",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a1e8eee6-6f73-40c7-af3e-55748e51a825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd81196-757e-45ec-a670-cfb46e181b3d",
        "cursor": {
          "ref": "a8632d3e-2900-454d-b713-d22de3402b33",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "61587c75-ba9d-44fc-86b5-f02508078cab"
        },
        "item": {
          "id": "cbd81196-757e-45ec-a670-cfb46e181b3d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "63e89092-4b10-45c0-a567-0137c6f76bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09571a89-34da-4cb5-aa9e-ae050fe3af4a",
        "cursor": {
          "ref": "5281619e-8141-49f2-84b1-a56b4bca6c4f",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2e8c298f-c249-4e62-8b3b-51044509d817"
        },
        "item": {
          "id": "09571a89-34da-4cb5-aa9e-ae050fe3af4a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cfe41152-3b67-419f-88a2-67f57ea1775f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ce788c-335c-4c93-b399-a6183c5c10d2",
        "cursor": {
          "ref": "41def7c0-31e8-47c1-8c30-8ccb0b3cea8b",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0c281e3c-ba2b-43cf-a3c3-4d856e842286"
        },
        "item": {
          "id": "10ce788c-335c-4c93-b399-a6183c5c10d2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cabae6d0-3297-4124-b228-af06a7e977d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3308922-ff23-4d3f-b659-ada362c47877",
        "cursor": {
          "ref": "c0f20bb7-4c6d-4325-a14e-dc129d7dae72",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6320bbea-af67-4492-8253-07afa54b1015"
        },
        "item": {
          "id": "e3308922-ff23-4d3f-b659-ada362c47877",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ecddba57-f2d7-45e2-a9a4-b068cfbf72dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12038370-a43e-499f-ad69-89b74b2b3488",
        "cursor": {
          "ref": "49a50fba-5877-4696-b50a-674067491cfb",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d54766fa-4e93-4d1e-9da1-1272263f86af"
        },
        "item": {
          "id": "12038370-a43e-499f-ad69-89b74b2b3488",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5b577658-6f3f-44fb-8596-948773f01e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2d737e-f529-460d-bc8b-ad73111b47cc",
        "cursor": {
          "ref": "9a77ada9-0e83-409b-8f03-191ced685a53",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5793cfad-f4e1-495f-af3f-87c409a0077b"
        },
        "item": {
          "id": "1e2d737e-f529-460d-bc8b-ad73111b47cc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c9ca344e-93bb-43f0-8d20-82576b444e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38614b32-0a79-4445-a48d-f4538ccfe07b",
        "cursor": {
          "ref": "a7072571-b633-444a-b31f-62729a35ff41",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "caea7b79-bfad-4a35-8474-fdc4dfb36a1f"
        },
        "item": {
          "id": "38614b32-0a79-4445-a48d-f4538ccfe07b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f429e667-7955-4ea7-9174-4aeee2593a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23874f5b-4b90-4268-8a57-6e5c7c1a9aa0",
        "cursor": {
          "ref": "52e87b81-1648-40ff-8cd0-7cb7e11f5cbc",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8efab947-61b2-437a-8e11-7a152f55ea1b"
        },
        "item": {
          "id": "23874f5b-4b90-4268-8a57-6e5c7c1a9aa0",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bca85b72-bea2-48f0-8160-f590b0588adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf00ed8-9088-4769-aac4-e84037b42638",
        "cursor": {
          "ref": "5e9cc6ae-46f2-4c16-9d51-059ee0bff090",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a2899ff5-1ac4-4c3e-9ff9-c6722b286f79"
        },
        "item": {
          "id": "8cf00ed8-9088-4769-aac4-e84037b42638",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "342c7135-a7ec-42ee-9768-40277a89c5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1bb05b-26b0-4be7-bd94-d64f52bcfdcf",
        "cursor": {
          "ref": "94dc892b-d7e1-43b0-8e9f-b4de7713d839",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5877bb99-01c1-43f6-bd0c-b44463c95f14"
        },
        "item": {
          "id": "ca1bb05b-26b0-4be7-bd94-d64f52bcfdcf",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7b042a12-6a07-4a06-ad5f-82dbeefc07a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc59eb29-51f2-42c8-b766-ffba8be39ef9",
        "cursor": {
          "ref": "1210be6c-d74b-4a6e-9268-801361241c5c",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ca357714-750d-457d-8699-b856b3e08c9b"
        },
        "item": {
          "id": "fc59eb29-51f2-42c8-b766-ffba8be39ef9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "32a60334-a244-41ec-a80c-166b4e43d9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7011f958-0d1d-4424-9b27-c237c413cd51",
        "cursor": {
          "ref": "7e1339ea-1cd6-4417-95ee-8d5d12ead81d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "27ef0cf6-0db2-41d9-af55-30fb46a29bb7"
        },
        "item": {
          "id": "7011f958-0d1d-4424-9b27-c237c413cd51",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2cadd6c0-7acc-4490-b14d-7cd996859e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd98c840-fc9e-4fb7-9815-2056f07aee36",
        "cursor": {
          "ref": "386210b2-daf7-4e0f-9dca-0f831479b89f",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cdf43e86-b431-4937-bc6b-7cf0d06fd3dc"
        },
        "item": {
          "id": "cd98c840-fc9e-4fb7-9815-2056f07aee36",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9dfcd71f-17ba-4ba8-a70d-88b56b5e37b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f3a7e9-53ac-460d-9381-378ed3016c10",
        "cursor": {
          "ref": "60bfece9-1ea8-430b-b0cd-8e87197fdcc4",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5cd550a6-778b-4252-bd60-8fc9b52ca74f"
        },
        "item": {
          "id": "42f3a7e9-53ac-460d-9381-378ed3016c10",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3d06a1e7-319c-4681-a2f7-abde9ea68660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a80b15-3a8d-4197-b222-2a11d42c2212",
        "cursor": {
          "ref": "8b6c5072-3cf2-416a-8210-3a4ea0125a28",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f4e68da6-daed-4ef0-b6fc-2bb12985f522"
        },
        "item": {
          "id": "94a80b15-3a8d-4197-b222-2a11d42c2212",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4e439980-00ca-4278-acf1-877162d47f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad561ee-c48c-4578-87ad-e5d7dafc5d88",
        "cursor": {
          "ref": "7c0ac596-c243-4fdb-8cd1-f19bc8792349",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "deea5bcb-d878-458b-b88a-42545416288f"
        },
        "item": {
          "id": "8ad561ee-c48c-4578-87ad-e5d7dafc5d88",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fa61d9e9-cccd-41db-8ed0-ae72e91a5964",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071f59a1-7820-4b24-b17d-9caf1741a2e6",
        "cursor": {
          "ref": "fba43aec-7a1b-49c1-944a-153fb9c677cf",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6092f441-c784-455d-b0ff-0138afc57ea7"
        },
        "item": {
          "id": "071f59a1-7820-4b24-b17d-9caf1741a2e6",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "13202bf9-42e0-4f22-8b92-e018e2447edc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 376,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17345a1-4fb8-429f-a64d-bb872ac71422",
        "cursor": {
          "ref": "21df475d-63ac-46ef-85e2-1eca841b2761",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dd9858a2-a170-4eba-a719-c2c204d34682"
        },
        "item": {
          "id": "a17345a1-4fb8-429f-a64d-bb872ac71422",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f5c52813-839d-4d4d-96a5-5ec3640b10dd",
          "status": "OK",
          "code": 200,
          "responseTime": 485,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11d8e6e-dbce-4fef-93fa-e7525179636d",
        "cursor": {
          "ref": "658dc667-d874-4594-af63-8ff0bc397888",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "73c943fd-8546-445c-ad2c-4ca4da22d53d"
        },
        "item": {
          "id": "e11d8e6e-dbce-4fef-93fa-e7525179636d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d8077a2d-505f-45a8-85da-a77526b4271d",
          "status": "OK",
          "code": 200,
          "responseTime": 1537,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e8f7b9-4c87-422b-b152-cf4412fb4073",
        "cursor": {
          "ref": "14a4cf5c-66c2-4b6d-9f8f-9c96d9b69120",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d327d7a7-f5c9-42c3-a99a-1abe8aa07fe3"
        },
        "item": {
          "id": "10e8f7b9-4c87-422b-b152-cf4412fb4073",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5050d01c-0028-4e67-912e-0225d2c51e36",
          "status": "OK",
          "code": 200,
          "responseTime": 1272,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "310c641a-79ac-4789-b2cb-454b00b3748c",
        "cursor": {
          "ref": "31e8cdda-6afd-4a25-a51c-9cfc3a132377",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8be6df2f-6ae7-4105-b3fd-2b366be849bd"
        },
        "item": {
          "id": "310c641a-79ac-4789-b2cb-454b00b3748c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4781b80-20c3-4375-83cd-4391f9bf1d68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310c641a-79ac-4789-b2cb-454b00b3748c",
        "cursor": {
          "ref": "31e8cdda-6afd-4a25-a51c-9cfc3a132377",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8be6df2f-6ae7-4105-b3fd-2b366be849bd"
        },
        "item": {
          "id": "310c641a-79ac-4789-b2cb-454b00b3748c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4781b80-20c3-4375-83cd-4391f9bf1d68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310c641a-79ac-4789-b2cb-454b00b3748c",
        "cursor": {
          "ref": "31e8cdda-6afd-4a25-a51c-9cfc3a132377",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8be6df2f-6ae7-4105-b3fd-2b366be849bd"
        },
        "item": {
          "id": "310c641a-79ac-4789-b2cb-454b00b3748c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4781b80-20c3-4375-83cd-4391f9bf1d68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687771a7-4917-4283-8ec2-ac9f0e091c5e",
        "cursor": {
          "ref": "18aa68cf-e0ce-454f-8e2e-f9acb3788a9e",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8f910852-fa0f-4e9b-8220-2591a623c23d"
        },
        "item": {
          "id": "687771a7-4917-4283-8ec2-ac9f0e091c5e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "79bc74c2-ba66-4fe5-a030-1fa722fd81be",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 380,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031b07c6-3f32-4bb4-905d-e69c4c324058",
        "cursor": {
          "ref": "7f8508b1-b0d9-469c-ba21-2361a855ff4d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9d5ad448-3971-4c0b-a0b6-b697b46fad39"
        },
        "item": {
          "id": "031b07c6-3f32-4bb4-905d-e69c4c324058",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7f354599-8916-482b-8db4-3b59c39a6d25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031b07c6-3f32-4bb4-905d-e69c4c324058",
        "cursor": {
          "ref": "7f8508b1-b0d9-469c-ba21-2361a855ff4d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9d5ad448-3971-4c0b-a0b6-b697b46fad39"
        },
        "item": {
          "id": "031b07c6-3f32-4bb4-905d-e69c4c324058",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7f354599-8916-482b-8db4-3b59c39a6d25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503d0e69-2166-4546-9dfc-d7abda16d870",
        "cursor": {
          "ref": "20d62910-6c32-4003-a60c-4df5fa3c8dcf",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b26d0fc2-6970-40f2-8e94-b8756d28b989"
        },
        "item": {
          "id": "503d0e69-2166-4546-9dfc-d7abda16d870",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "690c4e51-016e-46bb-a973-d058c8052951",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 614,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a35b6cd-553d-4b4b-b9ca-61579a566ae5",
        "cursor": {
          "ref": "6d412f83-2810-4304-a88a-a85d932b9133",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cf187528-6a2b-485f-b64a-9075cb83707a"
        },
        "item": {
          "id": "8a35b6cd-553d-4b4b-b9ca-61579a566ae5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c3435397-103f-4661-89bc-1402a646e0fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a35b6cd-553d-4b4b-b9ca-61579a566ae5",
        "cursor": {
          "ref": "6d412f83-2810-4304-a88a-a85d932b9133",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cf187528-6a2b-485f-b64a-9075cb83707a"
        },
        "item": {
          "id": "8a35b6cd-553d-4b4b-b9ca-61579a566ae5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c3435397-103f-4661-89bc-1402a646e0fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e91a01-2fb4-4b6b-81b5-c38c4d89dffa",
        "cursor": {
          "ref": "aec8d2d2-1a44-4f17-9397-67996562a1f5",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "216fd537-0a1d-438c-91f2-bcec92ffdd1e"
        },
        "item": {
          "id": "56e91a01-2fb4-4b6b-81b5-c38c4d89dffa",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "4fa150e0-85fb-40ed-9f5f-e9b2959d9d41",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 603,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}