{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bc188797-31fa-4d36-a47c-8445eccfff83",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7911bc6d-dcf3-4679-96fa-90e6b4a09acb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0f13d2d-0865-4eb3-955d-fb50c928e234",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c0e20622-4c69-49c2-87f1-1ae54f8af451"
                }
              }
            ]
          },
          {
            "id": "11635177-3baf-44fa-8691-a72b17e3c3e9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b46fbff1-22e7-42f1-96b2-820c1a400856",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9b127029-aed8-4ba2-8a50-0c2e02564871"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b07ad067-e76f-4584-8973-7af11a85bc53",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "acc60c01-f735-46d2-a293-360b7c3b4f42",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a8c5e0c-2130-4475-ae0a-5c3f0efe0862",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79a1d672-04cf-4ce8-b50b-69af4fd04c43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb93e968-d388-4f77-8d04-5caaf500800c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "550c240e-db95-4799-905e-8e75683e8e8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cbcf55cd-a381-432a-888a-2e693be3dd56"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b05102d2-a5c2-4ab0-94d6-a1afb4aae1c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b908326-795b-4e6c-914f-bf3d02e5dd65"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ea6bf6e-0247-42e6-93b0-8cb01be66724",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "17f6d9df-1a75-4a8d-b4de-bd8e405f53c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d65f308-c226-4128-a88a-fa6b564dea94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fb778e2-95ca-41cd-ad6f-8f28d3929f45"
            }
          }
        ]
      },
      {
        "id": "1c39a584-4218-4749-b769-a3f0d371b553",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4a0fd5d0-02d9-44fe-adf2-21741884c570",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7efbc627-44f2-474e-b5fd-7b34a7b9415d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b9e16eb6-4bf0-4614-b4f6-058f6998d90e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc4a300-c017-4cd9-a43a-4d6e8aca4498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cad7db80-6366-49fb-a5c6-ebd3ae693bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3723054c-7270-49c3-9efa-d5dec9d1d03b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf697c8-a98c-4987-bae7-3c4f3bf3f7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e33c367d-abec-4e98-847d-760e494db0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774a8b66-edc6-4008-aaee-78a9f4581f76",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c51740-fdf0-4d74-8d80-c74259f9a183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d063d775-e491-4ed6-b607-b2b7ea1d2042"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8bb9208-f38f-438a-89bc-a3e715f5c867",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed31a2fd-91d7-43fa-bfcd-4fd105b4ad05",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e42206-e5e4-4e10-a9fc-cbda56156bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c2c9c19-678a-41fd-b1e1-32cefd41ad03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7cadd0-7c3b-4e12-9f27-bd3561ba3925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33878a2f-7d19-40f6-8169-5336e12e1bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d556053-cccf-4559-9b70-a41656dd67a6",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8717de2-fbe0-4ea7-b6bd-2730b833cf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd32cca1-6ed2-499f-a93b-08336a390acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e26fb40-2dbb-4f18-80cd-2e80b398f8ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "497c8e17-10fa-4ab6-aab3-efbc39905e54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f2d5de56-c706-4496-b5ef-e3782fed862d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96596377-a5e6-46d3-8273-48cfef309925",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f400354d-bce1-48c3-927a-3bf05a3860e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b1a47f89-5182-40cf-9a24-2fdc551eef8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb34333f-3bd7-464b-ad7a-baa6439c1b7b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b1f7cfce-5969-4044-91e4-5e92dec4316d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50bd82fb-3228-4491-ba4c-13bfb4b95f28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee634222-14ce-440a-99d8-7f799b342f78"
            }
          }
        ]
      },
      {
        "id": "96513b79-1f79-442e-b6ac-1353954df53b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "82d5b209-fa6a-4a42-9293-4aa3eba8b524",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9361dd9d-9408-42bf-8d7e-e6ba21ff2273",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3491f7f7-6a0c-4deb-8f07-96801f5c18ed",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3079d787-9f67-4911-bb47-248f9d9af29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8a5401-64f1-4e8b-a2e8-7650513e60a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1ce7ce-e4ec-4478-9dc4-eb52024fadf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91b286d9-8936-4045-b249-bd2d44ca7cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62057ade-0b48-41cf-8148-ca46268af9f5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5ea414-2469-4b33-9715-f59290bb1390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fac152-8a65-4cbf-bccb-df0a8f0b1f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78125f02-0f64-445b-a54d-29a762edc404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86c1ec1a-df77-4a12-9eca-0d61f74b7d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec542e5-f91c-43db-9e52-3decbfcef644",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a267b27e-624c-4f7a-9464-6b83df712f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b1f8cec-96a1-43e2-8642-193c547d0cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1352910d-d57b-49ff-8584-95bb3c0e0723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eac5cb7e-9b54-44ec-9aa7-add86f352ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec88357-8741-46f4-84cf-c33eb5f5f029",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9759b02-6fc0-4a52-8d3d-e5fb1411d999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f58a15f-41d9-4b63-95cc-06cbc0f33425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c4b842-45d9-4492-9b4b-46b12626dec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03f75830-8619-44ee-9901-4cdce1dcf924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce97f57-15be-492e-a349-05981f979c3a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8236396a-d0eb-487c-ab7d-7f476837e338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc361f0-76c7-44d9-a891-608954870d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83d9552-f0c3-4689-ac16-1e8d617d2958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab31ee36-a951-483a-887d-253267011d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439b80d8-4dd9-46cf-bfd2-d49a2d8c79fb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdf1dc4-6b73-4ee7-ae2f-a974b6594bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e2507f-dde1-46aa-bc77-5414890cf129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219bee6c-25da-4dfd-bced-91d7d16d1f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94d6cf03-5a38-40cc-99a8-de0fa6a45515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e255b5b-faa3-4687-a4ca-3734eabbf3f0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68de87c-d3a5-45c9-86dc-70c4e5c0b72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e318c4ad-aab1-492f-aff7-35ad52be102a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3520e2-3605-4912-8be0-93cd5333a5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6009f6f7-7785-4c39-b891-9ec734ee2b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c31d18a-4df0-47ca-b236-0e9ac25ac021",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d694e5-a010-4590-a2ec-8a99bcc62582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c07bc72-27ac-4a7d-8c69-12784c651af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8439bee3-9ad6-4a21-b8d3-63312efd66a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32cf5eb6-481f-4794-907d-0cf9cc338077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b44def9-033c-4aad-80b9-ce7d0466c529",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4b4e9a-3094-4fba-b28a-7bbf9b08f474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca7b82a-0637-4bf7-a600-368895ddba29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ee4fd5-dd66-4d2e-9ce9-5d6365508cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6aa75e5-10f6-4ddb-b117-d8c28b385efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca91830-f3bc-4479-827a-c3c9b31541f2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f00e4a8-db96-4a2f-b868-c5127f0f7282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287d0315-cda6-4b89-a580-e7985d4b44e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a4f955-e86e-480d-9c54-93fcb392854a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b4c1d9e-fa3b-48f7-b903-0f6a5892601e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe246fb-1512-48c7-964d-85dfe1196c16",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859436b0-91e0-4660-a86a-0a223ab40fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0664ceb5-251a-447f-94e9-a88caba113d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6106f97-0500-4927-9e71-a17fd5fbdfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "545fd668-0f4b-40a0-bced-2346100041f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f8c49c-40dc-4dae-ba4c-dbd3b8951011",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb30e6c-ae73-4d4e-b6ee-e051a8b4da71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4665ea-bf9f-4fba-ac26-b67a25f0e705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f70e587-1d85-4441-8c2c-43011ac91996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb7065a3-75ce-4e2d-8ea6-6c322565b7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956ee0d9-627d-4085-8787-41709888e852",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da52d41-a214-463f-b24e-c7790ab7c0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbb8d17-e4de-4599-8e2c-94b3132830b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9df8b2-8347-4c61-9a32-280786d37cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4e4fe89-b121-401d-a355-4b2c540e0a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc0cdbf-2265-4d57-9277-b5052e92651e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022933a9-bd05-407b-99f1-6d6f946f23aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ba391f-4c18-4ef7-a8df-d53c359465a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ad95d1-5f59-4ecc-bcf2-cf0763ffa44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb75e569-8c2a-46f4-a701-c9555c4eccdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b949c85b-5e89-4c28-a96b-cdff6eb5b6f8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04065d6f-33f0-4272-8b21-972a3828b917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64345800-2e08-4544-8c31-f1d1e88343bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc907c67-1395-4640-ae7d-6967731eb72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffe89213-f4fa-4dcb-b1c7-91f114f4d14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4819776-ddae-4723-a2bb-ff429e3d7e74",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4d5182-6752-4d39-88ed-dad88fee7ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e5ac92-1273-425f-8142-37d1e1f189c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79960bf-e947-46fe-b098-e39ef93d25ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdd3bdf2-2bc7-4dda-95b8-6e0c9743938a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df347ea-3cef-497a-b240-54d03bf2f1ce",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca04d46-1168-49a2-be7a-036afbeb1761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73aa2b2-974d-41bb-ac1c-4a64e27cca6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fe5443-0dbb-41e3-9b26-536bf3a934c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deb6e16b-247a-41a8-998e-4abe8454351f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e614bce-7050-460a-9b59-d429e8dc6250",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3816d982-784b-41b7-a63d-79ec83d41273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0306142e-a19a-4521-961e-91fd37a42ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e161caad-d1a5-43c1-b292-59256e82f415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "10e948b0-5218-4e5f-bd11-1def2b378f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1bb7005-138d-415c-a393-edd19e56809c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3606ca0b-3243-48f7-9e43-029ca8377242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8788256b-c617-41a5-b750-d4873aae25b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163d3d49-611a-43d3-b2d3-8731693fb662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c04ae20-e17b-48c2-b67c-a9beead77621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d288a83e-8e43-4864-92b4-fdd27f94e2f0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ffc05c-d8b5-40f8-bdb2-bd9c30492bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fb249a-10ee-4d71-84ef-3034e8d7d278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d132fac4-82cc-402c-a241-8b50fa0c1d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0ae06f-8a70-403d-a91b-9e4fcba59155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66acd8fb-7711-4b40-9b56-565a18529c12",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91ca11e-fe3d-46d9-8f76-c87a2e30a604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e319a08-32e0-46f7-8b4c-3a0d440f36f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0093f03-f962-48ff-8ca4-22953b74f61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92bb28b9-d650-44ac-896c-854de3a54663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37188ed5-9ecd-47e6-8974-eb4fd86232da",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6128e8-d390-440d-806c-f71d648394ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f59293e-33e9-42a7-b2c6-8b370c1195c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dabafd-f55f-4ef3-b4ba-00739d72f2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a734ebfc-1149-44ce-86d6-610fd698610e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cab4e0-5158-4d4f-a3ec-6e24fb9065bf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e8f7fb-bc72-4181-9447-0e5c85048bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda3b4d6-001f-4c40-bceb-5b9afce05987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6339d36-4340-4e42-99a2-8162d7831242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba06672-e878-4f71-9e71-9384ebb92677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a16107-c79d-463a-96d1-0c3d6bdcbb9a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35857662-5670-4a62-acc7-777b273fb304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049f4230-0d3d-438e-8e5c-2706100b7575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6956dcc9-e0b0-461b-a31a-e1144da41b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "760674ea-002e-4fc6-ab98-b49c7ac2766b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00425105-ec72-488b-a2c5-3f17aef43020",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecba661-ffe7-405f-9968-965be265f5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47e209d-7dea-4040-b314-92b935a78b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0419d2d8-9462-4fbe-bb47-f13ef77dfc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7435f49-a7b1-48a6-a654-04cf4e89c7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf919ad-bd85-4112-9798-f0c919b9405e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2045e6ad-ea7b-41cf-9ad8-a45a5f607d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfbe3bf8-8f0f-47b2-8225-28203e8b460b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75217f77-9193-43c6-934f-d6f21c4a0039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e699767-a355-4e54-824a-68557868175d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825b19f1-eede-4699-85c3-a44462a027d3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880bc01c-0620-4103-b40b-f82d46ca7f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b6a0e5-0200-43d9-848f-4e6a90cc664a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6f18e3-256f-4a52-a6d9-953a2ab5566b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "142b1bc8-db16-4348-856f-4b7d5daf1e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf70218e-e6c6-4ed9-bc81-68ce523042e0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7feb893a-f2cd-4a82-827b-860d5540ebbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a5be89-1550-434d-8de7-f3ebc87cc295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82812c0-f99a-4dc9-afdc-b00bf4b818f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a94d985-eba8-43d1-b7a3-9b91e626b18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20caa16-c7b2-4592-b81d-9b35887ee310",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e2f47f-07d5-4f7d-a782-1074013582ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e7dfd6-f4ad-45d8-9872-45ee3e25303a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506f15d0-bebe-470e-b5ff-bf1b0e5aa6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "504b3e25-cb03-419b-b008-e98797c545c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5487e297-0acc-482c-b779-8f01e6deefb9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f337a7-ef45-42a4-a79c-766b4f7a20ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385ac25c-d742-452f-924c-01d06d50a4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5467128d-ccf8-4e18-8df1-63aabd0217cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1923960c-e3d9-44d6-bdb2-5223d533ac16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5019b4dc-0148-4498-9bb5-727f5f4a3687",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ba094a-e7f8-4548-a12c-b461b2a10b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded7a75f-38a6-4f10-a1ae-479eb08c43f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa66556-fe25-49ef-b099-99b752dd99ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9dcac0-2fad-40e6-bac3-9848a05b0f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89e543e-a3d2-4436-b9ae-67b58a80044e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fbcc2d-00d5-40b0-9f9b-c2bdbf5b85d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfba41d-a8b8-4f20-aeb8-a8336536baa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9a082f-0206-435a-8bad-b3b5645043bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "307049e8-5871-4439-828e-eee4406d99bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3d4177-d5d9-4975-874f-3ad6eb1a4eae",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de87e50-97b2-4e62-9c0f-a6a6687ae820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54adf430-47fc-412e-b696-9e6a9e37da6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b78b4c9-6bca-482d-98d9-b045c1b2831e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dae91ab-8532-41f6-b854-58fb2fda87a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa37ab4-a5a3-4db8-b268-6c9d415f4dfc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b91393-3ee8-4e47-b6ec-b16b33636ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164304f8-d061-4514-b8d3-0b70c9026ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6350d728-a46e-449f-b757-2256a66372cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e79b479-d7d1-4d97-a4f6-a366e882ac6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1886940-ace4-4ee9-acb3-a48cc21fe6a8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da65b916-5d0c-44f7-bdc6-d83a2c2dbfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1348052b-a7d1-4d47-bb95-7253cdb76eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffda9ec-f8d6-4319-8fe7-43a711a42e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "13069941-b966-4ae6-bfa4-fceaa8adfd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e998b22-8afd-4bf2-9195-887ba3def10e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f3b8dd-1d29-4d3e-8a29-0d992d582e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0ac144c-68fa-4e0e-a5b1-3b6d8fc80311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0231f0-4d4f-462c-9fb5-9d58afb0fe85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a13a67-7bd1-4d44-a25a-cd24cb9c353a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb84ae7-2ffa-4073-b92b-c0d2b4eb1d1a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a8eaf4-1ac3-4602-949f-683f8f745199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efa1548-8f27-4840-8428-1b023c27ef9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4ee788-5fbe-40c0-9301-ac5740a71fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "138a5c96-ce63-4ffa-a1ef-235e6f999941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de66bc96-a3ad-42ec-bd52-a6bc7f6400c1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6904b8f5-e9fc-4f19-83ea-4103b8d1f08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9563cb60-7d5c-4a8e-847b-ae844c87be0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c7560a-4817-408b-a5d7-bab014386779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0d6504-0239-4762-88e6-e0b0d84ecba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3b2079-f0c5-4e97-a87e-8e5ea6aa7644",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58471c8e-ef89-48bd-8f36-9b74acd5b542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de364d6e-4f66-46ca-8b68-21541a8b748e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af64dff-b0eb-44d9-8118-07e746b7aa46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9563372-c691-47bd-8cd8-5204ac203ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf8f533-8573-4284-8d64-69c6e69fb6d0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce851f7f-de78-48e1-987f-be5153bd0276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88329292-fe56-4a8c-8d56-7fe949f28a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c3e0ab-714a-492f-853c-38ebee8334bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f84fe8a8-afc3-4e3d-b466-88f36ddd1654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b408d01-2422-4b92-ade6-ff75c205d1d2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94ed6d8-821d-4b3f-bb6e-1f2b167d3863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3789e8-f132-4280-94c3-b53fc32b97c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c53a4c-edd4-40af-8bc6-8b52b19907a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe41a36-3cc8-4eb6-93eb-4c74a74a180d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741e5bb1-4743-4f0c-ad1c-d416d6944d8a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa1d36b-f104-41d4-bcad-07129eaa31af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a70489-89ae-4e9b-a1f2-4e061aa9126b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89fd080-1473-44ce-a4f5-e9e9bf218e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "03a6445b-89b1-4802-b33d-4c745904edee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ed4011-db4c-4b9b-abff-ed721c97eb45",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c80654-fffa-42ea-8bd9-5892185f9df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc57bc3c-d592-47a1-a224-6f2aa5860853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1515070-fd85-4fcc-8307-b7cb32af68ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fca263f-757f-4a33-a08b-1cb13a542426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a78ecb-3020-40fd-9d28-e1532715e5af",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e44f46-6585-4e85-8452-f5322096562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770a3910-b048-4b7f-967b-3ba544dedfc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcb0965-4c28-45dc-aa45-b25c2b964dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "486a1fe3-9e2e-48db-b3a0-fdf7ae394865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e94561f-8ea0-4a93-aea3-af8edd624ba7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ceff1b5-86f5-4311-8f60-ef2bc2d1b6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56545bb5-3997-41f7-9659-218c1f8e3f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49de6439-da97-4062-ac0a-6da612be448f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "452246ab-13ca-43d5-9af6-f7b0e315bbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f226d6e0-0e54-4b4b-8ee7-992797b71e4f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a14f0d-4abc-4878-9642-9f0426500d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70f1527-5fc5-4b7e-b6af-b4da64fda040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f84ecc-d57b-4660-bb96-adafabe18c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfbc123-d1c3-44e6-ac79-86adc9535252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6739bb2c-501a-4a1b-b5e5-b041c33d0e90",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be49bc3-6155-463a-ac23-8e79de9035ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a81895-d174-48ce-86e7-6c168d279fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8ea608-adf8-4986-950f-a5d251bc1fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac34763-5e84-47ea-a69d-309b57bb516c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0491283-2119-4ab5-8469-3847f110e728",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc7b155-0372-467b-9239-e513b347afbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78168a7d-50e5-4b5a-801a-e062985373bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898adb3a-580b-44f5-bdd7-b74e2e7a1da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54f8bd8e-6d26-4a0e-ba28-7b9b6bdb7eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59496d8f-2eaa-471f-ae15-591b2cf352d3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253d53d3-39d3-400b-a2e6-f329e0366f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d048103-bcdc-47f1-9fba-acfc07acf4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18602ee5-b134-497f-8067-ff41185c4c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd788a0e-5bbd-4455-a3eb-56133553d119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa8025c-63a0-4bfd-bbfa-bf424af3c9ad",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e4690f-6eb4-4107-bf91-1b7d01e3e109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7134d2-00de-4700-a999-9d4901b76705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8a25c6-a3f4-48f2-b1d4-61884a78d227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5163e98-2c17-4c7c-98ae-e98f6eca52ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab2f11e-2b08-4cc9-a2b7-1bb4d40527ec",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405d581a-85cb-43d8-a72c-0d2f2af5396b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578bdba1-4c7b-41f2-b79b-f0a6217e4ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e1b002-a026-4659-bf9e-1a0a33631e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc89016-c4ee-4c0c-87f5-9ce50c7e6db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993c53f4-faf0-4ea1-9816-1aa51d6c9c95",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cb988f-f8e7-4a58-a23f-cf5dd8839fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb0a4ef-4f69-466d-9268-d6dd88d2e6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d613d9-0201-47bc-9c07-d1fe345105c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bf8446-d0a8-48df-a24b-4c70d6330506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18238ab-9046-40cd-9429-77e3aaec5ac3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c7fb94-02ef-4e6c-bd11-51c02bc1ac4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37431a5-5498-456c-9d59-c62a5f6da3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c04616-b7d8-4e46-a420-3fbca3a30d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf291785-bb40-4d01-a392-d6181002c3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166e77b6-c5d9-4e89-a71a-2608b8ebf5f1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd0d40a-c463-4cb8-b0ae-a62586e37aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67160f7-ba16-4556-9917-cdbfa41b555a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33964b05-db28-4cca-9c75-6bf6f28189b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "970856d5-7e3a-45f1-b63d-d3d779894035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119b8e4a-2336-41f8-b740-2b77f0a0cb9f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a132d5-df2a-43fc-a10d-2d5bebb527fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f24b86-0b14-4b5a-b408-9142505d0097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc81d8b-0e42-4d36-8b8e-ab93c5fcad48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d165a25a-aa0a-4e10-ae4b-c67c7f5b7da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1000133e-e3dc-4a24-a5c3-637ea484f05f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a8ff0b-8dc5-44b5-a174-739285b2febd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b591d1ab-bd18-46bc-98af-8ecf34f08333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0c194e-7dc7-4c02-9599-fddb461ea37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c96455-6c28-4f0e-926a-ea2b0f20117e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9955e03b-f0ff-4aac-b06f-4eddf705e5a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfba61c-cc37-4d48-ac74-5242da87385d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f91d5e-5677-4f40-9e71-b86f451bee2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3072e18a-1207-4039-9c04-39fd5c7c9c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c41649d6-0de6-4692-bafc-dac3f1740951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e59987-0ad6-42a5-9614-ced34b6fd84c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f823e130-5a3b-44a2-9e16-ac6c4320a5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc85e379-528f-45f2-829e-511149a6f955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c4d695-633c-4f4c-a34a-f366425c17bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab6d6c1-f4ee-4457-9210-3cf680d9ee22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963b1431-6b46-4676-8db2-8eaacee817f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a10456f-8b8e-4e58-b1a4-21a90693511d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4390ed5b-368d-421a-96c8-7a1131c189e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fe2598-995e-4f5e-9df3-7f1e4e024fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "41912bee-8ba3-4f62-9fb1-f1d4a457f336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c61162-76c5-4d5c-b724-b5eecd92df2a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7990444-51ff-4b7d-8ef2-c784ef3dff1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9df2683-775b-48f2-96b7-88f71c4c4718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305bdf17-dd0a-4df6-85d4-f18b79c8478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3823841-e9e6-4077-b0c1-f87a24e818b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdf6124-8bed-4fd7-95f8-b23536410a4e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985d898c-f0c9-4ba4-801b-c5601468b516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e8cce6-1563-4064-8ff0-ac32e4684ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37524e6-c669-41d3-88b8-60d1ca564b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5274e1c-380d-4ac9-bbc1-49105dcf2c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61666ac8-7d69-4b4f-842f-95598790eb0f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1cda01-48d0-4cb3-a383-ad070b3b6d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75e697a-5dde-433b-9003-deb1173ebc57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759c7f34-53b2-478b-b9c1-77640a87c742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "61b57e76-9fbb-4160-b02d-e7eea8bbc8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7587f29-bf59-41c1-9979-c1964fdd4a4a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e989a2-1709-484f-ac91-7743ff3ad56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b15f60-6c8c-469d-8f66-23b2fee01a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d846977-1f12-48db-95f1-4d7ea091cfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb522cc2-c16b-475b-9048-229c610ae91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec2d443-3669-4be8-9198-e44729bc25f0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786db0ca-baea-4cae-9935-7ce0c7b8b497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a585cda-1137-40dc-a201-88314f07c4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f723dfe5-c8dd-43fd-a191-2b0636357f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2420fe-ec93-4297-8a83-0080b4414446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ab8715-688f-40c0-bff3-5112a22a2efd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2088f643-c438-42a8-b431-b93f91e350dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6d6569-0cc6-414e-bb2c-3145ce41beba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc4cbb7-9cf0-4a0d-9efe-a040c6c62a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4155e693-3f0c-4fc3-b37f-9578dbc463df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c0d6bbe-6574-4f65-a181-e77d3b82f0e1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d786b3-abc2-459b-bc75-d8081f02b062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e8bad7-ca9a-4c8d-820f-10e52cb236dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4deb14d4-ac8b-4aca-8e3d-c18aec740c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9314b461-8eb2-4457-9624-77c89dfda3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fdc483-82bb-411c-94b1-dcba06646355",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae03f6f0-3f7b-444f-a9d3-9921ee3565b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49120257-288a-4075-98b7-cb5c16e9769b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c7c0ea-6c9f-49ca-8651-8a217f91aa11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a8ad89-a84f-42ab-950d-1f6e49d6e3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13bb068-6043-4c1d-8572-010a9d0209f0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06b2003-679e-4c64-900a-1f483054a0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c53d368-8de7-4de4-a375-9f1c64a5b56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e897b7c2-2c8f-42ad-bed3-9d4ac33c75a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f223823-3396-4791-83a0-e41e412524ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8556af-4ba9-48f8-87c1-fe7a0a966c65",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee73a1e7-6855-4ab9-870f-39cadac171fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27d3748-9300-4914-9f04-6cb7f99fea30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99765374-de38-478d-a370-81b6410036c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73381bf4-9b44-4bd4-800c-fff227bc36a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd87f23-7a4d-4fee-a7a0-3c99afb7299d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3f81a9-1165-4d28-887a-f3d752892e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5c9a41-6ca2-4465-84a9-a68d025b09d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a257a8d9-f9e6-426d-846e-a0f6c9ce72e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f514423-339f-4ccd-8d73-265f3d89031b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c42cd5-afba-45c7-a685-d7a9c9442f77",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5180ad7-9ee8-4bfd-8ee8-93f66d2f8329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84e63c3-27a5-4455-8892-0c5326075bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd4c9c8-b234-43ef-ae2f-4b9470c93fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48f49625-caed-4b3e-b715-4490b2720b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f612242a-bd9a-459d-ba53-70a7ee24b427",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc65aba-2edd-4132-88b2-3347b4d9b44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e098e074-f2bc-4c82-830a-4b45d77e49dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3271acde-07b2-43a3-bc91-1211eb58d262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b34fe92f-a146-4400-9922-9d090aef95e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce662d8c-6c8c-4a10-a3cf-8ddbaadc7315",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb344949-323f-4aa9-86c1-271566810ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c7e47f-74d0-4920-8b44-80d72ecda0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c9eda0-ed7c-4f70-97f9-15028a07ebd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc436c3b-2ed6-4bf0-92ee-a7b165f4b8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4cabfa-aa80-4294-af3d-2e2c5562e7d0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a07783-37b3-4893-9c33-f9d7723ef1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c69d9e-5894-40a4-ada0-6dcafc7d609d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df69e76-5de1-432c-b7ae-e49bbca227bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9cb88f-a37a-426c-a483-a04ceff4f2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0029b20b-a456-45bd-9531-0b10f30a4630",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933dcb90-3d44-4258-bf73-80063dbc3aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc397235-8d0c-4905-bab9-ed8e618ead20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77045dcd-2902-46e3-bf11-94b6a0b5807a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f92ae6-358d-4e3a-8a6c-c8091ab52508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f4ed35-dbdd-4e76-b9e2-8bce7ee9eb96",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cad8b62-2095-417d-a877-ae56721063b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8057ef05-cd84-4be5-a002-4073cd3e501d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a6620c-bf67-4bd5-b89a-1a83810028cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e55de262-dc19-49b6-8c20-67b4ef24ab1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec91e47-0a77-4835-ba22-15525edf4bff",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a755e2d1-7060-490b-94b8-9922529c84ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b9ee4a-a61e-49d3-a654-b5cb2b9ef240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ef5c53-bf44-41c0-bc2b-0dcd5e47d744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f49e69e8-3396-48f1-8432-36ad8e12617c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bb4479-0995-4d9f-b05a-41600da715f6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a7e46a-982f-4980-a772-649b78178b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99b3909-62ed-47f8-b455-f009e52aeaed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415792f4-f8f8-4a17-bf70-2c330a294aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8debba-95d2-499d-b3ac-78d727696000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321037d1-249a-4258-8be0-e6c7e6db241c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db874ff-d345-4510-b6ad-0592ebf719d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9fee6a-2111-4e0e-b405-a51e9429b66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c558c8-c192-477b-817a-4caa21d4a91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a94583a-e5f9-40f5-a8a3-e7ac748aff00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5a2f6c-2ce9-4000-afcb-481bc8e60e68",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01088224-5025-4092-b257-65b5df95afdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b881f2c-374f-471f-b2e5-74a4a9a82b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b4fd8a-2329-496f-8027-4f40dbec89a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90d9ed60-8988-4e5f-88eb-a55ac889f63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a69ef0-b651-45ff-a7c0-36cca87c01a0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d69838-34da-4cb2-ad63-e80b738cc873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa855b09-8773-4985-a272-fde7cee263ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74d6b36-162c-48c2-b118-9d4cc96cd74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b59b673-9713-4066-b792-de0f23eeaa94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e16e6c-29c8-4187-825d-5cb187940aad",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59609792-665b-4dba-a59b-564f4430613f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae683b17-6a37-493b-8d88-36964a96a150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e6df85-3034-49e3-aeb4-5d998107e1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9f7539-0bca-4383-84ea-ed9b98548872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d95345d-a4fe-4aaa-8098-c57aef3dffbf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7062235-ecc4-4499-8be8-99c69a7e1164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc1136c-cfd8-4972-9885-6cfd2db085cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbcc032-3bf2-4257-a65a-f2a6e97b48e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb784542-2225-4339-acc6-657ded5d1edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7647715f-5401-48df-868d-831c50156045",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1f9e4f-befe-4f3c-a271-3a282444386c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69822e14-4fc0-4e6b-bd33-a326f9f311a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14abd67-2be0-4f3a-8b4f-9e8656a9260c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e515f6f4-e5c7-4c67-8a2b-d89e0ec9fd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dbe33e-63f0-4429-9f50-cd84b73d08fe",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96044717-01d8-46aa-9da5-31704525cfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0b2227-9646-4be3-be8b-034b1ec44ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca9cf01-139c-40db-8321-06f63a898dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c83e909-ae3c-4429-9d5e-b62141ed734e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132862f4-6f9d-4f76-9d8c-b1510b931528",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7441037-7478-4149-bb8c-9879a5900dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810b94d3-aa0e-47a7-a66c-cd92afa1619d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fe3e49-ce28-4631-9ac6-ea592c25eeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ad42ea-346f-4eeb-be1a-47bc4367cbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39737df7-6be2-4695-bb53-5512dd5b5fdd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68ba5cd-661c-4841-9441-92205406cd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaacf2b-7d8f-4cbe-9d98-30440b858127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ff08d3-4e4d-403d-82fc-be06ad394419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a5ac26-2f25-4204-ae51-bb8aec720b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eb5f79-f4b0-4779-b855-8ab82908ea5e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1288acd4-7871-44c9-9dd2-629cad299167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fedbdeb1-01b6-4f16-aa47-acf5ee23c520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5604b31a-7831-44e0-bd7d-449941be15ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "144ff839-f07a-4ce1-a4e9-504240eb4094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dfb0e0-7f8e-4ff2-9ae3-126e97a86d16",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e33e4c4-d6b3-4133-a599-09d63bd11cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec777136-9f7e-4e39-b505-591646ebfa48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a547c8-8174-453b-af6d-4737ab43c705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8039836-e5b7-4294-8da2-63fe2383a71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3dabe3f-20d0-4ca0-836b-2b38b85c1831",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d1d05b-abc6-4e20-9e30-9e753d6622cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec393f95-4f7d-4bca-af36-7bf4670f6e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1144115-2217-4a73-b0ce-4a1ea45011ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a369b735-b578-438b-bbf9-7c6c957df2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa9d290-de32-45cd-ac89-2f271e753557",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2b4753-4102-4314-a9d7-ae19a667ab76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76cb240-1bde-41de-8192-daea66346e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dedc4d-98d4-4d0c-a6d6-056672d17613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f16e9283-a11c-4111-8834-65d6e8025fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f43ed1-d936-4bf7-af9c-0561a535e9b2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d53a74-04f0-4ae4-9bbb-2641b983b0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "209ddd85-720d-451a-8411-88598b28ee5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc6a8d4-5fd3-4163-bcfe-8e24421af59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "917730a8-f668-4836-8493-5b49cead70d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "280326c6-8c84-41ae-994e-a996b1e474b6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dda2f6c1-4d97-4109-bc17-c20b32c1a119",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ecac3b-8e42-4ee8-ae74-670cb7b149c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7158bb9-a401-4074-a776-16f14bf43f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c2604b-19bd-48f5-8acf-45799f0164a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f43adee2-4b82-4174-bb82-e48d2a32460f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f10e7d-7d87-48e9-b2a0-3a5fd929b229",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5862dd-d48b-47bc-9bc8-d3eba2b2844a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "952f51a3-0a61-4941-93e6-96ea0b9c305f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb6f76d-4891-405a-877f-43e66123e253",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20049b1e-185a-46c4-8a61-9c3413201d10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f071715-4b7f-4709-880a-950125eb849b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4bcb031-8357-4784-96fd-81b33c597605"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d533315-fad2-410b-b1fd-a41bd0c26993",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e02074b5-f1ac-4581-8e94-58866bd6602a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c0558dce-b3c9-450d-95b6-2ae78373e67c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad298e41-61ae-4cbf-9acb-dd1d80c7db86"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bd2832c7-b1cf-498f-ac12-909892c23cda",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b953d8a0-0162-4e27-be66-3158565ecc76"
                }
              }
            ]
          },
          {
            "id": "6b4c2774-3628-4773-abdf-ef0e4ba87b38",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0d2713b-c699-44fa-a64a-ee5dc9221b25",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a0c8225-713a-4a26-8a0c-8e9fb602a175",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2696061f-3fc0-440c-8027-6f99f2fe0eab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0524ba1e-1444-4ef2-92d2-1eb7ddf912c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2310f612-415d-4c9b-a29f-ec93b8d60dd3"
                    }
                  }
                ]
              },
              {
                "id": "17d9e7c9-cf3e-4ab8-8c3e-78ff354955af",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a37fe619-0364-4dfd-90c5-057ecd4ecd7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d5f1aa9-6735-4e87-a440-dc3b11fabecc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4375f28f-41f0-423d-9141-f68c5b559ffc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4a77dcb8-d325-4f82-9116-b21db4042995"
                    }
                  }
                ]
              },
              {
                "id": "b0995fa2-e2ef-4f4d-b233-afdb755c2dc0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46c42198-c8f4-471c-8886-c0831efe37a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86bc8837-499a-4f04-a92c-44daccd49ba6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5eb93760-e34a-43bd-a054-e1397d593476",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e788c22e-4dcc-4997-be0e-a762c260792d"
                    }
                  }
                ]
              },
              {
                "id": "ea93bcbf-7576-44d4-b7c7-ac932af32e1a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f83836a-c5d5-4ba4-8eab-1bc4216fc539",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "def74459-a565-4d18-9008-0ec7080c9912"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "589d869a-5ded-47b9-ac9f-514923ca3bd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7fe33aa5-e2a9-423b-a779-e574f5f7d10a"
                    }
                  }
                ]
              },
              {
                "id": "5c8f8fc8-8cc1-4c2b-b473-1a08b72da138",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61f051b4-7cad-4e9f-8c7e-a51179ca1426",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "651db69e-9e2f-4437-a919-8338875da346"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3e44abb-7dbe-41d2-a47e-66aed486858f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "155805df-b021-4a14-b13a-d9ee1491cac0"
                    }
                  }
                ]
              },
              {
                "id": "04d964a3-c5ed-47e2-a2e0-0479ee1e86ff",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bea2070d-9459-4465-b265-208b1605f962",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16e2ef42-fecf-413e-a9c1-87661fd48d52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de4f790a-9ab2-43d4-a0c7-c29a6466d86b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d9286668-173b-4e9a-afd7-55b15372eba7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9db7f172-9ecc-4751-9042-6fca8a832497",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c2f380c-6975-4846-8ee2-7bf09474a584"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0eb58f48-3251-4fad-98d2-2ede6a751474",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d97db380-07fd-4aed-be7b-4c682d0a08b6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12bfca75-d94f-4001-8995-b6d461d7ac66",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c426f038-3b00-4b8c-8861-d7fd679bc014"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1df4b44b-be13-48d5-8f92-d894921010c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "440c0851-c3e1-4907-a0e4-4d6528ac0b57"
            }
          }
        ]
      },
      {
        "id": "53132dee-964b-48b0-879e-e641b0e3d992",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0c412d55-8ed9-485d-9e7f-f031134c38b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1ce9cf6-1a87-4a44-aebe-a74103059cc5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85dfd3b2-f80c-4346-9c1c-4e1e1b7e5199",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dad77c-e796-4c6c-99fb-5de821e32161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672880fd-b01c-4b0a-94d1-de2b374e56cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cd8da2-45a6-4d11-b13a-8b8801989449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f884b55-90e6-4207-8123-ba3f2bad9ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889147ee-e1ec-4264-a120-101efe31b97e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8597c85b-5317-4665-b530-4fdde77906e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232f836c-3f41-427d-89e9-c963205e474e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d39b58c-18f1-4d9d-9cff-c474062defbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdef7693-2b04-419d-8323-321d710533f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd55c9f7-dab7-4204-9a43-df252cb726e5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde11564-68f0-4fb6-aa4e-ebaff12c558e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1caded9-69c7-4e89-86f8-34834fd8893e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4d4d59-de2f-409d-b38f-199de858c2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4401c93f-62d9-4888-9cdf-da3b5dd89322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71c9b9b-2f00-44b3-9da7-1ebf3fe89359",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a8885a-0be7-4cb9-a551-f5ca8ed7f426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02715529-3fd0-46c8-9315-2019a6e1990a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba51a4a-e95a-47b6-a4f8-ec1b0766b66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "366658dc-34c1-43b3-9a74-d881487e15f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fea078-d11f-47a2-8586-08e641da7848",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03da6db8-6ae5-4b95-bb19-085e3e3f1962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f670deb6-b9c3-41d7-9417-b02c9473b3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e64108a-b27b-497c-b4dc-38e4fa1392c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "568a1c32-916f-49ad-ad36-6b5ec040f8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0757cb-8c4c-4dac-a8b5-567cd465da93",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3cfafc-7fd8-4957-b36c-718aa3d09028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e794a1d-b412-4d1e-95a6-4adfc42d4509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1540e2e-ac98-40ab-8caa-f70910a057b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "832b82c4-1f5d-48e4-b278-c6cce36d9cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f05f932-50e1-4c6c-bffb-6c4d07fe3cac",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1f3a29-d141-4156-a72f-2fe373c5141f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94200879-c06f-46ad-9d14-73c0fcdafd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4880b6a9-8948-4066-b0e6-5da028bf7469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdeac80d-3681-4bfb-847e-8c2cdd03fa18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e339e1-b281-4526-95f9-b841248d6ace",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9dcd66-a172-432b-9c5d-2c2d36de8c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9f1f8b-d814-4eaf-b6f9-369703b8f4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1085acac-66e5-4b54-b2bf-316a59aec74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d42a0b20-79f6-4575-a193-27568672eec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f17b48-6727-4ddd-9d4f-d20d56c0b4fd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad75f4d3-a6d7-47f7-8359-cac1549eef30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cec6bf3-314a-45ff-9d4a-5cabca70af59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffafdfef-735a-4aab-be00-8c7e53dc8e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a22e5641-baf5-4686-ae41-6f057457139a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cfcb1b-a803-4eb5-999c-70e695da3782",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a889609-2b2e-47c1-afd7-b2ec09951e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37664ff0-20ac-452a-a5a9-822e5199f040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a80054-3863-41c4-be6e-96184de43129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92c3fcff-ab36-40d7-8c50-0acc7ad1e576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1970b720-c2d8-49cc-9002-763891ef4e14",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f57621-56d1-4c1c-9d93-d4348f1fe1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559daf2c-f166-41ba-9679-67febf466de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef17f892-c2ec-4246-9ce6-d4e06be755e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "12f743de-f1b5-49bc-8582-2cda63cbd4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c2d2fd-2b4a-449a-af87-3272cad08a9f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e84efb-352d-4ace-b4d7-382b17540b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b646f85-a489-4dfc-9a22-efde21977f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2eeacd-ab8a-48e9-adf4-eb766403098c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11752947-20ca-417e-9870-a63969d1f0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3daa46-c8c8-43b0-9e5b-e3735b13b67f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cce2262-82e5-4f48-86a3-91ba8b64d0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1035d6c-ff3c-4615-ab9e-13c69f5b8296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78eb2df3-edee-49b4-95b7-99462003fc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15069c6-db2b-4489-998c-b6b72ddd6a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913b8138-54dc-47ba-bc4b-4cd645ad1e8e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18364670-a23b-44b2-87dc-ca152f300741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8d20d0-b864-46ec-ac78-cc0b65dbe51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e95e87-d82d-462b-af66-cdbacb1f04eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d1f8fb-5460-496f-947a-75e8f50962ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf8190e-67d5-4b6b-934b-45258c6bd560",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babd0e93-2f69-40d9-9e99-e6d5b7788092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f768248-0f5c-40d1-abdd-cfceeda60b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc178251-98d2-4ea2-a13b-5380deb698a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d93f7aa5-ba10-4e2c-b1c9-e329ec7851fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defffafe-c6b5-4449-b357-9fc2fe1cc38d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e31355-bba8-4cf2-83ec-e5dc5c1dba20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94234e7c-a2f6-409f-a92a-0c007702b883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7f4aa0-90fb-4c16-80d2-828918134298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8ef1da-056f-44d9-b7c2-343d496b173e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c8f8ea-c379-4f2e-aef7-8692f6048415",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9731ed6-c1ad-4bae-9325-ded444caa314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7556f522-84d3-4140-b510-2c7f16752c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b2b7df-0b56-46b3-94da-1328f72b2c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff7bf2b-f743-4f2b-9c56-967293571e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3096852-6671-4efa-a11c-8609270bbbb9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d8ac9c-a09a-4519-b9d4-914786fa490e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df2e03f-6e25-4b82-ab5e-474a8d15426b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6ec9ee-ecdf-4b73-b000-0d5dc9564c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ef0d23-8090-4357-b3eb-11485b43651d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e21d38d-7445-43c2-ac5e-7b950eb7332c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7b87ab-cece-4aaa-bdf3-fccc49d5408d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83a68ca-20e1-4bdc-bd79-7c8d13389904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9244dae7-ec0c-45c3-b5fb-502b09740685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65411db9-093f-4c05-81b2-47bd5007c317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efcd03c-6fc2-4918-984e-11bd0f8a577b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0936be-5d0d-4166-b109-76fff75b2d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74284702-b4c6-46a5-ac33-225eac39cfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f102ec5-1732-48c0-92e8-61540b52d990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4caca3-779e-4a24-b6d2-951130239af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5b15c1-4a5d-4d1a-b1b5-5696a76cc7e3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc27adb-d442-4218-aac2-5912c100806e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebe8e69-4c5b-4e64-8f0f-319ed9627865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf943708-ad72-4993-a597-a28911b5ff22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb9038e-d87a-4d0b-b20d-9ee01768a9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d851824-1b6a-465f-a664-2a37ab37b475",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bedf13-ef7b-47d2-8ae1-d6bb3d7f67d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3d5d50-04ee-409c-9140-ec29eb6707cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9041115f-d61a-4d9e-a264-df57d970ca9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5085b35f-677c-4469-ace1-b2bca78a1e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db06a7d-5686-4c84-8c0c-b78695be429d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978f2164-bdaa-46a1-88ee-b3efe9bb4067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82031879-f43c-44e5-aa65-eb7acb38300f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77132c9-f61b-4b6e-9cca-558e8ed3e47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acd5ad16-31b4-4603-9cb7-49eed55d20ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e935522d-b4b4-4ad6-8016-4554ec075a0b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffa8619-77c0-4bd2-9cd3-19aa6938ec77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4c97bf-f406-4dc8-a995-554ad363bd3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9240f2-5f67-45e2-86f2-17b9abe7597c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bf2ab6-1f78-46ce-b63a-fc33705171ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8635ed-c0ca-4cea-83ce-657d41f31c11",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6991d8f-668c-4446-83de-ef357982902e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e0fa59-ab7d-407b-98f6-2caefd92199c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb1864e-bc7c-4aee-98ff-7af346e1941b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d45f43-505c-4752-9e28-5f56a042a5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a9b13c-2c99-4b19-9c47-c9ff5bda4897",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf363354-96f2-4343-81b5-dda847164b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349d4583-8e1d-456f-a711-6c9dbe0a768f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a42c43-e224-4f0a-bb8c-e5f3c5d48669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80d2f373-3c07-4058-ab50-5c4d73530359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7495901c-f0a5-42da-b712-b7f5976f2ea4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38552871-123c-4914-aebb-5c75164f5d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3f5b97-97d5-4b86-b3c7-0c1740811a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e27803-1781-403c-878c-57912c1529ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8deae947-b009-4503-ba28-3942770f1a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169e9223-d169-46d0-89a9-e66b22233b0f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb4f94e-488d-4d90-9376-46d58fb4ccb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b989b55-1bee-4a46-94a0-b99a3a67eddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb095a6-f433-47d4-90b9-24a7eda2693e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4aec7e-d04a-4696-b75d-43f33c57a006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26e66e6-9f92-4574-8d68-3c767c10a0f4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8717d51e-b091-4065-9c1d-ee132d92bd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcf1efe-4910-4e39-a10f-0175d269cf88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e9f17b-28cf-4775-bf36-ee230c1ebc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "514bb9ce-3aa2-4ce0-81f6-fc1fc95fb1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3803eb4a-74f2-48db-b531-ab0fa1ee38b7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e70a20d-e5be-4c60-9ee1-30f832d1dc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53299b88-74a8-4e04-9e6d-29e4a658b61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a066e0-4161-4c4d-bd31-69e05bf89a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cae0e2e-68b0-4aba-ab82-933cf8d31904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10352447-16de-457d-b96b-5ee1991d003e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf352dd-169b-4f31-a1cb-2a90bfec1233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c65175d-342f-4280-8078-9af197a97efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f337d85-d875-43a7-a8b6-95ad273de537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06755147-797e-41f3-832e-900873632f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d59d00a-95c2-456c-9f12-3bb8f4ac9cc3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a0e210-49c3-49d6-ad18-9c33b54f37c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351216d3-2838-4cb5-a018-9fbce2321c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1fa41b-d4f9-496d-b185-8a9aa6d43fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b51e4dca-cd3d-455b-8cb8-f82765d42f03"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd3bb57f-6446-44b6-acea-d147498fa56f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "969fcf69-841b-4bf9-9930-d982fc1e667a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3741241-7e88-4acf-81b1-ce50981f4110",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5b36a154-fa07-49dd-b9d6-fd689778f4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b408fb0e-6c7b-49ce-a451-52dd1e3fb209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8519fe34-e410-4647-a431-f13c85bcde7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9298c46-8a25-42f1-9c11-a25dc9c4200f",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac794b6-a2c0-4ae3-8b76-d1a242d7af17",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "475566f2-ce30-4301-b0e8-a17cd56effc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9fdfc3-daa3-4b67-9d7b-9a1a8d9cd3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "997350f2-da72-4c93-9ed5-5d0145ac5bdd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44763ea1-41c0-4e2f-a58e-291114ac8bec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a81c4b7e-82b3-41a8-9bc9-6bf1b4888453"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12ac5d9f-02c2-4674-a8c3-bf78e2ebb624",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfbba9b2-4cd4-42af-a959-f16a17b50aad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a671df65-6f80-42df-844c-2c0f00cd964a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "beb4dde5-01d5-4cb2-a1e3-afc6c81d97cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a382684-e4ef-49c9-8244-d52131911948",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b4f7fbd-a65b-47ab-8212-510bb9301cca"
            }
          }
        ]
      },
      {
        "id": "602c5342-bce9-483d-b4dd-0982bbef947a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9abb6a95-0ae6-4c62-998e-f4f0b9ad7579",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07356cd7-a81e-42a2-908d-017089929a5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "420f86bc-29be-4641-b6ce-b89182c3ba8f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a5d71e-acde-4808-ac08-31c2711c69b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceac39eb-e9a9-469d-aa2c-8d9e677d8080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6963e5-907b-4846-b9a6-2d65735fdce0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2930634d-17b4-4cbd-b7f4-3496cfac6246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a75025c-37ae-4fb3-9ea6-6c08fea0b937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa4e8ab-8a60-493b-8ad2-a286e4e497a1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f407fc-41ad-4afa-abea-2084dc672601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea8f52c-3dad-4a3d-adc2-0a68de5bdf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51391e4-cfec-4614-8a3d-0ecd127c953c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97045797-8973-4311-b3be-f42820d99148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d325e52-721f-4db3-bf53-2dda9dd57a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a109a6-aacb-444d-ac69-6c8eb0b69bff",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78e5c8c-1f6f-437f-9f71-11ef93f3b6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f11468b-981c-4e7d-9390-433adf58b8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3c1dc3-cedb-49ac-b620-8d22a7c2e4f5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168ec930-eccb-472b-916e-f0390d1f90b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3688b939-c0e8-4345-8741-5a7ff0181232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bde749-80e5-404b-a1fa-0edd30b4decf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1d59ca-7b20-4844-bad5-9ed483b6b8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a348691-ab57-44b9-bfe3-0025fb98604d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c1b0f1-0469-4fa4-ab19-146b4421b191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3342f910-48f2-4e8b-bbde-7b589cd44d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d3df31-b7ba-4d60-8e36-29a9f5bf4ac9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61018a5f-b7ae-41e1-ab1e-382936513ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e75817-1be5-4ac5-b3bb-d59b59b8d73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd7c645-c515-41e8-ae11-3eef28d59279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5d91c0-576c-4c8b-a580-900618746128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d9aaad-1982-4c68-a094-d8ec91c1dd72",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b672b7e-ef65-4d93-a6be-e4dad5f2152b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ac695fc-05b4-4f19-9126-6abbf241d34f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5183b4-2ade-4977-af06-7ff4e51bd3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5307271e-fdf1-4712-8e52-ad0bde8e3b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ed6555-842c-47b8-93f3-1620d7baf572",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924bbbe8-80f2-4bdc-a591-af3c7971eaf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6217d250-fd6e-4988-a7c9-687012155596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17877c36-250e-4f07-b866-c0f4b53576f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a8818b-79cf-4375-ad42-5503cfd1cc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d7d490-f499-4b9f-bbc2-73b8b452d1e4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99ef806-bba5-4a32-a256-f12d789aa371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a34d802-6fca-4159-b6c6-af2055cd2a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1acd459-1688-43ae-873b-089c0331eec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4095bfe5-52cb-4a1b-a579-04d104419ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f9bf7f-144c-49f1-8462-99c4a1030c79",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea30a0d4-5b7c-42bd-961d-1d67c2ed0d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb317fa-f30c-4097-873d-730fc808a1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17edef74-d19b-41a8-8600-e2ab509a1866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef56c470-1b80-4e4a-9bd7-038fb82fd4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a31fae-3a4d-43e3-a310-e22188fc046a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bbd5d7f-ee93-46dd-a130-33d44ee8e888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92baf788-5922-4ab5-b410-01df89a15069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c83b52-8039-4ff5-afcc-6dfa3fe9ac02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e246c4-50b3-45b5-bc2b-c980cf5d0291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23194f90-0ac5-4d9c-a72c-83eac4925f8d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba60862-0399-4460-b65f-56a2a5a5e6c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a5224a-7250-424b-a796-6a73dfe5e09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecce7ed-3e55-451b-b1b9-5a0453c3c9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df633c4b-a645-4c11-a781-1b449b601dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2601fb44-ed67-4ad1-b417-7387fdbbebd7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4c0e05-21ef-4da4-a017-ff97f33b8ff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42c31625-5f9b-4aa9-ab92-224b64dab7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e878b73-3b57-434f-a46d-9cda04e4a535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47713f08-ad5b-4743-9ff6-3294ef65c262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6732fdf-34e3-4ca3-a4bd-9032384b38fe",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb345ad-6224-45cd-b841-61f1bd8d62cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e76329b-60ce-4a28-8e75-cc868c5a8743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e07fd6-4e1f-49fd-8881-536b8e045c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0890199-3a81-4340-be9a-0448914fe763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d95e1e-39ff-4c34-b7bf-c3c707daa0d6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51c7ced-a858-40af-b458-2b9dcf1f6a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f17aa1-500a-4a62-b0be-987317a4ab01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1858ab-2e53-4b41-b04c-a4ac4469725b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96678c9e-8790-4fa4-83b1-c9fc380f0600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684f281a-a918-49d4-a892-255512582a7f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2424bf1e-fe83-496c-b286-6b01b730d329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6493b331-9e68-4eb2-9f4e-6452fbbca2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7f0637-e794-49d5-b37c-b4cc5606d3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883fe7d1-b297-43ae-8757-6b6856d34066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a429da-d693-467b-b4b2-48f97a2da545",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad3b788-ea18-4061-bea0-45560de55481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb2d951-d5ad-419f-aed4-76ba3b77c878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00710ad3-b2f4-4f8b-a69c-3f2b13a46e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31565c4-261c-47a3-93e7-19837c521d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96290a52-8f71-449d-8c44-5a416471e711",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726e54e4-87b8-4d6c-90f1-4dffef7b3147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e66791-c8a6-4b79-8a4b-686265b376f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b74b3d4-c865-4dbb-8e26-2543ec4cf1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b711af29-defd-4edf-9d57-c3b6f8d5d137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0035927-b9e9-4223-b26c-196f66b34fb6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7983ae5-b9ca-4850-afd7-a9dff5877ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6e2110-fb45-4c99-8ff6-66f101bc0d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b02ded-f66a-492e-895b-777e51b14b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d22d62-51ed-4447-9b20-001e90fe0879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b5626e-e965-4935-a68a-fbd7d414e81a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1944a28f-87ee-40cc-b66f-f7b626f97a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81d533a-31ab-4c87-8d5e-3e68c4f2176e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e136e42d-a881-42ac-9cb5-191b9c8149a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d63eb6c-f49a-476c-aa98-0a4e13804183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baae1a5-bbe9-4d12-a3c5-3dc431210e44",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18edc4fb-de91-41d6-934b-0caf9ac27200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760dc12d-3c93-401b-a250-eab9170b228c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263293f0-3b9c-4428-bfc2-a6a11ad80558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74681a0-e49c-4adc-a773-0f7450c6c1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be972298-bf9e-4da3-95d4-c31937d3e755",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579b3d75-d10e-40ee-9de3-cebd93421dcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2d15b3-62f6-4e3e-9865-4d30b9b21f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7a4ca0-1aed-4921-a5a6-4ad4abdab4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fb6ca7-34aa-44b8-bc07-bdce34d501ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4835be-6b40-462b-b4d6-710208e276a6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a598f570-8639-46c5-8651-d95a232d9463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98fcf7dd-3ce1-4ccf-a13a-325af5adff29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95357fa7-199e-43a5-a726-ef902074331e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc88118-e1a5-4ecc-9c68-3cec6a1bf88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98d9c7d-3636-4caa-becf-dc6c9e4fbd4e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f16fc4-0278-4718-ba6a-2c6dc6703a2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f227a26-588b-44f3-91c1-f449a7e8082e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "552e79a0-e270-46f8-8c88-690e97bcb5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cfd2a9-93c2-408b-9b16-9fe2b0cc71d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449ebd1c-3ade-4036-a101-f7c4178771b0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52f859d-f7d3-433b-b512-e3ce0aea3aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a709fc-ed27-4a2c-96ca-b484d8e1166f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceab1d36-9d56-4f47-b021-c5d233689f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8127891-afa4-4a7e-be71-1d467e645734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6935f96-e936-4def-b873-3bd3515c23cf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1e3c7a-5ea8-4ae6-b497-577cc64afee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7ce8bc-12e8-4e2d-ab00-41321a8d64eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d5eb92-5ac5-41bc-818d-001ffe86df71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15635898-8a20-4704-bb4d-4bf8f9100f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baddfa2-f778-4090-bae1-915818ce61ef",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4386436f-33da-47ca-a46d-9868d46e0881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6542fe93-8670-426a-97ac-f344a57d39b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a92a5f3-3784-4135-9389-058bba32407f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be04d9b3-7b0b-4e77-9946-c7c1495a7abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298777f2-c244-4715-bd69-a5e682a8e5b1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd338e72-ea2c-4072-aebb-e04dcf4ad12a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aba3eaf3-9fc7-4342-8a0f-cea6a06324b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf7ed25-959c-4c83-b7a3-3e91472518cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9be8c0-738f-4f0c-9fc6-9a188162be6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50281ba2-1577-44f5-8464-f86453b00cbf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf6aa0b-b71c-47ce-a3c1-f1e7a50dd71b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11950bb-2480-4cc8-b0b7-27f0ee6f313b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e9303f-a1ad-48cf-b589-5a0cf4f9ea8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1a09e8-077d-46f5-b3f1-2376e191a30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2731854a-4619-43de-ac15-c7f66fed2fd9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2b09c4-1076-481d-a9b4-60b8c8a52521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75a20338-283c-4725-b2d5-7af4d4c1f8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041a6df3-f84a-4d05-82ee-3b2c50dd2856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eabc96e1-c4da-4da9-890d-20e53538413a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dd6b2d-4c0a-4d47-b6ec-4eaf7d404392",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b346b2-a240-4a9b-90b6-818a59f30100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce19b4f2-59d8-4fd2-b052-f3a278686354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "796bfece-cbdc-404e-b462-6c2ddb48b4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca405cf2-1640-464e-834b-ec03973d76b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a94a32-b282-4586-b6a6-969cec11ee17",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd26497b-a1dd-478e-b12e-8a1041cf2935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a21007e-e16c-44ae-be1d-c0e10cdb32c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c170d774-6b7e-44fb-b899-5fa233aad7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275754e2-0a60-4e3b-8ef5-ae6f4d36469d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55991f65-8704-4651-9bfa-ec631c9310ba",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95a080d-9417-4d85-b7b7-daa7c4441173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59e02f9-a645-4df2-8a00-b363cddd3bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a17a839-b97d-4e14-82a7-bcbbb0c273ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fc154f-63a7-4d34-96cc-1c32c9393297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6034ce60-f26a-4429-a67e-54a9d96e5302",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e714fa4f-d2d7-4cad-9090-f833026a10fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9ffb40-21bb-44fc-8639-5a94c7767ac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06d6f56-9921-4037-a1f8-30ee0a0efbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aca9e58-12dd-4aa6-ae19-5de55ede1a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5da189-d8f1-42ae-acc0-678889e09ac5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e66926-9eea-42a8-aa99-2a4510f4f6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49e8173-1d86-46fe-98f6-644e7f507853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2e829e-e11b-4519-8cc4-2c4355172043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123fd3ec-1c54-4cfe-ad2c-c6c30fddd3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428139c8-29ed-4030-952a-628eff7feefb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3065cc6-4b61-4f86-b897-dc7aa0c34adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edfc937-28cd-4be3-98b1-8d014956cce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c482bb-afd5-478e-8e55-365bf8074fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe229b7-1ee4-44d2-8204-055d46d64a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea171b67-d6b2-4148-a9ed-1eb699b61f6b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8aeaaa-bf9e-4ed7-ae4e-b923eedbdb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0807a5-cebe-41a7-9496-d0d9e3f3206a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d3b648-e2af-4552-8ec9-06ce8d42a043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e20874-d108-48e6-96a6-b4266641cba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bdb642-ce12-4c04-bb09-8ab925aecb12",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba152dc-44e0-4f21-a0c7-8643c9261af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd761963-1616-41cd-a66c-abb7d0600de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23fa2c4-060c-4940-b87b-ca14cd8b3122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2c15ef-cf10-4aad-b02c-706ec30d00a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ace5aa6-74e3-4de9-b9e9-ae28eb5a41dc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c002326-3748-4f76-8f9e-5451cb738253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c203dd-8a78-4f14-9c88-a60f42b74fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5d3e2e-795b-4590-ba48-5f1bdffffdcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d7726d-35c4-4987-b713-06e69b3e8048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7eeca0-9445-4f6d-8657-5dff13e6729c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcaa7cc-4606-4b87-bca9-72226bf64873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e387ca64-fa2e-4f14-932d-7ec5f71c575e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2680ed25-6bc9-475a-8a89-bd943b40b5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396563b6-af99-47bf-8faf-effdced42235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7adfe20-fa95-4018-9dd3-ce24a1819405",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b7564d-dde5-4c78-9371-5fa854440731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6081fa02-ccf0-48f1-9488-f6af67656dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b805c6-fba2-412a-ace6-9136ae8c874b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc636f3e-f531-459d-9d9d-d9debe9c0499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98c218c-478f-44dd-8586-069a4560d02c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e1100b-4824-4890-9ba6-928ee73a0ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0979df6b-8cd2-4198-a709-49cf16753e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e526d72b-dec7-4699-80a9-e70f053ac5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c782cbf-023d-463d-8f31-3b8e211eecdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0129b259-0c33-49dd-9f73-a8aea9c9ecb8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7ee1bf-ad66-4775-9a11-8b31a10b425d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee1be57-2ee5-415e-af44-c585b811e262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06924872-e4ba-4f00-8812-63b8336d3643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c96e7b-5eae-4c67-9b56-fe13a1c019a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97a8ed5-9b8d-4188-bfb2-e6dee7a5c4ec",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb5c22a-1d0e-4dd0-8651-401073cea499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f227a2d7-3022-4912-9532-41a4023a9f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d333bc-914d-4758-9690-d98b2f5e493f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "041b1c37-953d-4957-b0bb-ff1376b3c113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f54d82-ec5a-47b6-b76f-e7b30a43a06e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b792982-82e7-40fe-b156-57ee4cb63e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd69d256-aa20-433f-bd9a-4ed22b74c215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a5a319-1fed-490b-8dfb-90cf941d75c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec47c07c-4e86-4a3f-bec4-a724e9ccd76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9670ac92-e500-4c14-a277-d0f3e423b93c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72138c33-f03a-440e-b702-987c13df2db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec65747-3564-46e1-9358-e16dcf9c6629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0754167-fe9e-49e7-b440-7bf3acf075a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdad754-916d-4244-89d8-cfd973c32426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789d9f87-5b79-4b35-af22-88b1e7dbe750",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290e2aa5-5ceb-4165-9e33-e269a3bd3d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2137ef-8ce8-489c-a8f6-0f987e7e6c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41543eb-06a3-4604-91cb-7c823b2e49ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcd1605-1c5b-4293-941e-ed0874613f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b92b426-5ebb-46ba-844a-4029f6a8163f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff042f1-ba98-40f0-beb5-5687c4d082cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2a5ec2-d3e0-4c25-ac9e-1f135c6279ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ef2e7b-9d6e-42c1-9b8b-7339c657e119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30811798-307e-4411-9807-e17a4e95a24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7896195-36c6-4826-aca1-bf5c334db082",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a576ff-4f5c-46e0-b521-a700b65a876d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc5b53c-5db3-4da9-a79a-4d80269367d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7291763-cba7-47ee-96c7-91bd54009967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb93b04-f0d6-4fae-9b06-885078ea5ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70062b3e-bc4c-4c0c-a484-08c7e0719033",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f56a7e8-f6d4-4f00-9afc-9b498106fa64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99981bfd-3b77-42e2-b65f-330d7fbc21bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7dd39c-a0ff-461a-a1ef-5b8aadbfd598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf434e60-d929-4ff5-b867-748a1bd50c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07e4c09-aa21-4fef-bc8e-83e720e4f1b4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94febe85-91a2-4075-a66b-7cb6a87ef77e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721b6b8d-bdf9-42f1-a08f-89e710d0e2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4d36b2-61d6-4920-a91f-675bfdfc5b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8442a7-c92d-4ae8-96d8-80ca526cf01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58015a29-8710-4bf7-abaa-4fa3777bf81c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee68f30-6295-4f94-82b9-470834898cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6901cf-5889-4ff7-b5c3-209b609915ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6373eeea-15c7-488a-9263-4f8ff65361a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17adf1d2-f91b-4b24-991c-69009c254f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55829caf-1791-4e90-848b-61d7319f6ff1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17797557-7f5f-47bc-9164-758684b06ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3087d6a-5c77-4065-8d0c-97e5b9e2c806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0ef31b-ed03-4692-872e-22a97e8f40a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804436a9-8b66-4423-a010-561f555f73fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf5fe82-8c12-4baf-9d9d-d08949e470b7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57764116-8785-40a1-8282-fdb3db2eb240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84a358e-6833-4b6d-8b94-1c86b6acb9bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ff1b58-fb0f-45db-b1d6-d782a2a2735f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aaf1c00-c402-4cfb-8535-9fe6684fe18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc635d5b-abfb-470a-9761-05d0d589d4fa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f1efe6-377c-4108-b991-1375901800da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f5370f-7c09-4393-a9ca-fea57d041373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068fee1e-f0c6-4240-a418-c7050e343eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ec16be-bd95-4b08-ad12-efa0413a79de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52747b2-7685-4487-9206-8d517c0d1fa4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a051422-c09d-4235-aebb-4f283eef8437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ba8c21-7b72-4f87-877a-6e90c4b311b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de8fdf1-362d-4234-9ecd-a9bfa1852688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e50c7b1-ec36-42c5-901b-93dec97c7227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887e597b-c966-4863-92e9-4a44ef2cb407",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a16110-5140-4f55-a48b-8034b840b430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ace2189-9de3-49dc-9c54-7adb4fb96960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9062830a-056a-4f6a-a685-efb69812cf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06ffd0a-397d-473d-a325-8fd79718b203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea33869-6484-49e3-abec-aa40bd80f9a2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d998834-8293-4e3b-8359-349ff6555528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec133723-1e4c-4452-bd2d-9842009e15e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467f4627-0825-46e9-b910-9b2de3b68e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773421ca-8ad2-4bed-93f7-599243da82f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abe04d2-5ead-4eb8-aa57-6306d1f69352",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e72d9e-7052-4ed7-864e-b0df39f68f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5acb2fab-21d8-407f-b09e-31420cfa818b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaf7ac4-631a-496a-b9cb-cfb95f41c477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c446e9-463e-4c74-b97a-6940c1c871db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfffe227-21d5-40fe-96c1-5b248b6ca87c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050125b2-5b8f-4485-9ba7-f92a01534d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fa6098-54d0-47f3-a2ff-3cdfb8462468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b90994-af5b-4792-9f18-2d85ce25ffb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e050f9-7338-47f7-aaac-3991ef023f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0343d28e-0cb7-4df6-86cb-5291cec899b5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8978e9b-c936-49d3-8e8a-775c319961b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927cf858-f0cb-402b-b71b-bbcd02b9c940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de58d36d-fb59-4632-a5f5-1c8326301cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875600ba-44f8-4e89-ba6f-f1dd974378ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5117e1a6-e2c2-4f49-bfea-670fc94d90c7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c418bf-322a-4852-8166-2be41a5e48b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ce7a65-19fd-4384-bc7d-c5d0399b2ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7065902b-c92d-46ec-a2d1-3cf1f69abf31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244909e4-f44c-4ef4-9e82-cc6f0a1db7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae514160-3659-426d-bb06-47e2f61a0dc6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe8179d-8f68-456f-a424-040895e05e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "185e12ea-7154-4521-91d3-a11a1a2920f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4e3c42-5735-49b3-817f-7e3981a31624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562feadd-20a7-4ee5-aa7c-dc8fedcb33d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bcbd55-b055-455d-a4b2-d9eb9d5b2535",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421135d8-9bee-4863-981f-b1247cf5f997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f986aac-65ac-4a03-ac5d-82b9ad804f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f50ebe9-dad5-4654-a03e-7b2ead056f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebdb5a2a-c2f9-4f02-80b9-9f1e7af074e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7830bff-076b-4207-b39f-38a5bb3c8b69",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfd8caa-b207-44d9-9c24-08068fe45776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca57531-ea84-4e24-94c0-8fff2980d7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe559d2-0ee4-4dbd-bd23-2a6e128bf1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887af5db-9c6f-43c7-a519-f8a873105613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff57457-2981-4d88-b55e-6fcfc133dfad",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7972415b-d078-40fb-90c9-c5a395048c13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea21ef09-e011-4099-a066-45e93dee7b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ec82f3-87e4-4a74-adc9-f1b6528e4f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a68afa5-8ca6-4899-b4f9-c3fc63e02b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764a9581-0646-4939-a7a5-1c188d02bfc6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f72aec-46a2-4367-b2cd-ffc2612dd6a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ae30686-1ab7-4813-b3f4-f4d12932959a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddc5b29-b7b5-4564-911d-3faaeaa89fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf4f713-547e-4493-bb3a-e6266b9e6255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2398de45-86e7-4b56-b868-fd5bbbd26d37",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2162ae-39f5-4b81-9809-b02fc5c50ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09dff6c2-471a-4a9a-a061-8e309e4ec1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c956233-894f-4895-a02a-20eb9fe1b43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3871ab4c-473f-4d13-ada0-fb2a9ffb6322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df1e225-8876-4a8d-8220-a9ca300c2f96",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62f0d0f-e495-45bb-bdd8-5916ff9ab66b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de2f61ea-f964-4b34-b20e-da6823fb8ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b63421-485b-423f-8e05-15c1ca34d27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212db96b-0f44-4c11-a0d7-a196dd82f509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58aa039-7805-4b93-bea5-b2b2177c00a6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9a6548-bf94-4455-be38-e2fa50fb5d15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89e048c4-bf73-4df2-b540-a116b3cfeece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13655ec2-fce5-4046-8f73-9bfd01ad14f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8129010-fadd-4465-80de-e0b0d6a3e71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb86bff-273c-4786-8282-86d09ec92d41",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cbcc8a-cb08-4873-a0a1-7812cfcd75c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b94deba-3a55-4314-9e09-3b56028aa583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d879bc5c-15f5-416a-80c5-d25483130780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7eecab3-f682-4d53-a662-cccf1dd72988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a2adb2-55c9-4f16-a065-d1df9b3d5e7a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cec63af-42a9-4526-b232-2b33d2e70966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a25548-ed9e-459c-bb70-e27be42a5e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efafb6a0-1400-4e01-bb0e-35609160b49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742afb40-fa13-41f4-888c-9fcd6b138033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bad27e-3d55-48e0-945f-7f05f4cb1d6f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32805274-0165-44a0-a081-a71d565d0c03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94134c31-c9a6-40ab-9f3a-1ab7e6c67581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5435d25b-4f6b-402c-86a4-af1e56eda24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e7a797-8a7b-49a3-95ce-cbe70bef8c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67736cc2-f086-492a-a9e0-1e301e8af380",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18a0a6b-fc9a-4a45-8b26-6d68046528a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "610ce03c-d8e2-4a88-8d77-0b71da8b5977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c142bdd0-b877-495d-9ccb-e0607a50f17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48268147-9e15-418a-aa24-e786287838ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b13343-4e11-4b6f-8d94-f8bdc96b5f11",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698e686b-60d6-4590-acef-cb8ef5649a6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "179084c8-cc93-4341-b917-af1c668586ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c6954f-4989-45be-b8df-ad8b141d0678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe26330a-44df-4d80-8942-fc9456e4835b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5627a72-8e28-451a-bdb3-7768badad9b5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7e7b95-801b-4586-8ee7-4a4df9f92f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2505d625-1801-424a-9bde-1867861c063c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1797cdc-e0f6-4b70-878e-c6e098cd1d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8805ad6-d2f7-497c-9078-738192b85bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ead84b-8c28-434c-97ab-6865394d170a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20871c63-f3a3-4001-92eb-34927c0b5924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3d8591a-bbe8-414e-9c70-09173d2f5f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b10ed10-f701-4669-b39f-767e3793196e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a2c3e8-e426-43fe-8930-76e408a1db4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c177cac8-6af7-47a3-bc03-7093cd5c903c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a39682-bfe7-470a-8e7d-a637435a1c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d725ffc-e20f-4412-8fb3-e259ec29f9b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cd6aa3-3e27-44aa-b083-6436a4541257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb537ec2-cbd0-411d-9bfc-98b2665f5130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881436b1-e37a-4a7c-9c94-926c7e03e9ad",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85287dd-2519-4ebc-810d-0e1f586269c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f010edca-1237-4e8f-87bf-7708b377c7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e24949-509b-404b-a8df-a22c6c8612c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce575f3-1284-4fa8-a41a-cf6484b1f758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63e8e71-a794-42b0-a8b1-b765a175c78b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909c43c4-d561-4c44-bf3d-43fafe5a6d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2e392da-be40-446e-9646-757b724f9302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23028213-ef75-40dd-82e7-1c7937167f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585f97ba-b9e7-4005-96b6-f0d1b61417bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5fbeef-0612-4194-b887-0ac3d3b6cd3a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8781de48-7938-451f-b8f4-3dcc25d99118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a26e65a-be1f-4876-b42f-47bf0ddabf90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a964c7-4fe1-4d9e-b113-92ed09664ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af96b2db-95a2-42e2-b25b-a5d1ede47d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3538f1-496a-4919-bc54-ee28194a3c01",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33a363d-45b7-42ce-8793-f11fb642665e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bb1066d-12db-492c-9a2a-8164db18d42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10596e5-92f3-41db-abe7-c446e84bff6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841406d5-c6ad-4e0e-b0bd-89fb49ebe907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38fefae-c684-433b-8304-30f559163ab2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0a80d7-d26a-4f36-81de-0b3c6ef070b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a074ce5c-e99d-44f8-aa3b-f01a444f4166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016773cc-6623-40b1-a614-4e09170c1a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8259e6-16dc-46a8-85ce-90a28bf8d996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b32598-c04c-4a49-9bf4-b0931890f415",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e20499-885f-4c83-b118-3e4cbdcb42d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f20d21f-0711-4625-8829-5f7c43205f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f870c1a4-12ea-4508-9f92-18c2181356e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88db6182-6a79-474b-8b7c-6dc143f6c112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333c4f7d-a812-4b68-b23c-8482a3863de7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f036ad-b94c-4a8c-a350-fbb91b2461c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48b8e9c6-29f4-4dd2-8c7c-daa64c0f81b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cf534b-644a-401f-9a37-23c10f73a909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee21728c-73cb-4a01-b51e-91533be0a026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80da9e15-d017-4e26-ab61-3ed8e64c3012",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875d367e-3432-4749-9f65-9e4a290fb028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a803f0a3-5dbd-482a-aece-51af27f5bc2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95036f0e-1793-4130-9625-c24c7bf83234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a2a12e-78fb-480b-ab3e-5205f2555f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29db89f8-c5ed-4898-881b-c527a8b27d54",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b310844-74ac-4ff3-9e71-6d438dcdb3c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d457c1-1314-44ec-bdfa-6d54cc63fec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82040a90-6aee-4b9f-8e07-cfac037fb129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f4b7b1-7bfa-4cca-a81c-79a4ff9c24b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1041878f-d8bc-426e-aa14-7abe2c1beaad",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d41ecb-3764-40a3-b74e-f5156563b172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50472027-fc57-486e-8ff6-283c97cd73f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d69c170-eef3-457b-b2e4-026d7265d605",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320c24c0-e37d-4228-86ac-a53909dce87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b093c8-410b-4e90-8b2e-a90c4a20cf94",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fa2162-2a07-408e-8028-b2e6691844e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "386f404d-6b2c-4ffd-8328-9fb7306d58ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e929f2d-d612-4c1d-806f-38c78074c23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae47a8a-6f14-4c0c-aca5-945c31408da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42408e14-9141-45c2-9c3c-6fcc53a1008d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9510dde-9d14-4d13-84f7-2ce589f97ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75a9999-757d-48f2-ba12-9617c1f49e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22167d6e-71ce-4c55-9d65-d266481f1754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3190f7cb-c731-431e-bc0f-9fb6dd95396e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838ab131-9a2c-4ae4-a65c-28af294a86d9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551d239c-86df-4c7d-bc62-fbc1a88c5700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0061c28-6957-4029-b5db-44e6acf61915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6738060-86e4-4f7d-9af3-f449595324f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3beee71a-3e74-489c-a234-7f50662d6b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac92cf2-3b6d-45a4-ba68-37f5691acc07",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6440badf-cfd1-4897-9363-eb007b2b6642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "191c7735-6d5b-4ea7-a73b-6854d10eb7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78577f76-c8c9-49f4-bc75-40fb802dfa32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e243cc97-de83-4313-8c57-2439c920dd73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36552fa0-37b4-4e60-b138-56289cc6c9e6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659ea329-9d94-4131-bf23-8c3826a4cd55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb9fc32-df25-4c6a-a24a-9e7f4b033628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccba304-c637-46a6-9bba-1ec103af47d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604ae661-5378-499a-8b82-ef3c6af6828d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f268d8c-9268-4082-9820-1f7d3f452e73",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8377473a-9522-46e5-a270-26caf477f825",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5b0e41-83f9-47b4-871e-e6093e1b541d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4efbdef-56e6-48c8-913e-c4b1681709cc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ac84e4-e682-46d2-829f-66bbd1e45eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4911d10-eddf-4ddb-8627-b04eacdbf4ea",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd440f8a-d0b5-422a-866a-ff44008bf155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c245de9e-16d4-46f9-a037-770e23fcb8e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9997dba4-6b31-4f30-a0c8-99a0638e3482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1d26a2-b1bc-4b1e-87e3-6bf8c7c6e15c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2333edbc-c4b0-430c-9ec3-0e8fed056e6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94ede7b0-17fb-4a84-855a-c49924df845d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36ce4588-ac9e-40dc-80a5-6ead0062da74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fed70b5-cd8d-4079-8229-dafc64ad3286"
                    }
                  }
                ]
              },
              {
                "id": "6b83b416-bf5b-469e-a10e-0168936e51c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fefa6dd1-0ac3-4f68-9082-8217e84aa424",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2501feb7-28d7-4b86-8b80-c80032285aee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "400a221b-02b2-43ae-af0b-9b0dc2a52033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6830df26-9928-45f6-8b49-175d1a49cc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1cacf92-d696-4b2c-9b5e-97ad61107e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f277ca5-5d53-4d26-89d2-16f8a0c63de3",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a662ba3-bfdd-4541-bd26-de7af716fb0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "68622392-a596-4b6d-8fbd-158354a70727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "178915df-7c4b-4686-a029-3aa100b72925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c60de28-45cb-4e0b-93ff-3f80a28bf46f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8f7600f-4cee-429a-a553-ca1818eb48ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d24f9cf-dfe5-466c-a117-7d0eee6da7fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4390d039-ae9c-481e-8133-b8d712e331d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6979a3b4-6f06-410f-b6e1-3a7adafc7004"
                    }
                  }
                ]
              },
              {
                "id": "738f8205-b1f3-456e-af2f-0fb73f80d3c5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "49a9d0ea-05be-4231-9f07-0fa81e16f1f6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e2bb57-7cdb-4557-a184-30412fc6acbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "11c1acc3-d4c9-4b13-af61-be7da8418667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa00dc1-2437-4d2e-a578-a777424df85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ce173a-1789-4820-b75c-e69a859ef005"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "669c9b2d-5260-44eb-968d-38caa846f8ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a31afc00-891e-401d-a7fb-ffb8d7e7e615",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ed3dd96-b74b-49c5-85c1-ef1e51250f82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "98b957b8-0139-435f-96a5-af8f7612b475"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88700a4b-e31e-47c8-abd6-d0bd064d5343",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a75904d-0cf9-4ba8-b70b-4462790d4f71"
                    }
                  }
                ]
              },
              {
                "id": "6d285e91-8e5b-4a3e-a1ca-fe5a00b1cf52",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dd142d9-3bd7-475b-abe2-ecee78fd53cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fbc65061-a4b1-40fb-b4e9-0641abe245fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40f87204-7622-4c8f-893b-7bd0c786ae61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8290fb9-36ff-4106-ba38-af977d90b319"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1b164df-a8dd-48c2-b3eb-82864b3a162f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "232a701f-13ae-433e-a3f5-d2a6d1088e30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a714e2c1-b99c-4ab6-8af4-7be2d00ad32a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e93f7b7-892f-4224-9b9c-97c77535da88"
            }
          }
        ]
      },
      {
        "id": "51ff1fb0-8b72-43d0-ad08-7103550e43fe",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "952776af-51af-4125-ad2b-7f0447a54703",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67bf6ebe-c2ad-4b62-8128-783b3f424659",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e8b1685-d2ea-4a58-ab3a-cca37f183400",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d4ea9c-9e45-412d-b6b9-b187c5f67f9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e3569202-5976-4e85-b071-6434f58c54d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555bc7bf-8f06-4bcb-aeee-0eaf974101ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25e10adb-0943-4652-973b-2e33098b0656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37277e25-46a7-41de-b45a-45e1c627bb68",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78d3f97-59e7-4b0a-90ce-87dd02b3babc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f3e2c8b1-6aac-4e34-a540-e7926becec71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e3f993-6eea-4c44-9247-74d6d684b6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "769b2ce1-b1c1-413b-aace-cbc4f0f52a2d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f17ad637-5416-470f-b81b-7039f27d66b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8cc590f-3083-4fa0-868a-8f59b2b3d1ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b939546a-5f33-4c09-a039-506724791d07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc5fea67-cdd0-4f8f-b69a-7c1c754ffb23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10f76deb-849d-450e-a203-b40d3d414d4b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bf58dd79-10c4-4ccf-978f-e85a46432075"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6ff5494-6c4a-4724-9a27-5a1d2ea3e531",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "824c28d0-9679-4a5c-ab41-ae13a7e20543"
            }
          }
        ]
      },
      {
        "id": "9fe0d3fd-c744-4602-99ef-7913b1424afa",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d884377e-291b-4cab-a881-e56066d919df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b9536fb-2879-470e-912c-64aa420f32d3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9018e0f3-2e33-4d7a-98e4-ac4ad5b75dd1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e048320-075e-4d4a-a606-7cf186f6dd00",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f97179a-6f95-4ae3-9ed4-62c56748fb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a61c6e-6f6c-4cf3-9ef7-8d9df8ce5275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2da16c79-f522-442a-a982-6c2160530f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04991b12-da7d-4f33-993e-cb4a4e3f5598",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0124b13b-b417-4381-a992-335dfa60fcea",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1a67fc1c-c4de-4064-906f-fb69b9f36a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8e5c2e-2868-4bf2-b7d7-4ff3b5acbf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76b0d9dd-5a08-4876-9ded-f078512bb894"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a49bf29-9703-4b70-b5ff-328f8cdfcac1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adb3c7b1-edac-42c1-8c65-f6082cccabc5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eba50429-165f-445d-86f3-3b1f05c19820",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2b93d85-c733-4761-ab5d-666b2402cad3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c03f054-9ce0-4af1-8415-4cf120fc45cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03496626-2020-4143-9c29-83fc51d1f42a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70351f4a-77b2-4565-92c4-ed294afec3a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff0708c6-61cc-4644-a646-1be52bc0decd"
            }
          }
        ]
      },
      {
        "id": "87702b34-e3da-4a32-b907-24c7f0f71763",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "471dddb9-8abf-4613-b1ee-41900b86b2d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3069549-db9b-44ad-96b2-b182d751d02b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa25974d-7f68-4f45-a77c-f08aa287e56c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a071de-d76c-4780-9d8f-f166da3faf41",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04e8f193-985d-42a7-a6fa-4ac63c1fef3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f36fd5-eacb-4ffd-812d-efca69b16ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ed44ec4-4af2-46eb-83f8-e76392d601a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4f6dba-c660-45bc-bd9e-eefa243baae0",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98a6bc1-3bd0-49f5-8ed6-a02819fc3a3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "56df8854-8f5e-40b8-91d4-244c95b76ce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717914b5-771c-4572-80d5-73a6f62eca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a54bb8dd-47d1-4691-acb8-8239a20c7f0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2a728c4-bd10-4566-a5f4-dd8370079b15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3d17925-3991-400c-b9dc-2786c4884a28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e19dc0a8-e8dc-488f-af2f-09a187b3aeb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20be6368-bef5-4341-aaf2-61de5cf77cdc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a8e9b48-8661-4ad0-867e-c6d55065a6c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc80e0f4-adb6-479a-97a7-8370d24e3a36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe929445-4c7a-42f0-a654-c9163400270a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc3c9e57-f8b9-46f9-af60-c5ed7bd6053a"
            }
          }
        ]
      },
      {
        "id": "100084f6-ddfa-4ffb-b6e3-03c773fa3ba2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8cdb28d-fe83-463f-87b9-fe46ffba1cfa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "008f3ede-bc0a-45c3-a195-f14dc8ffaf75",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a024b84e-337e-45ad-a228-dbf6a7a4c31e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc893f11-a347-4a80-9863-f16adbec9f39",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1491ee1-9b84-4a07-b47e-a846bd0dabf8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 829.030769230769,
      "responseMin": 21,
      "responseMax": 11339,
      "responseSd": 1240.9778088790229,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683506174196,
      "completed": 1683506400679
    },
    "executions": [
      {
        "id": "7911bc6d-dcf3-4679-96fa-90e6b4a09acb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "21d8788a-666a-4893-ad74-42dee1fad591",
          "httpRequestId": "3e59305a-4ae6-4426-930d-67ef5f9299de"
        },
        "item": {
          "id": "7911bc6d-dcf3-4679-96fa-90e6b4a09acb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "67b7b40c-4647-4462-bf0e-5c62a0d7e59c",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 0
        }
      },
      {
        "id": "11635177-3baf-44fa-8691-a72b17e3c3e9",
        "cursor": {
          "ref": "30e82de1-18bb-44db-9133-fdf9dc9f4fc1",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c5b6b9df-9bf5-44ea-a70f-91e784c064df"
        },
        "item": {
          "id": "11635177-3baf-44fa-8691-a72b17e3c3e9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9d7319de-05f5-46a6-8cfd-d97b3a083b2b",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "6a8c5e0c-2130-4475-ae0a-5c3f0efe0862",
        "cursor": {
          "ref": "08e9863d-37ad-4dad-8d54-0ed75604e373",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c8046274-b067-4e6c-baf5-d890909b3fa8"
        },
        "item": {
          "id": "6a8c5e0c-2130-4475-ae0a-5c3f0efe0862",
          "name": "did_json"
        },
        "response": {
          "id": "70fc4ce5-7712-49b4-a26a-a25b1bd29260",
          "status": "OK",
          "code": 200,
          "responseTime": 918,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e16eb6-4bf0-4614-b4f6-058f6998d90e",
        "cursor": {
          "ref": "552a2eae-e2c2-4730-894e-9a143fbf68c5",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c44b971b-7e3f-4727-b441-9ae4367dd4f3"
        },
        "item": {
          "id": "b9e16eb6-4bf0-4614-b4f6-058f6998d90e",
          "name": "did:invalid"
        },
        "response": {
          "id": "c248fc02-670b-4e59-9c94-49ba2195e2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e16eb6-4bf0-4614-b4f6-058f6998d90e",
        "cursor": {
          "ref": "552a2eae-e2c2-4730-894e-9a143fbf68c5",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c44b971b-7e3f-4727-b441-9ae4367dd4f3"
        },
        "item": {
          "id": "b9e16eb6-4bf0-4614-b4f6-058f6998d90e",
          "name": "did:invalid"
        },
        "response": {
          "id": "c248fc02-670b-4e59-9c94-49ba2195e2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3723054c-7270-49c3-9efa-d5dec9d1d03b",
        "cursor": {
          "ref": "828241b8-9762-42a6-b511-06c8495ca866",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ab19ac99-e3f8-4c17-87f1-589e67928752"
        },
        "item": {
          "id": "3723054c-7270-49c3-9efa-d5dec9d1d03b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e939144a-e7f5-485f-93f2-4a2865fce1e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 804,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774a8b66-edc6-4008-aaee-78a9f4581f76",
        "cursor": {
          "ref": "050617da-7598-4b44-9059-a0bb98717858",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "988d9cc2-fd6b-48c7-946d-06fa36347028"
        },
        "item": {
          "id": "774a8b66-edc6-4008-aaee-78a9f4581f76",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c99496dd-88ab-421f-9386-c6265c5f371c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 635,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed31a2fd-91d7-43fa-bfcd-4fd105b4ad05",
        "cursor": {
          "ref": "c029caf6-6ba0-47f5-a515-12a5c63d139d",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "31fafceb-3895-4c02-af52-b2b0bf282c1d"
        },
        "item": {
          "id": "ed31a2fd-91d7-43fa-bfcd-4fd105b4ad05",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "85729221-13bd-420c-a014-559102c8b8b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d556053-cccf-4559-9b70-a41656dd67a6",
        "cursor": {
          "ref": "2a9f31ca-fe8c-4ade-aaee-2c55b7ea76ba",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d1d5e8a4-deb3-478c-b184-5b7ed96b1390"
        },
        "item": {
          "id": "7d556053-cccf-4559-9b70-a41656dd67a6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2542b177-15f2-461d-9325-a39229ef51a8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 665,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d556053-cccf-4559-9b70-a41656dd67a6",
        "cursor": {
          "ref": "2a9f31ca-fe8c-4ade-aaee-2c55b7ea76ba",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d1d5e8a4-deb3-478c-b184-5b7ed96b1390"
        },
        "item": {
          "id": "7d556053-cccf-4559-9b70-a41656dd67a6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2542b177-15f2-461d-9325-a39229ef51a8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 665,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96596377-a5e6-46d3-8273-48cfef309925",
        "cursor": {
          "ref": "24e51319-1aaa-417f-8845-f02d5761c527",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "76bcba40-7431-4c01-93d6-5ceb948ef495"
        },
        "item": {
          "id": "96596377-a5e6-46d3-8273-48cfef309925",
          "name": "identifiers"
        },
        "response": {
          "id": "c0706e47-18f8-48c2-bcc4-36ca3a89a63b",
          "status": "OK",
          "code": 200,
          "responseTime": 1203,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3491f7f7-6a0c-4deb-8f07-96801f5c18ed",
        "cursor": {
          "ref": "16612827-08d5-453f-b05e-db80ba05ccae",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "62eb8b9b-d2bd-4152-bbae-0364556b6522"
        },
        "item": {
          "id": "3491f7f7-6a0c-4deb-8f07-96801f5c18ed",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "76e482fb-a5e5-4b3a-ba5b-a73d2e4a7513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3491f7f7-6a0c-4deb-8f07-96801f5c18ed",
        "cursor": {
          "ref": "16612827-08d5-453f-b05e-db80ba05ccae",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "62eb8b9b-d2bd-4152-bbae-0364556b6522"
        },
        "item": {
          "id": "3491f7f7-6a0c-4deb-8f07-96801f5c18ed",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "76e482fb-a5e5-4b3a-ba5b-a73d2e4a7513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62057ade-0b48-41cf-8148-ca46268af9f5",
        "cursor": {
          "ref": "6230fc65-6b52-4eca-88ec-011218daa3fd",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8aea9762-7fc3-43e8-8e96-042b259c29de"
        },
        "item": {
          "id": "62057ade-0b48-41cf-8148-ca46268af9f5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9f20a3c9-b74d-4d4f-b32e-04450f919057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec542e5-f91c-43db-9e52-3decbfcef644",
        "cursor": {
          "ref": "db1149f6-b058-4e0d-926f-c61deb68f019",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1e33f823-82af-4141-b568-625a7a75e401"
        },
        "item": {
          "id": "2ec542e5-f91c-43db-9e52-3decbfcef644",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f2cbcc15-6fcb-4343-8174-c03d2e7eae6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec88357-8741-46f4-84cf-c33eb5f5f029",
        "cursor": {
          "ref": "adfe4fc7-20e2-42f9-942b-74556d8968da",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6b293318-f287-4b95-98a3-1dbbff66d549"
        },
        "item": {
          "id": "7ec88357-8741-46f4-84cf-c33eb5f5f029",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "afcceb94-fba2-42a7-895e-27cdfaddbe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce97f57-15be-492e-a349-05981f979c3a",
        "cursor": {
          "ref": "8abcedf1-66c0-4d6e-b474-2f9d9719090f",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "847f0200-7393-41a5-a2e3-e49131cf2b4b"
        },
        "item": {
          "id": "cce97f57-15be-492e-a349-05981f979c3a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "81fcb68b-1bbb-4366-9781-b9ca51f401ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439b80d8-4dd9-46cf-bfd2-d49a2d8c79fb",
        "cursor": {
          "ref": "9a82e104-0947-45c6-b3d4-271f0793775b",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7b0b4558-97ed-48ad-9c5e-4c377a15d111"
        },
        "item": {
          "id": "439b80d8-4dd9-46cf-bfd2-d49a2d8c79fb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "00f903b9-d0a3-4482-b21b-a2f949e38a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e255b5b-faa3-4687-a4ca-3734eabbf3f0",
        "cursor": {
          "ref": "79d3207c-1565-4a33-8586-a2574c726bf6",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "582fda91-8202-4fca-b18b-2ae002dee110"
        },
        "item": {
          "id": "0e255b5b-faa3-4687-a4ca-3734eabbf3f0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "746a8713-8914-4400-8a27-10516882e21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c31d18a-4df0-47ca-b236-0e9ac25ac021",
        "cursor": {
          "ref": "ff73e7de-f58e-4d53-88c0-d0555fe71795",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "89723ad8-dd8f-49f3-ab02-baafd5e562ed"
        },
        "item": {
          "id": "6c31d18a-4df0-47ca-b236-0e9ac25ac021",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b803c7cc-edcd-42bc-a3ec-90022f0b0291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b44def9-033c-4aad-80b9-ce7d0466c529",
        "cursor": {
          "ref": "da83bc88-2af7-4d94-a694-4b2916c29871",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "41af02b9-769f-4976-a044-d08e8cddb3cd"
        },
        "item": {
          "id": "6b44def9-033c-4aad-80b9-ce7d0466c529",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "17b7b1b9-3f1c-43c4-a61e-da1b7328dbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca91830-f3bc-4479-827a-c3c9b31541f2",
        "cursor": {
          "ref": "b4b96307-4f2c-48d8-b01b-6e00031ed382",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "de303839-a96f-4a9c-8116-dc8e9b05e6c1"
        },
        "item": {
          "id": "dca91830-f3bc-4479-827a-c3c9b31541f2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d4d2dbf1-2e1d-4aa6-9097-e763ca90fa40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe246fb-1512-48c7-964d-85dfe1196c16",
        "cursor": {
          "ref": "c13ddd69-85b4-4b88-911e-eca0f025611f",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ff90fa96-5b75-4637-88b0-a38cb14a4744"
        },
        "item": {
          "id": "1fe246fb-1512-48c7-964d-85dfe1196c16",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "403398d1-b350-4470-9dc4-fb8d30015d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f8c49c-40dc-4dae-ba4c-dbd3b8951011",
        "cursor": {
          "ref": "f576bc7c-a63e-4cc6-b689-817ee82c82db",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "69c8c825-6fe3-4e26-9c1d-d45c7c17b788"
        },
        "item": {
          "id": "d0f8c49c-40dc-4dae-ba4c-dbd3b8951011",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1fc1b90e-1768-4059-ada8-3ed16f6f0d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956ee0d9-627d-4085-8787-41709888e852",
        "cursor": {
          "ref": "01267cc5-e286-48c9-a66f-dec1f522e1ca",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eafb3087-1dfa-417c-b06d-1c622b402dc2"
        },
        "item": {
          "id": "956ee0d9-627d-4085-8787-41709888e852",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3bbd04ae-f2d4-4fd2-95f2-a8f4ec258e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 985,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc0cdbf-2265-4d57-9277-b5052e92651e",
        "cursor": {
          "ref": "e5b8e22b-0c77-4e2f-b4f2-087901752b4a",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "28b2245d-c956-45b3-9e14-95ebd716d8de"
        },
        "item": {
          "id": "4cc0cdbf-2265-4d57-9277-b5052e92651e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ccaa2720-8f40-4b82-af8a-e4759ab840ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 962,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b949c85b-5e89-4c28-a96b-cdff6eb5b6f8",
        "cursor": {
          "ref": "12541eeb-c8af-4644-97e3-21c40d41537a",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0f4ad7d0-62c7-4b33-abb1-396880a3b446"
        },
        "item": {
          "id": "b949c85b-5e89-4c28-a96b-cdff6eb5b6f8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "04dbab74-a5e8-493d-b9b1-928381e8856d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1197,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4819776-ddae-4723-a2bb-ff429e3d7e74",
        "cursor": {
          "ref": "6825e27f-9b2d-4a01-82c3-3d4371af51a0",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6f0cd5c3-7daa-4a8c-abc3-8d124182ab5a"
        },
        "item": {
          "id": "f4819776-ddae-4723-a2bb-ff429e3d7e74",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c05f62de-6a28-4d24-8968-eae1d1609b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1028,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df347ea-3cef-497a-b240-54d03bf2f1ce",
        "cursor": {
          "ref": "63003f98-7c4d-4392-9152-fd536cff0ab2",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e3cc738d-b32d-4fe1-9000-11ad441ef50a"
        },
        "item": {
          "id": "8df347ea-3cef-497a-b240-54d03bf2f1ce",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0056217a-22ac-420e-8186-9f5a4243ac2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e614bce-7050-460a-9b59-d429e8dc6250",
        "cursor": {
          "ref": "98bb876b-531a-4558-931e-8a52d9ff1446",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "64ed9d14-2167-478d-b247-889a333dfce3"
        },
        "item": {
          "id": "6e614bce-7050-460a-9b59-d429e8dc6250",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8edfe09c-9236-490c-87b5-e44881ef3fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1bb7005-138d-415c-a393-edd19e56809c",
        "cursor": {
          "ref": "d9f7cfe2-578f-4e4d-af13-abd3a0157ae5",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f42bf3f3-42c9-4a76-a697-57fb25c50e44"
        },
        "item": {
          "id": "f1bb7005-138d-415c-a393-edd19e56809c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ef26c6b0-9ea8-4596-ba80-38d2a264f133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d288a83e-8e43-4864-92b4-fdd27f94e2f0",
        "cursor": {
          "ref": "be801491-01f3-4ef9-b993-8a1cb4ce95fe",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6f847eac-7d68-4778-ae4f-8d54da0774d0"
        },
        "item": {
          "id": "d288a83e-8e43-4864-92b4-fdd27f94e2f0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0bdb3a49-5b28-4ca9-9440-69d2f094f7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66acd8fb-7711-4b40-9b56-565a18529c12",
        "cursor": {
          "ref": "cc1d480b-207d-47d7-bd1b-7bf532ec92e8",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7cb75861-269f-435e-a16f-c77f390e46fc"
        },
        "item": {
          "id": "66acd8fb-7711-4b40-9b56-565a18529c12",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f2a9a3f7-0955-4a8e-a615-da1102eb5af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37188ed5-9ecd-47e6-8974-eb4fd86232da",
        "cursor": {
          "ref": "c6970136-c0b5-41da-9c1a-85dde6537bd4",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6e02f149-7ebb-406f-b1dd-db056577cc02"
        },
        "item": {
          "id": "37188ed5-9ecd-47e6-8974-eb4fd86232da",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d59de068-3ed2-4adf-88cf-38e13fb4b9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cab4e0-5158-4d4f-a3ec-6e24fb9065bf",
        "cursor": {
          "ref": "382f6b91-16a4-483a-8b22-98a9dd10a47f",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "87152a15-781c-41c5-ac79-7c337f5fb0f1"
        },
        "item": {
          "id": "17cab4e0-5158-4d4f-a3ec-6e24fb9065bf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2b83b614-c264-4c72-9d59-0765abf67cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1030,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a16107-c79d-463a-96d1-0c3d6bdcbb9a",
        "cursor": {
          "ref": "b3c8aa2e-039b-453a-9812-e74df59c92c1",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4592b181-664b-4a16-815a-a3e040df642d"
        },
        "item": {
          "id": "64a16107-c79d-463a-96d1-0c3d6bdcbb9a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "80f7c7de-1208-4c37-8ac6-499c8a63d008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1118,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00425105-ec72-488b-a2c5-3f17aef43020",
        "cursor": {
          "ref": "41b94ca8-7e28-4ff9-bc44-d7c3c2f756ca",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c67c461f-06fa-4e64-a8ff-508adb79827d"
        },
        "item": {
          "id": "00425105-ec72-488b-a2c5-3f17aef43020",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d71ed484-42bd-4899-bf6f-edd6612aef23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1205,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf919ad-bd85-4112-9798-f0c919b9405e",
        "cursor": {
          "ref": "37299d11-42e3-4f4f-a86e-6f3740e33baa",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cb7eae5a-78c0-4733-9bd8-ce1c96d27013"
        },
        "item": {
          "id": "ccf919ad-bd85-4112-9798-f0c919b9405e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7f1a35d8-fa5f-4e19-aa60-d37374108a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825b19f1-eede-4699-85c3-a44462a027d3",
        "cursor": {
          "ref": "c7463d00-5d88-4b20-ba75-5330ace391c0",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f5f97286-e45d-46bb-a6b0-cd2281baa58b"
        },
        "item": {
          "id": "825b19f1-eede-4699-85c3-a44462a027d3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "97a0952b-d563-4c11-9997-0ff97a9a19ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf70218e-e6c6-4ed9-bc81-68ce523042e0",
        "cursor": {
          "ref": "126eb260-dfa0-4390-bf3c-cb9256c7e24a",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "23db34a0-3cae-4327-9ee0-8b77df57d43e"
        },
        "item": {
          "id": "cf70218e-e6c6-4ed9-bc81-68ce523042e0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9db962ca-21e0-4db2-87d3-5fd22dc63dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20caa16-c7b2-4592-b81d-9b35887ee310",
        "cursor": {
          "ref": "7b7789cb-46d3-49a7-b4f1-6ed1912972d5",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2ed42650-ff14-4922-8a38-fa1b040bb0ce"
        },
        "item": {
          "id": "e20caa16-c7b2-4592-b81d-9b35887ee310",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3749a08f-300e-4413-8dce-100b01bfb601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5487e297-0acc-482c-b779-8f01e6deefb9",
        "cursor": {
          "ref": "774a59bf-35b6-4741-8cc9-ea579ee5c6a3",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dba8fad6-c15a-466c-b075-d8be3a981173"
        },
        "item": {
          "id": "5487e297-0acc-482c-b779-8f01e6deefb9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2e7593d6-3875-4b9a-8ff4-291b5976bdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5019b4dc-0148-4498-9bb5-727f5f4a3687",
        "cursor": {
          "ref": "7ad00135-45d3-4cfa-b5f7-ca4128ac4f05",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c41a2999-1a16-472a-8a7d-2a07228cfea3"
        },
        "item": {
          "id": "5019b4dc-0148-4498-9bb5-727f5f4a3687",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c41ef3dd-d344-46df-9c2d-e77739655903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89e543e-a3d2-4436-b9ae-67b58a80044e",
        "cursor": {
          "ref": "6899da04-3319-4cf2-9a98-91aa0bf92209",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ea1847f9-d277-4920-8a7a-bd8b700d598c"
        },
        "item": {
          "id": "b89e543e-a3d2-4436-b9ae-67b58a80044e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6ed975d7-6b1e-4c1e-bf66-851838da730a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3d4177-d5d9-4975-874f-3ad6eb1a4eae",
        "cursor": {
          "ref": "886aaa7e-0b06-4511-971d-81d423758b2b",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0692f6a1-5dfa-4381-b1e2-c63b4225d844"
        },
        "item": {
          "id": "cb3d4177-d5d9-4975-874f-3ad6eb1a4eae",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "48efc2dc-0138-45fc-8a1c-da9c442150b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 959,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa37ab4-a5a3-4db8-b268-6c9d415f4dfc",
        "cursor": {
          "ref": "aef62c33-f0f9-4365-a584-09e7033a38de",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "79316879-89dd-4e71-bc07-80bc015a8a89"
        },
        "item": {
          "id": "7fa37ab4-a5a3-4db8-b268-6c9d415f4dfc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8413c4ad-a694-449c-83b2-a42fea86c275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1025,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1886940-ace4-4ee9-acb3-a48cc21fe6a8",
        "cursor": {
          "ref": "27bb840e-f43a-461e-8218-d2488d53e2b0",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7c74aed6-ba2f-4f78-88ed-3781fc73dc9a"
        },
        "item": {
          "id": "b1886940-ace4-4ee9-acb3-a48cc21fe6a8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "68831602-d50a-445d-b8b7-e2f61d107533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1104,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e998b22-8afd-4bf2-9195-887ba3def10e",
        "cursor": {
          "ref": "5fa11ba1-2967-432a-aef4-9371dbe3a99b",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2a47bdeb-8b10-436c-8d1c-b77171f5b32c"
        },
        "item": {
          "id": "8e998b22-8afd-4bf2-9195-887ba3def10e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "00e77190-9fcd-4143-b8b6-add35fe3b284",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1320,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb84ae7-2ffa-4073-b92b-c0d2b4eb1d1a",
        "cursor": {
          "ref": "20ccb334-86bc-469a-a37d-87913e274605",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "637eb6b0-449a-472a-b0a5-660f02675c31"
        },
        "item": {
          "id": "5cb84ae7-2ffa-4073-b92b-c0d2b4eb1d1a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4e877549-b956-47e3-a21d-5261ab5c7907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de66bc96-a3ad-42ec-bd52-a6bc7f6400c1",
        "cursor": {
          "ref": "96ebdbd3-769f-40c9-afdb-d7909daabcee",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b1974890-135a-46e0-a500-ea7dec04eff7"
        },
        "item": {
          "id": "de66bc96-a3ad-42ec-bd52-a6bc7f6400c1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "25cc0e89-06f3-4263-a862-f4f2fbd68512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3b2079-f0c5-4e97-a87e-8e5ea6aa7644",
        "cursor": {
          "ref": "37206398-6ef9-4b45-81ff-db21b85bb477",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d4e6a447-d850-4384-bd42-2695af5037f5"
        },
        "item": {
          "id": "8d3b2079-f0c5-4e97-a87e-8e5ea6aa7644",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fd222606-4d5f-413f-b4a1-c9d607c8d53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf8f533-8573-4284-8d64-69c6e69fb6d0",
        "cursor": {
          "ref": "b1dcca2a-f728-4b80-b0f3-bae45b7c86ef",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "93bb6c5c-9743-4aef-a4df-d92ba5d0f3d5"
        },
        "item": {
          "id": "edf8f533-8573-4284-8d64-69c6e69fb6d0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "353e3683-7f4b-4601-8558-149641e79b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b408d01-2422-4b92-ade6-ff75c205d1d2",
        "cursor": {
          "ref": "ca86a35d-91d6-4292-b5f9-9f648ada8dc7",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c1241a08-1e98-4a68-950c-1b98f3482574"
        },
        "item": {
          "id": "3b408d01-2422-4b92-ade6-ff75c205d1d2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ae118a02-86c4-4250-8ecd-baa194a3f03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741e5bb1-4743-4f0c-ad1c-d416d6944d8a",
        "cursor": {
          "ref": "202be2e1-9eee-47d9-b627-23de5a7acd08",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "79cf69ad-c853-44c4-ad8e-aed82b6d7b6f"
        },
        "item": {
          "id": "741e5bb1-4743-4f0c-ad1c-d416d6944d8a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c26bbbe7-c114-4838-82b1-2bebd8b7151e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ed4011-db4c-4b9b-abff-ed721c97eb45",
        "cursor": {
          "ref": "5baa7727-6e82-4859-ba64-49475a3d18a8",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "97fee386-9cad-4c50-b905-927245dc12dc"
        },
        "item": {
          "id": "a4ed4011-db4c-4b9b-abff-ed721c97eb45",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0cb34f2f-60ef-4166-9df6-088438f6fe2c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 737,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a78ecb-3020-40fd-9d28-e1532715e5af",
        "cursor": {
          "ref": "8671f82d-bf5b-44e2-8b1f-cd9adfe3b295",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d338a311-7d35-4808-ac5c-b3c30fdac84e"
        },
        "item": {
          "id": "d8a78ecb-3020-40fd-9d28-e1532715e5af",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "df5ca5d4-45c6-4d7e-a0a0-6046b2e3b9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e94561f-8ea0-4a93-aea3-af8edd624ba7",
        "cursor": {
          "ref": "6d59f6a2-2e54-43ba-a47b-326d8a6b19cb",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9c5edbf1-e0a5-40e2-a45c-15a97b332d34"
        },
        "item": {
          "id": "2e94561f-8ea0-4a93-aea3-af8edd624ba7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "79ed1d19-2745-4d35-b5f9-9aaa0130e3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f226d6e0-0e54-4b4b-8ee7-992797b71e4f",
        "cursor": {
          "ref": "6ecb9d83-532a-4427-85cf-d13d2c006971",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "79f3470e-3f60-430c-af67-b849b69a7f14"
        },
        "item": {
          "id": "f226d6e0-0e54-4b4b-8ee7-992797b71e4f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2348b8f3-05de-44ca-b708-fda9c1e3f55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6739bb2c-501a-4a1b-b5e5-b041c33d0e90",
        "cursor": {
          "ref": "3ed9c0f8-27ef-4ba6-9205-ae057373a869",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "83daae26-f82d-4451-b444-77dbe74dac61"
        },
        "item": {
          "id": "6739bb2c-501a-4a1b-b5e5-b041c33d0e90",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6619260b-39ac-4c3b-84a4-f66700fa61d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0491283-2119-4ab5-8469-3847f110e728",
        "cursor": {
          "ref": "228f0527-e140-4778-90d1-0eed412ca27a",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1cd76631-ae16-4aee-8d05-8863043ac021"
        },
        "item": {
          "id": "d0491283-2119-4ab5-8469-3847f110e728",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "66d4658c-fdc3-4026-956d-e63a38a1230c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59496d8f-2eaa-471f-ae15-591b2cf352d3",
        "cursor": {
          "ref": "0c0a34e4-684d-410c-a642-da74a8793186",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d70241f5-8ad7-4d0d-ad92-ac27935c22a9"
        },
        "item": {
          "id": "59496d8f-2eaa-471f-ae15-591b2cf352d3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cffa894c-a62f-4072-8187-d78b4dc35bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa8025c-63a0-4bfd-bbfa-bf424af3c9ad",
        "cursor": {
          "ref": "67a9b49c-6bfe-4a55-b914-362c67dcc7d0",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2fa7d540-7bf4-4339-ae0c-313eea4f304e"
        },
        "item": {
          "id": "7fa8025c-63a0-4bfd-bbfa-bf424af3c9ad",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "594d37b0-3d9e-48d4-98bb-232b3269e80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab2f11e-2b08-4cc9-a2b7-1bb4d40527ec",
        "cursor": {
          "ref": "fed6cfc0-932c-491f-b4f2-d98c9140f392",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "876671bd-fe3c-4325-bb35-16ffc579ab7d"
        },
        "item": {
          "id": "fab2f11e-2b08-4cc9-a2b7-1bb4d40527ec",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3e342271-a286-4903-acce-b7c7943c2b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993c53f4-faf0-4ea1-9816-1aa51d6c9c95",
        "cursor": {
          "ref": "d4c3a95b-f6f2-4ea6-b74a-21782862129e",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4d9ac27a-1539-47ff-a78f-6ddc8cf09ab4"
        },
        "item": {
          "id": "993c53f4-faf0-4ea1-9816-1aa51d6c9c95",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b17defdd-4653-4505-9b9b-ab0de8764fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18238ab-9046-40cd-9429-77e3aaec5ac3",
        "cursor": {
          "ref": "df54beba-65c7-4573-9cd9-e2f4284ab599",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "253ef51d-afb8-4743-b150-095cbda9d531"
        },
        "item": {
          "id": "d18238ab-9046-40cd-9429-77e3aaec5ac3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7ba410d3-c6ec-4daa-a490-7fc41221f05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166e77b6-c5d9-4e89-a71a-2608b8ebf5f1",
        "cursor": {
          "ref": "fb563114-1dc5-4db2-bb9a-2bd3e3929d69",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7e055878-42ba-450b-9c76-e33de3eb0696"
        },
        "item": {
          "id": "166e77b6-c5d9-4e89-a71a-2608b8ebf5f1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5450a153-0d22-40fe-9451-70c27b8c5775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119b8e4a-2336-41f8-b740-2b77f0a0cb9f",
        "cursor": {
          "ref": "68a57ba0-6c95-49f6-b8cf-3f5bd65e4b0b",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "53164ed8-e7c5-4074-bd9d-9b1a869c359f"
        },
        "item": {
          "id": "119b8e4a-2336-41f8-b740-2b77f0a0cb9f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7047dd97-5219-4c68-951a-02df80bcdd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1000133e-e3dc-4a24-a5c3-637ea484f05f",
        "cursor": {
          "ref": "f0297408-de07-4d4a-b261-96ff762e8815",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e209363f-21db-4477-8080-9ba670864359"
        },
        "item": {
          "id": "1000133e-e3dc-4a24-a5c3-637ea484f05f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "00c0f6f3-786e-4866-b1e7-871265386ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9955e03b-f0ff-4aac-b06f-4eddf705e5a7",
        "cursor": {
          "ref": "5b135bd4-7ca8-46eb-a236-24ced7ea390d",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c54490e1-61bb-4920-af57-e6bed2d1df99"
        },
        "item": {
          "id": "9955e03b-f0ff-4aac-b06f-4eddf705e5a7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "74632a97-9115-455e-bc59-47d89e2fc476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e59987-0ad6-42a5-9614-ced34b6fd84c",
        "cursor": {
          "ref": "098afd87-2835-4b28-a755-2913150087db",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f697b8c7-6954-4369-b934-c00a8e9b8b23"
        },
        "item": {
          "id": "f1e59987-0ad6-42a5-9614-ced34b6fd84c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "22d97ff0-ec86-4b19-8c4d-fca5872bd6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 984,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963b1431-6b46-4676-8db2-8eaacee817f1",
        "cursor": {
          "ref": "28b32547-7301-45d1-aa40-72cda885a121",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "2d2cda7d-76b6-4138-bee5-d2fdc23cb32c"
        },
        "item": {
          "id": "963b1431-6b46-4676-8db2-8eaacee817f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d88c47cc-9b17-4d70-8f3a-60fa403578ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1193,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c61162-76c5-4d5c-b724-b5eecd92df2a",
        "cursor": {
          "ref": "1c029610-2b94-4e24-98c7-d096418c66cf",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8bda6b72-f816-4c09-a8a3-b94859c3a742"
        },
        "item": {
          "id": "e9c61162-76c5-4d5c-b724-b5eecd92df2a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "04613ae5-383e-4019-a1a8-b300ba9f68f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 994,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdf6124-8bed-4fd7-95f8-b23536410a4e",
        "cursor": {
          "ref": "450e1e5e-7a58-470e-93d0-5f18286b7274",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "448f175a-f3ec-44a2-8760-3c73797defae"
        },
        "item": {
          "id": "0cdf6124-8bed-4fd7-95f8-b23536410a4e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fa2598b8-47c5-4644-97d9-8f380b6e794c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61666ac8-7d69-4b4f-842f-95598790eb0f",
        "cursor": {
          "ref": "4e9db854-3172-4663-8da8-67104bf36dcb",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "baf23aa5-c103-4abf-92a7-ff97dadc1f3f"
        },
        "item": {
          "id": "61666ac8-7d69-4b4f-842f-95598790eb0f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c8f9507c-6830-4d3f-88fa-33050363aa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7587f29-bf59-41c1-9979-c1964fdd4a4a",
        "cursor": {
          "ref": "69f2d3d5-de91-423a-b970-43c44f3795f1",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cd42d29c-f820-41ff-9127-dc3d1554f156"
        },
        "item": {
          "id": "d7587f29-bf59-41c1-9979-c1964fdd4a4a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d0c6d3b4-6ca9-4ed3-aa0f-386590872776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec2d443-3669-4be8-9198-e44729bc25f0",
        "cursor": {
          "ref": "15f260c4-574e-4b76-87be-deba8323d62c",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1998daeb-2df0-44f3-96ad-2020b75b233a"
        },
        "item": {
          "id": "0ec2d443-3669-4be8-9198-e44729bc25f0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ef900056-f8dc-405c-9517-454b57b6b643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ab8715-688f-40c0-bff3-5112a22a2efd",
        "cursor": {
          "ref": "b572da78-1ff6-43c9-9568-377c76985612",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "694aacd6-864c-4c10-8fe5-8cf0f4718600"
        },
        "item": {
          "id": "24ab8715-688f-40c0-bff3-5112a22a2efd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "18659c9c-4402-40b1-85f2-b407078d4577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c0d6bbe-6574-4f65-a181-e77d3b82f0e1",
        "cursor": {
          "ref": "996df565-47a3-4123-8506-1687751d433d",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7629a137-a34b-4f12-9199-6d1958c164e3"
        },
        "item": {
          "id": "2c0d6bbe-6574-4f65-a181-e77d3b82f0e1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a58fb07a-967f-4aa0-b320-22e52237694a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fdc483-82bb-411c-94b1-dcba06646355",
        "cursor": {
          "ref": "21ff10fa-c2d7-4b2e-b0c3-f2749bc4dc47",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6408075b-e56a-444a-9383-abbeaf668bc1"
        },
        "item": {
          "id": "93fdc483-82bb-411c-94b1-dcba06646355",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "98a1c74b-2bb0-4c78-b8e6-c7bcb633942a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13bb068-6043-4c1d-8572-010a9d0209f0",
        "cursor": {
          "ref": "1361ce26-7256-44da-b4d7-a7c28feefbdb",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e1dd4697-26ef-4037-b5d5-0921011d9200"
        },
        "item": {
          "id": "a13bb068-6043-4c1d-8572-010a9d0209f0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5594853b-642e-4906-831c-ef9a238f1656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8556af-4ba9-48f8-87c1-fe7a0a966c65",
        "cursor": {
          "ref": "8fd5b24e-d012-40e5-8c78-382afcbc3d3e",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a076c1ba-f2e0-4e19-ad77-c33943d3e64c"
        },
        "item": {
          "id": "fa8556af-4ba9-48f8-87c1-fe7a0a966c65",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3ec25d23-552a-489d-8c1b-170da01316d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd87f23-7a4d-4fee-a7a0-3c99afb7299d",
        "cursor": {
          "ref": "ed2725f3-3f37-4f94-9edb-b93881697e76",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0d6cf8a2-f078-461e-808a-8e0f780e1313"
        },
        "item": {
          "id": "8bd87f23-7a4d-4fee-a7a0-3c99afb7299d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f1b91897-2901-4bba-b575-61d0706e38a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c42cd5-afba-45c7-a685-d7a9c9442f77",
        "cursor": {
          "ref": "42f389de-c1a2-456c-ad72-f489343f687b",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c4805008-5e43-43ee-bac9-254e810d9edf"
        },
        "item": {
          "id": "82c42cd5-afba-45c7-a685-d7a9c9442f77",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e74187de-b1c2-4d98-b769-4093639cbab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f612242a-bd9a-459d-ba53-70a7ee24b427",
        "cursor": {
          "ref": "e6708699-80ed-4b2d-910b-c431853fdec1",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "535e4179-854f-453d-b0f5-b66dbd952610"
        },
        "item": {
          "id": "f612242a-bd9a-459d-ba53-70a7ee24b427",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1b141eb3-8f7d-4a53-89c4-bb01966980d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce662d8c-6c8c-4a10-a3cf-8ddbaadc7315",
        "cursor": {
          "ref": "b939dc0f-31fe-4732-904a-71b6b99ef463",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "28708e13-b62c-4f7a-a5a4-940bfc2de33a"
        },
        "item": {
          "id": "ce662d8c-6c8c-4a10-a3cf-8ddbaadc7315",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1515cff0-06e3-4412-bcfb-a247474c9a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4cabfa-aa80-4294-af3d-2e2c5562e7d0",
        "cursor": {
          "ref": "64dd4505-792d-4d46-875f-23561a484489",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f1562b93-8757-49b0-8c80-1f69101617e1"
        },
        "item": {
          "id": "0c4cabfa-aa80-4294-af3d-2e2c5562e7d0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ce549c2c-b83f-4623-986c-88c6fa13504d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0029b20b-a456-45bd-9531-0b10f30a4630",
        "cursor": {
          "ref": "fbe51f56-6c4c-4c1f-bbbc-d5779c72a3d5",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f7bd2229-44cb-4b37-80d6-055c4f662c4d"
        },
        "item": {
          "id": "0029b20b-a456-45bd-9531-0b10f30a4630",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "17710efc-f009-4a81-908c-a07daedca59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f4ed35-dbdd-4e76-b9e2-8bce7ee9eb96",
        "cursor": {
          "ref": "f20e5ed9-be9d-4a9e-82e4-3693db5cbbc1",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8836f9a3-ebaa-4231-987b-9f6bb63b0bf1"
        },
        "item": {
          "id": "f8f4ed35-dbdd-4e76-b9e2-8bce7ee9eb96",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dbacf3fd-5e6c-4add-8314-2c35f2cbd670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec91e47-0a77-4835-ba22-15525edf4bff",
        "cursor": {
          "ref": "32e6b9d0-ff27-4269-8421-363c0ad74608",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f5871878-adb9-454b-9bba-b630d1e6e635"
        },
        "item": {
          "id": "3ec91e47-0a77-4835-ba22-15525edf4bff",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "db2ff312-aeb3-47de-99f6-87bbb91b483a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bb4479-0995-4d9f-b05a-41600da715f6",
        "cursor": {
          "ref": "6d35a739-56c0-4684-937d-c814a0c80d3c",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c3294446-d07d-4431-a6c7-148e35c02ff0"
        },
        "item": {
          "id": "a7bb4479-0995-4d9f-b05a-41600da715f6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d21df5af-79e6-46fc-a8cb-7f043e8fc9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321037d1-249a-4258-8be0-e6c7e6db241c",
        "cursor": {
          "ref": "54043a49-42a7-4bbd-a988-8df8df5622dc",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a61e18a9-b88d-43bb-adf8-12d875f11e9d"
        },
        "item": {
          "id": "321037d1-249a-4258-8be0-e6c7e6db241c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "49e3874e-2581-4386-b8f0-453708e2b2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5a2f6c-2ce9-4000-afcb-481bc8e60e68",
        "cursor": {
          "ref": "23769fc5-2437-402a-821a-eb66d41f15d4",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "881e5186-590a-4dce-b0f5-0b9dbb4874eb"
        },
        "item": {
          "id": "5e5a2f6c-2ce9-4000-afcb-481bc8e60e68",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9841dd9c-08e0-447c-8822-56cc01d5a8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a69ef0-b651-45ff-a7c0-36cca87c01a0",
        "cursor": {
          "ref": "63dadecd-77da-47ba-a5a8-0252ba01f06c",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8dce8bf8-edaf-4455-a35b-5b97b1c433aa"
        },
        "item": {
          "id": "d5a69ef0-b651-45ff-a7c0-36cca87c01a0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6cef8160-85ae-4159-8358-4e8e64660c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e16e6c-29c8-4187-825d-5cb187940aad",
        "cursor": {
          "ref": "991327a9-8642-4833-b28a-637daf02b625",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "06c689ff-06e8-45c0-a26c-3c23877ea690"
        },
        "item": {
          "id": "36e16e6c-29c8-4187-825d-5cb187940aad",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "372a98d0-7c55-4d7c-ab3e-a65aa7b17a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d95345d-a4fe-4aaa-8098-c57aef3dffbf",
        "cursor": {
          "ref": "70f578ad-ea0f-441b-8ff9-823cc9a3bbcf",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "948e347b-a972-45f4-8f37-aa76f810983b"
        },
        "item": {
          "id": "9d95345d-a4fe-4aaa-8098-c57aef3dffbf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "01063ce2-014c-4d98-baaf-43b60782441b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7647715f-5401-48df-868d-831c50156045",
        "cursor": {
          "ref": "56452187-90cc-415f-9bd7-9983c2ecd9db",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f6e7e6cb-1c8a-4b46-bbf6-495664b360ad"
        },
        "item": {
          "id": "7647715f-5401-48df-868d-831c50156045",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "df837883-d55a-43b7-bd5d-c81a1b0250d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dbe33e-63f0-4429-9f50-cd84b73d08fe",
        "cursor": {
          "ref": "d0d2b463-af14-448a-af0e-89f969f77070",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e53c0243-71c4-44b5-97f3-1058d82c8d9f"
        },
        "item": {
          "id": "e4dbe33e-63f0-4429-9f50-cd84b73d08fe",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cb9bf079-3209-4371-b561-72e1d0a78371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132862f4-6f9d-4f76-9d8c-b1510b931528",
        "cursor": {
          "ref": "698664d7-9825-4c1a-a546-442286d24203",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "545e9fe5-0cf2-4d26-9b9a-a5574a045b5b"
        },
        "item": {
          "id": "132862f4-6f9d-4f76-9d8c-b1510b931528",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bbed8249-10fd-4a88-bf47-5227d8edcc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39737df7-6be2-4695-bb53-5512dd5b5fdd",
        "cursor": {
          "ref": "856a5010-8536-48cd-8fc9-01f8351c3f08",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5cb50502-c810-4e65-8c72-215ec9a9f24c"
        },
        "item": {
          "id": "39737df7-6be2-4695-bb53-5512dd5b5fdd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5ba11098-556f-4401-9def-3a489a7a0df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eb5f79-f4b0-4779-b855-8ab82908ea5e",
        "cursor": {
          "ref": "1d6cf558-649d-4464-bdcd-99b6a604cfaa",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4e280f4e-52b9-48dc-81b3-a52bab6e977c"
        },
        "item": {
          "id": "69eb5f79-f4b0-4779-b855-8ab82908ea5e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c1cf915b-9838-4dfb-a9ec-ad36ec9b3a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dfb0e0-7f8e-4ff2-9ae3-126e97a86d16",
        "cursor": {
          "ref": "a2ef835d-3303-407e-891d-06630eafa19c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0c53f7bc-d8d0-4bac-b366-66c4ee2c9e9b"
        },
        "item": {
          "id": "f8dfb0e0-7f8e-4ff2-9ae3-126e97a86d16",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "85191f8e-5332-4c59-889a-a09ecc174594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3dabe3f-20d0-4ca0-836b-2b38b85c1831",
        "cursor": {
          "ref": "0d5f9faf-6223-4f3a-a54b-6969b0c1e5a9",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f17d2776-ce9e-4d1a-831b-293fb35495e2"
        },
        "item": {
          "id": "c3dabe3f-20d0-4ca0-836b-2b38b85c1831",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "64d5f62c-a499-404b-bbfd-378ad1b08743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa9d290-de32-45cd-ac89-2f271e753557",
        "cursor": {
          "ref": "07ed1424-bd18-4001-bb88-c2bb59df3656",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4bc81ea7-ab74-482c-bd41-dc88b36c8351"
        },
        "item": {
          "id": "0fa9d290-de32-45cd-ac89-2f271e753557",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "08fef4e7-3429-4eb9-955e-b1511193ffdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f43ed1-d936-4bf7-af9c-0561a535e9b2",
        "cursor": {
          "ref": "2e0bee88-332a-494a-9940-f43f09ff7c58",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ba358113-8546-440e-89d6-a2a4b2d0f56c"
        },
        "item": {
          "id": "96f43ed1-d936-4bf7-af9c-0561a535e9b2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0e841c72-f2a4-4598-8efd-055606849402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda2f6c1-4d97-4109-bc17-c20b32c1a119",
        "cursor": {
          "ref": "20b2a2ec-b8ba-46fc-89d7-88dc736c06c1",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4f25b239-f4fc-4bc9-a828-230ebfbce14c"
        },
        "item": {
          "id": "dda2f6c1-4d97-4109-bc17-c20b32c1a119",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6d7ab9c3-8ba1-4102-a662-6af28f4dd318",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f10e7d-7d87-48e9-b2a0-3a5fd929b229",
        "cursor": {
          "ref": "96908306-6330-4060-b649-0ab48385af26",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6ac89751-aeb7-472e-ba18-d337a29d2c8c"
        },
        "item": {
          "id": "74f10e7d-7d87-48e9-b2a0-3a5fd929b229",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "cd5f2df9-d6f5-4825-8661-a2a35286bb31",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 653,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d2713b-c699-44fa-a64a-ee5dc9221b25",
        "cursor": {
          "ref": "ddfb2133-3180-42d5-bfc4-d30d4649b220",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7a4d5d7e-0851-4180-980b-4a5b7094eac1"
        },
        "item": {
          "id": "b0d2713b-c699-44fa-a64a-ee5dc9221b25",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ca045879-36f7-42a9-89d0-358735b566d6",
          "status": "Created",
          "code": 201,
          "responseTime": 6522,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d9e7c9-cf3e-4ab8-8c3e-78ff354955af",
        "cursor": {
          "ref": "ee77f941-d15b-421a-963f-5d853d311dd2",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "25e5dce0-4d42-4e87-a49e-8b18fb003401"
        },
        "item": {
          "id": "17d9e7c9-cf3e-4ab8-8c3e-78ff354955af",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "edfcf298-d524-4f98-9455-f5a6b9892ffd",
          "status": "Created",
          "code": 201,
          "responseTime": 8285,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0995fa2-e2ef-4f4d-b233-afdb755c2dc0",
        "cursor": {
          "ref": "58badbf1-e522-456c-97fa-d6cca7d102e1",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cc6531ea-e5f4-4a19-8a75-ea466df6dd3f"
        },
        "item": {
          "id": "b0995fa2-e2ef-4f4d-b233-afdb755c2dc0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ea5939a1-a3ee-4eec-9ca2-cb65d080de5b",
          "status": "Created",
          "code": 201,
          "responseTime": 6344,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea93bcbf-7576-44d4-b7c7-ac932af32e1a",
        "cursor": {
          "ref": "a5ad4f6c-7076-4093-b2c8-733e076dacba",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0f7acc20-a302-4b0a-85dc-02a492ce2b08"
        },
        "item": {
          "id": "ea93bcbf-7576-44d4-b7c7-ac932af32e1a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "893b04dc-b4aa-49bb-b91d-9330b6bdb08c",
          "status": "Created",
          "code": 201,
          "responseTime": 8547,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8f8fc8-8cc1-4c2b-b473-1a08b72da138",
        "cursor": {
          "ref": "c2042a46-3ae4-48ca-bffe-cbcbbd0c3a02",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f14b6515-06f2-4647-b078-3fd35170770c"
        },
        "item": {
          "id": "5c8f8fc8-8cc1-4c2b-b473-1a08b72da138",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cbee3400-216a-41bc-aad5-e76415b74669",
          "status": "Created",
          "code": 201,
          "responseTime": 11339,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d964a3-c5ed-47e2-a2e0-0479ee1e86ff",
        "cursor": {
          "ref": "ab4f556b-667d-4918-8a7d-1472dca518b3",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2e710326-ebcc-40bb-8186-44be7106b7c4"
        },
        "item": {
          "id": "04d964a3-c5ed-47e2-a2e0-0479ee1e86ff",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0cf86637-af6c-424b-ab0a-bc4268f90d4a",
          "status": "Created",
          "code": 201,
          "responseTime": 10085,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dfd3b2-f80c-4346-9c1c-4e1e1b7e5199",
        "cursor": {
          "ref": "f558ac84-c261-436c-b505-2ecb483c8b30",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f834b8a0-4934-4a5e-81ff-f09cc9f069f7"
        },
        "item": {
          "id": "85dfd3b2-f80c-4346-9c1c-4e1e1b7e5199",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "38e4508a-3afc-4e33-b67f-26ca8e2b0b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dfd3b2-f80c-4346-9c1c-4e1e1b7e5199",
        "cursor": {
          "ref": "f558ac84-c261-436c-b505-2ecb483c8b30",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f834b8a0-4934-4a5e-81ff-f09cc9f069f7"
        },
        "item": {
          "id": "85dfd3b2-f80c-4346-9c1c-4e1e1b7e5199",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "38e4508a-3afc-4e33-b67f-26ca8e2b0b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889147ee-e1ec-4264-a120-101efe31b97e",
        "cursor": {
          "ref": "ba6b3f04-66dd-4d50-b626-29a5743e37b1",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ffe6fe90-8375-4064-b6e2-b1998a41fa6b"
        },
        "item": {
          "id": "889147ee-e1ec-4264-a120-101efe31b97e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f8f38c67-1ceb-4050-b87f-b5ca4391dc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd55c9f7-dab7-4204-9a43-df252cb726e5",
        "cursor": {
          "ref": "e7473ee9-6364-4714-9df1-676ac306d8e2",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e90c80bf-e297-47a0-a326-4a6a2721d42b"
        },
        "item": {
          "id": "bd55c9f7-dab7-4204-9a43-df252cb726e5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "29768ab3-d2ce-492c-b429-a7d521b0b16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71c9b9b-2f00-44b3-9da7-1ebf3fe89359",
        "cursor": {
          "ref": "f967ae32-2a26-4088-af14-f126f2ed3048",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "78721ed9-97b0-48e0-a11d-fb5d0000e7a0"
        },
        "item": {
          "id": "a71c9b9b-2f00-44b3-9da7-1ebf3fe89359",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "751c8353-58dc-4f65-83e3-22b5e216b7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fea078-d11f-47a2-8586-08e641da7848",
        "cursor": {
          "ref": "beab44d6-2ae0-4cd1-9298-05ae5ab52b58",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "96d12f22-adcb-4fb1-a8a4-5401723cfb0e"
        },
        "item": {
          "id": "41fea078-d11f-47a2-8586-08e641da7848",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "22bd2c62-f649-4fa8-a609-234d976f0ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0757cb-8c4c-4dac-a8b5-567cd465da93",
        "cursor": {
          "ref": "0977750c-c45f-4dc4-8144-c8198f5a2103",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5436b612-701b-4dc3-a759-9119ab794058"
        },
        "item": {
          "id": "9f0757cb-8c4c-4dac-a8b5-567cd465da93",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "67a5ae42-0c89-4d55-9ce6-5ef37eb6937a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f05f932-50e1-4c6c-bffb-6c4d07fe3cac",
        "cursor": {
          "ref": "d6d367d3-c20b-4176-8236-24a30b39c3f4",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "836824d1-6c20-4298-a1c4-d8ae2502da2f"
        },
        "item": {
          "id": "8f05f932-50e1-4c6c-bffb-6c4d07fe3cac",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "33783d34-d02a-402e-bb87-c1f6cb8a000a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e339e1-b281-4526-95f9-b841248d6ace",
        "cursor": {
          "ref": "ce8cb279-995f-4bfc-9286-f4b4c0d7aa87",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0f4b3111-f0dd-4f86-9e6d-cedd31f194e9"
        },
        "item": {
          "id": "99e339e1-b281-4526-95f9-b841248d6ace",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ade88190-bd70-4477-b72d-cc36b6dcce88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f17b48-6727-4ddd-9d4f-d20d56c0b4fd",
        "cursor": {
          "ref": "a3da3aba-c434-4aa1-96fc-8c99766f3d9a",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fcd567ba-0bfc-431d-a60a-c514d2840cc9"
        },
        "item": {
          "id": "12f17b48-6727-4ddd-9d4f-d20d56c0b4fd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3e9510eb-e17a-48f6-8c33-a7b11189025a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cfcb1b-a803-4eb5-999c-70e695da3782",
        "cursor": {
          "ref": "f2a0aa12-a2d7-4702-8406-b378c083b8f2",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3aa675aa-2516-4e50-85dc-69a4137c4ffa"
        },
        "item": {
          "id": "f5cfcb1b-a803-4eb5-999c-70e695da3782",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "25ec53eb-0a2b-485b-b07a-185b5992c553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1970b720-c2d8-49cc-9002-763891ef4e14",
        "cursor": {
          "ref": "f75918ff-8424-4d30-b1cf-295b984b2fa0",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "02a14775-928b-46d0-81e9-6bd8b529ad91"
        },
        "item": {
          "id": "1970b720-c2d8-49cc-9002-763891ef4e14",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c574355d-36f3-461d-be96-4860061cc692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c2d2fd-2b4a-449a-af87-3272cad08a9f",
        "cursor": {
          "ref": "cf258f6d-4a36-475f-9619-b6564e76646e",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c9f3cca9-7220-4f5c-833a-fa89b6ab5f5a"
        },
        "item": {
          "id": "24c2d2fd-2b4a-449a-af87-3272cad08a9f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3863bb48-e905-4add-9dcc-9b8ec36e5b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3daa46-c8c8-43b0-9e5b-e3735b13b67f",
        "cursor": {
          "ref": "0bdb0503-f869-437c-b83f-238c72d6cc62",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "65a0b6d7-7a40-43d9-81b9-9ce190b62230"
        },
        "item": {
          "id": "7f3daa46-c8c8-43b0-9e5b-e3735b13b67f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8b3c9f02-95f1-4249-bb72-409e7880ec44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913b8138-54dc-47ba-bc4b-4cd645ad1e8e",
        "cursor": {
          "ref": "16d319e9-c7b5-48da-a6e0-b979da7005f7",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a5b5335a-8288-4de3-8a6b-57d7b692a317"
        },
        "item": {
          "id": "913b8138-54dc-47ba-bc4b-4cd645ad1e8e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "19376f34-6854-49f1-b241-acb3e5d8e89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf8190e-67d5-4b6b-934b-45258c6bd560",
        "cursor": {
          "ref": "5e8159a4-bfc8-4842-b9c9-a1c28a8152ce",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bd5be94f-db1f-486c-a9b1-e278000b5049"
        },
        "item": {
          "id": "5bf8190e-67d5-4b6b-934b-45258c6bd560",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "582c0c48-e646-44ef-9639-d823612fed97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defffafe-c6b5-4449-b357-9fc2fe1cc38d",
        "cursor": {
          "ref": "5d41e96f-d62c-4956-b8f8-7b4e04f457c3",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2d61eee1-acaa-47c9-9dcd-0cd707b57d8d"
        },
        "item": {
          "id": "defffafe-c6b5-4449-b357-9fc2fe1cc38d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0df9af58-ebcc-44df-83e0-ce8560108591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c8f8ea-c379-4f2e-aef7-8692f6048415",
        "cursor": {
          "ref": "3d27d31c-f888-4720-9c7c-480b9882444d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1a8971d7-33b9-4087-b46c-78e63938f424"
        },
        "item": {
          "id": "c9c8f8ea-c379-4f2e-aef7-8692f6048415",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d49bdc4d-4d1b-4785-bebe-ab778b8e13e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3096852-6671-4efa-a11c-8609270bbbb9",
        "cursor": {
          "ref": "33e7c4be-5b63-4b65-b01a-2be4c3fac5fa",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "28658f31-c51f-44b4-89ac-3a1b826e01e9"
        },
        "item": {
          "id": "a3096852-6671-4efa-a11c-8609270bbbb9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "697ff68e-a892-47dd-81e7-31d77435db77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e21d38d-7445-43c2-ac5e-7b950eb7332c",
        "cursor": {
          "ref": "8c7c72b7-209d-4e86-871b-47ca525f5bdd",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dfa4cc18-0fda-4dd3-8c02-895ba8028e15"
        },
        "item": {
          "id": "1e21d38d-7445-43c2-ac5e-7b950eb7332c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8d0107be-1b93-4edb-9056-ea5c0c7f28c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efcd03c-6fc2-4918-984e-11bd0f8a577b",
        "cursor": {
          "ref": "e35c3689-23f7-4714-a292-49e55d07a299",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a4c2f7f5-3065-42bf-8d60-5cef7d16c860"
        },
        "item": {
          "id": "2efcd03c-6fc2-4918-984e-11bd0f8a577b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0dfcca7a-8ac5-4327-b33d-48b1855c249c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5b15c1-4a5d-4d1a-b1b5-5696a76cc7e3",
        "cursor": {
          "ref": "844b8651-2cfb-4f30-91de-1395e67a518d",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d03334df-a534-413e-a40a-770646a12843"
        },
        "item": {
          "id": "7f5b15c1-4a5d-4d1a-b1b5-5696a76cc7e3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "eb105112-e9ab-43e8-b9cc-e25836e86434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d851824-1b6a-465f-a664-2a37ab37b475",
        "cursor": {
          "ref": "b4dd58a0-6f7d-4099-a8e1-efca9b649911",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "effedca3-70ce-4437-84a2-d06b7ac70810"
        },
        "item": {
          "id": "6d851824-1b6a-465f-a664-2a37ab37b475",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ce93d9d3-9507-40a8-8b87-4152c22ccb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db06a7d-5686-4c84-8c0c-b78695be429d",
        "cursor": {
          "ref": "fe2986a1-c9fd-472d-9132-e5e4d6975038",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "620d3bd1-0eba-4706-ae09-9a15edc37512"
        },
        "item": {
          "id": "5db06a7d-5686-4c84-8c0c-b78695be429d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a774f74b-d674-4e09-b392-cbac121e42a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e935522d-b4b4-4ad6-8016-4554ec075a0b",
        "cursor": {
          "ref": "e402ba14-fa3b-444e-a3a6-9cf32ffda2ea",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "42661ea2-ee34-4dbd-b742-8b611a913235"
        },
        "item": {
          "id": "e935522d-b4b4-4ad6-8016-4554ec075a0b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ad370c3e-b4af-43bb-a74c-0cf230b53e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8635ed-c0ca-4cea-83ce-657d41f31c11",
        "cursor": {
          "ref": "0bb6afef-1b0a-4b5f-ad36-08f3f167bec5",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d59b995d-af11-4f21-bbd5-c5ee8dd962f8"
        },
        "item": {
          "id": "2c8635ed-c0ca-4cea-83ce-657d41f31c11",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5a24f782-f52d-4c86-b024-be9f447ea36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a9b13c-2c99-4b19-9c47-c9ff5bda4897",
        "cursor": {
          "ref": "a3150044-5156-4a06-b212-ef554281e9f6",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "11cfcbd5-c66c-4b00-b50a-2138e9ee59d1"
        },
        "item": {
          "id": "73a9b13c-2c99-4b19-9c47-c9ff5bda4897",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6a199010-a1b0-4ea0-a8b4-28f99258663c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7495901c-f0a5-42da-b712-b7f5976f2ea4",
        "cursor": {
          "ref": "a8db2462-fd35-40a1-b823-4719ad8e9f88",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "76cee7f1-9559-4a12-970e-808cd31e9713"
        },
        "item": {
          "id": "7495901c-f0a5-42da-b712-b7f5976f2ea4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0493206c-e30f-40f2-9a6f-095152bb396c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169e9223-d169-46d0-89a9-e66b22233b0f",
        "cursor": {
          "ref": "3ca11db4-b6b4-43fa-8d96-885d09c41197",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8bacd71a-bffc-46b9-b1ae-232a38598d64"
        },
        "item": {
          "id": "169e9223-d169-46d0-89a9-e66b22233b0f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "acf9b861-cbc6-4f1d-bc02-1249722a7a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26e66e6-9f92-4574-8d68-3c767c10a0f4",
        "cursor": {
          "ref": "a9eb6c84-da9e-4a19-8068-b3bb9e237314",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "66f49fab-ad52-4cf6-bc29-41df3db05818"
        },
        "item": {
          "id": "d26e66e6-9f92-4574-8d68-3c767c10a0f4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "30329639-948b-48c9-a440-9b69020b83b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3803eb4a-74f2-48db-b531-ab0fa1ee38b7",
        "cursor": {
          "ref": "9fad66f4-e1ea-4240-b477-320127d7904f",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1fd343db-a500-47bd-95b5-cf09e1e6417d"
        },
        "item": {
          "id": "3803eb4a-74f2-48db-b531-ab0fa1ee38b7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "db6ba4b9-5c38-4839-9f1d-ef8febfe85d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10352447-16de-457d-b96b-5ee1991d003e",
        "cursor": {
          "ref": "228d85a4-c7b3-4555-8347-0db80be11b6d",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b4449867-d6e8-4111-9040-774877d2780f"
        },
        "item": {
          "id": "10352447-16de-457d-b96b-5ee1991d003e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1cefa2be-7047-4b79-a01b-cff20346f6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d59d00a-95c2-456c-9f12-3bb8f4ac9cc3",
        "cursor": {
          "ref": "79ca0bed-5e89-4528-8fcb-bbd4c01dff9a",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0a66967e-a55f-47e7-ba16-6df3b10693d1"
        },
        "item": {
          "id": "3d59d00a-95c2-456c-9f12-3bb8f4ac9cc3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "43033035-f50b-4053-aefe-5500071ca569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969fcf69-841b-4bf9-9930-d982fc1e667a",
        "cursor": {
          "ref": "15c7d778-c5e1-48f7-888c-f8cc35c3c43f",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "966ec6c2-b679-45d6-9326-a5a9c2c87be4"
        },
        "item": {
          "id": "969fcf69-841b-4bf9-9930-d982fc1e667a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5cc39061-cd64-4d6b-b6b9-d4b68ee213ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9298c46-8a25-42f1-9c11-a25dc9c4200f",
        "cursor": {
          "ref": "173990ef-4526-443d-8d82-77f5ecc58c94",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6699a033-2c06-4c83-beb4-4cafafd4c40e"
        },
        "item": {
          "id": "d9298c46-8a25-42f1-9c11-a25dc9c4200f",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "bb361e58-48ba-4193-b6f4-80d2cc7a1e38",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 642,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420f86bc-29be-4641-b6ce-b89182c3ba8f",
        "cursor": {
          "ref": "e7d5f9a1-d620-4280-8b11-17c855a9a55a",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e8f1a996-7457-463c-91aa-bf94a7c5cb7e"
        },
        "item": {
          "id": "420f86bc-29be-4641-b6ce-b89182c3ba8f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6c634ea8-2cae-490e-a42d-e03cac98d2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420f86bc-29be-4641-b6ce-b89182c3ba8f",
        "cursor": {
          "ref": "e7d5f9a1-d620-4280-8b11-17c855a9a55a",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e8f1a996-7457-463c-91aa-bf94a7c5cb7e"
        },
        "item": {
          "id": "420f86bc-29be-4641-b6ce-b89182c3ba8f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6c634ea8-2cae-490e-a42d-e03cac98d2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6963e5-907b-4846-b9a6-2d65735fdce0",
        "cursor": {
          "ref": "ac9bbde3-6943-40ff-a9bd-e40678a6b48c",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9c705acb-4011-4949-802a-18312298605f"
        },
        "item": {
          "id": "8d6963e5-907b-4846-b9a6-2d65735fdce0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8f5fe309-4192-46e5-93d1-4a2532151a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa4e8ab-8a60-493b-8ad2-a286e4e497a1",
        "cursor": {
          "ref": "890e3631-08bc-4214-bf9b-1424acf2d11e",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9dd17aa9-a9dd-401a-a616-41728902f3dd"
        },
        "item": {
          "id": "ffa4e8ab-8a60-493b-8ad2-a286e4e497a1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a4e61ffc-0d4a-4d7e-9f6f-5bad99410468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51391e4-cfec-4614-8a3d-0ecd127c953c",
        "cursor": {
          "ref": "2a0a5a39-dcf2-4866-b5ef-ae9fe8c77009",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e4a605e6-e4b5-43c0-bc08-c921997f34e4"
        },
        "item": {
          "id": "e51391e4-cfec-4614-8a3d-0ecd127c953c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f1efeaf9-ba3d-44ba-909c-cae63ee65f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a109a6-aacb-444d-ac69-6c8eb0b69bff",
        "cursor": {
          "ref": "fe61c8bf-5756-4402-8d21-7f4c23176bc1",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "93698264-c506-4376-8ac4-a128833c9643"
        },
        "item": {
          "id": "b7a109a6-aacb-444d-ac69-6c8eb0b69bff",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "51cf3cb7-9067-41ec-8878-81454a9dfbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3c1dc3-cedb-49ac-b620-8d22a7c2e4f5",
        "cursor": {
          "ref": "606fbb81-dc5b-43a3-adea-3d9c709c18a4",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2e10b78c-ce43-4f38-a2a3-c863665b4688"
        },
        "item": {
          "id": "ac3c1dc3-cedb-49ac-b620-8d22a7c2e4f5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f3bb5216-5924-4804-a07a-edfa27a0c3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bde749-80e5-404b-a1fa-0edd30b4decf",
        "cursor": {
          "ref": "6d4238cf-c769-49d2-b693-515fc060661b",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e4ed9732-4088-436a-b605-b7a8a6fa4ab4"
        },
        "item": {
          "id": "b7bde749-80e5-404b-a1fa-0edd30b4decf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "341f786b-4508-4f84-95af-f7ed1d3a2e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d3df31-b7ba-4d60-8e36-29a9f5bf4ac9",
        "cursor": {
          "ref": "2db973cb-236f-4930-95f1-d05d4ac54ce8",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3f543859-8a45-432e-ad7a-6bb61e0178de"
        },
        "item": {
          "id": "b2d3df31-b7ba-4d60-8e36-29a9f5bf4ac9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ab84f2ac-b060-41bc-ab9c-746061afe3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d9aaad-1982-4c68-a094-d8ec91c1dd72",
        "cursor": {
          "ref": "96e0e4c7-5a29-4aa3-9d46-70ac0ffa04d4",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "641637a5-9815-4371-adba-2d64b6c160a0"
        },
        "item": {
          "id": "b1d9aaad-1982-4c68-a094-d8ec91c1dd72",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "65826cf0-082f-4fb7-b3fa-14d854d3b8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ed6555-842c-47b8-93f3-1620d7baf572",
        "cursor": {
          "ref": "9d1d23a4-a723-4f3b-9032-e4c98f2c33bf",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e793e603-142f-4401-b14b-1638bf2e9cf6"
        },
        "item": {
          "id": "12ed6555-842c-47b8-93f3-1620d7baf572",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "56bf95af-2f51-445b-9a9f-702a22692f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d7d490-f499-4b9f-bbc2-73b8b452d1e4",
        "cursor": {
          "ref": "2a10ead3-b09e-44b4-b708-bdb14c6bc193",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b7c14ca3-f169-4fbe-8f7e-0bfcdc13d391"
        },
        "item": {
          "id": "f5d7d490-f499-4b9f-bbc2-73b8b452d1e4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9e5680c6-e77c-4299-8c9c-cea6a165345d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f9bf7f-144c-49f1-8462-99c4a1030c79",
        "cursor": {
          "ref": "e63d1ca4-17a5-4e78-bdcd-5e3937539f47",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8d921826-befd-4d1d-a1a4-1d9c0009b59c"
        },
        "item": {
          "id": "19f9bf7f-144c-49f1-8462-99c4a1030c79",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "738a5e9b-5f31-4fd2-8ef3-f61c64c44457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a31fae-3a4d-43e3-a310-e22188fc046a",
        "cursor": {
          "ref": "62478951-c903-44be-aedd-d31f56fd4b6b",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f765b91f-88ea-41a9-b52a-b59598093117"
        },
        "item": {
          "id": "86a31fae-3a4d-43e3-a310-e22188fc046a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fdbca10a-7eb7-4f3c-af1f-cbdf030cb9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23194f90-0ac5-4d9c-a72c-83eac4925f8d",
        "cursor": {
          "ref": "7b6378c6-4f97-416c-bb89-17e3030d01ea",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6956d401-18bc-4694-90bc-78ec36f9c460"
        },
        "item": {
          "id": "23194f90-0ac5-4d9c-a72c-83eac4925f8d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0f0711dd-3371-4d6d-a423-b0aef693e116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2601fb44-ed67-4ad1-b417-7387fdbbebd7",
        "cursor": {
          "ref": "e0a91efb-b80f-42c8-b4dd-7cf149885cca",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5d998bb2-958c-4aec-877f-63db19fab1a1"
        },
        "item": {
          "id": "2601fb44-ed67-4ad1-b417-7387fdbbebd7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4e0763a8-1664-46ce-ab8c-734b2597f1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6732fdf-34e3-4ca3-a4bd-9032384b38fe",
        "cursor": {
          "ref": "4a2387de-6e61-45fd-8075-60a20f17a868",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a4e4e64e-9f97-4d9a-8c6d-b942cc2397ed"
        },
        "item": {
          "id": "d6732fdf-34e3-4ca3-a4bd-9032384b38fe",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9886ee06-8df9-442d-864f-4e701c671796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d95e1e-39ff-4c34-b7bf-c3c707daa0d6",
        "cursor": {
          "ref": "cff4e159-2a85-4e2a-9bfa-37e0749002cf",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4044c93b-960f-4e91-b794-b52a59a8eaf0"
        },
        "item": {
          "id": "c6d95e1e-39ff-4c34-b7bf-c3c707daa0d6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "398a529e-0ef0-40eb-bbb1-9dc2c91bb714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684f281a-a918-49d4-a892-255512582a7f",
        "cursor": {
          "ref": "ef4aa8fa-0949-417d-a5fc-4fe7960087ce",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cab10873-f8c4-44d3-aecc-a648b92c0e49"
        },
        "item": {
          "id": "684f281a-a918-49d4-a892-255512582a7f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f83935a4-d4b2-455e-87b7-d5d57fa6f7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a429da-d693-467b-b4b2-48f97a2da545",
        "cursor": {
          "ref": "5eff7ba6-2e5c-4948-b336-4621a0582691",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b21a01de-d8b8-4d1a-aa11-a0a46409da28"
        },
        "item": {
          "id": "a5a429da-d693-467b-b4b2-48f97a2da545",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d0d4d41e-f56c-420b-89ed-f113ead0e9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96290a52-8f71-449d-8c44-5a416471e711",
        "cursor": {
          "ref": "2eb4c221-ba3d-470e-b2b8-971596de94c1",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dd83da2b-9a38-4482-8805-9a548d78ed58"
        },
        "item": {
          "id": "96290a52-8f71-449d-8c44-5a416471e711",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b5ecf3bd-c558-40e9-95f6-7c33fd04ef09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0035927-b9e9-4223-b26c-196f66b34fb6",
        "cursor": {
          "ref": "3e92e5a6-f9f2-491c-97ce-a46e6fb9e61e",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b7f4cfd4-e469-4247-99e1-d1cd54797e73"
        },
        "item": {
          "id": "a0035927-b9e9-4223-b26c-196f66b34fb6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ae9528b6-f4c6-4a09-b6ed-25b032c885f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b5626e-e965-4935-a68a-fbd7d414e81a",
        "cursor": {
          "ref": "b4421cef-62b1-42fd-8c7a-afccd2ad45f4",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "aca86fa5-3cec-46e4-9f9c-b9401b28b023"
        },
        "item": {
          "id": "62b5626e-e965-4935-a68a-fbd7d414e81a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0596fdb9-65cf-4975-8e27-03b2b85d5c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baae1a5-bbe9-4d12-a3c5-3dc431210e44",
        "cursor": {
          "ref": "962d5314-947d-4570-9472-12b1c7f6c91b",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b099eba3-f312-4415-9077-737e3a01aeda"
        },
        "item": {
          "id": "8baae1a5-bbe9-4d12-a3c5-3dc431210e44",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4a83eeaa-3600-46e1-bd78-1676f19bea34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be972298-bf9e-4da3-95d4-c31937d3e755",
        "cursor": {
          "ref": "c9161807-27c9-43f0-baf0-2a6fc5751ad0",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1e84c6d4-bbd5-4210-98d4-dd9b2b1b68dd"
        },
        "item": {
          "id": "be972298-bf9e-4da3-95d4-c31937d3e755",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "55673ec7-02e3-4279-be6f-983f01c0a451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4835be-6b40-462b-b4d6-710208e276a6",
        "cursor": {
          "ref": "06ffcb40-14bf-4056-ae3f-dc56f4f1c779",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c2ecedee-f27b-4cf7-8b9e-53d746197ca8"
        },
        "item": {
          "id": "4e4835be-6b40-462b-b4d6-710208e276a6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7cda19f5-d73a-417a-8ca9-da8ecbb2a080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98d9c7d-3636-4caa-becf-dc6c9e4fbd4e",
        "cursor": {
          "ref": "83f59938-8be9-46de-8605-6f67072eac21",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ae473123-9a31-43e7-86e2-50ba459965db"
        },
        "item": {
          "id": "c98d9c7d-3636-4caa-becf-dc6c9e4fbd4e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3d546eca-3bd2-4655-aba2-0011705a5f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449ebd1c-3ade-4036-a101-f7c4178771b0",
        "cursor": {
          "ref": "a941e09f-c909-42cc-984a-1478d5e79088",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "25d1710c-4383-4bbd-bd94-965fea6e52b5"
        },
        "item": {
          "id": "449ebd1c-3ade-4036-a101-f7c4178771b0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d7a65275-56af-4935-a2ea-9122a172a42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6935f96-e936-4def-b873-3bd3515c23cf",
        "cursor": {
          "ref": "50e704f3-5e13-4dc9-aa9b-1c2a98b656de",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e4f7b8bb-0943-4b73-bc44-6aab329680d4"
        },
        "item": {
          "id": "d6935f96-e936-4def-b873-3bd3515c23cf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "de47a13e-a9ff-4830-b8a8-5f05036716f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baddfa2-f778-4090-bae1-915818ce61ef",
        "cursor": {
          "ref": "4fbe96c5-4dcc-471b-ac45-774c09f7d3b9",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "df89cfa6-0926-4bb6-83f6-0fb178191a89"
        },
        "item": {
          "id": "9baddfa2-f778-4090-bae1-915818ce61ef",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "201942e2-62f6-4857-bb74-6d3b7965613e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298777f2-c244-4715-bd69-a5e682a8e5b1",
        "cursor": {
          "ref": "7ee6ea24-39d4-4790-8bce-27049b60ea41",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ec7d1cf3-5e21-400d-9a98-735ea222ca10"
        },
        "item": {
          "id": "298777f2-c244-4715-bd69-a5e682a8e5b1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fb09dfa8-63e2-4777-a168-463e32d8bdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50281ba2-1577-44f5-8464-f86453b00cbf",
        "cursor": {
          "ref": "d3e489cd-1e68-4e3c-b94c-4b67b553a16c",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "aea934a2-d42e-4270-9e75-ca1b222e4a02"
        },
        "item": {
          "id": "50281ba2-1577-44f5-8464-f86453b00cbf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5d9b09fd-d0b2-471f-89dd-8c662d58f15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2731854a-4619-43de-ac15-c7f66fed2fd9",
        "cursor": {
          "ref": "0e0de2b6-2842-4d2a-8684-10ef497e1ce3",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ba66dcf0-f52f-41f4-8a7c-16221567434c"
        },
        "item": {
          "id": "2731854a-4619-43de-ac15-c7f66fed2fd9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3cd15698-a7f6-4171-a04d-7e60b32b2c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dd6b2d-4c0a-4d47-b6ec-4eaf7d404392",
        "cursor": {
          "ref": "169061b9-a0a4-48bb-b490-5b7b54c5d484",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "028d5b03-c973-44ed-9eef-d8f2ee998a64"
        },
        "item": {
          "id": "b5dd6b2d-4c0a-4d47-b6ec-4eaf7d404392",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "907f592e-9bc3-46b2-946c-72c974ffe31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a94a32-b282-4586-b6a6-969cec11ee17",
        "cursor": {
          "ref": "97e80e00-29a0-4b97-8439-afaf6451bf5d",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7ed6b6e9-489f-4559-a16c-06d0f349bcb3"
        },
        "item": {
          "id": "b9a94a32-b282-4586-b6a6-969cec11ee17",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0afc7930-c1c1-439f-ad2b-509a447e51ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 865,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55991f65-8704-4651-9bfa-ec631c9310ba",
        "cursor": {
          "ref": "7b5ed4f1-f549-463a-adb2-011cf0bfe6df",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4791e213-2979-4ed3-befd-0432dc9842d8"
        },
        "item": {
          "id": "55991f65-8704-4651-9bfa-ec631c9310ba",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7553019b-4b73-49c5-98a5-6cd1264046ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6034ce60-f26a-4429-a67e-54a9d96e5302",
        "cursor": {
          "ref": "c4113faa-370a-40c5-bd9e-44f9a8069082",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a3399f87-ca8c-4849-90ab-21b94a58f809"
        },
        "item": {
          "id": "6034ce60-f26a-4429-a67e-54a9d96e5302",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e3a4a32c-8f5a-4101-902c-d96548e05a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 959,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5da189-d8f1-42ae-acc0-678889e09ac5",
        "cursor": {
          "ref": "ced2fa27-c00f-4a7f-b957-e32176c40603",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6dc572a3-4c1c-48bd-8380-f223991c2fbb"
        },
        "item": {
          "id": "3f5da189-d8f1-42ae-acc0-678889e09ac5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ae5db60d-14c9-45be-8db1-6a0dae11332c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428139c8-29ed-4030-952a-628eff7feefb",
        "cursor": {
          "ref": "b766879b-8204-4002-bba1-289b86e0a20b",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bc01058c-26f7-4ddf-ada3-4472af3a1918"
        },
        "item": {
          "id": "428139c8-29ed-4030-952a-628eff7feefb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bb37e337-44b2-4330-b06a-31976fa06a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea171b67-d6b2-4148-a9ed-1eb699b61f6b",
        "cursor": {
          "ref": "10e4e71b-012e-405f-b9ba-5fb13b883971",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "53170237-a23a-461b-86e6-6b005471c501"
        },
        "item": {
          "id": "ea171b67-d6b2-4148-a9ed-1eb699b61f6b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bb2f26ab-ff5c-4269-b0b9-4e4f60fb7ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bdb642-ce12-4c04-bb09-8ab925aecb12",
        "cursor": {
          "ref": "a1d5a3a8-0d5c-4cde-877e-cefe25d73b58",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "39476aed-260e-4913-a2f0-d912518085d7"
        },
        "item": {
          "id": "18bdb642-ce12-4c04-bb09-8ab925aecb12",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "73d89370-1744-4edd-a37c-9fb6b627df2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ace5aa6-74e3-4de9-b9e9-ae28eb5a41dc",
        "cursor": {
          "ref": "54172e53-0d4d-41a9-9987-06dbb747d373",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7b9985ed-f5ff-4585-b19b-6d33d6a602b2"
        },
        "item": {
          "id": "2ace5aa6-74e3-4de9-b9e9-ae28eb5a41dc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "98ed600e-0160-4bfd-b7d5-6569b4f8e9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 865,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7eeca0-9445-4f6d-8657-5dff13e6729c",
        "cursor": {
          "ref": "24d4179d-3d58-4fd1-a974-a6c65cc58e3a",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "35fbe60a-451a-4260-ba33-040bd64b16b5"
        },
        "item": {
          "id": "1f7eeca0-9445-4f6d-8657-5dff13e6729c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8eaa9c15-7f95-4f53-a498-bff11efb3b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7adfe20-fa95-4018-9dd3-ce24a1819405",
        "cursor": {
          "ref": "d13625d1-7b90-467d-868b-347f873e6e78",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eb03618e-032a-4e8b-8874-5e95407d2cd3"
        },
        "item": {
          "id": "a7adfe20-fa95-4018-9dd3-ce24a1819405",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "93e61dd4-ecb6-4c2f-872f-d8a8d2545669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98c218c-478f-44dd-8586-069a4560d02c",
        "cursor": {
          "ref": "4d2d07a8-aa37-4066-aada-5470ab45e707",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6b650bc9-67ea-4d00-8e51-06e9e77431f3"
        },
        "item": {
          "id": "e98c218c-478f-44dd-8586-069a4560d02c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "98109035-adea-46e8-b77e-faf9c2ebde3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0129b259-0c33-49dd-9f73-a8aea9c9ecb8",
        "cursor": {
          "ref": "dfc68023-9ec1-4fd0-85af-0a433543bfe5",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e2890163-bb62-4c89-b250-ff1279b2dac3"
        },
        "item": {
          "id": "0129b259-0c33-49dd-9f73-a8aea9c9ecb8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6b7814fd-ef8c-4a26-acff-6bf23d1ce394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97a8ed5-9b8d-4188-bfb2-e6dee7a5c4ec",
        "cursor": {
          "ref": "dc84be18-e253-464e-98a7-5877099fa22f",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cf391163-fa92-40f9-ae45-30baa9b8eb74"
        },
        "item": {
          "id": "e97a8ed5-9b8d-4188-bfb2-e6dee7a5c4ec",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "736a72b8-8cb3-44d9-b7c7-7744d3c80e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f54d82-ec5a-47b6-b76f-e7b30a43a06e",
        "cursor": {
          "ref": "6af8d419-2682-4edc-a95f-254283857ada",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "24cc194e-7850-47e1-aed6-d675c7c5e4fd"
        },
        "item": {
          "id": "09f54d82-ec5a-47b6-b76f-e7b30a43a06e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1b18ffe7-3eae-4257-ac38-350dab6084d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9670ac92-e500-4c14-a277-d0f3e423b93c",
        "cursor": {
          "ref": "faae6665-aa51-4dae-8fe1-652cbfae419f",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "989d5cd4-26a4-483d-98d7-d846cb99008e"
        },
        "item": {
          "id": "9670ac92-e500-4c14-a277-d0f3e423b93c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e5f5d0d8-3fba-455d-9829-7f6a15934363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789d9f87-5b79-4b35-af22-88b1e7dbe750",
        "cursor": {
          "ref": "2b49eca5-0072-481c-8e92-3fd44bed70ef",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6c46eb64-fba2-4927-a4e6-c0b8ad099363"
        },
        "item": {
          "id": "789d9f87-5b79-4b35-af22-88b1e7dbe750",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5674dd4f-1274-4735-a72b-b834c366a6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b92b426-5ebb-46ba-844a-4029f6a8163f",
        "cursor": {
          "ref": "61b3bcec-58fb-46db-b825-056aa7a74ca4",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f7824ce2-5fe1-43a5-8ac4-37ffb3b19d0d"
        },
        "item": {
          "id": "6b92b426-5ebb-46ba-844a-4029f6a8163f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "48eedaff-078b-4f00-93d8-682c41ae4e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7896195-36c6-4826-aca1-bf5c334db082",
        "cursor": {
          "ref": "e3066828-35b4-4033-a08c-89010cf98707",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1f519d2c-5b85-474b-824d-6b5a9163945a"
        },
        "item": {
          "id": "a7896195-36c6-4826-aca1-bf5c334db082",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "109ab97a-5e0c-40ce-9348-efb397f0b53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70062b3e-bc4c-4c0c-a484-08c7e0719033",
        "cursor": {
          "ref": "a046ebc4-f916-497b-9fe7-3d2502534975",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "44a2b880-5d4e-42c1-8e65-5f9786059099"
        },
        "item": {
          "id": "70062b3e-bc4c-4c0c-a484-08c7e0719033",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "74b12d73-d6b2-4f37-8423-d54ea04bdf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07e4c09-aa21-4fef-bc8e-83e720e4f1b4",
        "cursor": {
          "ref": "86a26edc-fd78-4de4-a938-201b0ffcb64e",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6f15497e-b7e4-4fd5-90d7-7ea298f40a14"
        },
        "item": {
          "id": "d07e4c09-aa21-4fef-bc8e-83e720e4f1b4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4d142778-9c07-43e4-8683-936550ada369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58015a29-8710-4bf7-abaa-4fa3777bf81c",
        "cursor": {
          "ref": "a24738f1-cd2d-45da-ba25-345fffc02c32",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ef3da660-ea13-4c81-807a-2048d625f0a1"
        },
        "item": {
          "id": "58015a29-8710-4bf7-abaa-4fa3777bf81c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e9a27d24-9ac5-4104-a1b1-8229cd9b8bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55829caf-1791-4e90-848b-61d7319f6ff1",
        "cursor": {
          "ref": "bd1d51e8-4744-4409-94ce-5aaa42931012",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ddf1f287-6522-4576-a408-8d64cb9c86c5"
        },
        "item": {
          "id": "55829caf-1791-4e90-848b-61d7319f6ff1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4243e3ca-35f9-4830-bdbe-7803867ad923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf5fe82-8c12-4baf-9d9d-d08949e470b7",
        "cursor": {
          "ref": "fe311028-4ea8-491a-94b1-cb6796333ce5",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4c9a597a-d834-40fa-ad48-25170163be5f"
        },
        "item": {
          "id": "abf5fe82-8c12-4baf-9d9d-d08949e470b7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "86fd3c71-331f-4792-a853-f2e43eac30da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc635d5b-abfb-470a-9761-05d0d589d4fa",
        "cursor": {
          "ref": "dca3d058-2ac4-4a36-82ec-515722586632",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7b63f4ff-a54e-499e-8f09-25a10eccbb92"
        },
        "item": {
          "id": "cc635d5b-abfb-470a-9761-05d0d589d4fa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "339ed47c-4201-4044-9e94-8a58f3474d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52747b2-7685-4487-9206-8d517c0d1fa4",
        "cursor": {
          "ref": "f96d1e1c-4470-453d-b97d-bf151a7f09ac",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ad8376b6-15b1-4462-a21e-ef82f3afec5d"
        },
        "item": {
          "id": "f52747b2-7685-4487-9206-8d517c0d1fa4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "109db2c6-bbd9-4a5c-9d38-b3ee205784c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887e597b-c966-4863-92e9-4a44ef2cb407",
        "cursor": {
          "ref": "d0b1b944-8fc1-494b-a126-5f26f66112de",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "74a7f67c-9d95-4888-8812-53ff86f012e9"
        },
        "item": {
          "id": "887e597b-c966-4863-92e9-4a44ef2cb407",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e3db3594-7b57-4c05-850f-8f3719e24699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea33869-6484-49e3-abec-aa40bd80f9a2",
        "cursor": {
          "ref": "a2ad248f-aa7c-4555-b1d2-fa8ec41360d6",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f929328f-dd50-481e-bf4a-48266ceb4646"
        },
        "item": {
          "id": "5ea33869-6484-49e3-abec-aa40bd80f9a2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b391a4da-f9cb-42b1-8365-fefa91fc812a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abe04d2-5ead-4eb8-aa57-6306d1f69352",
        "cursor": {
          "ref": "6fce4ca3-ef1e-4031-a13e-a5d9f6d39921",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2e700bb5-9cf3-44c8-b1a8-db24c0b61f3f"
        },
        "item": {
          "id": "8abe04d2-5ead-4eb8-aa57-6306d1f69352",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "93c162d6-affc-4d39-8df5-52cf69fc6178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfffe227-21d5-40fe-96c1-5b248b6ca87c",
        "cursor": {
          "ref": "415576a7-9a1e-4a52-b2a4-37a7f4f6bb41",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "34de6b81-58c1-4d42-97bc-242f36a835de"
        },
        "item": {
          "id": "bfffe227-21d5-40fe-96c1-5b248b6ca87c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c93946b4-4dac-48e2-b668-b3a8ace36220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0343d28e-0cb7-4df6-86cb-5291cec899b5",
        "cursor": {
          "ref": "8ef319ec-2ce5-4ae5-86be-22953a8f6b3a",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a9652b6a-10d0-454e-8afb-9f19f4ee15a8"
        },
        "item": {
          "id": "0343d28e-0cb7-4df6-86cb-5291cec899b5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "00e5b6d9-0483-4be6-ad7b-ad6874208c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5117e1a6-e2c2-4f49-bfea-670fc94d90c7",
        "cursor": {
          "ref": "5dbce0de-b418-4a37-8fd8-86c90ba7b58f",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "085feae5-416d-4681-a518-642cb1183eb6"
        },
        "item": {
          "id": "5117e1a6-e2c2-4f49-bfea-670fc94d90c7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "40839a0f-2e93-4643-a5d5-a611b5d86cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae514160-3659-426d-bb06-47e2f61a0dc6",
        "cursor": {
          "ref": "0a6770a3-e819-4fa3-8699-03f1e47e91b5",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "359923de-1dc8-4e24-ac0a-f169a359e48b"
        },
        "item": {
          "id": "ae514160-3659-426d-bb06-47e2f61a0dc6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cafb36c6-ef4b-46a8-913e-1a12e47bf23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bcbd55-b055-455d-a4b2-d9eb9d5b2535",
        "cursor": {
          "ref": "419ffcf1-9c25-4b37-be79-f25a8dbf7125",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7592ddcd-174c-49cc-9eb2-e0a4d68b2986"
        },
        "item": {
          "id": "31bcbd55-b055-455d-a4b2-d9eb9d5b2535",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "90b02560-a331-4cf2-a801-e6343f4d3de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7830bff-076b-4207-b39f-38a5bb3c8b69",
        "cursor": {
          "ref": "44812fcd-9c98-46cf-affb-29d7ee8c99c4",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fb5f809b-d509-4555-913d-06e6b5ade4c9"
        },
        "item": {
          "id": "a7830bff-076b-4207-b39f-38a5bb3c8b69",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a2178d81-4433-4f60-9d8a-23af4093571f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff57457-2981-4d88-b55e-6fcfc133dfad",
        "cursor": {
          "ref": "1057d90a-febb-4dec-9628-72e7d5d16b1b",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "864c97eb-c8bc-4507-a65e-66be61a0699c"
        },
        "item": {
          "id": "4ff57457-2981-4d88-b55e-6fcfc133dfad",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "153791f7-61b0-481b-afd9-7e58dbf72957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764a9581-0646-4939-a7a5-1c188d02bfc6",
        "cursor": {
          "ref": "f55085a7-8705-4bd0-a5fe-7801ff7bff82",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0bbd23b1-5bdd-4c24-b6ad-cc435c376376"
        },
        "item": {
          "id": "764a9581-0646-4939-a7a5-1c188d02bfc6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "87693562-098d-4ddd-a452-66c95072bb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2398de45-86e7-4b56-b868-fd5bbbd26d37",
        "cursor": {
          "ref": "8b44d83b-2067-4319-a4ea-7bc6df62c010",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "990f6a11-a79a-40e2-8887-82db82583f92"
        },
        "item": {
          "id": "2398de45-86e7-4b56-b868-fd5bbbd26d37",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f4fcfa97-d2c5-4ff3-989f-38dd9ad46a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df1e225-8876-4a8d-8220-a9ca300c2f96",
        "cursor": {
          "ref": "91111c62-3aa2-4bdd-bffa-bf1b83ca24d4",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7ac070bf-e0e0-4b03-aa51-89c18210f2e4"
        },
        "item": {
          "id": "7df1e225-8876-4a8d-8220-a9ca300c2f96",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "159ef94a-eb02-44f3-8b3f-4b15d8f3b347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58aa039-7805-4b93-bea5-b2b2177c00a6",
        "cursor": {
          "ref": "d9ba759b-a8a5-4912-905a-ff6b7d99aee0",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8bc51b7f-ba2e-45bd-b90f-a44ddb996d6e"
        },
        "item": {
          "id": "d58aa039-7805-4b93-bea5-b2b2177c00a6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fa2223ea-d495-42a6-a377-6fbfbe9b9980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb86bff-273c-4786-8282-86d09ec92d41",
        "cursor": {
          "ref": "b0ddc9e7-e99a-43d9-8681-89f2f403181c",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "30c0a1c2-e552-4d0e-ad98-0f563e8b80ad"
        },
        "item": {
          "id": "6bb86bff-273c-4786-8282-86d09ec92d41",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "de71313c-71f7-4900-8fa3-795ec76a9f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a2adb2-55c9-4f16-a065-d1df9b3d5e7a",
        "cursor": {
          "ref": "d4af23c9-dd4a-4f3d-8e15-29faf0e1ddf5",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "069c2146-4a69-41d7-b337-7b3e9472d254"
        },
        "item": {
          "id": "73a2adb2-55c9-4f16-a065-d1df9b3d5e7a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e8fb4886-8684-4134-85ac-358eace48635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bad27e-3d55-48e0-945f-7f05f4cb1d6f",
        "cursor": {
          "ref": "6dd7d79c-58d1-499e-ab6f-ddf03b8a73e1",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c35e415c-b4fd-4059-8b29-31435fc0176b"
        },
        "item": {
          "id": "20bad27e-3d55-48e0-945f-7f05f4cb1d6f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a972dcdc-a551-4148-a453-798483bbd509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67736cc2-f086-492a-a9e0-1e301e8af380",
        "cursor": {
          "ref": "9b448f0c-612b-4a55-8465-1844b1016d8a",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "df352edd-5873-4456-b1f7-fa53df892ca7"
        },
        "item": {
          "id": "67736cc2-f086-492a-a9e0-1e301e8af380",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a5f6b57f-3e2c-4dc7-939d-ae70d399c04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b13343-4e11-4b6f-8d94-f8bdc96b5f11",
        "cursor": {
          "ref": "7b6c698c-c79f-4e30-962b-b6e1fb76ca9a",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "865bb461-ce73-4e94-9cbe-0b55b43c753c"
        },
        "item": {
          "id": "98b13343-4e11-4b6f-8d94-f8bdc96b5f11",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9cfdd6f9-cd9b-4a69-ab2d-166d8b787450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5627a72-8e28-451a-bdb3-7768badad9b5",
        "cursor": {
          "ref": "d6fa2dac-50a4-457b-8d4c-6fb53390a197",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2ad9e1e3-92be-46ff-abcf-388d2edeedc7"
        },
        "item": {
          "id": "e5627a72-8e28-451a-bdb3-7768badad9b5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8afff0b1-2cd0-4791-98e1-4e08abf0eb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ead84b-8c28-434c-97ab-6865394d170a",
        "cursor": {
          "ref": "8def6110-549f-44dd-809f-d00780212ed8",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f5b80767-1383-45a7-b190-4266046a5b0e"
        },
        "item": {
          "id": "90ead84b-8c28-434c-97ab-6865394d170a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3297f7fd-f851-40b2-b12f-32eec4050311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c177cac8-6af7-47a3-bc03-7093cd5c903c",
        "cursor": {
          "ref": "11f8cd4e-76dc-410f-a85a-dfc822c27218",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7c0c848b-2d65-4542-9ba6-122ccc8b8522"
        },
        "item": {
          "id": "c177cac8-6af7-47a3-bc03-7093cd5c903c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "65e28646-097f-4756-aeb9-6d8b77e5e129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881436b1-e37a-4a7c-9c94-926c7e03e9ad",
        "cursor": {
          "ref": "cf862a22-33bb-4425-9053-35b22a88aa8f",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1a052d95-2d27-43c9-985c-a4420016e926"
        },
        "item": {
          "id": "881436b1-e37a-4a7c-9c94-926c7e03e9ad",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "53e57f6f-f1f7-4ba7-b441-c51318b45f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63e8e71-a794-42b0-a8b1-b765a175c78b",
        "cursor": {
          "ref": "16d4c8ad-2781-4b0a-9e45-0b194c75e157",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "290bc7b5-a2bc-4f2e-b995-b4d691847877"
        },
        "item": {
          "id": "d63e8e71-a794-42b0-a8b1-b765a175c78b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9009a4d5-2306-4a80-b102-1c0a18bcae66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5fbeef-0612-4194-b887-0ac3d3b6cd3a",
        "cursor": {
          "ref": "91f70d19-70db-4d61-bec9-def9db2afde7",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d8b85469-9da9-4982-9ce7-7c692f3afa23"
        },
        "item": {
          "id": "fb5fbeef-0612-4194-b887-0ac3d3b6cd3a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7ad23a5d-0e74-4f92-82a2-38449b803ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3538f1-496a-4919-bc54-ee28194a3c01",
        "cursor": {
          "ref": "e469149b-7fa3-47cb-9a8b-e9d7abbdcdc7",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "649e94dc-407c-41ff-9c81-2917cc5b5b3e"
        },
        "item": {
          "id": "2c3538f1-496a-4919-bc54-ee28194a3c01",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8bf66483-83e4-4a74-b2df-bcc63289c70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1317,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38fefae-c684-433b-8304-30f559163ab2",
        "cursor": {
          "ref": "7e25105b-d927-44e4-b61c-af3f172eaef5",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "05037e6d-623a-4847-869d-8bcd3b6d0698"
        },
        "item": {
          "id": "e38fefae-c684-433b-8304-30f559163ab2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "02b58441-5574-4d95-a691-efdaffcf7a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1190,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b32598-c04c-4a49-9bf4-b0931890f415",
        "cursor": {
          "ref": "dcad301c-fd84-45ce-8443-74c898124e5b",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9bd3081d-cfe4-4cf9-89fe-d4033d9ccd99"
        },
        "item": {
          "id": "03b32598-c04c-4a49-9bf4-b0931890f415",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "78acf4c9-320d-459a-84b0-05ab98fd3bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1832,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333c4f7d-a812-4b68-b23c-8482a3863de7",
        "cursor": {
          "ref": "6e6e850e-2e8a-4708-aeb8-17ecac675d38",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "242d6a34-e2cb-4488-8f9d-7600c2bf6a4d"
        },
        "item": {
          "id": "333c4f7d-a812-4b68-b23c-8482a3863de7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "214c890c-f25a-4824-a0c3-7d644814273f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1660,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80da9e15-d017-4e26-ab61-3ed8e64c3012",
        "cursor": {
          "ref": "b7d50301-de80-4846-933e-bcdda2ad53d6",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "966c9331-88c5-4e24-ba2a-91681fc4cba1"
        },
        "item": {
          "id": "80da9e15-d017-4e26-ab61-3ed8e64c3012",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "01fa9eb9-06b2-4e05-b476-7d0e0017bbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29db89f8-c5ed-4898-881b-c527a8b27d54",
        "cursor": {
          "ref": "495121d2-efc2-48ee-94f2-72a833c1d887",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ffbb0273-f323-4959-ac91-1367f964e6c9"
        },
        "item": {
          "id": "29db89f8-c5ed-4898-881b-c527a8b27d54",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "af1d009a-07e7-44b1-9247-a28ea29df6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1041878f-d8bc-426e-aa14-7abe2c1beaad",
        "cursor": {
          "ref": "962036a0-e0c9-4357-907d-4e07bbfdba96",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4f5ce25e-aa61-480d-8838-c52be94fe20b"
        },
        "item": {
          "id": "1041878f-d8bc-426e-aa14-7abe2c1beaad",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0a212fe1-df01-4b8a-b2be-45fc73c3dc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b093c8-410b-4e90-8b2e-a90c4a20cf94",
        "cursor": {
          "ref": "fdb117fd-d3de-4474-9f29-09449cfe12fd",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7e4098db-b5de-4c5f-8c35-560217138e80"
        },
        "item": {
          "id": "38b093c8-410b-4e90-8b2e-a90c4a20cf94",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2ecbe90a-153a-4582-8232-ec974214bdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42408e14-9141-45c2-9c3c-6fcc53a1008d",
        "cursor": {
          "ref": "0b292490-f3f6-479a-a38a-bbd6a5c6dfe9",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c08c8c6e-4e5d-4b48-a918-91dc535467f9"
        },
        "item": {
          "id": "42408e14-9141-45c2-9c3c-6fcc53a1008d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bf6353fc-8e38-4b62-bbad-40d238b577c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838ab131-9a2c-4ae4-a65c-28af294a86d9",
        "cursor": {
          "ref": "1c22c8ae-9ec0-4aa3-9db1-9413473a327e",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "669c16c4-c92b-4c17-b70f-9264e0961eb1"
        },
        "item": {
          "id": "838ab131-9a2c-4ae4-a65c-28af294a86d9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "103c547e-5257-44b5-aef8-23371a23143d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac92cf2-3b6d-45a4-ba68-37f5691acc07",
        "cursor": {
          "ref": "32c6e77f-c565-43e3-8496-067afa1be074",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "14828741-2e15-4fa0-b952-6260aa8fd38a"
        },
        "item": {
          "id": "1ac92cf2-3b6d-45a4-ba68-37f5691acc07",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "345d818c-fbdc-4245-937a-fef6f5cc6a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36552fa0-37b4-4e60-b138-56289cc6c9e6",
        "cursor": {
          "ref": "cc157026-2265-4935-a24d-02720c5a8e80",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "81980135-51bc-4c20-a923-2b4278cd6a7b"
        },
        "item": {
          "id": "36552fa0-37b4-4e60-b138-56289cc6c9e6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0f3b8ab7-d56e-4dac-b9e1-2cdbb11e5dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f268d8c-9268-4082-9820-1f7d3f452e73",
        "cursor": {
          "ref": "341b5910-5e2f-424e-b7a8-5c0b77acaeb0",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fb8e7af9-ecb7-437a-b53d-580809440f36"
        },
        "item": {
          "id": "2f268d8c-9268-4082-9820-1f7d3f452e73",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fb53f494-5d48-42a6-8730-2b7a1364c613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4911d10-eddf-4ddb-8627-b04eacdbf4ea",
        "cursor": {
          "ref": "305512b3-16f0-40bc-a984-524eaf212c09",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "daa8648c-fc2a-4472-bf3a-072b4df96cbb"
        },
        "item": {
          "id": "a4911d10-eddf-4ddb-8627-b04eacdbf4ea",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3b978854-df31-4750-a21e-700e0c6541e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefa6dd1-0ac3-4f68-9082-8217e84aa424",
        "cursor": {
          "ref": "1e5e25a0-1966-4a85-b75b-886b60d1d5e1",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e77d73bb-39c7-4332-9705-9fe51badf403"
        },
        "item": {
          "id": "fefa6dd1-0ac3-4f68-9082-8217e84aa424",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d13af998-aa37-4767-be79-26a5886aaf53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f277ca5-5d53-4d26-89d2-16f8a0c63de3",
        "cursor": {
          "ref": "801b3211-9b6d-4117-8bcc-9b2dd3fc1d61",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6175ac62-d039-4bd6-8471-38c89074e713"
        },
        "item": {
          "id": "1f277ca5-5d53-4d26-89d2-16f8a0c63de3",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "71e364ab-7d44-492c-ad16-9182aec8a33d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 617,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a9d0ea-05be-4231-9f07-0fa81e16f1f6",
        "cursor": {
          "ref": "53ecf2e4-895e-42e4-90e9-a189a5758952",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9e30e110-724e-4fbe-8661-6e09bc62da38"
        },
        "item": {
          "id": "49a9d0ea-05be-4231-9f07-0fa81e16f1f6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a555f6f9-83a4-4aba-ab9d-83aa1bd50b66",
          "status": "OK",
          "code": 200,
          "responseTime": 692,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31afc00-891e-401d-a7fb-ffb8d7e7e615",
        "cursor": {
          "ref": "215100a5-3307-4888-a792-15c046b96a0e",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b44c8d13-6c62-451a-b702-c123fc4bb299"
        },
        "item": {
          "id": "a31afc00-891e-401d-a7fb-ffb8d7e7e615",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e825c59b-56df-4a25-9677-c9e7bb6a2f67",
          "status": "OK",
          "code": 200,
          "responseTime": 2420,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d285e91-8e5b-4a3e-a1ca-fe5a00b1cf52",
        "cursor": {
          "ref": "cbe6978a-8448-42bb-a64e-b02766dd683e",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2b3035ca-e7cb-4c7c-94a3-101592e15810"
        },
        "item": {
          "id": "6d285e91-8e5b-4a3e-a1ca-fe5a00b1cf52",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ef0b1923-0fda-4a95-9e77-2a155cc813d0",
          "status": "OK",
          "code": 200,
          "responseTime": 2004,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8b1685-d2ea-4a58-ab3a-cca37f183400",
        "cursor": {
          "ref": "29821784-6ec4-43a4-a03e-b4e10a28aa85",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d93e7672-1cea-4afe-b002-5a6a9a55738a"
        },
        "item": {
          "id": "9e8b1685-d2ea-4a58-ab3a-cca37f183400",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1429764e-593a-4765-ac62-bf6270aea552",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8b1685-d2ea-4a58-ab3a-cca37f183400",
        "cursor": {
          "ref": "29821784-6ec4-43a4-a03e-b4e10a28aa85",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d93e7672-1cea-4afe-b002-5a6a9a55738a"
        },
        "item": {
          "id": "9e8b1685-d2ea-4a58-ab3a-cca37f183400",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1429764e-593a-4765-ac62-bf6270aea552",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8b1685-d2ea-4a58-ab3a-cca37f183400",
        "cursor": {
          "ref": "29821784-6ec4-43a4-a03e-b4e10a28aa85",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d93e7672-1cea-4afe-b002-5a6a9a55738a"
        },
        "item": {
          "id": "9e8b1685-d2ea-4a58-ab3a-cca37f183400",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1429764e-593a-4765-ac62-bf6270aea552",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37277e25-46a7-41de-b45a-45e1c627bb68",
        "cursor": {
          "ref": "c658e24e-e735-4123-90cc-92105630f05e",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "95a26158-2057-49d5-8b05-63df81fe2da6"
        },
        "item": {
          "id": "37277e25-46a7-41de-b45a-45e1c627bb68",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "3bb0382a-56f4-4a36-8b02-4e3af22ec434",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 427,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9018e0f3-2e33-4d7a-98e4-ac4ad5b75dd1",
        "cursor": {
          "ref": "86041c1c-ed2d-47ba-a2e3-ffa853827f0c",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5c99e5f1-bcde-40e0-93e9-77697693e872"
        },
        "item": {
          "id": "9018e0f3-2e33-4d7a-98e4-ac4ad5b75dd1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d3fa5928-afa4-4956-8ac2-36c5b5768705",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9018e0f3-2e33-4d7a-98e4-ac4ad5b75dd1",
        "cursor": {
          "ref": "86041c1c-ed2d-47ba-a2e3-ffa853827f0c",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5c99e5f1-bcde-40e0-93e9-77697693e872"
        },
        "item": {
          "id": "9018e0f3-2e33-4d7a-98e4-ac4ad5b75dd1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d3fa5928-afa4-4956-8ac2-36c5b5768705",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04991b12-da7d-4f33-993e-cb4a4e3f5598",
        "cursor": {
          "ref": "31c3bedb-3e2c-47a0-b85a-485f3d97e80c",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b0d038c9-dbf2-4a3f-92a8-9bfd4a76312f"
        },
        "item": {
          "id": "04991b12-da7d-4f33-993e-cb4a4e3f5598",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "adc76c3b-f87f-4549-be67-b34fa02fed8b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 629,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa25974d-7f68-4f45-a77c-f08aa287e56c",
        "cursor": {
          "ref": "09b0b9e8-1ad6-4481-85b4-2c15e44a1acd",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c057961d-61a2-422a-a79f-0722cdab19cb"
        },
        "item": {
          "id": "aa25974d-7f68-4f45-a77c-f08aa287e56c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cc927ef5-fbdd-4afc-b8c3-54f2ed620e7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa25974d-7f68-4f45-a77c-f08aa287e56c",
        "cursor": {
          "ref": "09b0b9e8-1ad6-4481-85b4-2c15e44a1acd",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c057961d-61a2-422a-a79f-0722cdab19cb"
        },
        "item": {
          "id": "aa25974d-7f68-4f45-a77c-f08aa287e56c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cc927ef5-fbdd-4afc-b8c3-54f2ed620e7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4f6dba-c660-45bc-bd9e-eefa243baae0",
        "cursor": {
          "ref": "e00c50f0-e3ef-4577-b5eb-291737269d7c",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "790e07a6-75c6-4999-bc3f-15b5df167249"
        },
        "item": {
          "id": "2f4f6dba-c660-45bc-bd9e-eefa243baae0",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "36ef1a97-2803-4680-9f96-3abb93666e6f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 675,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}