{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b97f6e72-e76d-405a-b443-16314f568d1d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3675953b-2f21-4224-bd4c-d62ba7308128",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ea0d79c-1807-4e5b-bd21-c9073886a7af",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "224cdb51-a900-4ef3-a658-78595fcd5f39"
                }
              }
            ]
          },
          {
            "id": "db37d1e0-50cd-47d9-ad72-c7138a5a86bc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d40fcbc-9773-4e3c-a6ed-1c73603b9be2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "be4da4e0-8827-4bc0-8856-da5f7f5c94ed"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f13eb04c-e38a-4b16-895f-a3844474b3c1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9c253010-7788-4806-83dd-62579319cfa7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "854a456a-21ba-4abf-bf3e-52c0424ae92b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "056badfb-7a2c-4cec-9277-2fb671b9d7d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cc164d3-ace6-4c46-8f66-8f6d430e000e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b8aea8b1-2ba7-4e87-84bd-10d1c4cda53f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb3a40e5-8bb0-430c-85b7-c89d4d84dcb6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cf27031c-f338-4f54-b22f-f77587307b11",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91103021-1fc5-4beb-b3f9-e1b19bfa2ed5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e45d452-ed62-4a3b-8ff3-9d9ecb44456b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4914221d-45db-40e0-918f-932dd5314623"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84863e2c-45f8-4734-ae5f-adcd3e77b1b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f97d780-6072-40c0-977f-fa9b67c4aaf3"
            }
          }
        ]
      },
      {
        "id": "5d86467c-86fb-4a18-9cb9-d7729d9b5441",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6c67cac4-6ca4-4c1c-ba3c-6ab71e229796",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab9a30aa-e805-4ff1-a358-e0ac93432d38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "65f9b3a8-d148-419a-982b-2cef1d4d2eaa",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc32768-4802-49fd-81b7-7774c4f69a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "779a8fde-218a-4dcc-b73a-a27c6ddbd5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9a1d2e-5c97-45ed-a1de-61841ec96bb5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "307242c9-7395-48c7-8d39-2763cca86dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15465000-1bce-433d-ab6a-0a3de1a8258a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d406eb43-1aaa-467c-9061-3d0730869f2a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37085694-190e-4687-9e6d-c63077355237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6644e97a-5b04-4a68-af66-303e33262227"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "73c48261-298f-4fd4-8018-02b980431fb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f1a9419-e081-4e7f-8e81-b5bd24b28dd6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe19f49f-530e-4d84-8ce8-04352781f816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c3b34e8-60c6-47dd-a8af-70cc12b84183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8da1f5b-5c21-4da0-ade8-d209e452f6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b829b840-8fd4-4490-8619-9870a7174611"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "80361e2a-2a7a-442c-90e4-8ef183f3b0d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "61742e9f-9df7-465e-9118-98eca8f4140b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ae3059f-08d9-4c76-95ac-2e0c0ff4b6b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c0ebc3d2-3d08-4565-96d8-154da45e5974"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56742005-4bd2-41bc-967a-c5435bcd0288",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6ae22a6c-b14f-43d6-86b9-4225dd46ce77"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5676106e-fbc3-4d55-ab6e-7771f2eba5b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "138ef14d-e8a2-4cff-b2b9-0b475e63a145"
            }
          }
        ]
      },
      {
        "id": "7205df56-f266-48ca-b5c5-f00aca642cba",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "721453f2-6447-4078-8091-178dd8830aa2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1932d3b9-19e6-4f47-97eb-064b9cb686c4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e5487dcb-deef-471d-9206-3e376507ec20",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7235c0bf-8ea4-4225-8277-af53c8806c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946a62da-3983-48a3-99b1-e94d1e15c064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3237e2a3-2c9d-40af-a0dd-f925287431b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "913a19d5-7aaa-4ef1-956b-8d7bd6547c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d552fad-ca5e-488d-a937-20c8368b5c95",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d67fca9-7a68-4268-9001-26789de905b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1172ec09-39b7-437f-9e66-f167084861dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559d062b-da64-43ff-a197-6c11ea298eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d11d9c30-5225-4ee7-9d64-f15f80742952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68848af1-b96e-4d4b-af08-360b8bbd6512",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d342eb8-0748-45ed-83fb-bb5024f4c411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346fc556-0379-4c09-a1e6-49a726b54542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563e9560-289e-46df-b78c-6a8c0160580a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54724ffa-8ec1-4151-aa50-23cc772a50b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91dda0cb-b610-433e-9629-f60d4f645bfd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8174cc04-fa57-406c-9e69-77ea88b7ef25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef31aeb-fb50-4fcc-93a5-b5107aefdb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436af4c1-df25-4dea-906f-8c56aea5e610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8e14e85-897a-4dda-8693-aff29470056c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0691ef4-8c5b-458f-b0a5-68455f94f74e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446e745d-138a-465b-887b-268a157eec93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eba7853-7216-4b4b-a049-744fc4606ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59a7c09-cea9-4a35-a389-d94d6b47ede5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74043365-5862-4ed1-9b12-41a34c5f0dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21acb97d-2125-4524-9e02-957b2ff5ca1e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bff4b5-1113-47f0-87fe-1a4e1c8169c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e56a23-18be-49d4-bcae-79b2f33f4c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72911af9-d139-4979-af65-897bf813b703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91e103b9-5adf-4d72-86e2-8d946ea6192a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b3d852-e2f0-4d1b-864e-0016f90404a0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcb6c7a-2cef-4c42-b247-1831f68d37fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8d5082-4614-45b6-ad39-9cbeff0e2be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6b4577-53c6-409f-80ba-5286102c97fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3d2cbeb-ebaa-4536-8d01-178d022e40a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afe2ed7-02e4-4905-86b8-1dabf2f4a925",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1877b84a-a2e0-48b0-a28f-889ab06b6266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b561e86-9ac0-4054-bdd4-06d2ef64390e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9923b156-0443-4a3a-9483-4ffa3d3da68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93946b80-57c2-4aab-894e-5f90d629be4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e65e808-b933-4598-b5c7-f849ee1829e0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afc7c06-d4fa-41af-946f-5dd2b6b88394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02da7101-76e1-4421-9966-f4e6afc8b214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fcaa4c-477d-473d-8141-8f1edc6aefeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0db44289-f394-4c76-915f-588de1de7e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017d4310-58ac-4842-9eea-20b295d7d305",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83cc234-3c90-4a53-9027-251b2192a042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ca3585-821f-4374-a213-92b190003c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353205d7-5e9f-47b5-841f-f2a918f5906b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6aed085-96c9-474b-896f-9a2d5f343be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9babe3fa-ac4c-4e39-a57c-8664a0ca074a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd225dd-8f45-4bb6-974e-50d3869f8547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f75754-e32e-4876-88c6-147c2287e6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951b2347-6ee3-4aad-9fe9-651accdafc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7ded4dd-c92a-45f8-bb8b-826eac45af40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c568695f-384f-40ab-b390-f8af6f20f865",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2583612-ecb0-4e81-aec1-6c7b6e1e1db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f06a8d-516f-4244-9a55-3658ed0c57de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743b2bed-95d3-4b52-9a17-606a2695b947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e15e9e8a-428c-406c-83eb-e93642704599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3460e6ae-e26d-4423-9f25-e8439777c39c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e28d722-a256-4535-935e-e7fabdd1144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2422fd-2195-4b79-bfd8-ffd33cf50a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bf68d3-42de-4487-836c-a1df5bfb4633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49b20108-d870-4c34-b9da-baba5a4c0ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8855296d-9f60-4053-b685-f0b14dfd9d41",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb1f7f5-725d-434e-8adf-e7bfcd2076f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f69dc9-3af2-4e0b-a47f-91330b667727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a670cf88-33fa-482e-baae-163e0beaade2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1034e45e-fc99-473a-bbf7-414473190a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5153dd8c-0507-461d-83f8-79dff778fc5f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d246b9-8db5-494a-a28f-b8e7d6c56f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7161eb0a-66ef-4890-a4ff-792f283253c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b24e8e4-636f-454c-a01e-0d302527b8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a48861d-a577-45d8-a9e8-cda8f9015cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178dbc08-5dd0-429a-af3f-137f9693d9dd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cef84d6-2df1-4861-912f-1c31b408573a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd3a55b-122e-45d5-a0c6-c7363ccdb453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b91041f-0187-42c0-b457-20d0a0f6074d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ba1a9a1-d79a-47c0-a4b7-b25c4506eec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cbd9fe-2c73-4f9b-aada-f7bc0a1d0ea3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d590d0-d327-4506-881b-0ce6afda00df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544a899c-31ef-4027-ae7b-24501dfb3d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc60f9cc-672b-4804-a878-3ae3017849eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "641f7cc2-8ad2-4a26-aa59-d898137d005d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f93ec1-05a4-4cdc-ad19-d7bbd3b11eab",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c6c24b-065d-443b-80f4-6fce8f07f130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb79b786-ce37-4109-9d0e-09d4b305985d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04f54e9-40f1-4fb2-bd50-d003a6a1a98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7da559a8-2d75-4580-8a1e-a71dcfe24422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce3ea5b-2f35-4262-92c4-d646d2891434",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ef55d7-9106-4e33-a4d0-7b94f7c1ff22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131f01ef-528a-45bf-9285-cf63898f07fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4461ee8c-3cf1-49e2-8737-5c25fe75bff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f35413-0871-4904-8fda-6809c8898601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe0eb5a-3544-4ec9-b2f8-87a407cc48f0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c1ad5c-29df-42d1-871e-56c3f9a2ee80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7652c96f-eba6-4c17-8287-444c18453cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17bec27-6017-47dc-b64c-4c27bdb8aa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0225026-f82b-4d08-aa9e-054bdef3d11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5060f5ec-f3ea-4e4c-ae58-745fc554ac73",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a339e3a6-dc33-4579-a452-4b8122e2b6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9bff13f-e49f-4b1b-8a0c-ae211a57fb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd97aea4-9186-4506-bb77-a6a7d34393c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7f895d-e3b4-4e06-9bc4-6342931fa6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a82b5d-2077-4a2d-8ac1-bd556279b157",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bf5eac-6aca-4f22-a1da-f8f16dc9611d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74672b32-18f0-453b-9b63-cc430467f64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af17e5a9-cc04-4a5b-9573-793a8b6e6048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e6598f-ee80-46b7-bfc8-5d1b4ac4c004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d970c102-4a4f-44b5-a393-04d239399436",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875e83f3-79fd-45f9-a470-cd79540462c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83176fa5-595e-476c-bbbe-069b434d957e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d808f4e5-5900-42d0-97d9-5814f6a6a60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cf0f19-4904-4951-a790-e9074476d557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600396fe-1c44-4d62-86bf-b27f906b7b96",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845e7dba-7e7e-49fc-89f1-a68d91273ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e86ddb9-a358-4ec8-8d74-2386fa5f71c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0296b69-e422-4731-be19-dd1bb130c9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b119124-54fd-49a5-87df-27dcbdcf9db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3542023c-a552-4faf-a7f0-81575841aed9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae1af33-b474-401a-b53e-eb62b0eefacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1e2956-5f6c-447a-9606-c87e6ae1cdcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fbd541-0a69-4f6b-bdb4-b5b8ce5e3cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04c9b67f-948d-432a-8e48-39e0f2efc7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10213b8f-32c7-4ef3-99ad-f585f7854434",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9a7d5a-8215-4603-bcad-3607ef0c8923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8813166-a897-40b7-9546-3963d25f69ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adaf3de9-e8fb-41aa-afaa-7170bc2ebaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9e4687-9045-4ee2-b00e-77936237e4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8299694a-d0bf-4477-abc0-72f3ce3d9815",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d42c488-d167-4e66-87c1-4aa3ab539972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac384930-d734-4ffa-905a-ab660c7a7c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b040fc-703e-4630-90c2-9d50c2a4d061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "521ee471-6b31-49dd-96a9-383cbbe60c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2e31f6-9b44-47f5-b742-c3bc2b0f0d7c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc5f986-7518-4327-b017-f53a924286f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daba3da7-6050-4556-8b59-810bf2fa2a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13d9506-2543-4107-b837-b81ef08a0563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf6bca2-3103-4f82-bcea-4fc87688b09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb5485e-1efa-4499-8ef1-d70577819970",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e192603-1a6a-45e4-82ba-8deadf101828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a953265-b1ff-4d82-bf3e-b12f16e1ef25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b73713f-fdb9-4398-92d8-9621221fbeec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9678694d-eadb-4681-98f0-4c33ab45cc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24e1cee-5e95-4080-840e-e4d495a8b522",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c646bd9b-e937-41ee-8d70-a52ead622e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e1e830-fb64-4f50-b8ac-d3834a4fcda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436bc26b-1c7f-4b51-9d45-2d9d530de029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "28dc157c-8643-4ef6-ac0e-d2217992de19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81981ad-c767-4236-bd6d-cee654aa60a2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcb5938-04e7-44b5-8b2c-7a1af9fcbdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb6d83d-25f3-4df1-b276-2bad31e469ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8221fb27-538c-4700-aec5-683d99427e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1583c7a0-1a5c-48a5-831f-e99e0cb92985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8627b3be-4334-41fd-bce0-74370aec9af2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de84daa-6f89-43b6-8731-5471503b7257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4105ed97-2978-4e53-a5b3-f2ed5457b024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2de0e0b-f2e2-4f79-8462-0635d84d4fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1064be73-1090-409e-a63f-cd4bc253eeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07a460a-3bc4-459d-afc1-f8256ff2c653",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9452537-d5fa-48c1-94c1-3b14bed81576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62175eb-8a49-41f1-8a59-2d92747c4911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3e744a-1049-4d90-9f3d-e0a30d8b2f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afaec4a1-850f-4565-a877-73cc6a8c9548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cc2fbe-7f82-4580-bac9-d5c69d1710d4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed110fb9-89bf-4835-98ed-e7c35ed25cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952bdb24-b38f-4586-ae6a-de56f326cd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998f7bd7-e1f1-4dcf-9632-b9e085619ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4258fae-4d68-45ef-ab38-800cb591ac97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35130757-3227-4945-a873-7b4d333bdde4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171d84e0-b221-4acb-b55a-1fe5e9044e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59893c9-b3dc-4c0a-8ddf-7c205613c9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0891e3b6-9068-4185-98df-35a992f92979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3388cbff-c9da-4f75-baba-9079734b9b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df2e836-0841-458e-86b6-2614d2f0f9ea",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f3fb4f-be35-4b33-9288-ecab7cba2dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7791376e-ce46-4702-bc7e-87d49f959b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a1fc9d-1e4d-4149-a635-e695efb277f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77a0c0b6-701d-4eb9-baa3-0464da45679e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440ce5a6-2f09-47eb-88f9-da3379bcc886",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89bbbb0-fd02-4195-99bb-3adfd31aff09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c66bc4-0db6-4ab0-93d3-d30a3de64a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc551c45-a99b-4fbe-9c1e-7c742526d413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f1c4a4-9784-4404-9af3-17ada42df2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1d6e29-bae0-4582-aa09-f2590b3bf07b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d052f504-1988-4987-8308-2ee3c33d9cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82805a67-6862-4d7d-88ab-fdbdb60bdc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b763014-5e3e-4e0a-8691-55f90dd33396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4de1e5-1944-4fd4-9f07-b892f44baf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879df5d1-1c9d-4d6f-ac69-06abb3e171e0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032d8ab3-25a4-4656-884b-76e38521971e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f245ce6-c612-4bcf-aa6f-5ff13ebd7921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699e5e04-bb94-46bc-ace6-77c4afb23d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa34ba1-7c74-42a5-852e-8b20e92e2eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05fb25d-d3cd-4d61-be3b-2a86238e99fc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23092647-4fb4-4841-b413-e996a501911d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c9a89c-e59a-4e2e-aa6c-909ace417d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7b65de-4e19-4f57-8e47-2bfe136ae786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2db6e68e-c9dc-41f0-97f6-e593953df897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a8bf37-d582-4337-8c8b-fbc017d4b638",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f666d2ea-f019-4606-82f2-74e8e92c7d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7d83e7-2da2-4553-9e53-0e5f2fd80e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a77b30-d626-4561-a756-9ca75b037c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9eaf05b-9f8d-4f71-96ac-4e631c05a1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836df5ab-c1a0-4423-8c07-eef855cf4726",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759d8e42-be23-47d4-8702-009a59f493e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0e6040-5ef9-40bb-a207-b34219b843c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c8f395-f05f-46eb-be03-f2c7c693c377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "38554d79-a397-4b48-9d29-505c59d01db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98af65e-d5e6-4dbd-a3f8-84a02d30ef94",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefd48a7-9166-4b3e-808b-ea9c6b38ffe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccade1a3-0312-435c-968f-c042bac3540d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedb8d1a-72c2-4a4a-8111-bfce52d139ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0724ca93-d828-48ea-bc97-29d3058e30ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5fda6a-a264-43f1-9283-b7c546ca597e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e12183-1ac4-44e6-b394-8a3ab77668f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05fc0f2-086c-4026-836e-9a88686042d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d2d6ed-64e1-4ec4-b32d-2f9bedf7ef75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7277d1d0-1f33-43b4-94c8-90bfd8554a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f78b58-3090-4c02-961a-66bb966a2639",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ad1070-1e26-40bd-ac1d-5ea68c6a5b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d35597b-03a9-4e6d-99e5-6a8d3238a04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd06a53-588c-4893-9eee-7e27333acebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e417936b-a2f8-4788-ab81-2b054aabd59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82c4931-9906-4512-a3a3-623a42aea247",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8dacba-dded-4832-a29f-6d829a0198c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb839345-8304-44e5-9e01-73c5ce8de66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6c6fdb-f8cf-4b00-b71a-2b6306c9af5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa6171c-fb50-471c-8526-1b721d828a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4e227f-cda3-41fb-a537-72262321130b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e19f93-5fb6-4c20-807e-6930cc8f4959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e2ebfb-da97-4a6b-afbf-e4515b0f3ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d45be85-382f-43ee-a75a-1db11ccc4a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa65723-c973-42e0-a2ae-ce8632fc491d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3fb1fee-5b66-4f94-91d8-70322f2ee875",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95927adf-5742-419e-a63e-aaa039d00d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e00f2d-9d1e-4195-a2ff-d4edf492a085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dec62d4-888e-4532-8f45-c60cff25e73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2054c53-4154-4adb-a31e-1ef7731fe710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06f69d1-3d5d-4af0-bdd9-6cab3e3b7cd8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba534b0e-8c02-4bbb-9bb4-57829eca874c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1c7b93-c2c6-4e56-a662-8173422d98ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb3dbdb-71b2-4916-81f1-38872429bb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20dc546c-0dc4-41fe-9129-ab9b2cf82f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dc41d1-a417-494d-a738-fa7c83d81e51",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb9756e-18ad-49ab-9546-2c9b3db947e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e154a82c-8587-4a21-b630-4033bfb405d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5875f8-430b-4a1f-bc82-10eee085112c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75844f38-2159-430e-abd0-a58124a92755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d504a0-82c5-4232-a464-7c0f315d9290",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5941c49a-aa00-4fb6-89cc-882fe465fb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ceab9f6-3d0c-4862-b4f9-8b8da7c6dd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51283fba-0dd1-4130-a485-347398a00733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "491c1296-4069-450c-8768-b5a81037b022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c419059b-795e-4e49-8178-41d1aae880d7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dda1aad-71f3-45c8-b097-8d5aed6c9acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db11757c-fbce-46f3-a0bf-8fc7bd3bc6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1181e3-77a1-42fc-a9ed-f64a32b279ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8103079b-6cdd-4a6f-9f0b-bc003db95edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7679ddbd-162a-493f-a0a5-a79bfea3a6c6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5aa05d-64f9-4b89-b73e-ea58a9ac674b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166cb451-4390-4b5c-9b64-c9455a7e4ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4397538e-88cc-42e5-86b6-7ddfd4ab6788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b87e6729-274e-46dc-97a3-bd4fece7afc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5108fbb2-fb29-40aa-b06b-060f24fbd476",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87932930-851a-4d1c-bf8d-d0d254109fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea066c8b-8490-4feb-97c7-b9702384ba2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77a83ce-f5df-4ab1-a386-45b3d8cb407c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0331a047-5bd2-4e0a-b93e-c81d15d8efb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71e198f-1aac-4303-ae76-ac246058237e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e7d3cb-5b57-40d6-b93b-4c37818243c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2b9f30-451e-425b-adf0-8e4fe52ce540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a00aa0-6c4d-4342-9701-1c381f6152d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "232364c7-ba3b-4a44-b70f-8f91df791beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d5f781-b7f2-46ad-afe7-a5b22695dc9e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166c7174-bdd7-428d-9f4b-30640308d6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72fa16aa-5ad6-4f38-8d0a-2636f37b261f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d86f3c-1453-43d3-92b8-06fa48b17ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c1699af8-d200-439e-95fb-a07f7231a0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee44994-b102-4f03-8643-0fe50cfe19ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2495796b-4944-41ca-8840-668fa3c02323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66e1c4a-cd8f-4a9c-bc35-add39cc6864d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905f87e1-3751-4548-98d1-888a4eeae1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "27e5cf55-5b72-42b8-b6a0-8857032b4892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b2bcfc-2dda-4e01-8c48-9ad4309b3def",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e8b52e-5ad9-4209-a782-8cf90131a374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52778e97-7aaf-4f32-a129-76c6bd321638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1ce106-f80e-4209-8cc5-57c1014f3f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "14a125c5-3c3b-4423-8f73-4c0cfd72458e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588cb367-b887-499e-bb4b-505650092b48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87890fc5-2bec-4292-80c2-2c4f772c4a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d958994-0902-429b-a439-f932e394cce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639022b0-9c68-444a-b73b-c2aafae0f4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de226006-193b-4027-aa48-54eec2b186ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc3cb81-0dd4-4a1b-854e-e4277851328c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59468489-bf8a-4901-a301-7552afb513aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67537e6-8e23-4f4d-9d6e-70dcb4bf4e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e93e2e-241f-4125-95ea-5561a3c59387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "829ef86b-9a07-4771-91db-fe8751c60a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5411abe6-a7eb-484d-ae02-4584c0255b22",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93535e00-de5d-460e-8475-45573d758e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53572376-a523-4e2c-b77f-de314497f258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2ef79b-a8cb-4878-897f-9bd5c32e9ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a688240-b7b0-4ae4-81d3-5e9b36a11a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf242a54-a01b-428a-ac93-d2e035da4338",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a6f100-f52c-49ae-8b15-72fef950feac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2325201e-283a-4281-b6b7-c8bb52c61e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c30f51-8d33-4971-9f5b-5f22270754c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "331a3789-89ba-49e7-84eb-33c1e1953ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c6eae1-c560-477f-bfa3-b11fe5fec557",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bef3ea4-bbfa-47fc-9a9a-445e844f7d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7db9a24-d293-42b4-9296-0d6b9757a30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d928717-3dda-42ab-b441-a2e88e8b593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "af440765-86a1-434d-bf15-33f9b2bd3a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008bf453-2d19-4d3b-873d-e021c21121a9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe94d18-8459-4894-a3a3-9a7ec12978f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc6aada-b4cd-4cfc-8dbf-360dcbc9fdfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6edc10-3dc1-4324-bd0c-afe5e56d36a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c07fa710-8961-46e3-8a23-c0e5f27b2aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550c6943-9e2d-4a14-a4dd-4c513fd858cd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf559373-38b0-40f7-bc04-9534236792b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0453dfb2-c61f-4135-9cd0-4804fa6cd546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33650d11-86ec-4f8f-9ad4-75b865489181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "466827dd-d5d2-4197-8cb1-3b4fad046105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b9b872-22c7-473a-b32e-66ee790610be",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf48258b-d160-4522-9d81-dfc833e7e6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d3e3ae-2a46-491a-ab6c-a20fd81923e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30029cd-6804-404b-933f-e4334e7c4930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71edaf7b-62d6-4b99-bd35-af6cf55361a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3789f9b1-0c04-4220-9787-d4ad34adb582",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21458eb6-99e5-47ed-83e6-0f29559971ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd9f778-f1d1-43db-80a8-263dcc07a736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b59599-c212-4bf6-80c1-79da16543496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a48cda-3f8c-4595-8a66-17d0b4b7f9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aacc077-d0e3-4821-96c6-02b3615e0059",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e3df86-f8db-4fd6-aa63-79e390a2a6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c4d4a7-2d70-47bd-aa7a-cb007df0e113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3181f928-1c18-46f8-8168-f464e094b17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d9b604-0dfe-4a4d-984d-d8111db259c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7adeab-f62d-4d69-a56f-bc703ad66d9f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f128bcec-9dc9-46d1-a4a1-5a63c322f298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac978fb4-a9fd-45fe-b45f-c381d6d51df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515582f4-a749-43c1-924c-2aaf28e8f3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4b41fa-609e-4ca1-9ee8-d0c09c9ae983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b717ed5d-8392-4932-b69b-123843364d2c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1cf7fc7-4056-4842-9cf4-7a9129db76c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae6b5c1-de4a-4f2f-af73-b18445493ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de874fc3-ace6-4530-8374-8a719c7fbb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5598503-09c9-4f2c-9219-e88618afe3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bc14c3-75e1-478d-90e4-c766a542fcf2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce454ded-d67f-4102-8c8c-b4325d2adbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295dc3bc-3230-4d22-b245-cf16cf2df36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d44c39-3991-4a11-ac07-000c485e8fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6982c99b-6831-4dcd-8ace-9f96f00e6df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db434a77-5e70-4334-bfe1-75ff48aff3de",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56152bf-638d-4cbd-b9cf-4696bddcb96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5f7882-7ce7-4815-a332-943ea2f96665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350a973b-5374-432c-842c-c2f8a0e8d536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f897648-6879-432d-97b7-dcbde355b820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c018453e-51ee-4472-a3af-aa492d264123",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7193fe3f-e89f-43e3-8210-77a976708bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6fe585-b428-476d-8f5c-bfac358313d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd89bd31-b421-44ae-947d-8c4e037243d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd46640-2b0c-4298-bdcd-948f6edfea60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5d7b94-fa23-4953-b8c6-556e12c827a7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f39e10-7404-4069-bc52-c30c7959a488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c473b3c-8c6c-4a2c-8e97-09dad489454f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d9b3e8-2fb0-43b8-9f04-b3c0838b1cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87ed2396-d3a9-4127-aeca-0702af7327df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffd0a5c-e501-45cc-b5ad-63e4086e30ad",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b427b8-4129-40c3-a25e-00db76956685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268b2e7e-42e8-4b92-b560-36b2d6613e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e59748-eb55-4721-b2b8-a2e2166cb220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22a25cdc-fc4e-436a-adf2-32b0cdef3d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92e09ac-33e3-44c8-be59-9ec87f00e681",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f9aa7-d72e-4ae6-84b3-841568ad26a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac456cca-6b21-4338-861c-39316f36193c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b31cbd0-b3af-490d-8f1d-56bd8e7f5d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebaec040-233c-460b-8aad-5ba745500688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a5dceb-79da-4fae-afc3-c6b8cfa38e08",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbddcd0d-266f-4e9a-b594-72ba42349f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa05c48-ce37-4602-8dbc-8c9ec4e1390f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11da2fc-06bf-4727-bdf2-16ce2a60c653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc70786-b06f-449b-9481-9af4e5c368a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e02722-444b-4e42-9596-627811a7468f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e7b91c-8dfa-4bac-bc58-a0c9d34e1ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ce68ba-fba8-44cb-8de6-7c5faac14c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3f5407-3efc-429a-8a07-85ed51e82c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07d643ff-584b-4aed-a10d-a01e6d1795f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d32aae-de7e-4ba7-9ccc-ff305df651c7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2070333f-3434-4f61-ad0c-e2a8fe90b5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fab5e1-b6cf-47fe-ad68-159ce354842c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a962f8-79da-4726-80d7-0f1d1842efd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b92489-c4b9-4096-8522-a0303a08a903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ee5a1b-510a-4a12-8120-74a64e0b983c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f680b709-9a07-4f1c-a9ec-9a4837da6a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b457ed2b-d8fc-42dd-8d7d-b21df1fa02b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c69e35d-df11-4a6c-b717-1a484adab1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56ebb6a3-91b1-4535-9ad1-1a53339594f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfba29d-47a7-4cfe-98b0-752d2b0f07b0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c04a8da-91ea-4b39-92de-a484bf031a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c045318-ded9-4b4f-ac2d-9da909172d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd40300-cee3-458a-8578-25b946dfdc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "06067b10-8c9f-4312-8122-8f46942a1411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861e2a62-ae3b-400e-babc-79836cdbf1c5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba43ae3-5d3b-4a42-869c-15d2bedf0911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8439fa03-322e-4693-a357-c72b958fce84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5043a7a5-7801-43e1-8f36-ace76f741418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b92ba1-57eb-4d8c-9744-6c373912e7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425ef987-910a-4840-af11-f756fa9bf94c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4920f19a-6417-4ed3-b7ed-2cf4ae549428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8a0d44-76cf-402b-b332-f4c63bf6f65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cada4a0f-ec24-4cea-9d68-ae92ba2405f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61cc5727-e233-46c9-b125-017690223821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1591c288-389a-4596-99f5-212f31a22cbe",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b516424-ddbf-4d71-a308-90258b2164fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22b5970-33c2-4d57-9c43-d0f9834b1270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083089b9-65ae-4b5a-a78d-dcf1d2922556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "444c9475-98aa-45e0-8d81-943972e6fc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a58fa0-4a17-4c34-84e5-1ebf799a1b30",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a373c3d6-7ced-4545-809c-5d55c186261f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea70f54-8e13-4b0e-9ec1-7a3911bd5793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f53e82-e2ce-4c16-9548-6b9787798563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c67a6b18-59bf-4c77-8843-64943bfa6878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423d977c-6dea-47eb-bb6e-022664ec0f94",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14388517-d7f5-46bf-9b7f-808a83d11581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98aa23ee-b66e-42a6-b565-41ef76d4e666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b413c54c-afe9-4559-80a7-a94bdd5a8a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a29224f4-2810-48a2-8301-e4a49e0928db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed0207e-45d0-441b-aeac-174733af652b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feca407-7f8c-4361-b1bd-673c23150141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e201c348-a550-462e-9a72-3ff1c117a5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff394ad-0fdb-48d8-85e9-25fc698a9606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1e4acd-fe46-4b78-89bc-ab56b6a531a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c71cec-849b-42a1-aba2-e47e1c773bd2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1e2449-13d8-4bfc-a798-1a0d73cd6565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fac346-d98c-4e3e-89a3-942e5201aebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8272b0-0451-44b0-a729-c5caae6c9222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "49a5d2c6-4863-4771-8332-247c9131b635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9861e2d-db94-45d9-a4dd-4bc0a3b49b69",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2e3993-9d19-4a1c-a03d-d176ffaf6915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7737838a-122e-429e-a41f-93617847e119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0246035-2622-4272-bea4-21c2fe811633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27e3ea14-30c4-4279-9d10-9fdec044f2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efb477b-8d7b-4081-a588-a2d362e87620",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3047cf9-9626-45ac-b773-8f34176f6960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f2cb2d-8c5f-4ebb-9952-670f69fda0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be46a90-d2b2-4461-91b8-58c8296a0c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bddfdd-1aed-4e73-a7c1-f4091a28d7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd7821b-0398-461b-bf47-8ff6590ea1b8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91bef7c-88d6-422c-8537-bd3afd15279d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2587f6f-4e27-4e85-9f99-88607013615d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2927989-a16f-430d-8c77-1cd41851c097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "27b5e87f-269d-40b1-8fe6-c753ef6c224b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0761707-4906-43cc-9339-c8df3ba2d292",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eac4c4-4af7-48ef-98ce-08596807793d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0a6ebd9d-7560-4cb5-8940-0153566bc531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34826f1-d6b1-4820-ad92-fc722435bd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1b8ec1-67d7-4f9c-847d-95724336d413"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed95eba9-1e74-4b64-a182-24e46891e2a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62f67a8e-1056-4a3b-ad22-dabf71539606",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485bb9ac-6099-41d3-abea-711ef8c034ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "630bd7cd-b1b3-4b5f-a281-a5461be1fbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5914cd0-7dab-4fc0-abfe-8d812b89092c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4047fda3-9dc9-45a3-be46-b3ad7cb7c528"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cf61ea4-e4b8-4ce0-b9b6-0c17821dc0fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99fe9ade-4d67-4821-816d-456768418b13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4346ea75-9e4b-4b8d-a149-4a7dd7f71aa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5378a2f-b393-47bc-b180-44b920a6253d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e630b1c-66f2-421c-803d-0f2a6454db36",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4533a185-de05-408e-8e47-d27436359d66"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "86b7a6cd-67ae-4bef-8535-c33c954e89b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "43d11bdb-2792-4057-ae96-e8850609ca49"
                }
              }
            ]
          },
          {
            "id": "e2698d09-1cf4-456f-9504-3c46bc40100e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51f0b73f-80be-42c9-9611-45456793c714",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3b17eae3-1733-473e-983b-3aaa8e215c9d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a1d00a-7d3a-49e3-a0e1-946e6343d40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7acdf13b-8f3a-44bd-aa4c-9c3bd0a58743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb188dd8-e1bc-45c1-ade2-9a4816724d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115093ef-feb3-46af-8d82-c29f8059aa52"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a4e0ffe-7010-4e51-93e8-ba9904da91db",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea725568-2582-4e6a-9c7b-eebdfad1468a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72bafa8d-ea27-4e3a-bb88-47a39fe028c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a5b705b-8ca7-4274-862e-b253c4ac4093",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "396e2b74-64da-474d-9c9c-243c25b16990"
                    }
                  }
                ]
              },
              {
                "id": "74ac1cfc-af2a-46da-ab06-4c99273a623a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a841353-633d-4da1-9ae1-f71e0ac4d5e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c943bbe-96d2-4e13-b1f2-5197dcaacfbd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a39b39d9-66f2-432a-a2c8-d3c3372dec78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f531487f-ae1a-49b7-9663-febd9c51adca"
                    }
                  }
                ]
              },
              {
                "id": "8b6a72bc-a4fb-4c71-a8d9-88bf1af5e88c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f18fa7bf-dad4-465b-8755-7e8cc08fc1d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "711f4ad4-7cc6-4977-b3df-5a86fcd92609"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f12d8f0d-1f6a-48d8-a776-3c0ba9a5f78e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "faf5c592-73f8-4b81-a6c9-059997e2372f"
                    }
                  }
                ]
              },
              {
                "id": "316ae139-90be-4c80-8f51-f334349e4351",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6768e6bd-a379-4f31-8c69-ea41ab272857",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "282769d8-c54c-4ed5-92de-e878c3fbbccc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5bba4d5-fe49-4e46-bdf0-addc36cfd376",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5bf53293-c0f6-4484-8567-53598f758595"
                    }
                  }
                ]
              },
              {
                "id": "8d17ad92-7d0b-4708-88ea-60a2c26ea9b4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddd0c5e1-a29b-4e3e-a0ca-01f151a8ba40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18505ff9-88d0-42c7-8e86-55606ce7396f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bf3381c-f48a-451b-a8d9-8f3e647cd2f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d6e9305d-3ad2-4ff3-821f-8d71655d76ad"
                    }
                  }
                ]
              },
              {
                "id": "0c4598c8-658e-4c1e-883b-7c27b718891d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "539cf292-3eef-451d-8ce1-5fca3bec501c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a26af821-a2e0-4f11-ae79-7a8c1926cb1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fa655e2-1b05-45d0-895a-6f466664b47e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e896efe-144a-4906-8b65-cb30a5a21be0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70611ade-e80d-46b7-9615-3f7234635c74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "261a1916-c58a-4955-a27f-778e2877ebb7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ce0d7430-da3a-4f94-9d56-c1e319f2039f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6bf8aba-46fa-4935-b5c1-6f20a3489b32"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "120b0dcd-af5d-4992-9084-a563bcdfccbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "70f4235b-d3fb-4f3c-bac4-4002cd3aa52f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ce5c1a5-535c-476d-a3c3-1e843ca077b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c201f4a8-4fec-45e3-9e21-ed08096f9e01"
            }
          }
        ]
      },
      {
        "id": "193f7c38-2a27-44c5-a4ba-22f38ce27426",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dbe70084-3ebd-49e3-84af-7b039080970e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6f28b75-0cd5-4779-9404-7e5e5b8a5d56",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "68223449-e536-4a32-b137-2ad52c150b7c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939765cd-3736-411c-b415-b613ab9fa814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec94c224-e270-4a3f-a8f3-f9da90047527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423f029f-b521-44f3-8bae-00e0d67fb2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2694ac-8c33-4b57-86c2-7f44ce533d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e0d19a-e4f9-4d05-8dd2-d42a6690c638",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48b0834-1380-489b-82e2-375b034962c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816cca9f-4bd0-4309-8061-6e98e3ff11a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de532067-b336-44ba-9e66-d7387f3679ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06f67082-d689-45e6-b812-734fa98e7470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b17773-844f-42b7-ba7c-3b1496b66383",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f145523b-9a62-4cbc-a4b5-2796a8528b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef032854-4263-45d5-a2ae-195d15781fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73182912-92fc-4201-9c57-a66335ab8355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1176252d-96b2-47a9-a135-a4a0e4504230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29baadf-ce09-4746-aaf9-46bafca4a0d1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931bc277-10f5-456e-9061-bf93b3d4a1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59e3fa3-2892-41f0-850c-d9de85e9aff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d6bb7b-be6d-491f-84f9-7afa297ceb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f35af8eb-4ee3-4e31-b01d-0a657894712c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17503a5d-998b-4061-8224-6689def9d84e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c154556-ced7-4253-aedf-b5095e0c268a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7b00b0-96f3-4479-8ab1-ad7cfe448c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbae77bb-4120-4f88-b56a-7f583035aba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7296090a-1468-4289-bd59-eae0bbd9db2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ba7a81-b5eb-4755-b77b-d350236fdd7e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20969715-8663-4580-b031-4ea6eb924737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3451356-e399-4edf-a4d4-6c989b8c49f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3031775-2b0d-4a05-b1a5-1a6c0f95dff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b660a991-742d-46b5-b90b-6341f32dbdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9c3a86-488b-4752-9c78-9a4897d1df57",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fa2459-c4f3-474d-823e-f79e1a7f06a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9ac90a-fab6-40a1-a855-4ec61dc37f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7037f720-1bb7-4d38-a2b8-a0de9e7a6570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "49bfb1fe-fa63-4ab1-8eaf-c0a4433ab855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98223387-1bfb-43eb-a25f-a18360f06c19",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b298fe76-8622-4a93-988a-9cfaedea16f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d24190-a131-4be4-bd28-f851eda64b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b80039-5493-460a-89d6-51b9f6c233b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3005223-f1bc-46da-852c-b4f04de0286f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421c3132-86d5-4fb6-8ad2-8a67297ea0f9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba33548-b9c0-4aa1-a03b-745d79bff403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b3ac25-81bd-4c9f-be9f-7d4514f5693a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27aeb8d-3ed5-4392-9542-b92d889b750f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24d8c4e9-7102-4d51-ae08-a7dd4f932e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd8fb48-be61-4ef5-9f04-6934ebb23a2d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f831bc7f-6aec-42de-b44c-72a492b63782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6d803a-4c49-43cd-814b-d4c53ecd2b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed33d48d-ce24-42e0-a144-b3971b454087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f76a1a3b-b6d8-451b-9c4f-c716846db121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc64b31c-3130-43ed-813e-c3c5edfe670a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad83e4e-a6d2-475c-afda-73b48cab31f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef9496d-add4-4777-836c-096044e3b149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858aac5e-71c6-430b-bd09-9c56faefe9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6f76f6da-4d4d-4081-8a5e-6a4a4c6cc29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9fc1ec-f625-4691-a780-06872fea69d6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9ee621-ef3e-40b9-b420-76c9ac0a45e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a7c2a8-ef91-42f6-8c98-6bebed4324c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d0cc2f-336b-4e62-a129-abe6b4d91587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1782dd30-f7ee-4dfa-9fd9-926e5ddd0ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e899e8-43fb-44b1-bb9d-10288183e6af",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73961ed6-de0e-4ca9-b100-db59b9956877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1789f2ec-f0b4-4f09-9686-5e55b09e3525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505f99af-5a9e-4219-a346-e1a3bbe776f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "502e1608-b983-44fa-8513-c4043882d3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99fb4d2-928f-44cb-9ce0-3acdd7294be4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6044b3-bec0-4ab6-a229-2e23f25d71ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc87952b-d800-4b2f-8acb-005e2a641ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6214b0b-b187-4fa4-89a0-31355941d2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "67753308-2955-4e6f-8b27-7b274eb34b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5f56b9-95fc-411d-8ac1-c8938be3a4d4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3030758-e9d0-4809-9a19-fdc3e5336454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae87c22-cdb7-4de0-97f2-61a422a58084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4162e6-6601-48c0-b93a-4e8436e21223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c11224f5-94a4-4ce3-b136-e65b1a0941fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6225cfcf-032f-4c38-9088-9127073cb008",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e3882b-c895-4070-8388-ebdf36997e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c159002-fd95-4cbd-9263-c52c11e2d114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a846c7-6480-4418-8ec6-5e581d11b71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d66a85dd-6982-483a-ab29-e3b037476fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b1fa5f-9770-431c-8e68-1ef77b93dc27",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62c90b6-bb58-4cbb-bca6-a1700ab75bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4f655b-c88a-4b66-bd6c-a1974bcf618a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94abc32-e111-444f-8b82-72aa7a355967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "20325992-39be-4459-8f7b-a03c8591b956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a06e056-04a8-440d-8d07-4ffe08c13953",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af976c30-efdb-45e3-a207-4c28f41b238c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4eb7e90-ca29-473e-822c-83d5d8a95061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8a4b15-f570-4047-ba09-4bcfa85e346e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e78c1dbe-6d06-444a-bb3a-aabf214cbee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7de957-a402-42ca-a7a4-025d90abf11d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfe999f-ea70-4bf3-b67e-514cf7466f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb85d9c-95f3-4e17-81ef-e3a8b18f2b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c05520c-b49d-47c2-8d04-73398d9847ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e94cb07-9af1-4030-a1a3-cb23100c48e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0cb213-a96f-4e73-a8ae-a28119f734ec",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1fe015-51a2-4c2c-8eb2-1053c60fb827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8379223e-e8d7-47e4-b62f-f59d40d0123e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18b340f-c828-4b8c-bffb-92f15519f966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "209a0b6b-ed84-46ec-acf2-564752588de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3954564f-fdea-4838-bc84-f9dc69440474",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ba7347-b7d0-4a26-a2f7-85dc2888172e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2476fef-0c99-43da-9e1a-541ea45cecf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8789cdbc-ef4f-4752-b0b7-167e6f56ab4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c69a58f-77ed-4dd3-84d6-4f76aa2b1244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98804361-62a3-4652-b81d-24619bc7410c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc76837-d8a5-4dd7-8b9a-54301bc4d442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb44d64-edcc-4f23-88a0-68e63d0e66b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f4dc5d-7a14-4b37-afc4-b6fb5a7bf765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf676ee4-b238-4e33-8afb-c147a80f283b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5ea426-ac68-46c5-9ce1-64cfd3306f29",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b2c698-387c-418e-9cd7-af589c139413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3abc71a-f91d-485c-be3d-abb8f7ad84d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc39309c-60c0-49ce-a282-cbe030954cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad18e8b-a656-40c0-9175-5ffa19777cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786ae59d-1aee-4039-bad3-2ee726100830",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6552db4-e69b-4b4d-aa6e-ebbbf39a8b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4af8705-33ee-47c5-9543-4e5ce12fb668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9b1702-96c9-410d-a291-9af03b7c666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea7c1d8-0dbe-4dcc-b509-49a92a9b1640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410e510e-d318-40f7-b826-cb371a25a86c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1294b837-3742-4e49-9d51-de4282d3c9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ac31e4-e833-427a-ad65-5b2cb3ae5721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164437cd-4963-443d-b514-838b9b42b40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f64ee2e-eaa5-4a88-bbfc-4b70ac1278d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb02fe90-e500-4c5a-ad8d-edea70493645",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabcd915-dfb1-48fc-a1a1-0b371fcd829d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24379fb7-569a-4dba-873e-c12cf4a5dd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a830f79-5019-4f37-9c0f-14dd34b97bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b789770-6cfe-4a28-821c-4754c4866ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54673044-b796-48b4-8649-da40a9500ed7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d440230-38e9-4fd9-8b86-f72ad018fca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4741b1a5-4705-43db-9a74-39eb83ef3ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d66b17e-b556-47d2-ac06-f70e1f3435c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1508b9-3c07-4812-aec6-1135c8951189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd6640b-54a7-4936-a909-f62ffea7e7b7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea64949-e23d-4b12-b4d1-ec2b39ecc242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546775ba-8578-41a0-98a9-b8b12302c5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55ca08f-d348-44c8-8225-8a1946b6f161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5683b5d-1ed0-44b5-ba1b-71c581f741b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1436ba-c18f-4c23-a648-1b869c2282e8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d84f1d6-e081-4959-930f-bfbf14b01bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac7a7b9-1245-4526-a20a-389ac19020d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b66068a-1b89-49b6-83b1-b2a5b96e7c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f61c85-bf91-459d-85b1-565a2f3194b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4ff93e-d904-4091-9dd5-cad6c2020531",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4de4bb9-c4fc-4d75-9c09-4f6b5a24dc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e396fe37-1190-4d88-a344-66a6d04e6167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6d4e36-4a1a-4e83-b645-e71f0e146c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0baa63-fcf4-49be-a3ff-afce2446d856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e59f1f-d823-47ee-be13-37d4698ae11a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c0f80f-298d-4cd6-b401-600a32aac9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38b368c-9bfe-41e1-a43f-ba8cb8db5d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5ad347-8f8c-4cfa-bebc-f707a4ae0d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5b161b-3f1b-4bd9-ab64-1709fad51fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cee64b-1662-40da-96d3-4cfeb49dcf07",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf0935e-48bd-48b2-8dd1-d7c8fe916f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ad6fb1-316a-4660-85f3-f8c59c5a92cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7eee914-8c27-464c-989f-3a60ce899222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3273f192-5b28-4312-add1-81fda81e6dac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7823886f-f4ac-4b0d-806e-9d1740fcd7e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e19a02bf-f6c6-4b99-99e5-a73573be37ee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9fcb97-d12e-4609-a15d-634d7daa3158",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec9c72c-0fb6-4ed7-b619-2a52e8624074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e904ce-1e5a-42ad-8a11-6f8e8c24b37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d2bb7ca-410a-4e3e-b785-752b365dddc0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41d24ef5-e82e-4225-b861-3761c476235b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97b74eb1-7315-40be-82e4-29ddb84288ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edb5caf8-42ac-4779-b16f-c9cb5d27b15f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f6b410b-1038-48fa-9465-75c7e0ed8374"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0fecd03-bde0-4c92-85c8-c3f942910649",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "77443818-4b37-4a2a-98e6-cf770ad0675e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51a74e3f-ede1-4ff4-a7c8-4661ed687b2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "625f1ae1-2dc7-45ec-90d6-978adb1f3f46"
            }
          }
        ]
      },
      {
        "id": "938869d2-046c-49af-a435-6f2c60a3e6e5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a4011ba0-880d-4b11-9f25-321810d497c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fada370d-309d-4342-859e-0768596ffa58",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9a7e4449-1ecc-4fa3-8b87-5c4bb76d7ee5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa4288d-fc23-4aa2-a32d-0c53a93ef52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf13abe-8524-44b3-8413-35ba49cd2d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e348fc2e-cb5c-4e11-a2e1-dba3d0bcef99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2c0103-1832-41c6-aefc-96c45f476d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1513712-77b2-432d-b755-ad80ab5f7c22",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ede3a53-0fb4-43b1-b65b-8b0c19d3ef79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b34f76-af4b-451d-b3ac-67849eee62cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716c159e-dffd-4e50-ae8e-5eafe98df21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7e8d3d-050e-4bef-9b76-a266aae3a9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e599154-d3ef-4e92-a044-b8a4898943bd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba86375-2e6d-43f0-b9b9-824e60865e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cf495b-64cd-4b77-87bd-453ae965e298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8709028-ae5a-4b44-b675-9ff85c4753aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "288e4fda-b2c1-4aa6-ade5-ed52535dc178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127c6c52-ebe6-4bfb-9d1c-6a03640ab294",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea30621f-cca8-4bce-88dc-a3275938f081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4fc9fa-543f-4ccb-a20b-36c956777836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4eef6f-4ff2-4882-9ced-2116c96f6e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec4a251-2e49-4a26-99f1-dc57a93ccd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b152ee6-a783-48d1-ba3f-b0da38693706",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f713abb-a743-463f-ae05-f927081333f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac17aa5-b9a8-4e3f-9c5d-efc9e204767e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f00cc7-d351-4f78-8dcb-b657db8a4cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0e0766-a300-45db-b5b3-a0b05d7c072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a24bf3b-85ce-4d8c-a103-276b91407e80",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab97c0b-886f-4f47-a636-f119fcf5a10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e8604b-795e-4b5c-98f2-13bd04ceb129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54553ad5-543e-4fb2-9a94-08329b7bd5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff1c8d0-3e09-4053-a015-5f47dd7f18b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36803425-e52e-4e21-9b56-4e1cda52bfee",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb3fc32-2e0a-4766-9251-b961df9ad6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac2b803-b983-484c-a15b-2ac4f6688e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b2d379-8cce-4b57-9e53-700dd8142fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3b9a58-0543-49a3-973d-edf784b42918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcdb0c6-a1e5-4374-8173-3225594c21e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57658280-8e07-4c40-8a20-85214f611d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166f20a3-bce4-41d1-b685-d4c31c272012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c91bc1-e6d2-4c23-9676-d00d3cb8213f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fcba677-19cd-429c-b045-2c999414ab77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81ec903-fae6-46f6-9032-c612b3c487b4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4c5fbb-0478-462d-89a7-458fa443f144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da5c708-0b58-4710-a127-4323dae471e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d0bce7-68f6-4a58-b388-f4659ca2ca73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2151ba-1942-4906-b4f8-ce94cd765696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf702f8-f6f8-42e1-9230-bf1f8b5f2e19",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473c1c46-b924-4a43-a67b-a27c5d611664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf747ed3-3f07-42d2-86ab-aa143abef4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9b47b8-50e2-4ca8-9af0-53784f62d730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2533c9e-e29f-4873-942b-c91a19a2c7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81ca76c-437b-4edd-90d5-0204dd674e10",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94e771a-4bca-4a1f-986e-8c0180bd1737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945ddf96-ec8c-4c38-ae09-83b5e1543b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e5db49-bd0c-46b3-94b8-bcdaa031a525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "91bf9615-dcb8-4a0d-8465-a746369fc335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b40e64-eb36-42a1-bca9-d8d313dbcf81",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a68668-6a57-4871-acbd-f26cd0c0f05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce463fc-6c3c-4b5b-b457-ab0e58a22484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3beddfc7-00af-4fd6-a6c7-ab2bac6669be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfacbd5-420f-4fbb-8a3c-cf9c8ca07815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cc0e4e-5ba2-4f06-81fc-411aca5049b0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c595b2d-6cc5-4920-82a5-1fbf3d619066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929d8e7b-a99a-469b-9558-704772623f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa103e07-fa72-433d-9969-b6c9e94da746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a6d0d3-387d-48b0-a341-95462b973d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0722559-bcf6-496a-897d-ab50d66a249f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fae7ad2-85bc-48ea-8672-def2449e9527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45cc670-3532-4f31-b691-a2ad1da452d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01240cc-9443-4b30-848f-df12cc28cab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "54671aca-0dc8-48e7-be30-d8ab34de3bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c504b4ef-7164-4895-8efd-8db703df5287",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea503c3-d60e-4d9e-855a-58e24bd7e7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c179cb6-e895-4619-bb7d-c1b547703391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51af4648-6d3c-4e45-89d5-36f1a22cd3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce58780f-584b-4a98-afd5-15bf3224aca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3597056-013e-4824-98ca-96b61e1fe372",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9f52d4-d848-4bc0-88c6-fb5a5e5abd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76bee45-4314-49eb-833a-ec7a093e5463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499ff44b-5757-47d9-a646-78054402119c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b112e99b-fd38-4927-8a41-a43e8543a7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d818e27-a9bd-4f81-a82b-087a29fc0c61",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534cb403-0228-4ea6-bfa9-e2e4ab72e306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da85503a-6087-4bc0-886b-3814126b8bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846cabcd-ee4a-4d68-a49b-d068cfe5c275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a08d6e-dbb7-4748-b985-5c8c5fc7fc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe46889-2f60-4a2f-9ecc-9930a2287445",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ae2174-5acb-4f12-8b5e-50f71c4c9fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06887c44-0bf8-4dc9-945a-372778c05322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35eaa6e-88d8-4189-bac0-f8f0563da7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f26f5189-8f60-4252-abb4-4ecc9f4414c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e37ce7b-717d-40d3-899d-32fb6c34bce2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f818c463-378a-4633-8e4e-1442ec5edfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0b495d-0e97-4e51-ba5d-dfa245c5d669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6e3e30-62b6-483c-9f97-9f56af8b227d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b4f2de-dd1c-4f7d-8c4e-031a677ebb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eba64ee-bd66-46ac-9f5e-8c9630ed6528",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae93b96c-396a-46af-8a9b-1426aa858eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3713b856-81a2-4d46-9b2a-6e23bd443ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff785b2-b3ae-4f30-98be-a634482949f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26552996-a7fe-46fa-b845-ac74128c02cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d47d9b-c52b-4f2f-9d37-5ca42c2edcc5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdee63e-6d29-464a-a197-54bd122c322c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ce5b42-d156-4ff8-adf9-6d02c8570362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdeb9a94-6596-4346-9ebe-d00fe9811204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60fcd4b1-f884-4d8e-adda-e13db9857dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a0e3cb-0c76-48ca-bd8f-8fc4dab7e57c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46775e3-5afe-495b-9ee9-01e4c06a557a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb5486c-f672-493f-89a8-cedb943ffcae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5e64b2-3852-49e4-85f0-155e9e7fd28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a24c4ed-6515-44fc-a71e-a115984b6093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fafa5ab-10da-4191-aa71-63085c242ec7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b031514-92c5-4d84-be93-4828c3fb019a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709a71b5-7e84-44ac-b69a-860d3d01b54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa82f0a6-0b3f-4194-bf55-832ff8c3679b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "618ae41a-fa36-4a25-8adc-3edd8799ba4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c666496-14c0-46d0-8a55-b6313de13200",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4042be37-f371-499f-a2cb-d37711baff4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a3ee32-f71c-404a-b40b-044dd43811aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fd6121-3f04-41f8-bc1e-2504e7765fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d12986b-f25c-40af-bae6-82d7d96c6920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42efe753-f6e2-4473-a271-47ed66f0dbc1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4492da-6d7f-40f0-a0f5-36d3cd7d4185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e3c6c6-4d20-476b-9b38-576119670b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69f8db5-d0b2-4873-9de1-856846c69be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17bc8ea5-48d8-425c-8cc9-7052082e880a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cea8d0-68a0-4001-91f5-3d59900ef2f1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fffb1fa-65e1-46c8-b291-4c28d43bdd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36dfa6e-bf9c-4d0f-8f21-966d09059681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ef5467-21d5-4a59-adc3-aab66d6180c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99e98225-d4ed-4af6-86a8-0494d169cf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef07f5b6-6f70-4e0e-9686-dbe49d427742",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa618f8-a5c4-4a06-bcbe-eaa9fbe7b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95a9822-4860-413b-9259-ed050e93744d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572ccccd-5dc9-49dc-8389-433ad6155a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b523e05-99ba-4b9e-ac64-16a1d6e8d56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9875d2-5dae-476b-a620-8abb32883bc6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1ce2bb-673e-443e-8a3e-ae4e5e573c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61573bc8-25e8-4fad-9c92-f803402737f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735c71e2-ff6e-4a66-bd7e-85031e3a211a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93d8043-e701-4df7-a45d-984c2f444473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec09a14-447a-4247-89e5-f5785acf862f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519cca0b-5fd7-4460-8c4e-1c48447ff515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71e161d-218e-483f-b84d-5332dbc7b672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc89ed34-cb0c-47d7-a223-621a9555c0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c86f46-eb83-4dde-a7bc-e763018869b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb537f6-e281-4169-bdf5-4b942da9ef25",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b683fe-c513-4647-adb3-5e5b96c2f1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2246f2-02b1-4cbf-ae9f-15333eac0e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72317fe6-6d29-4e19-94e8-7f11ae7427f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba96d548-f9d6-45f1-8c6e-2a6cf9ea43f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3390383a-f35d-4554-bcbc-9400fc808cd9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0753a4ec-fe6b-481b-8e9c-ddfff61118de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c13be0-db75-4a59-91ce-641bff5b3519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927a7686-7376-4b42-b491-94b2b2759fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4876174c-f8d2-4615-bb42-c1107e00d6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951bbd94-e980-4204-a4fd-5e91587ec3bd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1715aa-aa8f-41cd-992f-a2588f6ecff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7e7510-edde-4cdb-8118-028d495af2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3d4492-7277-4aac-87ef-60c2b93a791f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c2ca8c-e5cf-4151-b75a-317e5d4ce1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b145d80d-fa7d-4212-a089-e9991579ee9c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bfa9a4-7758-4a37-ad2f-d41101ff3f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02611e19-ab55-444e-87c5-021bf5d3aab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114b47cd-3cc3-41fc-b96d-100c781f4ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8c3c86-6913-4ad1-93a6-1e6f89348ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b9b8eb-4dea-4dc7-93ea-01bf88e412bd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99cc2c3-9407-48d2-9b4f-9d86343fad4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb410dc-82e0-4bc7-b197-6ac4ff59a0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6fb964-a038-4fb5-b874-8aba7d1e52ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed434db-3103-49c9-b4ab-0a7c3587e4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828e7f82-43ea-442a-9ee8-aac7e9967463",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9786a426-d7b5-4df8-96af-1f08b4bcfc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3800f16-e36e-4b4d-9b43-21aef02474e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2613955c-556e-419f-80ee-174ef38cde09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e65ebdca-3b1e-497d-8ac3-8bf570f4aab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f68c2fd-8657-4fe0-8b59-5c4905b559ba",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb6a6c1-a01b-42f2-8745-7c955ac201ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6767060e-292d-4bbd-8613-701c37fe91d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af59ca4b-74bf-4806-8b33-3cba3def2cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f440f18-5dbf-4d0e-a78a-e68ecf3ad5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9764d12d-e8a2-4763-8872-02e0122e85f5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d95ab19-8a17-4a2c-bb51-1ad03ba38a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a303b3c9-f074-4896-bbf9-7cb4c09e00f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a169ee05-91c1-4149-a5a5-e3292ee10a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f25c66ed-3bd2-40c9-b6d3-abe41e88c93d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "803fca13-81ce-4ccd-825b-3e8558d2c53c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d62a7b3e-9ca2-465d-801c-de8567735255",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8eb147-a04c-4085-aa85-b0fe4f172f59",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0a37fc-5a97-4f58-b2b4-23b4219b297b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fe36ff-b63a-436f-9229-9138ccda9466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adaa8882-782d-40d9-8b51-244333a6d0d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "991330cf-e1c4-4b2b-a717-336072ff62fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25dc428a-1734-40da-9980-128b01b13904"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7577f683-ca09-4e65-bba9-ef9ef1a3b286",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3b1e296-11e2-4a6f-8961-b32b3009fe78"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0069276e-7ab8-4717-834c-356bfbd1e0b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5bff47d-0cb2-44f2-a21c-cad2f41ae19d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37c58fe9-59c2-4a7b-9747-9db3720c274a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b244987b-7237-4b9f-b551-3761183f0329"
            }
          }
        ]
      },
      {
        "id": "d223aa95-26c6-4afd-8908-31ad194a014e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8d589a36-e332-4186-8f30-91b2235836ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "517dee4c-8575-47a8-8e6d-b6e453d5ef38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5dc4755b-2547-4156-a0c3-b5fe0162d656",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3e3642-96be-45e4-9f17-6ac0d9185c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4b40a1-b5fd-495a-b0f9-06533b706055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4304a2b-4e74-4197-baa8-e52491291576",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7ca1bb-b21e-4355-a6fb-690276438081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e94b34-2f83-4a77-a1c3-b42f4d75cf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3186ed8a-01da-42e9-9f2a-40b2d4fac332",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9306c02-aa40-4c3a-8d84-57e2d53a8ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616ffd40-9dc0-43e6-8fed-ca20f407014f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3432c4a0-e117-4551-a948-d4714a1cee9c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8634dc0-d13a-4a06-adf1-6e0f5679e662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341cd2a7-78c1-4c6b-a703-3463fabec581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4bcee0-4293-4599-858e-eb1fc5380534",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f7b4f1-b3f4-4848-a3e2-c636789ceab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3282b97-6080-49f1-8738-27ab23b98d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8b4297-a5cb-4507-a0b0-da775884aa9f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aa3627-1e35-4013-861a-fa6bceae85bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857e36c1-11b6-41ae-839c-a261d9f7082f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5620815b-0981-4ded-a693-64297a101b28",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4ba867-d4b4-47d8-bfae-80fe8f8312cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abac3b9-a766-46c5-b60f-43d82055758a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b5b35f-4911-4e1d-a1eb-ea5a9571dcbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90cd0be-cb0b-4890-a845-d6455fc9517d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5d16f8-ee7e-48fb-8c9c-60be22ca7d9e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d4f938-8b70-4426-ab78-e8d05dc34dde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cdc2921-28a5-4fa4-8b77-777ac7f065df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a750a804-7ec9-481e-84f9-6a2a456e30d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5b58b8-fc39-417e-a0bc-386ee62bfd91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff0bc97-f7be-45a4-b96c-d0d2d6b5ffac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915e5209-cfb0-4398-bfca-4f9f3cf886db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7ecfb8-6a07-43bb-b50b-fa1b73918cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e872484-5b6a-41cc-ab5e-7d313a7bddc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1badab-c18b-4d94-84d9-bf542c9eceb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56857c5-3ae9-4bf4-97c6-94107ac48934",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b446b7-3293-4c81-a243-b115d11179bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec130f07-0fa3-4f8d-a23b-b67d3ef17ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cb3357-1172-4eaa-8624-e50a973a7fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2720792-3626-4ece-a39e-f6de48104360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec7b1cc-13b7-4ee7-8841-d1e26243d161",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02123562-3bf1-4a8d-95f0-74c455baac6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50269b38-4b03-4404-bad1-e8d28fc4d0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70288db5-9995-43f3-9d6f-e65bfc790b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e2a0a1-66a8-4a6e-8962-3a0424fac926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ff04b7-4bbc-4b38-840f-3fee86f8269c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4fb527-70c4-4d80-9e0a-a57cfc3dacde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f736ce1-b952-49d4-8bb3-e01dc0e4e6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "745d5b29-4e8e-40a8-9c15-4aaa59d8b6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc875574-fdcf-4b2e-84da-40691deb10da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6ae235-483c-4b7c-8026-797f26dd7068",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3937d63-3d73-42fb-9148-4723b8cda179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5866b9e-73a8-4ae1-9db3-21a5410f309f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570c5e09-31a6-4bb7-a7e2-33a109fd5229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d42c5b-31bf-4f7b-aa33-70df45ad9c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9028295-8915-4441-b0d7-287404680a3f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58b205a-e6ae-4a1d-8eab-603c411e1f94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d379a5-62b3-4dd6-82bd-6fd9c8243366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0d71b5-f2a2-423a-9d99-a87f18cc68fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c56af71-8d36-4566-9730-63719ebbd958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5198820-6566-44e1-91b2-a163d8305cf3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fec0fcb-2109-4c57-bc52-c11aed526b61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a139e11e-ff8b-49a3-9512-367bd64c4434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2aa0f7-5df4-4785-8031-ef921ce981cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db346c9-f972-4acf-82ca-84a3af9c6daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f41a588-4b64-4627-afe3-0eae7e034a52",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d01044b-062c-4119-b5b8-41370684704b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72bc1141-1619-46b8-a000-49fa94786d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "677b6b05-31ea-438b-b7c6-05f445643a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee47df1-204e-47bb-b19a-360afd31e527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773a9b87-8de1-4ce5-9a6e-2fcbb57b29e5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd3e081-0c60-4c39-a1bd-318b7625b3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c74d39-b6a9-4d25-8445-1be6e51ddcea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d207f34-f8f5-4543-a9ef-edf2dc3fd949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd92f8b5-2b7d-447f-b9c6-b73650fc39ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1843b6e-e2c0-429f-ad59-0cd563c2046d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e3978c-d574-4f68-a651-d84adcce5461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e6a133-6d41-4d21-a0d7-6b863d78d40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eda0b97-68b5-4f60-9c35-25fe03b652bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa71b9f-d884-4db4-b0e6-67072668299c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27807c2e-dd90-4251-aeba-d14f7443669d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a905305-4952-4292-95c2-2d6812f1e3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb9d221-5abc-4499-a1c4-ad082d0e6668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4180ac-74c7-4f67-a547-cada606277c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39033ed-3d2a-4c6e-bef6-9de9747236db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1e4fc4-65de-4cf2-99ad-4be69f8441af",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde6a373-04e0-4fd7-8004-d25b33ad29e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9baa0489-d236-42fc-bbdc-14b6a41d984a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613bb0de-d86b-40db-8476-5f04443e899c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d78ba91-c523-4b5c-99c3-b4685dbc38fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc504074-28d4-4edc-9edd-0e91a8e6206b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef08cae9-514c-4e97-94e3-632ac37c41fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c009037d-311e-4fa6-9e0f-22333f052ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cca12c2-7681-4514-bd51-c450b46b5d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28200cfc-988b-427b-9d39-1c74191c58e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f28236-faa0-4138-b8a4-d550e1ac0d75",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a926b37b-3369-4fe0-832a-7b3218ca8da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33293c58-9282-4dbd-9ca0-bfee8eef6b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bdf084e-a144-4655-b3fe-df59938b121b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8727d016-77b7-4712-bb5f-0092b4fc0267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0b08fd-f5be-4de4-ad81-3b800aa7fcb9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3905bc9e-10b3-4932-b4cf-3ccdffae464c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2840e4c9-529f-431b-ac98-ffa8d8323cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a984bb8-24ea-43f3-8549-c00814d14df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94dc458-07a7-4d15-ae51-ca8b9817bca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ab6279-8c29-4572-b689-4228b7bf2d87",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa47e434-9484-4d88-bfcc-2582584045f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4de170d9-16e8-42c6-98d0-97ea5e56c0ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaa406d-665b-4ceb-9938-d7ea2e36a424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddcfedc-e383-4900-b9dc-c1e577d60386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb826364-d0fc-4c3b-b9c2-134b384121e2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a6a55e-4446-4c1a-be5e-5ddc078d5e94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "906d0ae6-2620-4edd-a891-1887b1e0f642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a65dbf-7b26-45b7-b8cb-ef2cf3b12673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c93327-2510-48f2-9c03-185ed8a01c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd63a80-8acb-4213-bf74-d63f0af4d51a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ad964e-503a-43ef-9d2f-deec8dc661fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cffc3010-d7d7-4d63-9cd7-edcf0880ff8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404df688-5d3b-4d20-8b91-c5455d843a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68eb602d-fece-4c26-a504-0a2586c1d4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e21d9c-74ee-485d-bf3f-73b40c0903c3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac551bdc-670b-4f83-81a4-e2aa6c29bf29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7782784f-669c-4939-9a2b-7125a8f85ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c0e0ff-3ef4-4c2d-83a3-51079da3624e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0daadc70-cdf6-4ce0-b6a1-1cbb66ada544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9627f2-1df2-4e9a-8411-47b3c4e993af",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4a2ae3-d402-4c4d-8f24-759aa77c98bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e6e730-711a-447e-94a7-19d84e6c341a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893ec74a-9c8a-4df0-8ffe-85c8fd5c2450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d25785-977b-4e11-89cb-e474c37637f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d8fe4f-c987-43de-b3ef-85f2768c62d6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fdc301-72d5-4bc2-9b8f-fc3bedee8c65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc39367-713b-4afc-bbd6-d05218a9ff3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f256345-81b6-4638-807f-c55cfe55e45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e61fa6-dbbb-4233-b0b2-a7dc2c7ed567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ede1cae-bc9a-49de-8582-bf9a27d5734c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fa82ff-f5c9-4f8a-9136-0b93b5e1a3db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d33195-62be-45bd-8ffa-6d1cf9ba6b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bf0e98-b604-4fda-982c-16a8115d3582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9981dd7b-7b3f-44ed-863e-aa980ba42c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f69c751-5ca4-4c12-af90-cb32a1db8f82",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f070aa-1a54-4628-bada-3c5e2b4b8484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9f743a2-65ea-40e2-b615-aab929b2e0e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597b9f12-31db-43e2-8534-ca346938dc9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750d9109-bb25-44f3-a312-2a8f64731f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814060c8-f148-4471-b141-22ae462daa6c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe8748e-d0fd-4dcb-82ba-9976e9353e16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e3ef2d9-4d36-4217-be48-aae7b95979a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de320ba-d8a7-43d7-aa4a-a8fe52b49c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad7dd1c-4ee8-4371-b24d-011aa9f2797a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2611b1-0c81-4f8e-ba4f-beead78d26bc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5318067f-7ba9-4f0d-b6d7-61213c77f4f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c6ae075-733e-46b0-8f5f-0a62baf4b850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ef0e6f-69f2-42af-9160-05b2404342c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff66803-4822-4840-b084-90373c90e62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd43767-fd12-4af8-a1fd-a9dc1e89756d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09954968-2af4-4773-a6e2-3d967b63a2cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0a8fdf5-1ecf-4b13-8e99-32e4937c0212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e625ab8e-87a4-44e6-b43c-4018eb6ded7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba03fbc-43c5-4ba5-a82c-4959cf648a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7937d3-0ee6-4906-ba28-395408ed8135",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5bcc05-833a-49b8-8b9a-9756378c7cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c816dacf-9ae3-469c-af76-764df18bdebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d43956-2fa5-45d5-8189-39d19c69cccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c107f5a-5576-4e28-8ae6-070e59a59b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21eba3e-641b-4157-9587-8bcecf99111d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca50abd-1d3c-4567-b3f3-f4bcee7d9ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df690dd-1b70-4767-90a2-5ecbeb41ca02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f161bd2-30e0-42a8-909f-8fce1da724cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9edb7e-541e-461e-a272-66586215d77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec0647c-bdb1-4fd2-b7ed-ba2be84bd4d2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a29e00-b94c-468f-a734-64a1da62868c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096134ad-0e2e-4fc4-96a6-7c8b092107c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f591521-f27d-4eb0-a065-f800971bd1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679b235d-3020-463d-84dc-d1f33e5e5e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28f666b-9fc2-432a-9b4e-3f5a55793b2f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6904cf52-fe7b-4f3b-af97-751ab018d8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b13febb-a284-4333-9166-6ce5885b5752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e50519-7b95-4ccf-8dc7-bb7b34f1c9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49105711-f534-4565-a28b-36fac5aaf1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e12984b-3199-4329-a534-f09ab329b521",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4726f80-522f-4079-9292-6941a3a16e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86822cbe-00f0-4d58-a84e-21106a257814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4066c2b-3f5b-4678-870a-398e11534dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3929fdaf-b158-4bdd-bc03-a48cac608216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ead09e0-eb13-4f3f-a8f2-d1edce6387f9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12be9e25-3c79-467e-bfa0-4f44f47ee3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da8b0b7-5881-4724-a2e6-6bca0d690b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46853b13-081f-4313-8de3-75d6c66f5867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db12b5b-90b1-4c41-8cc6-63a5ab0b136e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc07ab97-52ec-4416-b3cb-a0ec9e3fbcf4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8549a28a-d668-4231-bd70-ff8da02b6895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73efd53c-8033-48c3-8819-95669e8aa353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855c77df-d19c-4442-b444-17a5eb608d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc80941-7eaf-43d3-a0ac-a7834adbb73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c441d0-f83b-4e55-acb6-88aff33b0aaf",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b09ee6-7a3f-4068-a434-9122a13ec219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a543ece2-c352-4d85-9525-b3a53b738f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60aa1373-b538-4e95-8530-85c49132fc93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70700a2-fbf2-44a0-81c5-4a1baa10ab27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1340cb4b-8ae1-4f86-ae40-cc5c7a021c41",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b453ca-08e7-462c-8bf7-2b06c641c856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82172ad3-f5b2-45ff-acbd-2d4ec41e5fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3cb33b-3a32-4e80-b914-bb647cf01cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75550ab2-16a5-42a3-94be-187fe55dcbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073a041c-89f7-41a0-9ce2-28e3969fd725",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e1013a-c608-4c8b-ae47-f47010e00e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b69b79-d904-4dbe-a869-1dd748b311ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199a5193-e834-4aa6-843c-d8c6fd244bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e6eb95-3c79-47be-bd5f-ab01d65757b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cbc70e-87a2-465a-ab65-0cf75454b817",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f267e2a3-6fdf-4150-ac75-0be14d3883d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3866cc6-3b96-458e-8ed7-5701fa9547d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51df26ba-4b34-4cee-9825-8eb612062b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c604d3b8-da9c-4997-aa7b-62015689eaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1833832-8e04-4266-b743-8730dd058d52",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4caba4-9cf9-4d1d-9a50-f18130f41c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19983098-bdac-4fe6-85a2-6bda982f83c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedab5a3-152d-46c2-b6e7-3989c31a8dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5deeeebd-efc9-4fec-9281-5ebb8e3fd4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b261b45-b770-45da-a890-941f7d6d579e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a075f28-6838-458b-b9c1-ebfd2f12784c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cd096b-124d-4076-a28d-844276ba25ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423aafb0-3d03-417b-b340-958a75bea13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d3181f-7d2f-4180-a333-26757826dfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281a0810-55a9-4a93-8227-96f21e70d59c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c105b3d-43c5-4905-ab91-6a93040ca315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff040aa-212b-40b2-bf72-9f6e35d686c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec4cb29-3013-4e26-9cd4-024ddac12899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aec94ba-29aa-4220-a2cb-020aee4080f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a69bd2-8406-4d07-b985-636275378b68",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b085222c-7097-40c3-ac5e-37bee5fcc2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca334bba-37d0-4213-ad48-e728be86669c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2675db-666a-4866-8a22-14aa91b793e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706370dd-4995-47bc-ba39-36e4fb95c17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c031bdd-21e5-4350-b891-1244317e91f3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c28c27-5045-46f8-ab7a-5b8392ded799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbad2bf-0edd-4960-a7bf-b6b3e8e182d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f666035b-fabe-4d8d-a87d-36b15d56efb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a78509-b173-4268-beb5-6b8a69d0c0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a578f95-d157-4a32-af93-24394599d32a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d94f82-076c-4d42-9dfb-b54335d17dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357fc8fb-7adf-4cdc-972f-488124e9c968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0b4c8b-7b75-4329-b5a9-ab4d4bab5e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1730497f-c2a9-4541-b5fc-32b54e7105da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752d1ee4-868a-4eb7-9c45-7a4aeb1f0733",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024e73cb-3b06-46c6-aa6e-fe79676d1cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69144eea-8513-476d-adc5-2ec67b65e731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae99a06-89a7-41b8-b02f-5c0e59be9f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c87c1d6-a6d1-4ac1-97f5-fe7b9061df35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb0ba91-b3ca-4f4c-8ca0-269780a7f26f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7f8ecd-6acb-4e24-832c-aa06b935de6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14dde926-6464-48b0-957f-561847fd1e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a02167-7e57-47c9-a547-cb2d8f433413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48d453f-79cc-4047-ad89-b3c0afa259dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab63a5a-1673-4beb-bc8d-de08b1b6a8b4",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e342e5-de2e-4854-9065-e2b3407f48e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928010b3-49d6-47d5-925d-0fec5f9f396b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c802c895-682e-4c7a-9bbd-bb188bd852b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a63966-1208-4928-9dcf-cef21444629d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3267d067-4cd9-4463-bc76-38a73d6d23cf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c183f5-2293-4499-b394-043fb59ec588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc711e14-4995-4053-b093-5e18c589fc1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5d57f0-be0c-40f6-beac-044c8eae07c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77609b24-2e86-47ad-bf31-52169141deba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a57e6aa-5c8d-40da-a844-06515a08b9b1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bd5084-4b07-4f03-a4c0-0ba678f50692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906114f2-4411-4066-afa3-56c638148242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be4efe2-64b9-4e0e-b2ca-1e7aa2392fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e830b940-14bd-45af-ad79-60473e331b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c4765f-2656-495d-a9e9-654e7d2fbc54",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759f6f3d-f90b-4126-beb3-ba3cf9dbf3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4546e37b-5985-4ef0-bc28-3d119b16abb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d27288-99c9-4861-aa68-4eff030807ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0984b31b-626f-4206-9743-2cdeaf82f74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12c9d74-d0cc-423e-8372-01af589fbb26",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b888ed32-179a-4eb5-8b81-cf9cbdaa65fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77947ac-be87-4ade-943e-314f838802a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f07b4b4-6f3a-4a5e-bf18-7c6bfec43946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1055283d-60c1-433f-b8c3-777a43fc4720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35aeeb2a-f632-47b2-a4c6-508579f358f9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62816e97-44c4-4017-be63-11dc51fb70ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97103c02-393b-4229-8dd2-590a2a446cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d12de6f-3263-44f3-910b-4055f8ed7629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f17a139-e5a5-41eb-880f-258205db697d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a56cf5-12f9-4185-a56f-5b4eeeb0cb44",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10272e5-9f01-45db-b30b-1dfed05019c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a497b28c-b7dd-4323-9223-5cd153a24661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3397dd-a3ee-4d7b-9dd2-3ff7a628780d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e85e59-d5cc-4922-9492-eb127a5bb2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eea7b73-3361-46b7-99cd-d512e1706a3c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9218c1c6-278e-46da-9af6-517af351f496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc43e513-bbeb-44b5-a9e2-4cca090db9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa53553-6e49-4fdd-8460-5eef9e3ef395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919b3b5d-d4ef-4bd3-ab62-c96b031e1b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c6f28d-9d43-4671-b9e6-5656166ac901",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e9a00a-3596-4bf3-a14b-b176d04c0075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd79493f-acc2-44dc-89b0-2a3b4e90a1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5710273-321a-4e68-bf14-ad945b92ec85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa55302-3a2c-4652-bd32-b9392ab3890e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f075fdb2-485a-4241-b4e9-6b91e7411810",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dabe81-46fc-42f6-af14-1eb341bf29fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5132f2f-1bcf-44ed-9e67-57c6c7223b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4565badb-c945-40e1-9bf2-d99c516d94eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8aa277b-3040-4996-a3f8-137522d396f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85f2275-396c-4c54-affe-91be69d21e79",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de840af-cdaf-4962-9847-8a907513d844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a7c5591-fd29-4e9b-950c-55b88028d0e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4587741d-4d03-4a99-8c4d-70c107c78b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20402634-7cbe-44c5-8402-5bc531d870cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0edd73-2088-4125-8f45-fb5b03bfc09f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1147ab2-b03d-41fb-b8b2-07311fe5c20f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e24eaeaa-5f67-47fe-8a49-5059be78d114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2062393-3079-424c-8d80-64d0f6d90b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef45dd2-517f-4095-a0ea-f8a5cf3ccf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05e5b5e-5f04-4b14-8425-012cc3912e2b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff716de5-1ea6-483a-a8c6-20fb3e95205c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91fd79c9-37db-46b7-bdaa-1541bac909a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e456180-0642-4adb-bc04-96bdd90bd457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd05becc-c6f7-4630-ae44-a34601ea3359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76badab9-3718-4a20-8a9e-15bd47198d7f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb440584-1a08-4a70-9b6c-e286bd8ff3bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6dce82d-5cf9-4f1f-89e5-07872e3c5d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969e6f85-f06d-4ad4-b84d-8a1c44616f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374e9e05-e491-4bec-a3ce-1244bc3180e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca00242f-f3f3-49b3-ab88-fba490d594a0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71239ca-2f67-476a-bd57-585a7fffbafa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afebd303-d943-46f0-bb49-9516c7180ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c8063d-4585-4678-88ef-c03346a678bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a36ac9-c7d6-4fd5-afd9-aadd7733be8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18be5ab-f9ba-47ee-b77b-4a3f98f5dae5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edef9fbf-c9d4-4d0b-a359-43e62a424835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f852d9ce-d3d1-4134-bdb5-e62d39eccf55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d51e89-e51e-4a38-8d9c-fabf6fe2a8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f201d2a1-f76c-486c-893b-fcb14815e450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73af7fc8-aa2b-4f27-947a-ba808f4a87f4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb55c006-cc38-466c-bbbb-df44597714a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c284221-84c2-4fb7-a242-b41b350945d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdffa8ad-d85b-4188-9de4-dbc4d1be9787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedd5535-9e0f-4e05-910a-afaf5162cf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0152d1a-52b0-442c-b48d-4958f78dc867",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e40653-73e4-4305-85ee-42573b09b4c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef4c2d94-2996-492f-8e1a-3bb16c3eaff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf5b595-f142-4a64-a451-e52be6b86973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e2e1c9-3f3f-4a14-875f-fee939edaf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9c7b88-27bf-4fd3-b9a3-c825d1c4c278",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb97a19-c11b-4689-a6b6-3dacbd4c75dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26bceaf-6e5b-4880-aa5b-bb2a5f0823f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b06bec-ba7f-4e9c-be24-f44273add407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4dc3743-7a1c-40f3-8cc3-cba947725b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b2218d-8b19-4da5-ad64-fb0cb019f1d9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383b65c4-2634-43d0-9944-52c417b92e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baf7eb0b-f67f-46dc-813c-b41d03b72f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d556e25-fc65-497c-95f6-43dd9db2b875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249d0984-ff5e-42df-a86a-5b3fa28dd54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579a6e86-32cb-45cb-aa2a-6edfddea765b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d605f4-e905-4dda-b7bf-c42a0c4095cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5b7ed38-462e-4120-bb6d-b3948ff524cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73231b22-dd91-496a-b486-5288e1e9d534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e190e1d9-17b3-4149-babc-e5874e0448cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bddb9f-a794-42bb-8940-bd649a3ca63b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb96a80a-9451-45f1-ad47-5fb9252aa0c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "631e07e7-e458-446f-9dfc-50f869b9f863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fe647c-a733-4aef-b4c0-70bd01ab42b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460c7f1b-9dff-4f0d-8871-65f8483f52fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e533a4e-a87b-4af3-b41e-bddb50686d17",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2edd035-3948-410e-894a-39617f7b24d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "141da0c3-2924-4c92-bc25-f2a01f4eb15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b556b790-124c-4751-8fee-cabe04bdeafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63458256-1ad2-4307-9e4d-719852aa4c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847e1eee-2f9c-44d4-bdf3-c17afd4c84a4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df320255-4565-4920-918b-0b1fe190360b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0de42ad-a1ed-419f-b0b0-31d95dd8083d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31df8d9-5197-47bb-a7c4-d05f92696c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f531d8-7776-40c4-a4ff-87ce7cc85656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b869521-d0c0-44e3-b72f-c66f149d97cd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d12401-e75c-4037-816c-764b4239c212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf80f568-9ff9-4166-8054-170f069cf6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ad108e-1506-461c-997b-0465c4160773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fa3177-d8eb-4bf3-8f9f-254b64c031a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e820157-4409-4fcc-9b0a-bd00b5746e35",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e035fc1e-24a2-4e54-8d08-726407b40953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd45864a-0108-4704-bd43-2a9818560a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebdf5e4-6493-4130-a465-146cef020a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef86893-a4ab-4ef2-a990-990d6f574756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0aee17-f01f-4056-82de-1bdbcb548b9c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9863f8d2-754d-402f-9e04-ee13d2c9a5b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27bc67bc-f7de-467c-a911-009ae7d9b723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43f1d1e-e952-407e-96ed-93339017f495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021d790d-a9ce-4361-996a-e5439c76e044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f22d7d6-6041-4573-af19-b49f9ab00623",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e112d39-c6f2-4b5c-b5d0-97e3d573750e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e37484d-232c-456c-a0d0-f0932ce22cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadeff74-edad-4a8a-b22f-963ab9baa28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79240f71-3f81-40c8-afd8-41de796c1efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895205a9-5f24-46f7-85a1-a265283faf1b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632924bf-92ff-459b-8060-02747e565183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7122927-353b-4ff0-b1b8-ab62288eb568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8a2e4d-8f84-4c3d-97d2-4face55427fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf88942-41e8-4bb3-ab34-a145f669c9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffee15c2-2ec9-4ab6-b56c-4d3656392066",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f408d4-8efb-41a3-86d3-31e695eb553d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f3d097-a3d3-4543-a5eb-0901df5a83ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7934503e-9c07-43ec-875c-2e88233ea6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99977760-abb0-41f5-aabc-a75919de7ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b194887f-970f-479d-ab90-f26c6334f80d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd2aa3a-19f2-4c2f-8889-f484b259db2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e339c2ef-503c-43e5-8d3b-30c73450fefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6206e0e-2ea9-41ca-8a1d-81eed087a87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2c2e61-15d7-44f0-aa86-70b059887ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da490adc-0514-4c32-870a-eb782e4c63e9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80462ff-872d-49ae-8767-0c6fa68dab91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0afb409e-108c-435e-8695-e7c31bae3d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3f890c-9bec-41e9-8518-706c551e6f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc051ec9-c072-4022-9f39-5264fdfcf06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea2c821-ce5c-4719-bccd-12e8145876e2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d80b27-d893-44ea-9c0c-3498ec7a08f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b5ae66-912f-4114-b204-1d678d87a049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38f7766-a0c2-428b-a117-6d78cdec13ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108b58cb-1aa8-4091-866b-efe4f4f6dcc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5245830c-1e39-499b-9be7-1fb6098d5217",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67125da0-3b8b-4889-befe-26678e1fcbe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31c1f847-ae6a-4c81-9509-41b8ae33f446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f72414-92e9-4536-87f6-808f0ff02471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96adfefb-ee11-43e7-82cb-96c88458a687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb107b3f-f07f-4ec3-a969-a50f20158961",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e21272a-e83b-4d98-b47d-a615227fce60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5063b5e-e02e-4d2d-93b9-203015c16d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c90c3e-737d-4ac6-8a1b-53b135791e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcde099-8b5f-4426-82da-9bb4f21d0c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d476acf2-a4f6-4a2b-a4b8-117e72b2c682",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f144dd0-a538-46e8-b0f7-c8f26ba1b510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc068cc-079d-4262-8cbb-219d9c67eb32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80e792a-e156-484b-9045-149b5b7ce788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d45e83-a5a7-4807-89aa-9fc290e58a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3a4fe5-da43-485a-aff3-ca6b5297eca2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e15843b-610a-4a76-92f7-a857199d63da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f625f11a-6340-4a6f-a32e-a990bea106d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dc7971-a6e1-47b0-b52b-1f4706c59150",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8fea6e-65e3-4b6d-9a07-be81fffe495a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e880455a-4616-4998-9f13-57e23f7e1079",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427bacc6-0e08-43a7-910e-fd10be77b90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84f0c5d-026f-4565-83fe-e645f05b797a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f87ac1-bcef-4f9c-a5e5-5ea224d02dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcde417e-ad53-4ac9-ab3e-ee1281231879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad59606-f977-4f9c-8d2d-7d2aabd7187a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d57719-4843-4e78-9aac-bdea526c3e0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d109b87-38b8-40a6-a21c-b92eda10ce6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c054acd2-5f23-47c0-acb9-0d7875a97ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c717ee-1fcc-4f78-963a-6c5ffd5ffa95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e08ebf3-f223-44d2-b194-ab2c918fcd96",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5133f7c9-2947-4ec4-a478-67d64194a105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e051b86-c576-4d6d-9038-0ecbea3d2358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd88d4d-263d-470d-99e9-7f08a9a9f4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7906fee9-8a9b-42c7-a951-ddcb68f7facd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1618f2-57ac-4480-93fb-51256b85ffec",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec8e38f-266e-49e7-a8d7-acd372d4a316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a761d87c-36d5-4b65-bc64-0af334a767e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa052801-a567-40fd-8cd8-48cd54e71554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1da106-04db-4596-a7b7-de954fa8d5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19854b8-6828-4a60-b291-c69ceff83c08",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0add2192-32f2-4070-ab68-c7eda7887a48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d40fca-0dd1-464f-82fa-edeab11161b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b82341-457a-4813-8124-a9cb9ad80299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68e2013-7c35-487d-92f6-d9a9725d34b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762a88e6-3e8e-4582-a280-248beb90ad26",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68b5d3a-21e6-48b6-98bf-348bc333a8e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fe27295-7c52-4af3-b86f-c77b2c4673f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e60786-7754-4a6a-9678-bfb7e10cffbb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8963d62f-86cc-4d24-b8a5-af6a19667d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f039f44-f25f-4aae-b69b-de921a00ca12",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6edab4-73bc-46d5-a7c0-46b94d8e35e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3261ec93-3275-4036-9874-a60655964eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "776c3501-5e00-4a29-b96b-6f5bc039fe57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed58ef3-1011-41d3-a02a-7e49579c76f7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "981f932b-b9f2-4486-988d-c8aa13f19d52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8628b59c-7cfa-4abb-b324-80e4de0dd453"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "316215d4-70ff-4671-8672-ad0f3c79daa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f71c917b-1f13-4384-aedf-90e3b19102e5"
                    }
                  }
                ]
              },
              {
                "id": "91d22bbc-d420-4a69-b828-2d2a4f98499c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "068f534d-75f6-4a78-a05c-3b06868ce121",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581bd284-9b88-4d3a-9e38-de210f42a00e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f57057f5-80e3-4144-92ca-2d011a5b31a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ae1383-2bde-45bc-82d4-728112364455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e547b31d-06f5-47ea-8306-93e0ed62bafa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8adfc8de-0347-4365-9067-cf9e223828bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1760d3bf-9df3-4d14-83cd-75781ccaf062"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6335d278-aa7c-480a-9d48-798a8655e753",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11895f72-0695-45c2-97d8-f0d72caa8057"
                    }
                  }
                ]
              },
              {
                "id": "7ba8601d-78e0-4c8e-a53c-8c20bf7fda70",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6d3643f1-76ef-4312-aa4a-b7f9a2a596de",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85a846d-b549-40cb-a426-57d5019815c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a727a0f8-58cd-4229-a3da-0da1869d5ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fda4f9-6fc9-45b5-9c60-05ead594b48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915a2bae-248c-4a15-a4a5-3f5f92ecb4e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cc12817f-65fd-4cb9-84ae-810af1c07a3e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3576c9b5-7a28-4766-aba6-9d070dabe642",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5b09e4c-61e9-49d9-ad67-8d8d1cbcca45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4e71dee5-82ea-462a-a25d-9fd0f10e46da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6551e860-6d16-4cca-b490-02ea64fb74f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5ac4994-4c3f-4cf7-a990-aa9dcd44cf4c"
                    }
                  }
                ]
              },
              {
                "id": "09c1114f-f56e-4ee0-9048-48de87d2f6a2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b54deb83-7067-408a-9e48-e85e6a1aecab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1ea8265a-b680-483e-8d04-65f0430866a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9416649d-3d80-46b9-a877-1affcccb1340",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c17617c-7e0a-4a7f-885c-c10ab9f58c00"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0333974a-01f1-4a6e-a62e-a71865acb5f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9b560b2b-69cb-435a-b589-4b51fa55042a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f569548e-18ef-4b04-b34a-8480139f1fef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5878cb3f-1532-4060-b1ac-4c2859a0c56e"
            }
          }
        ]
      },
      {
        "id": "385daf2d-251d-4309-a51d-7d016b81a641",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "16563d8e-afc6-46e3-83a2-f03453b48b9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ac81a6a-5ec7-41e5-8d43-a4074358a623",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9e8aea3-1cc8-4f3f-81d6-b4e1d5da7d88",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d3259f-b96d-43e9-9ae7-31da7d65cf88",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "70fd0a55-d14d-4d23-8378-2e260b82e9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82112059-799d-4e40-8f66-41fa0ce8c3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21c5ce82-abbe-4172-9880-3e2b4173ad9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acb8e920-fcdd-4275-9f16-d4c79b32fd0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d6dfe28-9d59-4c19-9d1d-b432760813a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aa2c52c-668d-4183-9391-ee8050c0455e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e37e046f-0b7c-4a6d-8b46-00dc5ea9ff15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "393ff9b8-de11-413c-97f3-044d14d2673c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4a652d7f-6c84-4f61-9e8d-f68065f2d0f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a664b9f8-15b3-4645-99f6-963d9766ef3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "530366a2-42e2-4129-bafd-5fe3cdaaac8f"
            }
          }
        ]
      },
      {
        "id": "9e202bcc-e4e3-49ce-b80f-c8813d5d970a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "37c79459-d397-465c-a746-3cfe780b7a76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca76e2ae-ee33-4b0a-b48a-06a043c19b24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3fea6775-605a-430f-a5d5-c82eff43bd51",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3113655c-efe9-488b-91c5-e27090986466",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33b42926-1466-4eb8-a238-abdab6378ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdd6ba7-c1ae-4d2e-85fb-b83c5b63b7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b856c64e-8254-4384-a711-6487b1fc8e0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e529ac24-1dc4-4c15-8afd-bfcc5510b986",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abe1e2a4-8b2e-4c42-9d23-56b0addf9e92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f239a80b-20a9-4c84-a63a-e21c40a04401",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "342ad693-eaea-48df-bb43-1787dac4f66e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2a47c31-5824-4503-9ca2-37b63103b58e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "744daaed-99a6-4ccb-8538-a1491498fc4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "706db588-cfaa-46cf-9961-447683c17c62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58cb7238-6625-4a15-84f5-b888fbaa0c05"
            }
          }
        ]
      },
      {
        "id": "3e9cb5d6-8848-4680-b369-4b49385c68ca",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "83c1b8e3-7095-47fb-8bae-33a3108980e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33abe940-e8c9-4451-b312-65d7ba41a816",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d46cf945-fbe9-43aa-9cf6-084de443b7f7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5ecff9-7b2e-4aa8-b3f6-4ecae0ea748b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2de59a7b-ede8-4f52-936a-82ec8b4512d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abb517b-5392-4083-8d10-7a555fd566cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "180f4f35-9d5a-49e8-b29d-7c7b0cb0a003"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16cc0c6f-a113-45db-8ce3-38ee148663e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4b2c9cd-0576-4211-976c-95260a52f667"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b4e9dc7-d863-451b-b5a6-d4118485525d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f28d72e-48ae-43ff-acc3-5dec8d8eca9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e7ff041-94ae-4ebe-830b-33428f7b3719",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aed50a01-bd6d-4d59-a4db-6ad3caca6351"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de9e1081-6c08-4408-9fba-d993d10a47ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36f44182-b7ba-4929-af3b-169f0f785d63"
            }
          }
        ]
      },
      {
        "id": "de63bc62-286c-4009-9ac2-dd718dff7cf9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6bd3c85-42dc-425d-9e28-cf3b76a492ed",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14ceaa5f-0321-45a5-9b92-afc8cb1ea9e5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f00d070f-12e1-423d-a005-49834f81207d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "065487a4-f28a-48fa-a045-66202ab7181a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7462075-8056-458a-a857-46c823c97247",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 59.10175438596491,
      "responseMin": 22,
      "responseMax": 406,
      "responseSd": 30.023853039010383,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707352427007,
      "completed": 1707352452958
    },
    "executions": [
      {
        "id": "3675953b-2f21-4224-bd4c-d62ba7308128",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a4e5ab11-a4ca-435a-80e2-c335c8219c27",
          "httpRequestId": "546877bf-ff50-4116-a399-2871e42a65df"
        },
        "item": {
          "id": "3675953b-2f21-4224-bd4c-d62ba7308128",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e4e64040-a74c-453b-a986-1e0e325b6cec",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "db37d1e0-50cd-47d9-ad72-c7138a5a86bc",
        "cursor": {
          "ref": "f18407dd-e585-4294-b860-126745c3c0ae",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e5b8261e-2718-4883-99dc-2cf40a8e7f80"
        },
        "item": {
          "id": "db37d1e0-50cd-47d9-ad72-c7138a5a86bc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9d05a5a1-654b-4518-a6d8-d646988ed5f3",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "854a456a-21ba-4abf-bf3e-52c0424ae92b",
        "cursor": {
          "ref": "e951638f-c9bf-4c14-8c42-41d1c1624fff",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e0cd1d26-1eb2-4162-921a-035cdf681aa8"
        },
        "item": {
          "id": "854a456a-21ba-4abf-bf3e-52c0424ae92b",
          "name": "did_json"
        },
        "response": {
          "id": "fe6a4032-1a34-4b1d-89e9-a7c30a2e5342",
          "status": "OK",
          "code": 200,
          "responseTime": 312,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f9b3a8-d148-419a-982b-2cef1d4d2eaa",
        "cursor": {
          "ref": "1a7077a7-6128-4fc6-9fff-dfbdc9db8ba0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dbb85a73-d8df-4574-9d36-bb42e87fea40"
        },
        "item": {
          "id": "65f9b3a8-d148-419a-982b-2cef1d4d2eaa",
          "name": "did:invalid"
        },
        "response": {
          "id": "89ef583c-3e5b-49c7-ab51-e2b2d5d085de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f9b3a8-d148-419a-982b-2cef1d4d2eaa",
        "cursor": {
          "ref": "1a7077a7-6128-4fc6-9fff-dfbdc9db8ba0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dbb85a73-d8df-4574-9d36-bb42e87fea40"
        },
        "item": {
          "id": "65f9b3a8-d148-419a-982b-2cef1d4d2eaa",
          "name": "did:invalid"
        },
        "response": {
          "id": "89ef583c-3e5b-49c7-ab51-e2b2d5d085de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9a1d2e-5c97-45ed-a1de-61841ec96bb5",
        "cursor": {
          "ref": "1837e0bc-0d2f-4cab-ba8b-f20027610adf",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bd87ad2f-0a2c-4adf-a8eb-7c7456f4684d"
        },
        "item": {
          "id": "6f9a1d2e-5c97-45ed-a1de-61841ec96bb5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "41905b86-587c-48d1-92d3-4a9f80f8c3f5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 100,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d406eb43-1aaa-467c-9061-3d0730869f2a",
        "cursor": {
          "ref": "9ef7d862-1278-48ad-94d7-a1154c6e7b6b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "03658662-4a53-422d-8f02-18931b855c32"
        },
        "item": {
          "id": "d406eb43-1aaa-467c-9061-3d0730869f2a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "96da0474-7962-487e-8856-e7774a746bc9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1a9419-e081-4e7f-8e81-b5bd24b28dd6",
        "cursor": {
          "ref": "6309e8fe-4a72-4b9c-a1c8-3dac739db1ff",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e2131d51-198b-48ed-a9ef-0623f6c25d6b"
        },
        "item": {
          "id": "5f1a9419-e081-4e7f-8e81-b5bd24b28dd6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "788b354a-2b91-4fc8-8f95-030ff99f23ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61742e9f-9df7-465e-9118-98eca8f4140b",
        "cursor": {
          "ref": "f4f0494c-7604-4f00-b170-06ad281b5ddb",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2f744488-1d58-4da4-982b-59726eef4ea3"
        },
        "item": {
          "id": "61742e9f-9df7-465e-9118-98eca8f4140b",
          "name": "identifiers"
        },
        "response": {
          "id": "d40a63ea-75e9-4116-bbc0-bba147add10c",
          "status": "OK",
          "code": 200,
          "responseTime": 207,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5487dcb-deef-471d-9206-3e376507ec20",
        "cursor": {
          "ref": "e2e6f868-602c-42ef-8116-848cc4a855f7",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8fc2bac5-bae8-4cc7-9f2a-211ad5a62093"
        },
        "item": {
          "id": "e5487dcb-deef-471d-9206-3e376507ec20",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d4247426-3cad-4a84-86ed-0506f24e7ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d552fad-ca5e-488d-a937-20c8368b5c95",
        "cursor": {
          "ref": "1f9835ff-a5a9-4755-b7cb-35739aaba25b",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "26501e19-c4b3-4770-bcdd-35b6e5cdfc38"
        },
        "item": {
          "id": "9d552fad-ca5e-488d-a937-20c8368b5c95",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "107bb13d-f4e4-4c2b-8a0e-813241070fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68848af1-b96e-4d4b-af08-360b8bbd6512",
        "cursor": {
          "ref": "eb21459c-15d0-499d-be37-8e3f08038485",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "22dc1fc1-bccb-438e-a26e-5f940c3f29eb"
        },
        "item": {
          "id": "68848af1-b96e-4d4b-af08-360b8bbd6512",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "944668b1-6d1e-4d1f-aa04-2fdabaf05280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91dda0cb-b610-433e-9629-f60d4f645bfd",
        "cursor": {
          "ref": "495dc7e6-fb78-4878-a8c8-2905eec15b10",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a432f6c3-ce6f-416d-a136-a1091eb100c7"
        },
        "item": {
          "id": "91dda0cb-b610-433e-9629-f60d4f645bfd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "34da802c-b667-4a16-9c56-d710d929e632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0691ef4-8c5b-458f-b0a5-68455f94f74e",
        "cursor": {
          "ref": "252b0fbc-e067-4479-8b20-e4b5e46c823d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "dbeead6d-abb9-4c9a-abeb-d56994c953ed"
        },
        "item": {
          "id": "c0691ef4-8c5b-458f-b0a5-68455f94f74e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7ff3e9a1-16b3-4dc3-92d5-98334373fb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21acb97d-2125-4524-9e02-957b2ff5ca1e",
        "cursor": {
          "ref": "80c94c52-7c66-419c-8e89-be20ab01a9b0",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a5d947a1-eab8-499d-ad07-0b10de336d65"
        },
        "item": {
          "id": "21acb97d-2125-4524-9e02-957b2ff5ca1e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fe73f38c-d6f2-426c-9253-b3c7e9f8e1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b3d852-e2f0-4d1b-864e-0016f90404a0",
        "cursor": {
          "ref": "305a825c-c1df-40fb-9a38-34332de4162b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0fab386e-2dfd-4b68-8062-73a2e785a3ce"
        },
        "item": {
          "id": "c2b3d852-e2f0-4d1b-864e-0016f90404a0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6a9aea9d-582a-4332-9274-5584f620ddd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afe2ed7-02e4-4905-86b8-1dabf2f4a925",
        "cursor": {
          "ref": "c7c59ff3-2482-496a-b7c1-121a9e63aed0",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c7a6de07-7540-4156-a43e-8feae13742e3"
        },
        "item": {
          "id": "0afe2ed7-02e4-4905-86b8-1dabf2f4a925",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dfe95eb1-aa97-4e94-8577-797fd034045c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e65e808-b933-4598-b5c7-f849ee1829e0",
        "cursor": {
          "ref": "9f7ae93e-930c-427e-aa70-217ce8732c7d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "af0dd1c4-bf54-459c-9d3c-40e00428a225"
        },
        "item": {
          "id": "0e65e808-b933-4598-b5c7-f849ee1829e0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9a5e7c67-2bc1-4836-9fdc-7600b8e22c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017d4310-58ac-4842-9eea-20b295d7d305",
        "cursor": {
          "ref": "1409445a-cf7e-46c0-9111-c7a27830e552",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a8df6114-2af5-40e2-9ec6-177ce7b507b4"
        },
        "item": {
          "id": "017d4310-58ac-4842-9eea-20b295d7d305",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "11e3bce5-3ad7-4a62-a5cf-51969a26bc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9babe3fa-ac4c-4e39-a57c-8664a0ca074a",
        "cursor": {
          "ref": "4f52bd2d-b935-49da-b49e-71f3704bafb9",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5d2da9c7-efc5-44c5-a824-da0320d9d33f"
        },
        "item": {
          "id": "9babe3fa-ac4c-4e39-a57c-8664a0ca074a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "485df5f9-df87-45d4-9aa5-33eb1650f293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c568695f-384f-40ab-b390-f8af6f20f865",
        "cursor": {
          "ref": "aecd2f07-444e-4cb6-b4da-f5d9665bdbb7",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b65b5ba3-6e77-4952-a9ea-17ac064e7a72"
        },
        "item": {
          "id": "c568695f-384f-40ab-b390-f8af6f20f865",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e5decb77-5a87-4378-b92e-e028e93d3e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3460e6ae-e26d-4423-9f25-e8439777c39c",
        "cursor": {
          "ref": "b67f6574-830c-4d2f-a251-104f5640e336",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "735dd1c5-e7ed-40e4-8475-7d1aed308781"
        },
        "item": {
          "id": "3460e6ae-e26d-4423-9f25-e8439777c39c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a40f8326-df9a-443d-9f2d-269987752092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8855296d-9f60-4053-b685-f0b14dfd9d41",
        "cursor": {
          "ref": "a8f82ad3-e3fd-4206-84e3-64532cecfcdb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "96c620a3-f585-4948-bda6-8833eb403c25"
        },
        "item": {
          "id": "8855296d-9f60-4053-b685-f0b14dfd9d41",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "07514cb5-1f24-41e0-b125-d0f40541443a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5153dd8c-0507-461d-83f8-79dff778fc5f",
        "cursor": {
          "ref": "f5539295-726c-44fc-a678-87c0d2532b6e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e055b155-eaf1-481d-b9cd-847f2165803c"
        },
        "item": {
          "id": "5153dd8c-0507-461d-83f8-79dff778fc5f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d4a09588-f189-4d62-ba57-b74577943145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178dbc08-5dd0-429a-af3f-137f9693d9dd",
        "cursor": {
          "ref": "d7530435-6c70-4680-a8ed-062c5a55a62d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8a68e52b-0395-4929-9dcb-1ab94679325e"
        },
        "item": {
          "id": "178dbc08-5dd0-429a-af3f-137f9693d9dd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d6dd9c1a-1aac-4d94-a2b1-df32b424ee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cbd9fe-2c73-4f9b-aada-f7bc0a1d0ea3",
        "cursor": {
          "ref": "fd2cb3a4-cf59-4e65-8222-a8c220233225",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0e53d52b-e014-4641-8383-81c49cbe8e7e"
        },
        "item": {
          "id": "b7cbd9fe-2c73-4f9b-aada-f7bc0a1d0ea3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5dd90301-b29a-4563-a79a-e2772efcf505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f93ec1-05a4-4cdc-ad19-d7bbd3b11eab",
        "cursor": {
          "ref": "f9e6d56a-09d4-49b3-b3d7-35c518c08803",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c8a92593-8da4-422d-9988-fe4a17d4d726"
        },
        "item": {
          "id": "79f93ec1-05a4-4cdc-ad19-d7bbd3b11eab",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4e08b809-c209-4f6b-a581-403f3c49b1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce3ea5b-2f35-4262-92c4-d646d2891434",
        "cursor": {
          "ref": "c9e989fd-c7be-4246-8d3a-7da9bd37f25a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "91377bc1-8687-44aa-842f-752639f85284"
        },
        "item": {
          "id": "9ce3ea5b-2f35-4262-92c4-d646d2891434",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8c98edbd-1ff0-43c8-a29e-d48a0c9f33a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe0eb5a-3544-4ec9-b2f8-87a407cc48f0",
        "cursor": {
          "ref": "27584d88-6cee-4c9b-a840-dddf5e8cd1b4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b4cac5ba-af91-4bb8-87eb-6eb37613927b"
        },
        "item": {
          "id": "9fe0eb5a-3544-4ec9-b2f8-87a407cc48f0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c06263af-8a49-4783-ad9a-ab3a3cc26659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5060f5ec-f3ea-4e4c-ae58-745fc554ac73",
        "cursor": {
          "ref": "854b5677-2d23-444a-80c6-998aa0348f3b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e32b3680-39ed-4786-81db-d434feea7f5d"
        },
        "item": {
          "id": "5060f5ec-f3ea-4e4c-ae58-745fc554ac73",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8d565312-8b02-4226-8b0e-2570af116213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a82b5d-2077-4a2d-8ac1-bd556279b157",
        "cursor": {
          "ref": "a3bb4425-e273-4527-8d94-6884661a0e8f",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d3720842-6746-4ad9-962d-8e1da781b75d"
        },
        "item": {
          "id": "39a82b5d-2077-4a2d-8ac1-bd556279b157",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "06b6b9c9-86f1-40d9-89c1-d1bcc4525113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d970c102-4a4f-44b5-a393-04d239399436",
        "cursor": {
          "ref": "871a3b14-de1d-4a69-82c1-70463ee3e848",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d46ce92c-fec0-48fa-9ed5-7b72eeecc32d"
        },
        "item": {
          "id": "d970c102-4a4f-44b5-a393-04d239399436",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "81940775-4b87-4d68-854b-2f088f4c23f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600396fe-1c44-4d62-86bf-b27f906b7b96",
        "cursor": {
          "ref": "2d8baeae-3087-4775-8156-25f57c734c90",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2372da96-4dd3-47c0-a7e0-0c6e90a7f621"
        },
        "item": {
          "id": "600396fe-1c44-4d62-86bf-b27f906b7b96",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "571dad8b-98b8-44bc-916b-01a4c2662b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3542023c-a552-4faf-a7f0-81575841aed9",
        "cursor": {
          "ref": "0dfce619-4623-4ddb-8d65-e5474208e8aa",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9c362282-893d-4ee6-b82e-d29df9cdaa5f"
        },
        "item": {
          "id": "3542023c-a552-4faf-a7f0-81575841aed9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b7a2e4fd-637f-48be-9954-c30c79fe7b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10213b8f-32c7-4ef3-99ad-f585f7854434",
        "cursor": {
          "ref": "64b2c498-50c0-4d90-b7d6-30af92154b70",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "59e9f48e-44ee-4a2f-945c-653b614e275a"
        },
        "item": {
          "id": "10213b8f-32c7-4ef3-99ad-f585f7854434",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cfa1cfd2-77cc-455c-9372-0c77318415c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8299694a-d0bf-4477-abc0-72f3ce3d9815",
        "cursor": {
          "ref": "2ab2c763-4b94-42cb-9a03-6aa84fc570cd",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a8616958-64c5-4cfd-b203-24ba4da3c6e1"
        },
        "item": {
          "id": "8299694a-d0bf-4477-abc0-72f3ce3d9815",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a1030d50-3f05-443e-9c76-46407299c84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2e31f6-9b44-47f5-b742-c3bc2b0f0d7c",
        "cursor": {
          "ref": "851af3e3-448e-4149-9a4b-1f91f57b0dd2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1361ab79-5aa5-43d8-a579-2436a41722b2"
        },
        "item": {
          "id": "0c2e31f6-9b44-47f5-b742-c3bc2b0f0d7c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0b9cbfd0-5ff6-46a8-a8c1-12f552bb963c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb5485e-1efa-4499-8ef1-d70577819970",
        "cursor": {
          "ref": "69423d17-513a-4d93-8bf4-ff668a5bd22b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "db6ca911-1f7f-4e7b-b99a-cba473acc298"
        },
        "item": {
          "id": "dfb5485e-1efa-4499-8ef1-d70577819970",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "93ef9a78-e586-4f17-ab09-133517b8d051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24e1cee-5e95-4080-840e-e4d495a8b522",
        "cursor": {
          "ref": "b6d76159-5f23-4df9-a777-07c8410fb80a",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9f197956-0648-41cc-bd4e-614fca00c8f9"
        },
        "item": {
          "id": "a24e1cee-5e95-4080-840e-e4d495a8b522",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f5eed710-123d-4491-9ed8-204a79c3ae7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81981ad-c767-4236-bd6d-cee654aa60a2",
        "cursor": {
          "ref": "9b301418-7800-4142-915b-d2661d7a411d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "86d0c3c9-a931-49d3-a313-5008d9501f69"
        },
        "item": {
          "id": "b81981ad-c767-4236-bd6d-cee654aa60a2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cec7f388-e072-479a-9b2b-1ae14000a947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8627b3be-4334-41fd-bce0-74370aec9af2",
        "cursor": {
          "ref": "9f9d84d5-55e3-441c-ab5d-ad3a40517076",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "499d81db-88f9-48d8-a02a-08103cca96ad"
        },
        "item": {
          "id": "8627b3be-4334-41fd-bce0-74370aec9af2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9de5b1fe-d0d3-4098-a5fb-8e82804825a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07a460a-3bc4-459d-afc1-f8256ff2c653",
        "cursor": {
          "ref": "838c37e4-ba8f-46d4-8b2d-2213cc0c69f3",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9a255fd6-5016-4d52-b6ba-b81bbf30264d"
        },
        "item": {
          "id": "f07a460a-3bc4-459d-afc1-f8256ff2c653",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bb29cfef-f97d-44ba-a78a-abac771fd597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cc2fbe-7f82-4580-bac9-d5c69d1710d4",
        "cursor": {
          "ref": "bbab6f79-4689-47d1-9201-9cd7a1158d7c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cfd5734c-e792-4f45-b3a4-80a78b80ad28"
        },
        "item": {
          "id": "47cc2fbe-7f82-4580-bac9-d5c69d1710d4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "39804580-6992-4861-9f23-cd25e3ba404c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35130757-3227-4945-a873-7b4d333bdde4",
        "cursor": {
          "ref": "d94bf84f-2cbb-4d98-a04a-2eae6a603524",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "27424d55-883d-41d6-b395-5898be590291"
        },
        "item": {
          "id": "35130757-3227-4945-a873-7b4d333bdde4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "53fc328c-da23-4a4d-a82f-981a0b184459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df2e836-0841-458e-86b6-2614d2f0f9ea",
        "cursor": {
          "ref": "911692b3-a084-4572-89e5-910d5bd61ada",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a9ce7261-55a4-4f03-945d-acb4df363e46"
        },
        "item": {
          "id": "8df2e836-0841-458e-86b6-2614d2f0f9ea",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bcaefdd0-2777-4b75-b8c0-1cdb630aa3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440ce5a6-2f09-47eb-88f9-da3379bcc886",
        "cursor": {
          "ref": "ef196f47-460e-4bca-ad1f-4e653faf0f71",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "de1d6207-8a85-4b65-aa6e-510abfb17d9d"
        },
        "item": {
          "id": "440ce5a6-2f09-47eb-88f9-da3379bcc886",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6377ed5e-f357-4792-ac5d-aebede22b08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1d6e29-bae0-4582-aa09-f2590b3bf07b",
        "cursor": {
          "ref": "5aab34c7-f552-43f8-b490-71f0239815f1",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "96f2544e-c42c-467b-81a6-455fdb3a12f2"
        },
        "item": {
          "id": "ad1d6e29-bae0-4582-aa09-f2590b3bf07b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9a19eb11-14c6-4760-b235-659d3b52cee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879df5d1-1c9d-4d6f-ac69-06abb3e171e0",
        "cursor": {
          "ref": "241e964c-eae9-4746-af85-54b8ec62edac",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "46d3552d-5221-4b9d-979d-04a3579c36d6"
        },
        "item": {
          "id": "879df5d1-1c9d-4d6f-ac69-06abb3e171e0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1e933ce1-3766-4c40-8e45-4e7275e616f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05fb25d-d3cd-4d61-be3b-2a86238e99fc",
        "cursor": {
          "ref": "d63eea49-b257-443e-80a6-b66914d7627e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "013951e1-c232-41e6-9108-68fac9bf58ea"
        },
        "item": {
          "id": "a05fb25d-d3cd-4d61-be3b-2a86238e99fc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9d61e91a-cdc8-4369-86e3-026a92ebea88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a8bf37-d582-4337-8c8b-fbc017d4b638",
        "cursor": {
          "ref": "25e8b21b-0103-4fc5-9958-077f6c0add3d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8f9f779c-422b-4995-a95f-d98e2fc622e5"
        },
        "item": {
          "id": "00a8bf37-d582-4337-8c8b-fbc017d4b638",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "354e4656-7607-417d-bbd0-a4f166cc34ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836df5ab-c1a0-4423-8c07-eef855cf4726",
        "cursor": {
          "ref": "6746d0ea-36d8-4e69-b7ea-56c498d0d3dc",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5f617536-026b-41db-92a7-97e3c70e5b5d"
        },
        "item": {
          "id": "836df5ab-c1a0-4423-8c07-eef855cf4726",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3bcd02fd-6b28-4445-82fc-46cbf9f53db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98af65e-d5e6-4dbd-a3f8-84a02d30ef94",
        "cursor": {
          "ref": "6109dc92-e594-4119-bded-bd8c90a6a440",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a3297ac6-df3d-407f-816b-80c61d975312"
        },
        "item": {
          "id": "c98af65e-d5e6-4dbd-a3f8-84a02d30ef94",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8c48d709-b41c-4c80-bfa5-93f11567194d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5fda6a-a264-43f1-9283-b7c546ca597e",
        "cursor": {
          "ref": "44897954-5669-4046-812f-4c073f78f6da",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "97915a86-6276-42cf-829c-d9455f146427"
        },
        "item": {
          "id": "8c5fda6a-a264-43f1-9283-b7c546ca597e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d7bf8514-8879-4f38-ad47-b4d1489c9715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f78b58-3090-4c02-961a-66bb966a2639",
        "cursor": {
          "ref": "dead4c3a-caa0-420e-84d9-e10c2fcd4538",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "68716754-8762-4d89-81e8-dfa659dfa301"
        },
        "item": {
          "id": "96f78b58-3090-4c02-961a-66bb966a2639",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "15107e65-733f-4d14-a6bd-30d3da8bb0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82c4931-9906-4512-a3a3-623a42aea247",
        "cursor": {
          "ref": "e78330ba-063d-4f43-baeb-4f73318d5b39",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "966b0671-f6c4-4d25-b822-2a215fdb2ca5"
        },
        "item": {
          "id": "d82c4931-9906-4512-a3a3-623a42aea247",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "654285e7-e89e-4dd4-83d5-30df9efa05e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4e227f-cda3-41fb-a537-72262321130b",
        "cursor": {
          "ref": "1af04c35-9e40-4493-832b-0cbef7a2d8f8",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e8f73d82-b43a-457a-99a2-c1db8af22d2a"
        },
        "item": {
          "id": "cc4e227f-cda3-41fb-a537-72262321130b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2fa9d271-e9c4-4df8-990a-e6dc18aa23a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fb1fee-5b66-4f94-91d8-70322f2ee875",
        "cursor": {
          "ref": "6322c05c-54b9-401a-a952-86b757459835",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "72ca3865-fa89-4f4f-ad23-05c8168557fe"
        },
        "item": {
          "id": "a3fb1fee-5b66-4f94-91d8-70322f2ee875",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "215af411-0c20-4d4c-8060-4e2ce93d0f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06f69d1-3d5d-4af0-bdd9-6cab3e3b7cd8",
        "cursor": {
          "ref": "354cf1de-0ce9-42e3-bf09-1a55a2aa2661",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2b78881b-cc68-4c58-9c7c-204c24e85576"
        },
        "item": {
          "id": "f06f69d1-3d5d-4af0-bdd9-6cab3e3b7cd8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "81c3789c-744d-41ae-990f-c2a9c743da31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dc41d1-a417-494d-a738-fa7c83d81e51",
        "cursor": {
          "ref": "6c8cfb57-e212-45eb-9ae9-95702ab0fe68",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "80315d43-cebc-4c62-afe9-f73feafa8981"
        },
        "item": {
          "id": "61dc41d1-a417-494d-a738-fa7c83d81e51",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "499ed5d4-347d-45b9-b87e-fe2bf56bf568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d504a0-82c5-4232-a464-7c0f315d9290",
        "cursor": {
          "ref": "0a84b518-0e18-4c1a-af00-d23b774c2292",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "430aba69-e7db-4341-99db-e34a43bd373d"
        },
        "item": {
          "id": "42d504a0-82c5-4232-a464-7c0f315d9290",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "39418050-534f-480e-a3e1-25447c37d4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c419059b-795e-4e49-8178-41d1aae880d7",
        "cursor": {
          "ref": "d0d39d92-570e-46e7-a5af-0e1000be017c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0ab11988-2c28-450b-a190-ebfdecf2b85e"
        },
        "item": {
          "id": "c419059b-795e-4e49-8178-41d1aae880d7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7108b8de-6801-43c4-8219-a0bf4e52b420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7679ddbd-162a-493f-a0a5-a79bfea3a6c6",
        "cursor": {
          "ref": "9ecd8080-5fb8-473f-ad0f-7531e2af61af",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3b35d283-89bf-48c2-88db-d600f8e8fc1d"
        },
        "item": {
          "id": "7679ddbd-162a-493f-a0a5-a79bfea3a6c6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "70b533be-3156-4949-bc6f-942e75777d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5108fbb2-fb29-40aa-b06b-060f24fbd476",
        "cursor": {
          "ref": "57c45557-f289-4ef6-8433-7f5209d8b5e8",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "11f05b0b-6af4-4c5e-96e3-715de1e751d5"
        },
        "item": {
          "id": "5108fbb2-fb29-40aa-b06b-060f24fbd476",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2360177f-749d-4e6f-beb2-87e868264cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71e198f-1aac-4303-ae76-ac246058237e",
        "cursor": {
          "ref": "dcb987e0-9364-4715-bc46-9dd1e00c8b80",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5bf55d60-170a-41ef-89b2-ccd2cc5c277e"
        },
        "item": {
          "id": "e71e198f-1aac-4303-ae76-ac246058237e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "79c03e3f-0909-47c3-b727-9acaae4178e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d5f781-b7f2-46ad-afe7-a5b22695dc9e",
        "cursor": {
          "ref": "51c65fb3-c96f-48fe-8f0b-3df65bb2bb2d",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2fc990cd-70ab-4308-8dfa-977a8f15e255"
        },
        "item": {
          "id": "a3d5f781-b7f2-46ad-afe7-a5b22695dc9e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5647904c-a3dd-4d2a-bf3b-94520bf7fcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee44994-b102-4f03-8643-0fe50cfe19ed",
        "cursor": {
          "ref": "7522756d-efaf-4106-acb0-40637849e8e7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a0fc915f-f728-49b9-8e17-4d459eb0823a"
        },
        "item": {
          "id": "5ee44994-b102-4f03-8643-0fe50cfe19ed",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b1d6e65d-1ee1-402c-8403-7fd0acc20940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b2bcfc-2dda-4e01-8c48-9ad4309b3def",
        "cursor": {
          "ref": "90cdb1e5-572c-47cc-aeb5-1d727b142dac",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "476e7b98-4d80-4b54-8b0c-f4543a305120"
        },
        "item": {
          "id": "67b2bcfc-2dda-4e01-8c48-9ad4309b3def",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6a12f14d-62cd-4592-96b9-ee8251b6e83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588cb367-b887-499e-bb4b-505650092b48",
        "cursor": {
          "ref": "2303b305-20c5-404a-95b0-15796d59c873",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "65c94566-34a8-4a54-8e14-92135896a4cb"
        },
        "item": {
          "id": "588cb367-b887-499e-bb4b-505650092b48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bc04c665-68f8-4ff4-bc3b-66b609728d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc3cb81-0dd4-4a1b-854e-e4277851328c",
        "cursor": {
          "ref": "4e417be6-ef52-41a8-8da5-3acdfd9c7b4d",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "95632dd7-fbb1-49aa-8fd6-5c26bd9c3664"
        },
        "item": {
          "id": "5fc3cb81-0dd4-4a1b-854e-e4277851328c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6379b90b-630a-4dfa-8fa7-e6ee8aeb2963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5411abe6-a7eb-484d-ae02-4584c0255b22",
        "cursor": {
          "ref": "552787b8-928b-43ac-a7f7-9709bb50b031",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "111f5abb-93ed-4b72-87ad-249a197dff17"
        },
        "item": {
          "id": "5411abe6-a7eb-484d-ae02-4584c0255b22",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6689c028-2446-4d81-afcd-55fed25ac245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf242a54-a01b-428a-ac93-d2e035da4338",
        "cursor": {
          "ref": "7988c0f6-6533-4301-8c63-7ff00cd9d603",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "96c248da-c576-47b2-9a93-3894cee084ac"
        },
        "item": {
          "id": "bf242a54-a01b-428a-ac93-d2e035da4338",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f08699f0-db35-41b5-98f1-d923069a7316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c6eae1-c560-477f-bfa3-b11fe5fec557",
        "cursor": {
          "ref": "23a6c8f8-47a9-44f2-8506-0ee1775b3348",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6b45a7bb-1c23-48ba-bf20-d2234e6567f1"
        },
        "item": {
          "id": "f7c6eae1-c560-477f-bfa3-b11fe5fec557",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "17d15aeb-98f2-4091-829b-d70952f04f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008bf453-2d19-4d3b-873d-e021c21121a9",
        "cursor": {
          "ref": "2443d327-17b7-4a07-b787-e8ac2d7b94e8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a030d522-ca84-4747-9150-201ddcac8fe4"
        },
        "item": {
          "id": "008bf453-2d19-4d3b-873d-e021c21121a9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7ee9e937-30be-4323-9e9a-05941fbbb7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550c6943-9e2d-4a14-a4dd-4c513fd858cd",
        "cursor": {
          "ref": "e74cd1fa-3fab-4be3-9c1e-d519de607878",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0ab1f117-1f61-4e41-841f-a0a1d08cd7a3"
        },
        "item": {
          "id": "550c6943-9e2d-4a14-a4dd-4c513fd858cd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "325a83fa-45f5-49ff-a777-0e17eecd006c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b9b872-22c7-473a-b32e-66ee790610be",
        "cursor": {
          "ref": "0d804e28-af27-40e0-b25d-cb5ef2010b31",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "60acb70b-f35e-40db-b9bf-8d04149d6d33"
        },
        "item": {
          "id": "c1b9b872-22c7-473a-b32e-66ee790610be",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "08437b8d-8f0b-4c95-bf5b-e6687014b2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3789f9b1-0c04-4220-9787-d4ad34adb582",
        "cursor": {
          "ref": "d1e3eca0-e868-4730-afa4-a5967805e4ff",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "66d4b322-8bd9-4257-a0f4-941e9949f0a7"
        },
        "item": {
          "id": "3789f9b1-0c04-4220-9787-d4ad34adb582",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "aed9d9da-b485-4a60-bca6-d4757196843f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aacc077-d0e3-4821-96c6-02b3615e0059",
        "cursor": {
          "ref": "709e4e0c-016d-4d74-93fa-d7fec975bc23",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "580e9af8-cae4-4e9d-99c7-74d1bf234d2e"
        },
        "item": {
          "id": "7aacc077-d0e3-4821-96c6-02b3615e0059",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9c1d9e3a-b125-4185-ae34-d776f64e4908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7adeab-f62d-4d69-a56f-bc703ad66d9f",
        "cursor": {
          "ref": "461a400a-e201-4614-8f07-9ce12e8a7878",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a5426b7a-9148-48b1-bb95-74407282b107"
        },
        "item": {
          "id": "4e7adeab-f62d-4d69-a56f-bc703ad66d9f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e700ce60-2dba-429a-af43-b1a1606e1151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b717ed5d-8392-4932-b69b-123843364d2c",
        "cursor": {
          "ref": "9c080f09-a0ea-48b9-8ecd-497369a7b4f7",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "56bd082c-65be-4deb-8bbe-2f3efe0478c8"
        },
        "item": {
          "id": "b717ed5d-8392-4932-b69b-123843364d2c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a80d79db-9e4f-42c8-a2fc-956588f67f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bc14c3-75e1-478d-90e4-c766a542fcf2",
        "cursor": {
          "ref": "5bad8513-fc55-4f82-8609-4ad463e2c44e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5edeff04-cd5f-4009-87e2-62d2ecce0f97"
        },
        "item": {
          "id": "73bc14c3-75e1-478d-90e4-c766a542fcf2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e7deea37-cfa5-440f-a3f5-5bfed6f680a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db434a77-5e70-4334-bfe1-75ff48aff3de",
        "cursor": {
          "ref": "bcb45264-f5b6-4c3b-88c2-f1bd1f12d708",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "58ba70d0-911d-44f4-9e4e-f71974a84f32"
        },
        "item": {
          "id": "db434a77-5e70-4334-bfe1-75ff48aff3de",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bf47b7e8-f57c-4e4b-854e-000cfb4e17a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c018453e-51ee-4472-a3af-aa492d264123",
        "cursor": {
          "ref": "cc854e90-3642-4d81-92bf-dae6ad4702b1",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d3309dd6-82e4-4777-a445-decfb3d9a66c"
        },
        "item": {
          "id": "c018453e-51ee-4472-a3af-aa492d264123",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0868fab6-fb05-4f39-8999-676de3eb3854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5d7b94-fa23-4953-b8c6-556e12c827a7",
        "cursor": {
          "ref": "cb8ddf47-d908-4aae-93f7-5456b318042b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "46d62a44-aa94-4b2b-a356-034a87000bbe"
        },
        "item": {
          "id": "df5d7b94-fa23-4953-b8c6-556e12c827a7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a040d2f9-ce36-4b90-a436-fc9c3f9f9b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffd0a5c-e501-45cc-b5ad-63e4086e30ad",
        "cursor": {
          "ref": "6dfd043c-92aa-4354-8fc8-1e1f9bd20390",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "66db5835-e904-41cf-9daf-4cda1725ba85"
        },
        "item": {
          "id": "cffd0a5c-e501-45cc-b5ad-63e4086e30ad",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0a2332cd-a3d3-4eb5-ad31-9545de3bb268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92e09ac-33e3-44c8-be59-9ec87f00e681",
        "cursor": {
          "ref": "de5dd9d1-e82c-4f44-ac03-0575be07be8a",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6d64ac70-3b56-4cff-ba2a-3d78bb6a0621"
        },
        "item": {
          "id": "a92e09ac-33e3-44c8-be59-9ec87f00e681",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "25b322b6-006a-4a39-a66f-2e51ff4b1e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a5dceb-79da-4fae-afc3-c6b8cfa38e08",
        "cursor": {
          "ref": "bd2e45e9-fd43-4a64-baea-6860e870dc21",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "73210b4a-7295-46b2-98b0-715667525c87"
        },
        "item": {
          "id": "a5a5dceb-79da-4fae-afc3-c6b8cfa38e08",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4a8b8fc3-0745-4027-a4d9-d7345974b8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e02722-444b-4e42-9596-627811a7468f",
        "cursor": {
          "ref": "bc8403ca-3142-4f54-821a-9ed306149db9",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1ab46d81-da26-4d19-9fd3-e598ce5a9108"
        },
        "item": {
          "id": "e7e02722-444b-4e42-9596-627811a7468f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4f0bca4e-89c3-4812-b807-72cc8cc3ed1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d32aae-de7e-4ba7-9ccc-ff305df651c7",
        "cursor": {
          "ref": "7422fd92-5cbc-4d0d-b83c-2f9657b655ff",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "267b634d-6c01-487f-bea3-20270804d620"
        },
        "item": {
          "id": "97d32aae-de7e-4ba7-9ccc-ff305df651c7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "66639ae1-9218-4200-ace1-918b9aa9193f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ee5a1b-510a-4a12-8120-74a64e0b983c",
        "cursor": {
          "ref": "e6acef72-8d3a-4f22-b5e6-7a35bc0b0b6e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "92c506e3-32d9-421a-80a6-afb16fb6ac98"
        },
        "item": {
          "id": "60ee5a1b-510a-4a12-8120-74a64e0b983c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a56f2980-7e3e-42b1-b748-6bea75529438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfba29d-47a7-4cfe-98b0-752d2b0f07b0",
        "cursor": {
          "ref": "4f59b3cd-8b97-468f-add0-6c715ac449aa",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c6ab9b80-5d05-4ee5-9e3c-ba157d54b8a6"
        },
        "item": {
          "id": "ecfba29d-47a7-4cfe-98b0-752d2b0f07b0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3ae6ee1e-e713-4b5a-9630-5830c1e96f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861e2a62-ae3b-400e-babc-79836cdbf1c5",
        "cursor": {
          "ref": "fd5203cf-1847-4bde-bc67-3db48a67e5a5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d1bf01ea-f448-4fb2-937b-67ad8704c692"
        },
        "item": {
          "id": "861e2a62-ae3b-400e-babc-79836cdbf1c5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "55bc88bd-4117-47c3-b796-8a6e9275cc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425ef987-910a-4840-af11-f756fa9bf94c",
        "cursor": {
          "ref": "8a734848-b479-45ad-9ed8-de164d43df5c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "718851a9-ea5e-418c-86d9-79564f156a2a"
        },
        "item": {
          "id": "425ef987-910a-4840-af11-f756fa9bf94c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eb1ae3ae-c22c-4a95-8c02-ec3a504f7687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1591c288-389a-4596-99f5-212f31a22cbe",
        "cursor": {
          "ref": "a8a09ec9-8e53-4254-8f26-1fc6a35c43bb",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "866de172-09cf-437b-8b6c-8628c6de3ff1"
        },
        "item": {
          "id": "1591c288-389a-4596-99f5-212f31a22cbe",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c3772e05-a0a1-4cfb-9cf4-2ac496fcfeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a58fa0-4a17-4c34-84e5-1ebf799a1b30",
        "cursor": {
          "ref": "24906945-cc4c-4667-9a64-be63b2619584",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "df46eabc-7d31-482b-869a-dfbcfd23a8a4"
        },
        "item": {
          "id": "15a58fa0-4a17-4c34-84e5-1ebf799a1b30",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "128cec45-4490-4644-b451-69537abcc5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423d977c-6dea-47eb-bb6e-022664ec0f94",
        "cursor": {
          "ref": "d49ced9a-439c-4c7f-afad-67bb00476520",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "96e3155c-a4a8-4b5b-8b79-969b83d72e4c"
        },
        "item": {
          "id": "423d977c-6dea-47eb-bb6e-022664ec0f94",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ed14ea20-2941-4402-9b2b-512a5466fc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed0207e-45d0-441b-aeac-174733af652b",
        "cursor": {
          "ref": "b7e67f44-b770-4662-8e33-83460e92bc8e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "abf48b0a-deb6-46a1-be49-19b6f7625fab"
        },
        "item": {
          "id": "0ed0207e-45d0-441b-aeac-174733af652b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fbfeb77c-aefb-48f4-bcc3-4023d1f248f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c71cec-849b-42a1-aba2-e47e1c773bd2",
        "cursor": {
          "ref": "b6d2dfd0-6b74-4dba-88ea-4a2ca4403de8",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8ca59743-6b3e-4772-8ba0-6ddf7957fff2"
        },
        "item": {
          "id": "98c71cec-849b-42a1-aba2-e47e1c773bd2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "88a01bde-a0a1-4540-b6a2-8b40ad7dacb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9861e2d-db94-45d9-a4dd-4bc0a3b49b69",
        "cursor": {
          "ref": "97d11b72-074f-416e-92c0-d7771451d11f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "32a2bd70-ec42-4bb2-ae2d-109a59e7fce1"
        },
        "item": {
          "id": "a9861e2d-db94-45d9-a4dd-4bc0a3b49b69",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fb752bc2-0b63-4c50-aff4-6280e2bc6814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efb477b-8d7b-4081-a588-a2d362e87620",
        "cursor": {
          "ref": "9eab614a-92c6-4877-b052-84253ecfcaea",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "aa737101-0fbe-4dc4-8c74-d55d4c8d5621"
        },
        "item": {
          "id": "8efb477b-8d7b-4081-a588-a2d362e87620",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b2b45b1e-be8b-48fc-a588-d5bf939ecfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd7821b-0398-461b-bf47-8ff6590ea1b8",
        "cursor": {
          "ref": "81285cbe-2f0e-4620-abeb-aaca0749d1eb",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "97572bbd-eabb-4be6-8aa6-d697b42217b0"
        },
        "item": {
          "id": "1bd7821b-0398-461b-bf47-8ff6590ea1b8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "81326a09-0b69-43f2-9e97-304d89e8a93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0761707-4906-43cc-9339-c8df3ba2d292",
        "cursor": {
          "ref": "87b267f7-56cc-434e-b045-94335ac7a786",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "118d27fb-4f3f-439b-9e61-a3fcea7192a1"
        },
        "item": {
          "id": "a0761707-4906-43cc-9339-c8df3ba2d292",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "594f88e5-0544-413b-b7ed-f5d9f3ff0570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f67a8e-1056-4a3b-ad22-dabf71539606",
        "cursor": {
          "ref": "afc8aca4-868c-4aa3-a1e7-7facb5f50491",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3752270e-4e73-4184-9370-e52a7e1c8985"
        },
        "item": {
          "id": "62f67a8e-1056-4a3b-ad22-dabf71539606",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4a10bc3c-aca5-4473-aec3-a79d012884fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b17eae3-1733-473e-983b-3aaa8e215c9d",
        "cursor": {
          "ref": "6811df62-d033-4117-abbf-7627662c4368",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "010be5bf-48dd-4a9a-a739-320830a75d64"
        },
        "item": {
          "id": "3b17eae3-1733-473e-983b-3aaa8e215c9d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dc20d375-1e1f-4d2f-934f-689458d70c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1a4e0ffe-7010-4e51-93e8-ba9904da91db",
        "cursor": {
          "ref": "ed96d418-e2e2-4558-ae7c-ff31388f6788",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1e0709e7-db56-4f47-bad4-2c67f34ec158"
        },
        "item": {
          "id": "1a4e0ffe-7010-4e51-93e8-ba9904da91db",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4af4e051-66bd-4785-9a72-5387a4e403cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "74ac1cfc-af2a-46da-ab06-4c99273a623a",
        "cursor": {
          "ref": "adffaf1b-fa7c-48da-99f5-b5196a44b629",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "07a404b0-3bed-41b9-946a-5f9466afb7d5"
        },
        "item": {
          "id": "74ac1cfc-af2a-46da-ab06-4c99273a623a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2c4c0c88-f395-42f9-9afb-99442924ba3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8b6a72bc-a4fb-4c71-a8d9-88bf1af5e88c",
        "cursor": {
          "ref": "8d386420-cbe8-4267-b073-d028594049e9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1f037df0-b189-4c3e-8e62-bad999f00660"
        },
        "item": {
          "id": "8b6a72bc-a4fb-4c71-a8d9-88bf1af5e88c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "25f4808c-4450-4b63-b797-da44d8d92ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "316ae139-90be-4c80-8f51-f334349e4351",
        "cursor": {
          "ref": "bf401419-0db2-481d-80bc-517ef1ae4044",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "966255b7-7fc0-4211-8c7f-f2d5c4a307cb"
        },
        "item": {
          "id": "316ae139-90be-4c80-8f51-f334349e4351",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d90d659d-ad42-4f0d-9ac8-d241223c9cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "8d17ad92-7d0b-4708-88ea-60a2c26ea9b4",
        "cursor": {
          "ref": "5feedf6d-2dbe-4c62-84f7-defce1aca8a3",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5259abbf-2d37-4d28-928b-0982ff93857e"
        },
        "item": {
          "id": "8d17ad92-7d0b-4708-88ea-60a2c26ea9b4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "59879be8-161c-48dc-9194-491b93ff47b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0c4598c8-658e-4c1e-883b-7c27b718891d",
        "cursor": {
          "ref": "5bd7472e-6978-4f2e-9d3e-393f3ba8dee3",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "58912d9f-d911-4755-bb14-066f219ccc1e"
        },
        "item": {
          "id": "0c4598c8-658e-4c1e-883b-7c27b718891d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "35f5e710-4d42-4907-9044-9e9547e6b2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "68223449-e536-4a32-b137-2ad52c150b7c",
        "cursor": {
          "ref": "89f83595-bbc1-4cc3-92bb-6fa29cab9c77",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "db2e3e49-d653-47e1-baf4-2a639300c19b"
        },
        "item": {
          "id": "68223449-e536-4a32-b137-2ad52c150b7c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5b71370c-6c7c-4bd5-bbc9-3606fd628fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e0d19a-e4f9-4d05-8dd2-d42a6690c638",
        "cursor": {
          "ref": "1698271a-1afb-4845-bc3e-19f8fb4513b3",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "17d18fb9-a102-4c2e-a68d-36a5f8061d5a"
        },
        "item": {
          "id": "b9e0d19a-e4f9-4d05-8dd2-d42a6690c638",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c6e5b5ba-0030-46aa-aee6-1faeff393d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b17773-844f-42b7-ba7c-3b1496b66383",
        "cursor": {
          "ref": "1dceeaa7-98fc-4f3f-9cdd-6b6d95670e89",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2cf0ecb6-4ff6-4f89-89d0-5f063c03bfa8"
        },
        "item": {
          "id": "91b17773-844f-42b7-ba7c-3b1496b66383",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cc9c10f9-82ad-4e2e-b16c-09a835118334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29baadf-ce09-4746-aaf9-46bafca4a0d1",
        "cursor": {
          "ref": "bbf84daf-1060-4568-9546-27cbd3982b45",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2bcf65b0-1b35-4455-9825-147f3b5242b4"
        },
        "item": {
          "id": "c29baadf-ce09-4746-aaf9-46bafca4a0d1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f557a138-d34c-4915-baf2-865f41efe603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17503a5d-998b-4061-8224-6689def9d84e",
        "cursor": {
          "ref": "c7a4b15c-4c43-4f4c-8d6d-d1cc77ae206b",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b6a0d14d-9647-499f-9497-55173086fce9"
        },
        "item": {
          "id": "17503a5d-998b-4061-8224-6689def9d84e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9b9716c5-6e03-4f78-a798-31c5cc99454d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ba7a81-b5eb-4755-b77b-d350236fdd7e",
        "cursor": {
          "ref": "6fecf735-267e-47c5-a8db-eddd36e06afd",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1e23a50f-e1e4-48ab-b663-156e18fc5e99"
        },
        "item": {
          "id": "a8ba7a81-b5eb-4755-b77b-d350236fdd7e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2857b03d-103a-44ab-822f-b3ee4797ca70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9c3a86-488b-4752-9c78-9a4897d1df57",
        "cursor": {
          "ref": "43895819-9dcc-48c0-888d-776421976b50",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "63e5eafd-df66-481e-b176-a97358366bbe"
        },
        "item": {
          "id": "8b9c3a86-488b-4752-9c78-9a4897d1df57",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "17054a25-aa3b-4908-bc64-9d92ef9c79c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98223387-1bfb-43eb-a25f-a18360f06c19",
        "cursor": {
          "ref": "eceb4b69-cd72-4328-a8b1-98fe6927e8d1",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8dd93400-1a5a-4b7c-9af6-cb72c3823901"
        },
        "item": {
          "id": "98223387-1bfb-43eb-a25f-a18360f06c19",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "469f9524-a16d-4aba-9604-2de20b585d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421c3132-86d5-4fb6-8ad2-8a67297ea0f9",
        "cursor": {
          "ref": "8196328a-6c3e-470d-a181-207f234429a3",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "25866cdc-2721-4df0-b08e-8bda689a72d9"
        },
        "item": {
          "id": "421c3132-86d5-4fb6-8ad2-8a67297ea0f9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e09807ad-1474-4442-a501-6b7ca2f5291c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd8fb48-be61-4ef5-9f04-6934ebb23a2d",
        "cursor": {
          "ref": "7253c67e-ac69-4422-bcc6-b2342c14f67f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dc50a636-097b-4e20-82a8-47c126c20d70"
        },
        "item": {
          "id": "dcd8fb48-be61-4ef5-9f04-6934ebb23a2d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7e5f5c0b-41ba-4983-8c81-f6424050ad12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc64b31c-3130-43ed-813e-c3c5edfe670a",
        "cursor": {
          "ref": "75151190-4eaa-4b23-a900-2fc826b32752",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b0d9cbe6-d3c5-477e-9ad0-f7c60156b2da"
        },
        "item": {
          "id": "fc64b31c-3130-43ed-813e-c3c5edfe670a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "93634f59-e900-4118-a265-04504b6fc20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9fc1ec-f625-4691-a780-06872fea69d6",
        "cursor": {
          "ref": "5b280bb0-e3f4-4e3c-9955-e49e152b971b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "58461aa3-dbc4-41bc-b553-25f85c6a8686"
        },
        "item": {
          "id": "eb9fc1ec-f625-4691-a780-06872fea69d6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a9dc821f-704a-4271-8a46-caf74eb55577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e899e8-43fb-44b1-bb9d-10288183e6af",
        "cursor": {
          "ref": "713533eb-adaf-488c-b293-7aa5b65c26c4",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "44b5c235-4806-4c08-940c-c489e1285854"
        },
        "item": {
          "id": "00e899e8-43fb-44b1-bb9d-10288183e6af",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b2fd0a04-c50c-4deb-9775-dbcf237d9d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99fb4d2-928f-44cb-9ce0-3acdd7294be4",
        "cursor": {
          "ref": "0cd4fca4-d275-4652-b542-9264af06637f",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cc2cd88d-3989-4f26-aabf-5f45d7c26b6a"
        },
        "item": {
          "id": "d99fb4d2-928f-44cb-9ce0-3acdd7294be4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d047e6ec-a598-4013-9347-74e05be51ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5f56b9-95fc-411d-8ac1-c8938be3a4d4",
        "cursor": {
          "ref": "fc5dec2a-4187-48cf-963b-cd36448a12b0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "72f931b7-0fba-49eb-8651-c2be33f1212b"
        },
        "item": {
          "id": "fb5f56b9-95fc-411d-8ac1-c8938be3a4d4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4036be44-0cae-4c30-a664-7f82b9600d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6225cfcf-032f-4c38-9088-9127073cb008",
        "cursor": {
          "ref": "878ea8f3-e744-4a01-bbda-0198410cf916",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d515aee3-a67f-4f22-a4bc-f3bc4c6185bb"
        },
        "item": {
          "id": "6225cfcf-032f-4c38-9088-9127073cb008",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "761b374c-ea0c-4cc3-8009-3b9e608c84a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b1fa5f-9770-431c-8e68-1ef77b93dc27",
        "cursor": {
          "ref": "649afddc-925f-448b-869c-006ad7dccc48",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e671ff1f-9614-4e17-a83c-8232f4b3377b"
        },
        "item": {
          "id": "f9b1fa5f-9770-431c-8e68-1ef77b93dc27",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "17943226-bbf9-4ba4-8c9d-a9f9cb8d1a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a06e056-04a8-440d-8d07-4ffe08c13953",
        "cursor": {
          "ref": "bd32b09b-01b4-42cd-a041-fdda8a430239",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "be32871b-cf02-4762-8f44-a23d40c34a16"
        },
        "item": {
          "id": "4a06e056-04a8-440d-8d07-4ffe08c13953",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "00e8d725-9c00-4965-8a2d-48730b9d5471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7de957-a402-42ca-a7a4-025d90abf11d",
        "cursor": {
          "ref": "c2f3ca41-ed15-4eec-8aad-b05ce4028667",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7562a43b-910c-43b7-9ded-c2e14a992901"
        },
        "item": {
          "id": "3b7de957-a402-42ca-a7a4-025d90abf11d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a4f12543-54ba-4ee7-86e5-243391a8a597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0cb213-a96f-4e73-a8ae-a28119f734ec",
        "cursor": {
          "ref": "12900d10-9584-4185-bd77-20e009a87c0e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bda1c627-12d8-457e-a409-14177f31986c"
        },
        "item": {
          "id": "aa0cb213-a96f-4e73-a8ae-a28119f734ec",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fc563dfd-78df-4c03-adbd-f7d0a14bc5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3954564f-fdea-4838-bc84-f9dc69440474",
        "cursor": {
          "ref": "b5f28b9b-156c-4f5b-8cc3-6d15a816d545",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3e74a2b1-6739-4b64-be21-745a979b656d"
        },
        "item": {
          "id": "3954564f-fdea-4838-bc84-f9dc69440474",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "feb55c86-ecfa-4c7d-8397-aac0ef4ba392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98804361-62a3-4652-b81d-24619bc7410c",
        "cursor": {
          "ref": "1a2bcd16-1731-4d9b-a59a-2266d225164e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ee5c02e0-e673-4ea6-912c-bb07e9e9c272"
        },
        "item": {
          "id": "98804361-62a3-4652-b81d-24619bc7410c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "04b57fb2-1a8b-4d1b-8ff5-cd80cb661b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5ea426-ac68-46c5-9ce1-64cfd3306f29",
        "cursor": {
          "ref": "a8257141-b792-455a-9946-f01163f8c1ae",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b268e32a-024c-49c2-93e9-1f90d420c7db"
        },
        "item": {
          "id": "2a5ea426-ac68-46c5-9ce1-64cfd3306f29",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "723f877d-8ea4-4676-82c0-86eb14588d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786ae59d-1aee-4039-bad3-2ee726100830",
        "cursor": {
          "ref": "18abd4d6-25ec-4816-8640-ef8e9a10b366",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1434353a-476e-4e48-a290-bdbfa3641f03"
        },
        "item": {
          "id": "786ae59d-1aee-4039-bad3-2ee726100830",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "92e8ab84-2f83-4268-adda-bcefefe545cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410e510e-d318-40f7-b826-cb371a25a86c",
        "cursor": {
          "ref": "d7074ebf-2862-4d33-b702-a6fc687bd2b4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e797f15b-bf45-48a4-83ff-5a68886aaf33"
        },
        "item": {
          "id": "410e510e-d318-40f7-b826-cb371a25a86c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "49d6fe6d-304f-43b6-ad2d-c2a0918ae5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb02fe90-e500-4c5a-ad8d-edea70493645",
        "cursor": {
          "ref": "a410bc36-b9d5-4709-99f5-acfd1c93e603",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1e8e94b4-c8d9-4384-90f1-847249fedebc"
        },
        "item": {
          "id": "bb02fe90-e500-4c5a-ad8d-edea70493645",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "18f6ad69-80d8-4142-9ed7-d473caf54356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54673044-b796-48b4-8649-da40a9500ed7",
        "cursor": {
          "ref": "8bd1ce60-cc28-4270-8115-ef0ad2cefb96",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "513ed82d-ccd7-4520-9681-97c34e13f14a"
        },
        "item": {
          "id": "54673044-b796-48b4-8649-da40a9500ed7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0fd86529-dd8a-4681-9f57-0eec5e6863f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd6640b-54a7-4936-a909-f62ffea7e7b7",
        "cursor": {
          "ref": "1efbcefb-1ddc-4b8a-bfa1-ebf2d271a9cd",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6460c55d-2208-41d8-9cea-b8b1bb8a8cc9"
        },
        "item": {
          "id": "ecd6640b-54a7-4936-a909-f62ffea7e7b7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ba177c8e-255e-4987-af43-4634bd6f0e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1436ba-c18f-4c23-a648-1b869c2282e8",
        "cursor": {
          "ref": "7252993f-e451-4e2e-bf54-1ddd58141963",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "18093c4a-8f84-4af0-b469-ea7a5b39bbb8"
        },
        "item": {
          "id": "be1436ba-c18f-4c23-a648-1b869c2282e8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "abb7f9de-8220-403d-86d9-980d8dde0bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4ff93e-d904-4091-9dd5-cad6c2020531",
        "cursor": {
          "ref": "bff7c3ac-5489-46e1-aa40-b00485dea4b9",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dc111d08-825c-4ff3-86a1-de905f54346f"
        },
        "item": {
          "id": "8b4ff93e-d904-4091-9dd5-cad6c2020531",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f71eeed4-0c0d-43db-946a-0c23ce26c483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e59f1f-d823-47ee-be13-37d4698ae11a",
        "cursor": {
          "ref": "b9dd98bb-38f6-4faa-ac79-45693cedd86e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2add43fb-6001-4ee7-a735-d768e18650eb"
        },
        "item": {
          "id": "b0e59f1f-d823-47ee-be13-37d4698ae11a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8e828c97-cd83-4f55-9867-d536ad22e003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cee64b-1662-40da-96d3-4cfeb49dcf07",
        "cursor": {
          "ref": "adfe212d-3c79-48b4-8eeb-17121dcc36bb",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ac8a9dd7-d29e-4c52-aa09-85f095a27117"
        },
        "item": {
          "id": "a7cee64b-1662-40da-96d3-4cfeb49dcf07",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0b0fc3d4-b4b7-45fa-ad8c-3916b664f750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19a02bf-f6c6-4b99-99e5-a73573be37ee",
        "cursor": {
          "ref": "e22f5120-dd06-41ca-bc7e-bfeb383aef4c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9d693d57-1b47-400f-9321-4ac91afd3974"
        },
        "item": {
          "id": "e19a02bf-f6c6-4b99-99e5-a73573be37ee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "89704cd7-9946-41a5-85c5-f135c7bc0959",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7e4449-1ecc-4fa3-8b87-5c4bb76d7ee5",
        "cursor": {
          "ref": "e6dff14a-1162-4593-80c3-430c6bff188f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1de2fe07-9415-4cf9-a5e6-86d6d0c26507"
        },
        "item": {
          "id": "9a7e4449-1ecc-4fa3-8b87-5c4bb76d7ee5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0f2ee27a-423a-46d3-b656-991c4932180e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1513712-77b2-432d-b755-ad80ab5f7c22",
        "cursor": {
          "ref": "50da6ade-c135-498f-b0a4-8d8cf2c447b0",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e2898bb9-b508-4c92-9b31-c5f062c2d493"
        },
        "item": {
          "id": "e1513712-77b2-432d-b755-ad80ab5f7c22",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "52603a49-1ccd-4bce-9c20-a1e01578a89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e599154-d3ef-4e92-a044-b8a4898943bd",
        "cursor": {
          "ref": "769528d4-752d-4d84-981e-a227f747598a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a1f453f1-e753-4e94-b5a2-54e348cca494"
        },
        "item": {
          "id": "3e599154-d3ef-4e92-a044-b8a4898943bd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "baa1b463-a7af-4704-af5c-c87ec233ab22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127c6c52-ebe6-4bfb-9d1c-6a03640ab294",
        "cursor": {
          "ref": "708f583b-cb37-4f88-bb7f-cda3c004f9fc",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8043244c-5fc0-4e1a-b593-cd46931b3d59"
        },
        "item": {
          "id": "127c6c52-ebe6-4bfb-9d1c-6a03640ab294",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ce54ec02-bef1-4a7b-b3ea-e1e730d4f5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b152ee6-a783-48d1-ba3f-b0da38693706",
        "cursor": {
          "ref": "7240bed0-6e83-4099-9f0b-ac44468ca85c",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c1daa945-f238-4730-8998-247931a014ce"
        },
        "item": {
          "id": "8b152ee6-a783-48d1-ba3f-b0da38693706",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2ba3d49a-41d0-4509-91f2-3888fbdd0df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a24bf3b-85ce-4d8c-a103-276b91407e80",
        "cursor": {
          "ref": "ef258f23-bc81-4ed9-8fad-6c2f77ac5cb0",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1d1ad4ea-a24d-4e63-89aa-805a174d05fd"
        },
        "item": {
          "id": "2a24bf3b-85ce-4d8c-a103-276b91407e80",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9b9c892c-6bfa-4903-8083-381fddc2c932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36803425-e52e-4e21-9b56-4e1cda52bfee",
        "cursor": {
          "ref": "fca1af4b-a568-4fba-b841-34fe56f45c2f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "38164812-edeb-4f54-ab34-b3223801cfe8"
        },
        "item": {
          "id": "36803425-e52e-4e21-9b56-4e1cda52bfee",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "36605993-7c41-403e-9716-6e1de1b4e04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcdb0c6-a1e5-4374-8173-3225594c21e8",
        "cursor": {
          "ref": "089b4464-5868-4740-bba5-519a96db6bd4",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "22b1e503-cc8b-42ae-8bd6-74d7d59c96c8"
        },
        "item": {
          "id": "ddcdb0c6-a1e5-4374-8173-3225594c21e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ffd2906a-161e-4241-85ce-4ed69dca3cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81ec903-fae6-46f6-9032-c612b3c487b4",
        "cursor": {
          "ref": "3e3a01b0-b3e3-4518-882b-b0a450fd7df7",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4041304e-31a9-423f-9524-037b80d51bd2"
        },
        "item": {
          "id": "d81ec903-fae6-46f6-9032-c612b3c487b4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "09ceff6d-99a9-4eb2-a0dd-33115fe26867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf702f8-f6f8-42e1-9230-bf1f8b5f2e19",
        "cursor": {
          "ref": "a8696681-ca79-48fc-a424-14a8a4558168",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "62774d10-153b-47d0-87d8-6f05c67aa86b"
        },
        "item": {
          "id": "7bf702f8-f6f8-42e1-9230-bf1f8b5f2e19",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "aa521a93-290d-4178-b29b-aac0733df8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81ca76c-437b-4edd-90d5-0204dd674e10",
        "cursor": {
          "ref": "4f8bee6d-fa65-48c5-872c-dc25b6437785",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "55c77a11-ebd9-46ec-bc0b-49f97227cfa5"
        },
        "item": {
          "id": "a81ca76c-437b-4edd-90d5-0204dd674e10",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "12eff078-35a1-4d4c-a2fa-f7eab21653fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b40e64-eb36-42a1-bca9-d8d313dbcf81",
        "cursor": {
          "ref": "b59741ff-ac71-4012-9564-6db14a00a4f3",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ede1e4d2-9906-4adb-afc1-1a652b680107"
        },
        "item": {
          "id": "b3b40e64-eb36-42a1-bca9-d8d313dbcf81",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4e382fa9-f079-46be-be35-e67d5ff91a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cc0e4e-5ba2-4f06-81fc-411aca5049b0",
        "cursor": {
          "ref": "08413b7a-b602-49da-9a09-61207e76c8f9",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "81c3e8a3-3c91-42d2-8368-391d7b89c541"
        },
        "item": {
          "id": "66cc0e4e-5ba2-4f06-81fc-411aca5049b0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "688978d1-6d60-465e-8afd-7c45afc3e4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0722559-bcf6-496a-897d-ab50d66a249f",
        "cursor": {
          "ref": "2f904377-bc5a-445b-a1fa-2b3d8a21832e",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "00b86deb-bb60-44ab-b9e9-0e247497ca91"
        },
        "item": {
          "id": "f0722559-bcf6-496a-897d-ab50d66a249f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2f2e40b4-81f2-4db9-a5d5-de667fb96ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c504b4ef-7164-4895-8efd-8db703df5287",
        "cursor": {
          "ref": "7cc24cd3-724a-42bf-bcbf-bf8881f236b7",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6b72fa6e-dd94-4048-9124-5fd5e374fd47"
        },
        "item": {
          "id": "c504b4ef-7164-4895-8efd-8db703df5287",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9ddfeb22-618b-4af7-a2b5-2ec863229868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3597056-013e-4824-98ca-96b61e1fe372",
        "cursor": {
          "ref": "3a1513c3-5ed3-4587-85c1-cfc1debf9477",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b0596962-6244-4545-a195-93c71b3b5d9b"
        },
        "item": {
          "id": "c3597056-013e-4824-98ca-96b61e1fe372",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "15c06dbd-be9d-4be6-9043-3653dda7f993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d818e27-a9bd-4f81-a82b-087a29fc0c61",
        "cursor": {
          "ref": "7c926ad2-055a-4741-a850-64024f28aa20",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "89f7b585-8825-4684-ab20-e4af01a6257c"
        },
        "item": {
          "id": "2d818e27-a9bd-4f81-a82b-087a29fc0c61",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f5a4199f-0088-4cb5-82c9-073fdaca94fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe46889-2f60-4a2f-9ecc-9930a2287445",
        "cursor": {
          "ref": "c5595ae9-5d96-4ee7-8138-1a018896ade5",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f708b816-3e76-4b2b-9d1e-c2094698d854"
        },
        "item": {
          "id": "4fe46889-2f60-4a2f-9ecc-9930a2287445",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3473a67d-74f6-439e-a63c-651bfd985dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e37ce7b-717d-40d3-899d-32fb6c34bce2",
        "cursor": {
          "ref": "5bc94de6-b943-484b-bea0-350bfa78de01",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6fdcc576-c8cd-4d51-8f1f-f2cd88e5b6ce"
        },
        "item": {
          "id": "5e37ce7b-717d-40d3-899d-32fb6c34bce2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "80a83b0b-7386-4fa0-8afb-72ac4a5b0e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eba64ee-bd66-46ac-9f5e-8c9630ed6528",
        "cursor": {
          "ref": "761b13ab-d704-406f-907e-02536eac528d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "de595203-50ac-43a6-adf5-d89a0f49ebaa"
        },
        "item": {
          "id": "2eba64ee-bd66-46ac-9f5e-8c9630ed6528",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "204fed65-d8e9-4416-9a54-9ca69b67f9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d47d9b-c52b-4f2f-9d37-5ca42c2edcc5",
        "cursor": {
          "ref": "52bc26c2-4c01-409f-ba09-b0d6a8b05977",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "360087fa-ea01-4217-b8fe-12f400764fd6"
        },
        "item": {
          "id": "75d47d9b-c52b-4f2f-9d37-5ca42c2edcc5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "42e9d554-1f0b-4542-96d9-40691b92a33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a0e3cb-0c76-48ca-bd8f-8fc4dab7e57c",
        "cursor": {
          "ref": "0e5f2b3f-068c-464f-bbe3-b51a2e10e5d7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "03fa9c31-15ec-4460-8eaa-0d3dd511b4c1"
        },
        "item": {
          "id": "c0a0e3cb-0c76-48ca-bd8f-8fc4dab7e57c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0d4669b1-50c7-436f-8cd1-c14d08e33449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fafa5ab-10da-4191-aa71-63085c242ec7",
        "cursor": {
          "ref": "d334befe-cb35-4834-a9e7-20291fbc714c",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8d5add36-d22a-4884-9d89-017025194f9d"
        },
        "item": {
          "id": "5fafa5ab-10da-4191-aa71-63085c242ec7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "af0574a9-a707-47d7-a284-6441b101c83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c666496-14c0-46d0-8a55-b6313de13200",
        "cursor": {
          "ref": "566ef13e-82ab-4531-ba16-9b67f0209b6c",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9a816718-be22-43d2-882d-f25c1b99337f"
        },
        "item": {
          "id": "9c666496-14c0-46d0-8a55-b6313de13200",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f200ee36-2ce0-4fe3-8f9f-cca534f2475e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42efe753-f6e2-4473-a271-47ed66f0dbc1",
        "cursor": {
          "ref": "ed0e8ec4-e9b8-4ba4-b973-7acee7e05267",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8ab267b8-e3f0-49a2-b034-ca45f6fba319"
        },
        "item": {
          "id": "42efe753-f6e2-4473-a271-47ed66f0dbc1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2fc5757d-779a-4494-a56e-0fd1b64afdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cea8d0-68a0-4001-91f5-3d59900ef2f1",
        "cursor": {
          "ref": "27d74672-7491-432e-8008-3ca6a1b5bb86",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a0592b33-d333-4115-90e9-cb05666bdf6b"
        },
        "item": {
          "id": "08cea8d0-68a0-4001-91f5-3d59900ef2f1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ad7814d7-5a01-40e8-a2a2-367bcae05533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef07f5b6-6f70-4e0e-9686-dbe49d427742",
        "cursor": {
          "ref": "06582572-0689-4dc9-a165-f4d2637bfa17",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e4e6825d-7b40-4550-9df4-ca097f8f086a"
        },
        "item": {
          "id": "ef07f5b6-6f70-4e0e-9686-dbe49d427742",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "90c53cae-3091-457f-9f0c-88d67ed04194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9875d2-5dae-476b-a620-8abb32883bc6",
        "cursor": {
          "ref": "bd6b0450-2b87-4b35-b7fd-74be80f84c11",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "692099d7-d977-4974-9761-ac9529e05295"
        },
        "item": {
          "id": "4d9875d2-5dae-476b-a620-8abb32883bc6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9c3d165b-b168-45cb-baf4-8ce0bb6aec53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec09a14-447a-4247-89e5-f5785acf862f",
        "cursor": {
          "ref": "7ba0eba9-dada-4649-9820-5d5a2332e46e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "63012dba-037e-4925-a902-e9d1ac920d58"
        },
        "item": {
          "id": "9ec09a14-447a-4247-89e5-f5785acf862f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5629029f-3a84-4f48-b17c-c437f903fbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb537f6-e281-4169-bdf5-4b942da9ef25",
        "cursor": {
          "ref": "5c73725c-b46e-445d-adf0-4247a36e2e36",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b493ec5b-9181-41b3-97ab-89a92b69132a"
        },
        "item": {
          "id": "7cb537f6-e281-4169-bdf5-4b942da9ef25",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fd5698b6-4173-4bfc-9865-a77c549f514e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3390383a-f35d-4554-bcbc-9400fc808cd9",
        "cursor": {
          "ref": "c2953eac-9952-4911-b157-f3300c710bc0",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cef52611-1629-4bdc-a91b-b2cdc1e6575c"
        },
        "item": {
          "id": "3390383a-f35d-4554-bcbc-9400fc808cd9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "492efbed-1f08-438a-b8fe-196bc318fb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951bbd94-e980-4204-a4fd-5e91587ec3bd",
        "cursor": {
          "ref": "0a37dcfc-faed-46c4-95f1-ee326bbbca29",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "677b8395-6963-4f9b-b416-9143f58c4d91"
        },
        "item": {
          "id": "951bbd94-e980-4204-a4fd-5e91587ec3bd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "704a7444-36b9-47d7-ad15-696e88cc94f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b145d80d-fa7d-4212-a089-e9991579ee9c",
        "cursor": {
          "ref": "e4769841-9fab-4c58-9c1c-846b06d1ab4b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e61c45de-f2e3-4df8-87f2-f949e0af5a90"
        },
        "item": {
          "id": "b145d80d-fa7d-4212-a089-e9991579ee9c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "aaca0038-0ecd-4ccb-a6b1-a11e5f16ad84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b9b8eb-4dea-4dc7-93ea-01bf88e412bd",
        "cursor": {
          "ref": "e2e681b0-3630-446d-a33b-b4432ba0185a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c351428a-2a20-4bd4-ae43-6f9fedba9f83"
        },
        "item": {
          "id": "07b9b8eb-4dea-4dc7-93ea-01bf88e412bd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9f6a5bcf-90d2-467d-8925-8704a94af0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828e7f82-43ea-442a-9ee8-aac7e9967463",
        "cursor": {
          "ref": "630ced50-9ffb-4859-9825-e3d9d8359f16",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ecc57d43-9449-403e-b21d-8211d46f9cef"
        },
        "item": {
          "id": "828e7f82-43ea-442a-9ee8-aac7e9967463",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "aa58df02-dc19-4c01-bc81-fe446954a870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f68c2fd-8657-4fe0-8b59-5c4905b559ba",
        "cursor": {
          "ref": "a273b472-b3e4-4df3-9983-3229363fa17c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a465f1ec-5651-456f-b236-f2c4a0ca665b"
        },
        "item": {
          "id": "9f68c2fd-8657-4fe0-8b59-5c4905b559ba",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2c493de1-5185-41db-8b9f-4bbd0fd80613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9764d12d-e8a2-4763-8872-02e0122e85f5",
        "cursor": {
          "ref": "13543d44-03f7-4551-8cb4-474ac5834643",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e1d85044-2abe-46bb-980a-18677b58ecb1"
        },
        "item": {
          "id": "9764d12d-e8a2-4763-8872-02e0122e85f5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "aa7d7a88-7ca8-46d7-9ff7-2376769506a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62a7b3e-9ca2-465d-801c-de8567735255",
        "cursor": {
          "ref": "cac0c8e1-1465-4f7a-846a-f2daf73014f9",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9ada17dd-534b-4a7b-9360-38679b52fe92"
        },
        "item": {
          "id": "d62a7b3e-9ca2-465d-801c-de8567735255",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a4ee3aee-0800-49e3-ad6b-810b6f54c651",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc4755b-2547-4156-a0c3-b5fe0162d656",
        "cursor": {
          "ref": "74abfd48-395c-46fe-acbd-e8d0b58e424c",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e7a8a4b9-4224-4370-9825-141f0e3973e9"
        },
        "item": {
          "id": "5dc4755b-2547-4156-a0c3-b5fe0162d656",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5915dfb8-0f7e-4cff-90b7-6bed45e3353e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4304a2b-4e74-4197-baa8-e52491291576",
        "cursor": {
          "ref": "ae3e6dba-5ff5-42dd-8f21-12d74e82ebaf",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f3ea73eb-16f1-4d4b-8201-1e4190b676a2"
        },
        "item": {
          "id": "f4304a2b-4e74-4197-baa8-e52491291576",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fdb09df2-8f54-4419-8722-0324e763e241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3186ed8a-01da-42e9-9f2a-40b2d4fac332",
        "cursor": {
          "ref": "dbb2cdfa-e6c9-4ff0-8c78-c5f52ce162ec",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8fef646d-3386-4937-b04e-df80432eae9e"
        },
        "item": {
          "id": "3186ed8a-01da-42e9-9f2a-40b2d4fac332",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5f0efb19-dbbb-4aed-890f-1e4f8568d52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3432c4a0-e117-4551-a948-d4714a1cee9c",
        "cursor": {
          "ref": "c34caa1f-ec08-476f-97dc-ea8e1a64320e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8bc939ff-9a9b-4f53-b90b-66db805e9746"
        },
        "item": {
          "id": "3432c4a0-e117-4551-a948-d4714a1cee9c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "40d3467b-e0c1-4fdb-b00d-f5738b935dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4bcee0-4293-4599-858e-eb1fc5380534",
        "cursor": {
          "ref": "1400bcdf-4ee5-4d00-8257-f30b706e59e3",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "577deba5-2c86-401b-8409-68c8edc0bcb6"
        },
        "item": {
          "id": "ef4bcee0-4293-4599-858e-eb1fc5380534",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2ef66aec-4494-4419-bacf-fb80ccd28484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8b4297-a5cb-4507-a0b0-da775884aa9f",
        "cursor": {
          "ref": "69aeab9d-4bb8-48f8-b269-88ecc34c5d18",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "308f29ca-eb13-45a4-b278-64e4c2ea8ac0"
        },
        "item": {
          "id": "ad8b4297-a5cb-4507-a0b0-da775884aa9f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8fc66e73-98a0-4a34-be9e-0ac7dc524ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5620815b-0981-4ded-a693-64297a101b28",
        "cursor": {
          "ref": "d54668b3-16d4-4530-88ec-f847ed59346a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "789d861a-1461-4415-9b27-2f2550086fd1"
        },
        "item": {
          "id": "5620815b-0981-4ded-a693-64297a101b28",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8140df1c-8dfc-4f5b-bcd4-b7741079a5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5d16f8-ee7e-48fb-8c9c-60be22ca7d9e",
        "cursor": {
          "ref": "ea1bbb94-6abe-4b1d-9cbd-53fb7c71ba3d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "be7d5d65-89d8-4bbf-8efc-5fa834713f28"
        },
        "item": {
          "id": "7b5d16f8-ee7e-48fb-8c9c-60be22ca7d9e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "41e8128c-1883-4387-a44d-df414bd8ae3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff0bc97-f7be-45a4-b96c-d0d2d6b5ffac",
        "cursor": {
          "ref": "0137edca-e6c8-459d-ae87-582b99e14198",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d33783f6-f1cd-40ea-b12b-4981250d5149"
        },
        "item": {
          "id": "fff0bc97-f7be-45a4-b96c-d0d2d6b5ffac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "635fc06c-4276-4549-8bbd-fe752f3d82e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56857c5-3ae9-4bf4-97c6-94107ac48934",
        "cursor": {
          "ref": "77f03ec7-4a3a-40ba-8a64-439cd9a615d4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6a1687c2-8c02-4f26-be30-32acd190cab7"
        },
        "item": {
          "id": "c56857c5-3ae9-4bf4-97c6-94107ac48934",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "111dc24f-3f63-4804-8fe2-1f0cd724ddbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec7b1cc-13b7-4ee7-8841-d1e26243d161",
        "cursor": {
          "ref": "83ab7422-ba76-495d-bb7e-158dc9138bf9",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9f103d04-020b-45b4-b2ea-dc881e1b855f"
        },
        "item": {
          "id": "dec7b1cc-13b7-4ee7-8841-d1e26243d161",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e6d7312c-e62f-46ad-a747-0ce782b444ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ff04b7-4bbc-4b38-840f-3fee86f8269c",
        "cursor": {
          "ref": "8fc42c03-7559-4102-a68f-87b273824bd0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "88838932-974f-408d-9ad8-f7e4befa59cc"
        },
        "item": {
          "id": "a0ff04b7-4bbc-4b38-840f-3fee86f8269c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0a100fcb-bfdf-4d27-a500-4e2c1ed4bb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6ae235-483c-4b7c-8026-797f26dd7068",
        "cursor": {
          "ref": "b28e2c1d-be10-4c46-83d8-c8497c1e4ac9",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "aae18d9e-e027-466e-a2b8-910097b3c7e4"
        },
        "item": {
          "id": "9a6ae235-483c-4b7c-8026-797f26dd7068",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7ecb4313-49c0-4fdf-8270-ededccae25d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9028295-8915-4441-b0d7-287404680a3f",
        "cursor": {
          "ref": "61fc6910-5759-49d6-acfe-7e520d522013",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b029f99c-5c53-4069-ada4-4260153765c1"
        },
        "item": {
          "id": "a9028295-8915-4441-b0d7-287404680a3f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f8126de4-9bf1-4fbe-8d5a-5ba5c4c65df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5198820-6566-44e1-91b2-a163d8305cf3",
        "cursor": {
          "ref": "2156771a-a08c-4856-8133-1819bd357477",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f9f4ce6a-fca3-4fd2-874e-696f86ca2489"
        },
        "item": {
          "id": "e5198820-6566-44e1-91b2-a163d8305cf3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "fb9553f1-b689-4bb1-bd06-cccc411d025c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f41a588-4b64-4627-afe3-0eae7e034a52",
        "cursor": {
          "ref": "6adbd53f-0fb1-4eb6-9189-ac4f02363b84",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ea0b3cff-89e1-4923-98c3-2a8d80931c30"
        },
        "item": {
          "id": "3f41a588-4b64-4627-afe3-0eae7e034a52",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e942428d-27e4-40e0-a431-88b3817c92b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773a9b87-8de1-4ce5-9a6e-2fcbb57b29e5",
        "cursor": {
          "ref": "c3d1d493-d132-4b9d-8d0b-289de1bc5dba",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ee6735b0-983b-41f5-a22a-beb8b2e657ac"
        },
        "item": {
          "id": "773a9b87-8de1-4ce5-9a6e-2fcbb57b29e5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1685a2be-4747-4077-a01b-8a0b330982fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1843b6e-e2c0-429f-ad59-0cd563c2046d",
        "cursor": {
          "ref": "c21c2b61-83ab-4f27-bd52-a35124dad210",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5bec3407-47b4-4013-9b65-7604bbe35e6f"
        },
        "item": {
          "id": "c1843b6e-e2c0-429f-ad59-0cd563c2046d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7c641d19-8cf2-4b11-ad5e-707433c6b4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27807c2e-dd90-4251-aeba-d14f7443669d",
        "cursor": {
          "ref": "d49b1876-9f53-436d-ab4f-4c8e4884f9e5",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "58c4ffe9-eecd-4564-b4fe-b79b67e44fe5"
        },
        "item": {
          "id": "27807c2e-dd90-4251-aeba-d14f7443669d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ce7613e9-8d09-4380-91b9-0b463207e126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1e4fc4-65de-4cf2-99ad-4be69f8441af",
        "cursor": {
          "ref": "877796b0-5143-4e1c-9760-701ea2698b33",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c1138f57-00b9-45b2-a9c6-03ec6e15053d"
        },
        "item": {
          "id": "bd1e4fc4-65de-4cf2-99ad-4be69f8441af",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b5fdc27e-c620-493e-a716-250ab2169ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc504074-28d4-4edc-9edd-0e91a8e6206b",
        "cursor": {
          "ref": "e4d80083-b0a2-4933-b49e-47cbb8123280",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "11b34a6f-0782-401c-9a59-34cebdf4883b"
        },
        "item": {
          "id": "dc504074-28d4-4edc-9edd-0e91a8e6206b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1a23b6ac-3828-4e4d-9016-2bef5d0b8dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f28236-faa0-4138-b8a4-d550e1ac0d75",
        "cursor": {
          "ref": "5f63bd19-6953-44af-a0db-90fe58558467",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0de5d8ad-06e3-4fcb-ad44-2cf73b3042c6"
        },
        "item": {
          "id": "21f28236-faa0-4138-b8a4-d550e1ac0d75",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "536558dd-95c5-4dff-b8d8-177040bc8de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0b08fd-f5be-4de4-ad81-3b800aa7fcb9",
        "cursor": {
          "ref": "41047503-f315-4175-9aba-f42048fcfc39",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e4a41ec2-dc28-40e4-9d11-67b335b5e867"
        },
        "item": {
          "id": "0d0b08fd-f5be-4de4-ad81-3b800aa7fcb9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b8e78221-c514-411c-963f-6dcbbcf6fb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ab6279-8c29-4572-b689-4228b7bf2d87",
        "cursor": {
          "ref": "d3694e55-728c-4e85-9287-9145968cd6de",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b0d15283-aed9-4322-a000-88647ae075c6"
        },
        "item": {
          "id": "16ab6279-8c29-4572-b689-4228b7bf2d87",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "95e4fb02-4b93-417d-9254-8edafb7b8eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb826364-d0fc-4c3b-b9c2-134b384121e2",
        "cursor": {
          "ref": "f57e347a-e520-4b6c-a40e-c70d6380afcf",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "142d88b9-708e-4379-9c3e-0cb20da3f3eb"
        },
        "item": {
          "id": "cb826364-d0fc-4c3b-b9c2-134b384121e2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "80dd41ac-5091-47c6-a1ab-c13bfc36bf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd63a80-8acb-4213-bf74-d63f0af4d51a",
        "cursor": {
          "ref": "a28025b4-95e4-4bd6-bff1-b84a9dc9818e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bd51b64b-1f75-4d71-ba44-afbfb37b9032"
        },
        "item": {
          "id": "ebd63a80-8acb-4213-bf74-d63f0af4d51a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2dbb44c1-fbe6-49ca-86ff-cc26361d779b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e21d9c-74ee-485d-bf3f-73b40c0903c3",
        "cursor": {
          "ref": "3ad54eb3-aa66-4d8d-ac54-45dea377aa33",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "67e2d87d-726a-414b-b2c1-6f3f41290bde"
        },
        "item": {
          "id": "06e21d9c-74ee-485d-bf3f-73b40c0903c3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4a43145c-9ec4-4f4f-93f8-202d6920aa51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9627f2-1df2-4e9a-8411-47b3c4e993af",
        "cursor": {
          "ref": "f5ed1655-8be1-4893-a8f4-27a52ec59888",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b12b6288-11a4-4c56-81d6-9d5acc0e8f6f"
        },
        "item": {
          "id": "5c9627f2-1df2-4e9a-8411-47b3c4e993af",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "406f0c7b-b596-4bf4-9b9c-a122a369d091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d8fe4f-c987-43de-b3ef-85f2768c62d6",
        "cursor": {
          "ref": "5c94ef6e-e265-418f-887e-3463bca7e6d0",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6eebb8a1-2c57-4091-b11e-5fa4af89cdb8"
        },
        "item": {
          "id": "b7d8fe4f-c987-43de-b3ef-85f2768c62d6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0f2d0330-63b3-44a6-a908-1d539b5f434e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ede1cae-bc9a-49de-8582-bf9a27d5734c",
        "cursor": {
          "ref": "7bc8f848-c805-4155-b755-fe60cc7037c6",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "73153913-e9b7-4932-93c1-53bb752efb45"
        },
        "item": {
          "id": "6ede1cae-bc9a-49de-8582-bf9a27d5734c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "82d5d62b-c0a2-4292-b11d-dea27ec488e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f69c751-5ca4-4c12-af90-cb32a1db8f82",
        "cursor": {
          "ref": "03d9f6d9-4410-4ae2-8f1a-5d09c82c721b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "94b80ac7-4d68-48c7-8642-dce31bc5687b"
        },
        "item": {
          "id": "8f69c751-5ca4-4c12-af90-cb32a1db8f82",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e62df039-3ca3-4dc1-be1f-794f1ddcb329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814060c8-f148-4471-b141-22ae462daa6c",
        "cursor": {
          "ref": "de95fd4c-160c-4f63-81f4-ff71c4d76de9",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "362675e5-73c3-49c4-9f92-063c11b54d9c"
        },
        "item": {
          "id": "814060c8-f148-4471-b141-22ae462daa6c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "66449456-d614-4912-baf9-aab04bf19ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2611b1-0c81-4f8e-ba4f-beead78d26bc",
        "cursor": {
          "ref": "b4187afb-b8a0-43b2-9efd-8334a758744d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ad64efd1-a1c0-4a00-92f5-1fa7460080a7"
        },
        "item": {
          "id": "ec2611b1-0c81-4f8e-ba4f-beead78d26bc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bcbbbb0a-2aeb-4a2a-b3eb-306b3f9535d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd43767-fd12-4af8-a1fd-a9dc1e89756d",
        "cursor": {
          "ref": "b5052986-c07f-43b5-bde4-1db5bf07addb",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "264b8ce8-7fe2-49cc-8428-23c599030ba1"
        },
        "item": {
          "id": "afd43767-fd12-4af8-a1fd-a9dc1e89756d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "10bb752f-5e6b-4c60-b2aa-e8dd41aba8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7937d3-0ee6-4906-ba28-395408ed8135",
        "cursor": {
          "ref": "ae5b816e-20ed-4189-ad37-1e1fb2d8b6c2",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bbc6f8bc-0acd-4bb1-9181-1c47a3190933"
        },
        "item": {
          "id": "1e7937d3-0ee6-4906-ba28-395408ed8135",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "aa55ad8e-2613-424a-81ad-87e6b67901d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21eba3e-641b-4157-9587-8bcecf99111d",
        "cursor": {
          "ref": "6e3d1886-2e00-439f-a7ec-48398d71fc73",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c8bb27da-96c8-4b78-9fc6-fa70af48ad80"
        },
        "item": {
          "id": "f21eba3e-641b-4157-9587-8bcecf99111d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4f5e6310-17d3-4a67-9a2c-0bc287a913f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec0647c-bdb1-4fd2-b7ed-ba2be84bd4d2",
        "cursor": {
          "ref": "41ba743f-2142-4e6e-a949-228999f84698",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3820c0d4-90b5-4e70-9b8c-b427eda4b56a"
        },
        "item": {
          "id": "aec0647c-bdb1-4fd2-b7ed-ba2be84bd4d2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0322235b-ec71-4f95-a862-dade30620ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28f666b-9fc2-432a-9b4e-3f5a55793b2f",
        "cursor": {
          "ref": "4b99a513-d6af-4b33-bb5d-6657a5649bc5",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5b556695-5a71-4252-8ad3-90505ab2e2c2"
        },
        "item": {
          "id": "d28f666b-9fc2-432a-9b4e-3f5a55793b2f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7936a116-8216-4d19-9192-1be271aadf38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e12984b-3199-4329-a534-f09ab329b521",
        "cursor": {
          "ref": "6060df16-f6f8-4f54-957b-5ad7b30ac47c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "82caabce-7266-44bf-871a-085d9ff993b6"
        },
        "item": {
          "id": "8e12984b-3199-4329-a534-f09ab329b521",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d8062886-a05d-4c91-968d-5140da7e65c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ead09e0-eb13-4f3f-a8f2-d1edce6387f9",
        "cursor": {
          "ref": "58d4e24d-84d7-4b15-90a0-6a67af14c252",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cb8c5242-71a3-4365-a612-c4773efbc2cc"
        },
        "item": {
          "id": "2ead09e0-eb13-4f3f-a8f2-d1edce6387f9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "888379b9-ce14-499d-9b42-46fe9b7d7058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc07ab97-52ec-4416-b3cb-a0ec9e3fbcf4",
        "cursor": {
          "ref": "3ae84319-438c-4b25-bd60-2cfcd9e859e9",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ab72573b-e162-4a71-a0b1-24576b9181f6"
        },
        "item": {
          "id": "dc07ab97-52ec-4416-b3cb-a0ec9e3fbcf4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b25ec750-7f19-4232-b64b-9b1b40a00419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c441d0-f83b-4e55-acb6-88aff33b0aaf",
        "cursor": {
          "ref": "89ffc22c-0862-48e6-88be-77cb8e416602",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d1160748-8446-443e-889b-b155e34cb5f4"
        },
        "item": {
          "id": "59c441d0-f83b-4e55-acb6-88aff33b0aaf",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e96df5a4-53cf-44e2-84bf-b14a53fc564d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1340cb4b-8ae1-4f86-ae40-cc5c7a021c41",
        "cursor": {
          "ref": "8e596aeb-bddb-4699-b760-b5e46a1b4155",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "89aa6b34-49fb-41d8-8a29-fb2e3e962e22"
        },
        "item": {
          "id": "1340cb4b-8ae1-4f86-ae40-cc5c7a021c41",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9baec2e8-2e3e-4c54-aac6-8681b98f3349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073a041c-89f7-41a0-9ce2-28e3969fd725",
        "cursor": {
          "ref": "7040b241-8e2f-4876-b33d-6a7e0e27a311",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c937e8e2-c7db-46b9-9bf5-2f1b707c4590"
        },
        "item": {
          "id": "073a041c-89f7-41a0-9ce2-28e3969fd725",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fc048386-e30e-48d4-b16a-45701cd7c54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cbc70e-87a2-465a-ab65-0cf75454b817",
        "cursor": {
          "ref": "58fab4e7-8949-433d-b490-89f0758b038d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e49e6a8e-8c40-46f0-8f16-de6f1eaa1e4e"
        },
        "item": {
          "id": "11cbc70e-87a2-465a-ab65-0cf75454b817",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bd25d8c3-1021-4e01-99d2-960728b77acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1833832-8e04-4266-b743-8730dd058d52",
        "cursor": {
          "ref": "514fc7ed-5fff-49f0-bda2-b6512f18abf2",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f33a1c8d-8662-40cb-9dad-58e84b573c0d"
        },
        "item": {
          "id": "b1833832-8e04-4266-b743-8730dd058d52",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a4de32f2-e67b-499c-a2e1-8d76348076ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b261b45-b770-45da-a890-941f7d6d579e",
        "cursor": {
          "ref": "b06f4247-3868-4c7d-bb23-1bfe8c051857",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ce18eeb6-b1dc-4b93-b8a9-2334f63ee2cf"
        },
        "item": {
          "id": "0b261b45-b770-45da-a890-941f7d6d579e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bdc73c1a-e1ce-4b77-8bb2-1c7365c93636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281a0810-55a9-4a93-8227-96f21e70d59c",
        "cursor": {
          "ref": "aaa78ae7-6d1c-4cb4-aba5-ce30be7b5624",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2b0e4807-e930-4291-a08c-76ab88c2afdb"
        },
        "item": {
          "id": "281a0810-55a9-4a93-8227-96f21e70d59c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c3f008f2-28be-40b2-a5f7-afd540a546bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a69bd2-8406-4d07-b985-636275378b68",
        "cursor": {
          "ref": "daceaba1-1cbd-4199-9744-8b02d3746dd5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1dc5a6b7-efb3-4fd1-b955-d6c463a264a5"
        },
        "item": {
          "id": "85a69bd2-8406-4d07-b985-636275378b68",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "16f108c5-9dda-415e-8063-9ba10ef63ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c031bdd-21e5-4350-b891-1244317e91f3",
        "cursor": {
          "ref": "b2da1d45-49ae-4d2c-b77c-59bc75b47f48",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "306b160e-469a-4c1d-a423-bea0f395f146"
        },
        "item": {
          "id": "2c031bdd-21e5-4350-b891-1244317e91f3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "97b9ef6f-adf2-4d07-b807-00137e42ede5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a578f95-d157-4a32-af93-24394599d32a",
        "cursor": {
          "ref": "28069eb3-6467-4231-8e10-cf0a7924a499",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "26202e1a-e38b-4a8c-b317-7f5cb6f81188"
        },
        "item": {
          "id": "8a578f95-d157-4a32-af93-24394599d32a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "637744e8-c5be-4703-a15b-e1de3167141e",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "752d1ee4-868a-4eb7-9c45-7a4aeb1f0733",
        "cursor": {
          "ref": "89f336e2-6ed2-4cef-8fe0-b8c906fd4e1c",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "530f4245-abfc-464a-b2ba-6a875f1f68be"
        },
        "item": {
          "id": "752d1ee4-868a-4eb7-9c45-7a4aeb1f0733",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c30c5a85-50a4-4a82-96ce-f772ca5a3fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb0ba91-b3ca-4f4c-8ca0-269780a7f26f",
        "cursor": {
          "ref": "00c4b6c4-1b96-47f5-b26e-0c094e578b3d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ad3ee9f4-93b4-4a6c-913e-6caf438dd2d9"
        },
        "item": {
          "id": "3cb0ba91-b3ca-4f4c-8ca0-269780a7f26f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "20bc5e95-9c78-4251-8ec7-c957c9d51627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab63a5a-1673-4beb-bc8d-de08b1b6a8b4",
        "cursor": {
          "ref": "98dcdb21-6b93-4a74-95c6-8d9509ac9b1f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "70d7812c-6381-40d5-841e-7bc44c5427c3"
        },
        "item": {
          "id": "9ab63a5a-1673-4beb-bc8d-de08b1b6a8b4",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4d767be3-3906-49d9-bbcc-79bd24bbd1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3267d067-4cd9-4463-bc76-38a73d6d23cf",
        "cursor": {
          "ref": "f0ce2cb0-3559-43eb-9635-76ac97b9d9f1",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c8312dfd-331b-4220-87bf-81fe6b147c30"
        },
        "item": {
          "id": "3267d067-4cd9-4463-bc76-38a73d6d23cf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d2136805-c50b-44d6-b54e-d17b4a2409de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a57e6aa-5c8d-40da-a844-06515a08b9b1",
        "cursor": {
          "ref": "b99c6b0a-f384-4e62-a148-8a4c628c6712",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "de06571d-26d8-4336-a0fa-dadcb8e1ba63"
        },
        "item": {
          "id": "5a57e6aa-5c8d-40da-a844-06515a08b9b1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ea4e0858-63a7-4a89-8d30-ac7dfe8ab623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c4765f-2656-495d-a9e9-654e7d2fbc54",
        "cursor": {
          "ref": "a34f5c96-c84a-49a9-8966-da17c10d1770",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "586a70ee-977f-43ed-a4a1-d6043a01c471"
        },
        "item": {
          "id": "f1c4765f-2656-495d-a9e9-654e7d2fbc54",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "707cec5b-2e31-46d6-a46e-ff46e132443f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12c9d74-d0cc-423e-8372-01af589fbb26",
        "cursor": {
          "ref": "273e7e28-ee7e-4a82-9cc7-0042ccab6eb2",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6349cf24-9ce8-4364-b52b-a1d5fc65c111"
        },
        "item": {
          "id": "f12c9d74-d0cc-423e-8372-01af589fbb26",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "08b4974d-a637-4137-9e5e-e4c00bd66821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35aeeb2a-f632-47b2-a4c6-508579f358f9",
        "cursor": {
          "ref": "a53d774d-9042-441d-baee-fdcecc63f48f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d7b0ed60-0ac6-4e86-96ea-9901daf4058a"
        },
        "item": {
          "id": "35aeeb2a-f632-47b2-a4c6-508579f358f9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8aea767e-7f37-427e-8fa1-6f95fc4c77e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a56cf5-12f9-4185-a56f-5b4eeeb0cb44",
        "cursor": {
          "ref": "b60b9fc5-2a4f-4da5-af46-4b33a8eb0c39",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4ad1f4d5-3df1-4f6d-86ff-9cfbed54b733"
        },
        "item": {
          "id": "b0a56cf5-12f9-4185-a56f-5b4eeeb0cb44",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fc5bcab4-c29a-4798-93e5-f995edcafccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eea7b73-3361-46b7-99cd-d512e1706a3c",
        "cursor": {
          "ref": "8a1d9ef0-55b1-49a4-898f-ac5b9b725e72",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f9fec16a-98b2-47c1-b41b-9cfcde2ca0d9"
        },
        "item": {
          "id": "7eea7b73-3361-46b7-99cd-d512e1706a3c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d2786e3e-1d9b-499f-bd57-b43c41404880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c6f28d-9d43-4671-b9e6-5656166ac901",
        "cursor": {
          "ref": "bbbedd72-919c-4feb-83a0-bc57a117b96b",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fb9b4b37-fafa-4a4a-a6f6-0dc89d04ee02"
        },
        "item": {
          "id": "e0c6f28d-9d43-4671-b9e6-5656166ac901",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9dccd3ef-3837-4c20-b3fc-3173ac0333b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f075fdb2-485a-4241-b4e9-6b91e7411810",
        "cursor": {
          "ref": "67dded01-52e7-434a-a025-8e4f9f1d34b8",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e225f6f0-fb1f-4c5d-b13f-deeacbf57708"
        },
        "item": {
          "id": "f075fdb2-485a-4241-b4e9-6b91e7411810",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e7c8b1e3-1a58-44e2-bf79-da4a9b3a8410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85f2275-396c-4c54-affe-91be69d21e79",
        "cursor": {
          "ref": "5c0224f4-d823-4635-a3b3-3192cfe34347",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f1c0d69e-eb47-4178-8420-31470e446601"
        },
        "item": {
          "id": "f85f2275-396c-4c54-affe-91be69d21e79",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "90d1cd92-7469-4d00-bd0b-e48fc9a49920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0edd73-2088-4125-8f45-fb5b03bfc09f",
        "cursor": {
          "ref": "078fbe0c-3f1c-4f70-9ee4-ed91c3762f92",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "49ab5e82-ab20-4bd3-82d5-894569082f09"
        },
        "item": {
          "id": "5b0edd73-2088-4125-8f45-fb5b03bfc09f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7c6c40a5-ce63-447f-bc0e-a27395aac468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05e5b5e-5f04-4b14-8425-012cc3912e2b",
        "cursor": {
          "ref": "97ba893b-3016-4184-a34e-96b7fdafeba8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5f63349b-cfcb-4332-a5ef-2b0bab27c82c"
        },
        "item": {
          "id": "c05e5b5e-5f04-4b14-8425-012cc3912e2b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "95b7b058-eb9d-4206-b6b8-df8b933002bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76badab9-3718-4a20-8a9e-15bd47198d7f",
        "cursor": {
          "ref": "14c8c797-f66f-4557-b1fe-cabc6fc6c193",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "98deeeb5-4263-40db-b042-05e8892f8a1b"
        },
        "item": {
          "id": "76badab9-3718-4a20-8a9e-15bd47198d7f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "78b20145-aa77-4784-a1a7-6815dbc6bbb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca00242f-f3f3-49b3-ab88-fba490d594a0",
        "cursor": {
          "ref": "970bafe5-1359-4041-ba8d-fd274082e63e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c0efe65b-af9d-436d-97fe-dc5553074157"
        },
        "item": {
          "id": "ca00242f-f3f3-49b3-ab88-fba490d594a0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "2e4c0275-a6cb-4d6b-ae48-5f5463f5139d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18be5ab-f9ba-47ee-b77b-4a3f98f5dae5",
        "cursor": {
          "ref": "4761fb79-ce43-4b7b-b81d-8c3a8f7e1b59",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c7d59cc3-9a8b-4b85-b636-41ab1c95332c"
        },
        "item": {
          "id": "e18be5ab-f9ba-47ee-b77b-4a3f98f5dae5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6b28d342-dee2-45ad-906a-00ed9502876c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73af7fc8-aa2b-4f27-947a-ba808f4a87f4",
        "cursor": {
          "ref": "73896e0a-a62e-422a-a0a0-4583ae0bf75d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "64e8cfce-ff0e-46c9-ab06-79fc268e74dc"
        },
        "item": {
          "id": "73af7fc8-aa2b-4f27-947a-ba808f4a87f4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bafa5e7a-b1a2-47ea-8b71-5b10310cb515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0152d1a-52b0-442c-b48d-4958f78dc867",
        "cursor": {
          "ref": "12808886-00c3-45aa-88f3-d6c12b198719",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0404dea4-8110-4fc0-b6f4-947717059d65"
        },
        "item": {
          "id": "f0152d1a-52b0-442c-b48d-4958f78dc867",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c645c762-b79f-42cb-80de-398b6992cd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9c7b88-27bf-4fd3-b9a3-c825d1c4c278",
        "cursor": {
          "ref": "3c080340-15ab-48e7-b043-66864a8a4d2b",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "64c4f8e8-e239-4e8b-851b-606e33ae825d"
        },
        "item": {
          "id": "5f9c7b88-27bf-4fd3-b9a3-c825d1c4c278",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0494326e-afc2-4ac4-b773-92a384be69e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b2218d-8b19-4da5-ad64-fb0cb019f1d9",
        "cursor": {
          "ref": "df497875-8474-479e-865e-8f8d0981416b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6c84e01a-6ff3-4205-9093-a609057946c6"
        },
        "item": {
          "id": "77b2218d-8b19-4da5-ad64-fb0cb019f1d9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "cccb4f6b-09e7-4361-8210-d1b352aaef2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579a6e86-32cb-45cb-aa2a-6edfddea765b",
        "cursor": {
          "ref": "57f31d76-538f-4604-8366-f71032d946e1",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5f9bf7eb-ac43-4c7f-bfb8-1dd9ecb359fd"
        },
        "item": {
          "id": "579a6e86-32cb-45cb-aa2a-6edfddea765b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2008c2ed-c7ef-4ba3-b8ad-06db51d0f885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bddb9f-a794-42bb-8940-bd649a3ca63b",
        "cursor": {
          "ref": "f9f7ce1a-b06e-40c6-a5a9-b649181317b6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b46bf3e9-7e6b-48c3-97b8-b937b990cb8a"
        },
        "item": {
          "id": "d2bddb9f-a794-42bb-8940-bd649a3ca63b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "adc426f9-7f09-427d-a734-cfa32bd7f9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e533a4e-a87b-4af3-b41e-bddb50686d17",
        "cursor": {
          "ref": "72ac05ed-c54f-4d9b-8ad0-910ce58f5d1a",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5c1dc2ba-a000-4862-9cd1-9b885469b4a9"
        },
        "item": {
          "id": "5e533a4e-a87b-4af3-b41e-bddb50686d17",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6b9b576a-05a9-4e96-9c70-6b478da039ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847e1eee-2f9c-44d4-bdf3-c17afd4c84a4",
        "cursor": {
          "ref": "ac24f4be-de8d-4501-800f-f4c315261f93",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b48f3b49-457e-4306-9793-26c9e23dcfab"
        },
        "item": {
          "id": "847e1eee-2f9c-44d4-bdf3-c17afd4c84a4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c644e216-8d7e-4d48-8469-c52452c7fe3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b869521-d0c0-44e3-b72f-c66f149d97cd",
        "cursor": {
          "ref": "07330458-7aaf-4c6f-bbe5-4f89871eb50c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "90e10523-c2a7-4fbc-9f4e-ca0bd9d75c9e"
        },
        "item": {
          "id": "1b869521-d0c0-44e3-b72f-c66f149d97cd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e3666565-513a-4b4a-bc2a-68adde75d05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e820157-4409-4fcc-9b0a-bd00b5746e35",
        "cursor": {
          "ref": "678aa27a-9323-46fb-937c-8c21427c6dc1",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9f357b07-8aae-4906-ba2d-2f867d4375f9"
        },
        "item": {
          "id": "5e820157-4409-4fcc-9b0a-bd00b5746e35",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4f9910c0-d433-4563-86ab-dd065a163cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0aee17-f01f-4056-82de-1bdbcb548b9c",
        "cursor": {
          "ref": "69cbd324-18ec-44cc-80b8-f2505a91b3df",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e8636b5f-6500-478d-920c-7b8515de6c98"
        },
        "item": {
          "id": "db0aee17-f01f-4056-82de-1bdbcb548b9c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "012e4668-2b46-4587-b542-d5b4a30e0e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f22d7d6-6041-4573-af19-b49f9ab00623",
        "cursor": {
          "ref": "04d51bb9-0474-4b64-90b5-b0f6792f42d6",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c92f4d7d-261a-4bd3-9839-e8ad4811d90b"
        },
        "item": {
          "id": "0f22d7d6-6041-4573-af19-b49f9ab00623",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "aeede6e7-6fa8-4552-b06d-f20721698e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895205a9-5f24-46f7-85a1-a265283faf1b",
        "cursor": {
          "ref": "d7bdbaed-98bb-4b1e-a791-641441e97fb5",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8f5eaefe-e095-4fc3-9194-2a58e59ccc6a"
        },
        "item": {
          "id": "895205a9-5f24-46f7-85a1-a265283faf1b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4e5163a4-4108-4944-a877-d3ab45e9be33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffee15c2-2ec9-4ab6-b56c-4d3656392066",
        "cursor": {
          "ref": "34eba417-94bd-40b5-a991-c68da9dd8718",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4571c0c6-57d1-4b51-9c73-c73e4952e7a3"
        },
        "item": {
          "id": "ffee15c2-2ec9-4ab6-b56c-4d3656392066",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fa683dd6-8bd7-4798-9da1-abae2dbc25c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b194887f-970f-479d-ab90-f26c6334f80d",
        "cursor": {
          "ref": "f1293b46-075c-4200-ba95-02e3d66496e1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1efdbe8a-9ec3-4e00-a14f-ffc730691680"
        },
        "item": {
          "id": "b194887f-970f-479d-ab90-f26c6334f80d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "83d8e136-4569-455a-8608-0357998887d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da490adc-0514-4c32-870a-eb782e4c63e9",
        "cursor": {
          "ref": "b874caec-b622-4ca3-820e-32066308ce69",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f3170039-6519-45b8-a049-404e9d252323"
        },
        "item": {
          "id": "da490adc-0514-4c32-870a-eb782e4c63e9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4a4c396b-1912-4593-874d-19f143fad032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea2c821-ce5c-4719-bccd-12e8145876e2",
        "cursor": {
          "ref": "2d9e1ec6-2f5c-417e-9fb9-43fab8f9699c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a8ea453b-8765-4bbc-9490-252bccbe466a"
        },
        "item": {
          "id": "aea2c821-ce5c-4719-bccd-12e8145876e2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7e2edd54-a1f5-44da-bb10-eb19c1bf907a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5245830c-1e39-499b-9be7-1fb6098d5217",
        "cursor": {
          "ref": "e7902535-b9c8-4421-a428-647a0e5f23a3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "807405b0-9de4-4c3c-bace-af815f05c5f2"
        },
        "item": {
          "id": "5245830c-1e39-499b-9be7-1fb6098d5217",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "669aa57f-c98c-4b3a-b213-c371a4baa088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb107b3f-f07f-4ec3-a969-a50f20158961",
        "cursor": {
          "ref": "f01fa0a2-dbee-43e5-8bfd-f95c585ed5bc",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7a2c1748-c5b0-4094-b815-9ab7651cd772"
        },
        "item": {
          "id": "eb107b3f-f07f-4ec3-a969-a50f20158961",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "62975cb8-2199-4058-9271-89f502fd76e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d476acf2-a4f6-4a2b-a4b8-117e72b2c682",
        "cursor": {
          "ref": "26c8ea89-2e7a-4ea1-88c5-05dcf33cc15a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "40233314-41c8-496d-9397-4920ddd29e83"
        },
        "item": {
          "id": "d476acf2-a4f6-4a2b-a4b8-117e72b2c682",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4f739412-132c-42c4-bc74-efc4f5802550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3a4fe5-da43-485a-aff3-ca6b5297eca2",
        "cursor": {
          "ref": "25989be6-0040-4ad3-a167-8a04aafa855a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7610be97-1fb6-44ac-9537-070a4cbd8fb4"
        },
        "item": {
          "id": "6e3a4fe5-da43-485a-aff3-ca6b5297eca2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "68b28ee0-84ca-477a-bc6a-a6958ad06629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e880455a-4616-4998-9f13-57e23f7e1079",
        "cursor": {
          "ref": "f2751dae-ef5d-425e-92d6-18e45bf1ea3f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2eb01217-3406-4878-8875-bcf095b10865"
        },
        "item": {
          "id": "e880455a-4616-4998-9f13-57e23f7e1079",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "25f2d6b1-6186-4ffc-a9f3-2796569b60d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad59606-f977-4f9c-8d2d-7d2aabd7187a",
        "cursor": {
          "ref": "4ff81033-6e02-450e-ae41-4a16f4f1216a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "747120cf-aa26-4fb4-ab65-b2e1a98ee01a"
        },
        "item": {
          "id": "5ad59606-f977-4f9c-8d2d-7d2aabd7187a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fef679af-28bd-4579-a214-82abce95b4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e08ebf3-f223-44d2-b194-ab2c918fcd96",
        "cursor": {
          "ref": "d2424eef-2db1-4a73-b2e2-1b3b806656bf",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d4a0d6c2-dfb7-4594-848c-6b4fd48b6f6a"
        },
        "item": {
          "id": "1e08ebf3-f223-44d2-b194-ab2c918fcd96",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "75fd0267-61ef-48f2-b185-1da59dc48057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1618f2-57ac-4480-93fb-51256b85ffec",
        "cursor": {
          "ref": "2ecadd4b-d5fb-474f-8978-b5204bffddd5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "db67393c-f58c-4ca5-89d2-e096480e41e7"
        },
        "item": {
          "id": "1d1618f2-57ac-4480-93fb-51256b85ffec",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0d7f5bb6-87bf-4b34-81d6-f3e0b32d1dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19854b8-6828-4a60-b291-c69ceff83c08",
        "cursor": {
          "ref": "c495c129-3bed-47f9-8722-78e7cdd4225e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "33efdf51-efbc-48aa-bf67-66a2b33d686d"
        },
        "item": {
          "id": "f19854b8-6828-4a60-b291-c69ceff83c08",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "829a16f5-d7ba-48dc-a8b7-5de377f169c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762a88e6-3e8e-4582-a280-248beb90ad26",
        "cursor": {
          "ref": "2dec683c-ab72-484a-97e2-7cb7349ee7d2",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b72ca845-4c4a-43e6-9bfb-849728cb93d5"
        },
        "item": {
          "id": "762a88e6-3e8e-4582-a280-248beb90ad26",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a6b2ed5f-724a-46f9-87ac-a239785c86bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f039f44-f25f-4aae-b69b-de921a00ca12",
        "cursor": {
          "ref": "0b82f14c-cdde-4016-959f-41db9ce449f3",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "68600215-df75-4b68-bf65-982da7115640"
        },
        "item": {
          "id": "3f039f44-f25f-4aae-b69b-de921a00ca12",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5bc4c8e4-d395-4971-9abb-1612f3cc3107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068f534d-75f6-4a78-a05c-3b06868ce121",
        "cursor": {
          "ref": "d534ffce-9f58-4529-ace8-7fb1c33a8cd7",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6873f729-49f6-4934-a7b5-2d9b7d9e1cb8"
        },
        "item": {
          "id": "068f534d-75f6-4a78-a05c-3b06868ce121",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "aa4b9930-1e26-476f-a676-096dc7cc4b58",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3643f1-76ef-4312-aa4a-b7f9a2a596de",
        "cursor": {
          "ref": "bad37ec4-9583-436e-84f9-595d0a1d497d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "afba84b5-99de-47e6-8b62-c669fb8218d7"
        },
        "item": {
          "id": "6d3643f1-76ef-4312-aa4a-b7f9a2a596de",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "01853f36-ea37-48ff-9bdb-0dfad561010a",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3576c9b5-7a28-4766-aba6-9d070dabe642",
        "cursor": {
          "ref": "2c6c98c2-abc8-4e2a-ba60-6edb4e052217",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8a51effc-8f9e-460b-a887-efca258b6f54"
        },
        "item": {
          "id": "3576c9b5-7a28-4766-aba6-9d070dabe642",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fe958503-e759-4953-bc5b-d39acac3146a",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c1114f-f56e-4ee0-9048-48de87d2f6a2",
        "cursor": {
          "ref": "4a624a6b-2890-4fa1-9413-a4d81de0d6c0",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d71c12e0-8b30-4028-a81c-4ea4e31c5116"
        },
        "item": {
          "id": "09c1114f-f56e-4ee0-9048-48de87d2f6a2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4879922d-92b2-4163-b8e7-a607b03d3a5b",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e8aea3-1cc8-4f3f-81d6-b4e1d5da7d88",
        "cursor": {
          "ref": "2ebe8d33-dcb3-467e-93c8-f64dcbaf2cfe",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "059c190e-7122-4c02-92c4-f27ba35ce0c3"
        },
        "item": {
          "id": "a9e8aea3-1cc8-4f3f-81d6-b4e1d5da7d88",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "41541130-f18d-4935-badd-fc2bb0093007",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e8aea3-1cc8-4f3f-81d6-b4e1d5da7d88",
        "cursor": {
          "ref": "2ebe8d33-dcb3-467e-93c8-f64dcbaf2cfe",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "059c190e-7122-4c02-92c4-f27ba35ce0c3"
        },
        "item": {
          "id": "a9e8aea3-1cc8-4f3f-81d6-b4e1d5da7d88",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "41541130-f18d-4935-badd-fc2bb0093007",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fea6775-605a-430f-a5d5-c82eff43bd51",
        "cursor": {
          "ref": "d0da5fc1-ae49-40c4-be2a-ec791a4541c7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0d860781-1564-4c8b-a22d-468011fe250f"
        },
        "item": {
          "id": "3fea6775-605a-430f-a5d5-c82eff43bd51",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d74dfe3c-85a7-4499-9a2d-3f4e3c47f604",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46cf945-fbe9-43aa-9cf6-084de443b7f7",
        "cursor": {
          "ref": "319177d5-8df0-4382-afd5-12e6a558f7fc",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d9595cc6-72f9-4667-a4b5-8b826bf65b06"
        },
        "item": {
          "id": "d46cf945-fbe9-43aa-9cf6-084de443b7f7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6067eb8f-6725-4e23-a396-bc8d62f595de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}