{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7856a2f0-1952-4dac-9182-4a2abb424431",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eb79afea-5313-4e7c-9b32-a4cf13ee15a7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb486e11-f16d-461a-a16b-48eb315005ec",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "69b8a8e3-f610-4fc8-9aa8-7c6422c2eaba"
                }
              }
            ]
          },
          {
            "id": "d185cb97-6209-4db1-a3bf-5edec71dfd95",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "808a9ad2-500d-4336-86d6-487e9dbbb83c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7d8de7b1-3404-4026-b0fd-335d3a63cc33"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "91516cc8-8a58-4d48-9ff2-e7335b998ff6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0f2a85bc-877e-4223-993c-c0a41859793a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f9c3457-892d-4506-b8b1-2c4644911b61",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c940e43-ee53-499b-86ea-32d038087dbf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdd7bbdc-3b1f-4b21-85a6-1a1d69dcf7e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87a7597d-e10c-4035-86a7-cc17692f7402",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "000c40c2-3ecb-476d-a44b-e55a66a63573"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a8aabc3-1e4c-4344-82f9-d18a5a76c12e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02c8a38b-e0e4-494d-b60b-1aaee94fae95"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29a20516-1a38-4f7c-8272-6465a0829b5a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "25a55627-e8d8-471b-ad22-654674a0de23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "949f033b-90c3-419f-804b-ff6b05b4f3c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "308d87a9-35da-477d-afec-e97286994bc2"
            }
          }
        ]
      },
      {
        "id": "c90e1d58-aad4-47db-afac-311152342a18",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9b41a03e-9a7b-4bfa-be4d-62e17f20bd13",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f040366-9b35-43aa-853a-1ae6e5364d18",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5f74f45a-2877-4f45-be28-524c7c8c328f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cc2694-d5d5-4dd1-8e7c-68c918415e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "593e9ed8-3f01-4161-8262-476a50ee93fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4bdd24-83b3-461b-8bef-e19ccef66d45",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef8928c-0aa6-45bc-adae-5c949aca92e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a660dbf-d653-4e80-ba10-649da4869718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe49686-485a-4b67-92d6-89714f26588a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffca3f30-d85d-45c1-bacd-4b986583b08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2be77a3b-88ce-4e80-a8f3-39e667689281"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4185a80d-6aae-44ef-89b7-f1b23846b5aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "117cd2be-1963-4b5a-90d8-7f6c600632ec",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32116172-0c03-49b7-bdfc-d0f4e5beae71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "637e585f-4d5c-487a-be68-1878151af79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acbddf2-f259-4ed7-a7e2-b902ed34691d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9da507f-8391-4f87-8fba-c74026226c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eeeaf3d-4c88-49a7-9680-b8e3a34dc2ce",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b70a780-0291-4aff-91dd-76da1ca06d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a52a36d-27b8-4eb8-a653-7bdef5364f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec0671a-5dce-4881-b730-1c55d00b8744",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "f244ca23-51d0-448d-9594-532fce3b1335"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "200bb21c-42bd-4b96-a6b3-d5ad0efd2560",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9090cefb-df36-46a5-823a-ecc4f1087acb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c49cd3e5-7834-48d7-a46d-3d74103ea84c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1291f308-c18e-4542-9d7f-a18abcd26a0b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f1470ba-a7f6-4676-a066-cac241880af1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b2d22588-bdde-4482-a8d8-5d3e85abf64d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b37de795-75a0-4de2-9571-d0a40a3a3f10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd650762-53c1-450c-8e9d-3fcfd4a48351"
            }
          }
        ]
      },
      {
        "id": "0f73e99e-5f02-4912-8c30-521cd163148a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "52fb5058-a0d9-4548-884d-df2e5138c40d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "baa7b43d-4260-409e-8c2c-0320288f2402",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a7161dc6-cf5e-4411-b78e-468c07bc477e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a7f297-80fb-4073-ad5c-abc61e6fecbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c10ff0-9ed3-48b3-8f54-64fdd43b6d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c40cea-adb1-4e7f-a4d8-1c9f23186bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4cadb81-c5aa-4e7f-94f3-5c9b0fe6092f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07a7ed0-2dd7-4ae8-b496-f5dd398b592f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176f2489-3e0b-448b-8c2e-af8b60b03fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f69bcde-07d4-4e69-b58a-0a8c90f910da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3d5373-b499-493b-be53-344c64d56814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7958a478-7ad9-420d-b025-c4184c6a924d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227df313-9325-4882-a65d-0c522cd8c0df",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c714f237-2822-4c95-b0b5-085078792e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd51408-c3ce-4acf-bd68-2f39f034c678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5a748b-1db4-436a-ac58-aad8d4528a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49c3e007-973a-49f9-aa49-17efca36d200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05dd1088-805d-4270-83fa-c06a6fe35342",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8647d679-6a80-4dcb-b21c-4ba00bfe707b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53825c8b-3c95-4ca4-831e-e527a64ff98b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96ed2eb-bbd8-4a35-a35a-62985a2b3022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97302edf-a80b-47ab-95c5-e21f60772e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af2ddc5-5603-4ae0-8d06-3f8770b74e9c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3150d276-a7d7-4346-a867-1d919e8f569c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d3bfad-b008-4517-abe4-2c1db4e1693c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b113dad1-98a7-495d-8741-274e1f1a8fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "695d446f-5eea-4b45-9ae6-f5b8c5c4e6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa8fd68-ea43-449a-82b8-4dba7fde7e75",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a1197e-6eba-4170-ace7-e0db482c53af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257e6956-aa0c-4613-a235-ee10929c146c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399c69d3-f533-4909-9101-dcba18ad57bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "674d89d2-fbb7-43bb-8302-2e7d28a1bd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8623263b-9363-46c6-98e4-c4ab3f7526b4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf21f15b-1588-4fac-aa72-43fb2d376e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2445398a-0253-49ee-9cd3-b410486e5322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71de3fd-d27e-4068-9d4a-2294807c1378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3971e29d-2bd3-41eb-ba22-a63e10e955a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c05c94-0bf5-4488-81ec-b269181d7fb6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9201e3c7-387c-469f-98d1-2e108f898a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390c5e1e-f71f-4b18-aa10-bcb5368a4129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2123a7-7d52-45a1-8c44-d19aaafc17fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "424fdadf-0cd7-412b-be0f-a4a39357f6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad52198-f79e-457c-af02-169198000681",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65708301-867f-42fa-9416-1dc413d581a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a014526a-d255-4506-b935-5dae1107c058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42889bd8-09f2-40ac-8934-221ba4b05ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dba5c38e-fa0a-487d-ac93-d584d909b767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc31bc5-ae58-4fa8-a55c-d0f2afe136ba",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cdbb92-ffc3-49f4-90a8-aa2a957e8b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f763f3-05dc-4820-9cea-6c61b3a94db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7913b51a-2685-4ede-bbd9-c273939d27ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef295a27-a6d8-4f0f-9f6d-043e79bb3e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6589eb27-8c18-424d-9c9f-c347a9454ada",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfffceef-96b0-425a-b714-d8d2c117c38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a1f462-e556-4721-a230-8b840d3c6aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd480e5-9ea4-477d-93c5-9dcb2aea638d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f01a1fa-516e-4d10-b0b7-99803ace1e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a345d5-b156-4354-9ea7-5b207aae7823",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef04457-09f2-4cde-a33a-622d21490a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ee442c-9210-4141-afdc-bcf19ec15099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df016f3-4a86-4f18-b346-27310e327d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a11d70c-221e-412a-8a11-d908d5d5cb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3868a384-8045-4f4d-83fd-b583153d0f5b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575e6b7a-8d5c-4299-b843-73462eeb9322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30980d72-aa24-4a06-85f9-e09b626a8b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e82b4f-5fcc-4e46-8e15-6c0666f547b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c371813-2bf8-4e64-96de-35de97b687ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d808b27d-e51f-4acb-81db-78fcaddf6551",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef42f400-50f1-4327-8022-a553b433f0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5914b1-f3bd-4ac6-ade6-094de1ed25de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df29458-bdc3-4737-87fb-6638b42e04a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b00f065-db57-49c4-8fad-f9f011670748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecf995f-6ad5-492e-acab-9e8ad2895852",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20027f08-1de1-4185-8827-744ecffcc885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2454e4-ace5-49de-9cee-268fbf7d09f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14675b8c-44ab-4503-8d78-4964b19bdd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d80bed3b-f62b-41d6-b745-e4dc490d50f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e36d04-8884-43ba-9aa6-a76ae6a680b7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acaaa7b1-68e1-4357-b0bd-f6c10da8fb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bfe248-d02c-4bc8-a93c-144c18d37483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4e6fa9-0532-45ae-a3f8-3c5db1d4d024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dd9ca6e-bd95-4dd0-9e09-3f9d173e2d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1713c65-20a7-4771-b155-6a6a4a352175",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02c3bff-905b-4401-a1bb-64b80273b98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fd2351-52f3-4830-b2f9-e5d3662bdced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c7fcdc-3a1d-4e65-8920-e1c7d4736c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f11ce079-e152-45d2-835e-95e1fe4e2c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5bbcd8-891f-4b65-a128-9e55e0ee35fd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d55f1f-c69d-403c-8a7d-a9eaef9c437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f554f6a1-5d4c-4e2d-a35d-88c1f4a085c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f8d229-13d6-4b6c-9fb3-e50407c46c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bf0cc7-4102-48f6-b4c5-3303593aaea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34dc1a9-c121-4621-b6ed-1dd71e1b913e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507d2c89-5831-4dde-8c56-459bb9a7cf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635d1f2a-ac7a-418c-b17b-f9dc021cb09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c97d84-e044-4323-ae24-9cf378093d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c135d5-dc52-4a25-a7c1-170439327615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33093f31-2189-43c7-8a87-6e870407d045",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b799258e-a7be-4658-915e-75886f1eb561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b658af4a-4f5d-4b96-baae-789ced484c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a08ad51-490a-40c2-a415-30feb39648d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74e69728-82d3-45cd-9364-10d3241766de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21ff09e-0e0d-47e2-ac65-186dce9a076b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b05aefa-18a8-41c4-bf67-5b1879fb892e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0330d98e-f8f5-4885-9ca1-08245d929eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b9f371-390e-4a74-ba06-b39d97ccfefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17cda742-626e-4705-99cb-0c4da0331ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21f82ae-c3bf-4fcf-8275-89018906f4cd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3eb17e6-b1fb-494d-a451-0bcbc03f2267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974364a3-83b0-4c13-891e-93e4d7c131d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78eb26e4-ff71-41d9-9922-b7a723546011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00b3d64b-1fbd-4ffb-894a-5cf15820fde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b81fab2-6c8b-4a2d-9707-64b27c6d1c57",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8e92c2-a62a-462f-bbed-10920df8b676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744f7793-94f4-4e2a-82ca-a8ffb77e6be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ed392e-8ce3-43bf-a72a-9fb37dc2d280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a97413-5844-4ecc-bcb9-c6e5743c0b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e742e35-3322-4db3-a1d0-e1c2fd648e83",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63492238-ee27-4485-ba20-bcf669690930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad2ec07-3f05-4703-b2e0-190b3bd87049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f307290f-1fe2-4836-a667-1caa15d4d4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b0c2e0-8e85-4be3-ac56-bf575878b814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34dbcf4-e4c1-4a2f-9bd9-b0cc74e7d2eb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ceed489-03d7-404f-8531-e16ffbdd55b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98e6f9a-e564-4754-bd58-b107115a309c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d664a90c-c566-4f72-9128-9063300b8b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ce5e49-ddf1-4919-9bb9-bc4e404019b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b4c282-4737-494c-9f8f-a22c9adfca9d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03639f7-6379-44f7-a5e6-8ad5a3cb0cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d75f44-bf4d-4ed3-88b2-49180cf2d502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0822a4bc-c48f-4823-a2be-62f58d64322f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a41347-2530-41b1-98c8-6937837bf459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d985fb0-4dc2-4ba3-9ca7-0274778e237f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d56552e-7d63-4a86-87b7-8d2ad892f6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b1d95c-cd36-49be-a95b-74ec5292dfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8937bcbe-67d4-4a2f-bcba-aa6fb03134f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "499f84ba-9dc5-46a4-aa3e-f9c304874936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f95f75c-24d5-4ffa-8228-ca7a6475e615",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7ab9f6-4f2a-4baa-a54f-f08cccf582b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7edd8a-768e-48e8-a58a-5aecda81fd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a81f18-6833-4754-8993-2ecdeb26e9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a72b481-22dd-4570-8ac9-ef467ec0e4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73ff9ff-b21b-4715-97d5-6d4a8c54b746",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86b1225-e367-4ae2-80ce-6c8d584466bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a9d69c-8976-4b3a-9eb1-ce6ae5b5e7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e2ad8a-15ea-49ad-a166-29e37a4d1d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab191cd1-ed59-41c3-a462-d3d84f5bd907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f80d6a-48ca-4e3c-b961-37e9ddf5623f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f873eff6-fd3d-4599-ad12-92d1f506c1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c5b158-bcd5-429e-b2ca-819637042d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37b538a-5639-4aa2-a38a-4c3c32ffd3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e80507ff-84f9-4309-bde3-fba192ffe355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369bfe48-350d-459d-af70-62240760f831",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e816a366-9393-4510-ae23-1f300c9860b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cfeac3-1dc8-4a11-a811-da9622939bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb663719-50cb-42b5-8c15-d60e7c1a5f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9dc5e8-f326-4c11-adad-aca08df2518f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdacf84-7ab7-4249-a932-61f2917076f5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d18542-3b86-4dba-b586-14da9bd40cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31860e8-d58c-403a-86b9-fe2e0343832e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f21116c-a849-4a82-aa7b-bf8f3d433696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc07b928-1b49-43e8-9d4c-ad3f578af395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7263fd18-9a94-4677-832c-7f9755a52ad1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b63eeb-659f-48a1-ac65-cfbc68dd42c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343a97e8-4e56-486c-852c-059533860187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee14b8bc-3a48-40da-aeb9-40ab10c97c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a840732-85a9-49f2-8c61-fc1c177c3eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a826648-25b7-4b2c-b611-83702c116b68",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d8de09-34e9-4c86-a08b-045a645726c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991ca543-c591-46f4-b1fe-77a7ad153846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93835c9-a479-4ca6-9a53-bd374f064c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65c58dde-573f-4c85-9b61-f015363a6df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c740f4-ea3a-4d84-b6aa-01bee0be5cc1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1786bdfe-958a-4828-ba31-3dc07c3804e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5503d617-3c43-4d25-a267-ea443fcec0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3c715c-b0c5-43b5-90a4-f18a8b9c2de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4350f125-00d1-41e4-892c-a4070db9b981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188cf29a-007b-4649-ba98-6e43cb4559e3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced3a684-3433-4bfa-8e53-e22e8b7442eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67af90ab-4c54-4ea4-b4cc-f37bb43055f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def87b14-ea70-4081-a558-6d0ce6cbec32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8da7eeb1-b8a7-45a3-a821-1a8289fc717e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677bc909-f725-4587-83dd-b8a5a4f2b0e2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf80aeb1-efe6-4c52-96a2-638c2dcd8f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816d430a-fe58-432e-ad88-cee7071bbaa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50a2b8d-771a-46e4-b14a-7d95e3c329f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "229f1587-7876-49d7-b1d7-bfe1ba04f35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c0b6c8-0c8a-4a4a-8645-61c5d7a77702",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c078fef-df05-445f-b0b5-1b50c6e0a6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02a93b7-4c71-431a-a3e2-64ff1fcecc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd86ada-36bc-45cc-87b3-7f97d1bacaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c264a023-89fa-47bd-855f-d248203f5fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615253a3-29b9-403b-9d28-ecba214c37f0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a543039-5226-4b0f-9afc-007377d100f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ab68be-1cc1-46f0-924b-99b454cce6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13312ae4-3895-49d3-8d51-e457fc2f7558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7db8574-25a8-45b5-9a44-72c7b0baf870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6fe9f9-51e5-4135-b38d-a3cbfb61d381",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593faf55-e23f-43f2-8bff-c926d0a8bb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325d6af9-7e01-4395-be8d-95a0b5e42288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe052a4-93c6-43e1-9966-474561b811bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91781df3-bcf6-4b4a-9e24-56d5b272c468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9155c083-d505-48e6-8444-5bc69db0457c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86ee366-f8c1-452e-92ee-a48bf7c7d02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3674e8c5-3268-4a14-81e8-db228e243a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e5e8d9-e7e0-42f7-9b24-66768d6e51ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea68998-5f01-4c26-a74f-270f0b864e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2600d356-ef25-4ba6-a964-9ad53964c546",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5871a275-63a5-40c9-89ca-78f0b2f9da87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdb7de2-1ee2-47b5-8cea-39a4fa9b543b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e91bfe6-0bb8-41af-9695-f5c7db9d8be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa21195-1eba-4492-b19e-50fd14dc04b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465bd6ad-6606-4c83-97e7-2523de0c76e6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ccee1e2-7267-4247-8e81-29d9d6809375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ac0c10-8e97-4398-8764-a8d727f2664e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1859e3-4226-4e06-a6e1-c8b41cdcbdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e55103c1-579b-43ba-98e8-4fe0c1e91d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85da058b-d202-44f9-b42f-8b47c46a14bb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb0fb3f-e983-4b9f-b3f8-f946585b0d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80716d4-d4e4-4541-9244-e317fb2da0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9caf9f-8c61-447b-8dd6-4ba2037014ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f225a9ce-2917-4d35-b2e0-c5ba6575075d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6175d20-bcc9-4ea2-9fe5-82f70706114f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a4a53e-f225-4ff3-9508-63fe207f2591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff227b8c-7197-4394-8d7e-cd92fff9a467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de33dffd-aa93-4f13-abdf-a5e90ec23368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5684b52e-188e-4558-bcb3-8c9c4aa81624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e709e518-31f8-45f0-aa9b-0404287eb4f5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6839f6a8-8205-4b46-8f0e-463271280adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c5c3f4-ba14-4130-ac40-1d32879f91b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a431a174-a5d6-4792-9ccb-da7be849998a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f50be15c-1189-4fe5-8094-3a6e98c8c760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147d8945-a519-4730-b49d-e5295592753a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0c7c66-3a7c-47e1-a700-f58e3756b00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cde4430-bf4f-46bb-adda-e148705d4136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb0a242-4686-4ef5-924a-c89e5ac52d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d0db7c-0cf2-47de-b387-e42ebb69dab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7267f2b4-cea9-4e69-8e8f-4d9f817b34f9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a3c1b7-c5a7-4e72-b615-ad01141d37da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc2b3a4-f776-4898-b9dc-59233d6166a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a791293-c49d-4ac4-a197-62903505213b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f597e209-9759-4fc3-8ab0-9ac678e04c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a02f8c1-24ae-4c65-b964-d2e1ab5ce556",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6948cb-ef94-40c7-b3c9-de32fa1d7620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef24b49-7bf4-41de-ab8e-c59517ba2126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6511ce-2438-40fa-a0c5-e3bf3f8e85e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "848545d2-b478-45f7-8283-8cbd0f7a7fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d99e2a-6915-4f6e-940e-145c1e83f8d0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83364221-bf10-433d-8523-735456654a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be9411b-506b-490e-8cab-1f332666f945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd4b41f-3e29-454b-9eac-6b7df07ca6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e670e86-5574-4531-b560-8540b323c6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d1c917-57ad-4949-aa96-ffc54f4ee1f0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb9eee2-ae8b-4912-aeb9-cb9f765c1384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf42b5a-7fb2-4d93-a24e-6e29b76ade4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9711715a-205e-48a7-a5fd-c47f82e56134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb78a586-5098-4f67-8d54-92e02b8443d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0495c6e0-12a1-4954-9ac3-bf4d7ac65163",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811f64b1-2433-407d-bbb9-b6fb2804061d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e230ef-2a17-4495-b12e-cba373082c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed05f5a6-d6ce-43c7-a64d-6202ed954adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8fa8cb-8d7f-484a-b3f1-73ad0eb3c275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556ce9f1-46ea-40cd-b644-93fe91db91ce",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9c86fa-ae93-447b-a6f3-1bcd124ebc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95527a80-a01f-4408-a334-b36950c83d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c00aa08-3d98-45a4-afe0-52396c3cb65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b537017d-3e41-4380-8411-c3dafd1fc2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0929bb3b-102e-4b36-8e69-6555240921b0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a53a77-38a5-46f2-985b-801dfa05a9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8566df04-1f1e-4ee2-8277-8fceaad81e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebd4078-c859-4c8f-b9f0-e2c7c14eba89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7278a788-8966-470f-b3b2-076db9296e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5b4e36-48e5-4d91-9321-4b387f0cb001",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bb5f50-7871-409b-afb6-705e26cc3a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fc437e-82be-4093-80d8-feff1366428d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f02c10-1101-4fa2-9e96-b501d82888ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e052b1c-5f2a-47ea-99e2-421b91c228dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20db2df-0a85-4de9-99b7-32c5e172b241",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37f5f09-d1ef-4fcd-8ace-72f00f81ad51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570ecb5c-5e65-443a-9d13-e40040304018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c311645c-11dd-473a-a35f-77259807e484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dfde676c-0553-4ce9-ba3f-6c295af0a881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dcea65-bef3-4825-a5da-edfc5a8a737e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce075139-331e-4cb0-9c42-1734c6650063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763f2f8b-e960-4f2c-902c-bcc17e359614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e843ed-345b-4027-80a3-0c4ff4e63aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ebecca-bd83-42ce-b413-dea03a9a659c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a802e0a6-63c0-45a6-b030-856709e51098",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dc1cb4-bb2b-44ed-88da-a2eac4afd93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f385343-380e-48d0-a9d1-5b1f09f6e7a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8afc684-fee7-4494-8e8e-84f3529cffc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1eca40-8233-489f-a255-f3c67994117b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e537537-e259-4af2-a20d-85fa41d9dae9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbfdd93-b39b-4a1f-8525-fae4cb72d756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5705be8f-d3c2-433f-af61-e5e5ecafa0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311179e5-c639-454a-8703-406c972e05a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1ec5bd-9f51-4c12-a275-0994d2ad5be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514aff63-f8ca-469d-8d35-4018fa5d589c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1dd3b5-0792-4be9-bf88-d31bd5bb48e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8e6264-972d-4a88-a8ea-d380ed280348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e24e2a-73be-466e-860a-7f6d94621937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc46ebdb-ca94-46f5-95da-72bda96a0102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afc9d3e-b6ba-419a-ac99-1f0d184a294e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729a76b5-9d43-46c2-80f5-3351ff43daf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af78c28a-239f-4457-a3e2-084bdb498166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e912b92-b8e6-4e3f-aa79-7b8e37b136bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ace446bf-1389-4027-97b8-fc0ebb44d060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4eb6abd-d9cf-413d-b096-51f92974784c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0ac829-3cae-4cc7-aeb8-0eb36289f879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1c919b-1a80-4989-b983-b39fe55dba04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2467ed-273a-45a3-8f1b-854a3b54fdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "436a343a-3cd0-4767-ad05-9b001af39186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8abf3f1-9721-4385-b8a1-db81e875cd9f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9f136a-3d08-4a56-92ce-b20312c1a0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8d2feb-47bc-4efa-8e1b-f4110e8785e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54bdd87-3062-47ce-b5e9-f11b8e987b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bef7f87f-b0fa-404e-b4bf-dd33747ecf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15515947-bf52-4693-aa74-bf6de24a4277",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9475ec-420a-4695-afac-9701ca6dc4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba81b153-85a8-42a6-bda8-4db1844e6795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b4a2c2-e510-483f-b601-e0d77ee027fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25eebac4-2d24-482a-954e-7b0074ccb3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b59b94-7d29-4d88-8df4-d68ac9399346",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecec3a2-3697-43e0-a741-85be367295e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e05062f-7560-41a7-afe3-76c7d9fa1f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718e79c2-8a4e-44ef-a98b-ea4bb15bd039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc37758d-8092-4dfc-86e6-e086eaf5db39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48865183-e352-4d59-bd3a-bc475143a86f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79f21c8-f0d8-4156-80ee-9a4f21779935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9f9a93-2295-4d5e-85b0-a6c243cec9f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56729605-d677-44db-9276-5f8f2d93b990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1bbea70-a1e0-4314-bf28-50176dd7351e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f5a86a-b6b1-49e7-9d7d-6ce1f242ee28",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a67757f-4714-46d0-a34b-64670fa4a0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6796a5bb-ce60-4ec9-93a7-a358ae3089b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c715a8-758b-4c3b-9370-7c596643aab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c37f2217-d26a-4e26-8a48-2a49c863bb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd450438-35c9-4e7c-a3d8-f56c4c9b5239",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b268468-06a3-4315-85be-3481b2323970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9060e30b-8d9d-4d64-a390-68e106665e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0521bf53-da37-435a-9f3f-fa6598d0213d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c230915-5062-4352-b629-510099896a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29b6639-d12a-4199-bdee-7872099cc543",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44c3a5f-a6c5-4a57-8253-853294f614b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11be3aa-f0ca-49dc-a517-3874725a302c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57761cb6-d0c3-4024-9ec0-a7b72d4671b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a16b7d-f3dc-45b6-b81f-520e7a754fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbee4ed-aaec-4a94-ad3c-0dd4a0717250",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b6f71e-dcbb-491f-9c6a-ce18d40b5c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5866ea28-005a-4ce0-8142-5b79f2f916e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a721c858-5ac5-4eb9-972e-cd5f141ac23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c9aea7-d072-400e-9b6f-54bb7c701943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3088e45c-30c5-4fbd-9f0b-0097cd0a2207",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b152f37f-f83d-42b8-adcc-f46885718839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5961cc13-fce0-4131-a3f9-3d4c1a2ea6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ff1c49-2596-456f-856c-0837e1cff4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af4f573b-4fac-4f0d-944d-d2e6c466aa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87a79e5-3648-475e-8410-0e6abdb1b46b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce92ac5a-b5ef-4d7c-b900-e1e2580c1e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3d1ecc-84a9-4c18-98b9-15c7e792b0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cce0f73-c573-491d-84e1-e064edbad251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "251aef0e-5e3a-4988-97c1-2a66aac97fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746e3bbd-fe1e-4f26-8445-a1d560e5ed70",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c81612-5eb1-4035-8d0f-12e3250af715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6854670-0f54-473f-8205-ad24ec98bc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0b5beb-f7fe-4ab4-9739-4cb0b30ec56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a1cf4f-311c-4026-a9fc-c33641aa2fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083d9c5e-5d5d-4f2b-8803-e128742fcb74",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7a4092-0420-4ba9-b59b-270074438c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507c7c2c-3189-43b8-8664-a4351516361b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a61ba72-52ae-4637-b682-53073ad78060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdf11b9-182b-4530-92a7-a06b25d89b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac873c6-ba54-44c4-8364-3e0be85eb7ac",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b974eab-9feb-4c04-a9a8-48e4fdf12db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093739da-db79-4dd7-85fb-b4ab5a4748cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0fe810-2f2e-4d6c-afe1-c7bdba42b26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a41f98-8fe6-4e00-b9b1-ce457955e6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5ae793-b425-4700-ba3a-774b42b0b58e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a215d8-d250-4318-bd12-cd77106f25c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411b0499-ec23-4005-91ee-60019604dfd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa461c9a-15e2-48c3-ae2d-a480ae59416d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2230e772-a982-4ee4-a8d7-7b7ef93ab8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872e7974-4e51-4c30-912a-79f7e690a314",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc9414c-a757-475b-9536-02e32eb6750d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cfb09b-bed4-4637-961b-04b35219414c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dac2252-4d8f-4911-9bef-cc78b20155b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd2e40b-53b5-4b24-aa0b-a4e695613a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac933da0-9b5b-4628-b1b9-63b030bd4e44",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9226b04-6c67-404c-8a50-35ea59571180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909bfc8b-89df-4d87-a55c-f9da55be325f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff8edbd-afff-4d69-a927-5c744a6b1515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34fd7a8b-bb30-43ca-b282-5e49a16aab22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae7c323-e7c3-4013-bc46-9f6ef4c7e5a5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95317969-ca47-4c2e-b8a3-ff82f521d867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c19b36-279c-46ec-8787-bb1d6e054487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9dc319-0cdc-4521-8f7c-adb14054430b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6126fd-69a2-48d5-b67a-46459f19f3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b1c7e6-c1c5-4d04-a2ec-4fd50b00ccad",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d769c21-d054-4373-a36d-5ff2ce182daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9893bd-a84e-4bee-b1d7-b9197fbc3221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61603bfc-b51e-451b-a348-4cb45c7a8bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "edd13beb-49fa-412e-9f32-5aa024de3933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7165213-f484-45a6-a4f1-605d46f20ec9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8eb4f7-78aa-4291-b119-b39ac8bf4c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd8f31c-5b21-44e2-af69-48509baba6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20bd5e0-51e3-4de4-a26c-20e751402fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d635d6fa-e3e3-4f4e-8158-a52e87d2b493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3b6ac8-468e-455d-814e-ae625f8a4217",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99ca086-c172-49aa-b536-851ba6433ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cb5907-725e-4f72-82e5-20c732801987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d00a1d3-f92b-43ba-b787-37e981d00309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4698625a-e97b-45ff-b8d8-2a7a6f92780b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec087b75-1f6d-481b-8947-8da1624b1ced",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53575d13-7848-4621-8e75-fe22c8dd7e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2baca74a-e03b-4112-a5b9-71d1e29f9a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9584f0-303d-455c-879f-920771321b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f6ee92-7cdb-4f12-aed7-dc0acb0ca1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebcc387-85df-4b49-8ec9-900b155b38c5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8702fc9d-f741-4bef-884e-e736eeecaa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985f561e-5055-4f9c-9b3d-111a9fd6e691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659686f4-574c-452f-ad89-736ac5e1dc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb5a19d-b2ce-4eea-a402-875a71103b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad126704-c9b6-4d51-8466-d9b7e87934d4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5c27d6-6cba-4735-a327-c69df1ab7778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251dfc7a-a9dd-4fde-a7ce-64f8d6f149c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d277ab02-bd9a-43df-9eb0-0b0d1456b9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14c7c7d9-c6e1-4a57-a2cb-4fdf96deaea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6a4eb7-61bf-435f-a165-175a3969c87d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37750118-e516-4342-bc45-7a607208a52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f550e78e-3ec0-471e-b0ba-2094cc5a75c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8bd551-0688-49be-9fb0-46695c3bede5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e48b813f-7c40-4a95-930c-08ea3e7d7f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abd81cd-8dde-49cc-8525-abf5744278c1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b18a92-c5f9-4dc7-9156-e0668f2a2588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7875c0d-2c43-44a9-9016-42a417147ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c93cc4-1069-403d-8ebb-2e68c3a5dbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "77213419-e157-49ab-a289-27b18af60b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa4ebfe-d205-4b1e-83e3-cac0fae03e1e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed64e4d-689f-4ede-9864-89f519737571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b51e632-7338-4eaf-b0ac-3413cbe420f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2451c4e-9040-42e3-b0f7-45c2aa3eb280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a93ede2-e953-4175-8122-372183ff03fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad0c3f7-635f-45a6-bfdb-3a3dc6b06337",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b722355a-07a2-49ce-900d-8a43e8b1c5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ea96d0-eeb0-4a8c-8e15-a826375db6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af30c7bf-4e01-4812-8b70-825b64b11fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d731d0-99d2-4150-a6f1-6cb63c93ead8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252fdc9c-11d9-43ad-9abf-3cc8b9f0f532",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd36e6ec-9007-4b35-8f53-8df19da55565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e6720b-99f8-4dce-8194-27906e24baab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb179dac-53ba-4b3a-b7fb-65a9b640a7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eeeffdb-3f97-4c9a-a9b1-a7f46f6fccf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce46fe3-0208-4acc-b7bc-aa091341a73c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87824bde-993e-4476-a28a-8a0b2a91e7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73110822-c6a7-4e4c-b5b3-6bff7f0c7012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00f33ad-595e-46d2-b3ce-50c9b56824ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "015c85d5-2339-42ec-8e5c-75eb2890d90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af73711-93e9-4f00-859b-1ea4ebc07cbd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcafc14d-37c4-4df9-b28d-a411d14058ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eb668edb-e6e4-43b3-b4c3-22ba86b9dd32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf916748-75ae-4cfd-95c8-c2ca16a6399b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9880cbe9-4dd6-4dab-a536-1a34d77dfec9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b2fd25d0-fc7a-402c-be03-99a61968fe3a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2cde08a-9b33-4d18-b65a-566e989199f3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910eae2e-091a-4ca8-bbd9-ffb874368e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb1c6b39-fa87-45d1-8a34-19901eb6f217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28edd9d-08e8-4238-80cf-1bb98511d193",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b325c04a-bf99-40b8-92c1-81f3191a08e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc25dc49-2440-45b9-bfd3-48e474546cb5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c48922-614c-466a-a823-7e90b0e8209c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c36cddc-b9c8-4a43-a4e4-115d36bd36e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79667adc-7fc2-4b15-87c4-d120affaa84d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "138091cf-af73-45b4-8083-0cd849dac68f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e618b80c-a2c5-4e9d-9766-5bd9a8ec9252",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6503e2c-ebad-4ed6-9fb1-a52d29b0e754"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33e22a24-0b6c-46c5-bad5-381dfc10aad0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "519d3a45-b672-4971-8bfb-154eb996deb1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f2b30309-9638-46c2-b6f1-7b15f5b863bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87ea6b16-369b-4b4c-afd3-1558d984dd27"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "896370b8-6db9-4719-a4b1-a113d572eb1a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01636f00-9380-4295-a0ae-fb9259401d1a"
                }
              }
            ]
          },
          {
            "id": "356a2fcc-8f8a-4d7f-8f21-5d8b18d82261",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da9def86-fefb-414e-951f-21c774cbf00e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6dd3300-7c3d-4bd9-b36b-db2ccbfc4814",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76905ee7-5a12-42d3-909e-20d49d98cad8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f42a155-410e-4913-8dd5-8f8de5114320",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0265fc3f-441a-45f9-a388-6ad2c4662c24"
                    }
                  }
                ]
              },
              {
                "id": "928ce98b-ff1b-40ae-b9ce-72276dbedb6f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a41361a-a705-4d51-bb56-bf9c68c7d908",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c6cac91-d11e-423f-a2e3-40bf79608a94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f037ef4-b6ad-4e40-b0d7-8fd344b652f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1545a9ec-a6d4-494f-a807-0315c0c41d58"
                    }
                  }
                ]
              },
              {
                "id": "302f6517-1091-4030-b864-be647e8e6829",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e6cb59a-2e04-4c70-9e76-dc7d1b25f1d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b8bc9f3-3f7d-4da0-8750-da6c03802827"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff81724b-cc91-40a7-8fbb-936bae6ead79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f2e2b5b-1713-4539-ab82-bd6f3a6969d8"
                    }
                  }
                ]
              },
              {
                "id": "6234b70d-a016-44a9-acd1-6cd5a126f75f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80197b91-c4f2-4eed-b8ba-cd3f191e0264",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef721af9-a514-4f90-baea-f85837fa4de9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a987d2e2-973c-4bf9-9fbc-a5bf30f08a1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5c4b0f2c-fe71-4b79-b89e-51d85faf29ac"
                    }
                  }
                ]
              },
              {
                "id": "f53971f0-f1f6-4c8c-b41c-522a3ad8f86c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cb0071b-0554-43f8-888a-a6e229ddf80a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fec833b6-a314-4cd0-a275-fd5e392b6c91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44d09afc-91c4-4958-8787-c4beb603c425",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7ebe5948-19ed-4460-a0c9-a5be4459e036"
                    }
                  }
                ]
              },
              {
                "id": "0c6dcc2f-53d2-4179-8b43-e1425533864c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f16d907-769e-48d2-9aa2-2071f342b67e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52da8d22-1022-4e8f-b352-6a7bd3af9051"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fd2af95-8793-4faf-9063-4761becb385a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c97c829-777e-4850-a942-b21ca297e544"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3cc516c4-e3c4-425b-990d-c3f71168e62f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3199a97a-9412-4bcc-8cb6-97a951ccede0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da99c603-7cf7-4c77-8695-65477c0232b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e20b255-5578-4fdf-b3a3-66cf4e9275e8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58906040-77c8-4b09-b824-56956533e5c0",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "00e5bbfe-4e5a-4a4b-b83d-e997441db70b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd27d889-664b-4837-b2e8-641b3e3c4fff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8439a337-76c7-47a9-8bc3-d1454837a18b"
            }
          }
        ]
      },
      {
        "id": "b0a5d3d8-4ca3-4583-9083-c2c31c7f0e02",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2f3af6d9-0966-486d-86cf-a41424a6fbad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "548010a2-7171-45bd-9ccf-f9efd4bb543c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "49c133e7-5ec9-484a-9430-f3b4a10a9d3c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627d3072-077c-43f7-b4f5-4032fc9c8892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3e2209-f1c0-4197-926a-4a5c77710304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106c72fe-819f-4455-a93d-9034be3f7954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "13fd203f-a478-424f-a6cf-f2c362cead11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5911903c-26f8-4283-9f39-cd37422a432c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729236c0-f14f-4d20-a7d0-62d3698e38b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53ff3a9-9e29-403b-b988-32cdfeebf0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d3bdea-b348-4634-9ded-4b1d3d058246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c52ca4b-3476-4009-972d-9705fd08688e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82923b67-5007-41da-8c3e-02c735f98439",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08b934b-abe6-450e-b765-26e7314add8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859cb4f5-6fec-49d1-bfbe-254b8b8735ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f43a09e-2db0-404f-a468-cfc0f9c7238d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e86af06-c645-45d5-b38e-6fbca61723c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f626815b-9a4c-4801-80bb-37b2869d955f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f2cbad-58d1-4391-a6b7-a5ceed5ab4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e964cb6c-5c7d-458d-8f5d-cea874fb6fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9ef743-8dbf-4724-a650-66c47c2a15e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fcbfbd2-a9b1-4474-baf5-1a19410a3149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac901a60-b338-4b2a-ac9d-85aa8d44ac49",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ece3922-e49a-4666-8dd1-de5cb627cd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b501225-a5ab-41e6-844a-80059dc25eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d563c6e-7d99-485c-a88c-76567762e7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96e361a7-d6d6-4a6a-bcd4-2cb9dd4b9ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ad4d2f-af2b-45b1-9b9a-4006b0069844",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38beac42-b678-43e6-9703-1ba3cd82f694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa39436-9160-4f12-a458-6439cce6c82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97618605-bf28-4551-b253-aa140a404965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3fe3d2-9ca8-4aef-b3ba-2db1f7b83f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86b9701-6d7f-412c-89af-e7fcf89ccd57",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc8bbd9-9235-4c81-a80a-c538f505233f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8786a052-c146-4dcb-8b6f-2a163013facc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48893859-edb9-4789-b19f-3a36da09d447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "704140a4-2840-4b52-8817-20136ef49043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56c67e2-3040-416d-8915-e37ca434122c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64232432-904c-4e25-8488-327242128aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62ff14f-589f-498a-9467-e27e8cd6aa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca51f9e6-2393-469d-acc0-ab3612a5bed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "394ad4ad-9fca-44f3-9aee-5b0bb3e96c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbff2294-104f-49b9-9473-f18d49fc2dc8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8efd4b9-5400-42aa-8619-3cd8ec6624a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abdba14-b44e-4b5f-9c3b-37c4463e1a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6a50e1-03c8-4db3-9f3c-9a6b41f6c514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c1eb9b-dbac-45bd-ab7f-5c5a8af5ec22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6084279a-b327-4d0a-a636-3e31f49eac05",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765254ae-28f0-4041-b75d-3183bc6be829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec19fd2-3839-4175-ae73-04db44199178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badfe78f-0c62-49c8-a2b7-030502178164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdefcc98-3ffb-4522-b1cd-b0f8c27c1a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680490ad-272d-4545-a7f5-55178b36fd6d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e1c8eb-0318-4c03-a367-6ea75275e319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956c5e1f-c2dd-4f30-9aee-68c42232f5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea47f99-80a2-415c-ab35-eb1f4086ffe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf2ae08-76eb-4776-b191-5ebac6d116fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c110741e-1528-4803-91c2-ee813fea66ec",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717a626a-8f37-4adb-beed-49cb168892b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490ab002-0515-4498-999a-54b37953e585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b47d97-35b1-48c1-8099-714a23485218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3072b194-572e-43a5-89a3-1cd812de7ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eabaea5-630b-41e3-b3c6-b8d392dd936a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5a8d91-9598-4c06-a5e0-8e14a37fb023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265cc85a-6721-4466-b6ae-a5fff7372025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def2a6b7-6a9a-4c2b-8920-e08732aeacbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "897056b4-fe53-4da0-a27c-a14f9213ce8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e8bfe8-946a-4ad9-921f-01aa290913e3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98d3710-8068-4274-b0ed-863ca207ae00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f92cbe-a415-44c3-bd0e-624cf7b87670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2cba69-8dd9-4d89-bd94-a9f87ede04d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8005ebd2-47f7-484e-ba58-e660cb80984e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029a1e2f-0e33-427f-9f9d-02b5b1d0e7b6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638ebecc-8072-4f9b-94c0-7cfb4450dea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f907d21-68c6-4b05-ae4f-a57dc6658cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d181c0-ec6e-4bea-ae85-46eeaa2d4932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "62594f27-3696-41ce-b265-b8883f9f752a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4ad19c-d942-4a22-a932-04e061ccffab",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e3a394-b033-4ef0-9a58-cc4d1f1df38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5da4aef-9a99-42dc-8872-fa54ba8cd88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485d9c06-f7cf-405a-94ad-e69a5e6cf6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "612220a1-fbac-4c7f-bfd6-361730bb46a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45ea855-4dc5-4120-9b98-f9356ff015fa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d381eafb-887c-4452-b5a5-5ce7f74b3fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5f680f-3de8-4427-96cf-3214385336e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f9e171-2828-45d4-b652-58bfef2010cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8096a94d-7168-44e1-8950-e43eb8116737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862ced3a-1ba6-4b56-b649-f08047d7c5fe",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b8e5da-fd25-45f6-8a76-928f9247be68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f6314f-fd6d-4b29-9950-c5bef1932cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea91886-3688-4c17-abd7-798d0da00c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec086a4-5c34-4e8b-a9aa-e0683e5a4e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020f0211-95f0-40d4-bed4-e7946d925f03",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de533b89-a0c6-4867-82c1-9ee6a9aabf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15970de4-7788-4963-8d67-05cd60ca4707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91930af2-ac45-48e1-9587-b796c3aae720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1821081-5648-4760-8325-7fbcc9c384a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812d5a8f-0a7f-4f6d-8b46-c4ac1b5163c9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b2adb8-421f-45be-9c9f-e634419ae1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b3c406-073c-4d95-b6ce-00ad4dce43a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303f90f7-99ed-4349-97f3-af5c4ff7a43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f416dbb-ba54-490c-96a2-4ef6c6026178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9cfebc-dcaf-4f9b-840e-11aea8be02fb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac814fd2-45f5-495f-8709-166d25546e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5d485a-a5a2-4245-9ca0-f33d5c8b464b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0290fff8-c07e-4fd4-b8cb-4a757165bfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9449244-75b1-4b96-8c73-4bf2740d8be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a797c886-706e-4a1b-9d79-6bfddad3141e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b48a62e-470e-439b-bb33-5b0294b11821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e04d0b-82ab-4e41-9129-62798a743673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41037050-7234-46f3-84f8-ac77ab8ad6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f205ce6-6e3c-4d14-af91-e56d745dc0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e0bae7-6392-49d2-a6dd-4505734532c6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a28fa3-c8ce-4af4-b1e1-56fac16fd9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99dcc5dd-4008-49c3-9e8d-5cdad275828b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0188a7-015a-48f3-84bf-17357f06be7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4c6906-d692-445a-8245-319300d349df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f84d2f-c0e2-4480-a127-0b4476f61a54",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56e91c6-7aca-4431-bafa-4bdb4f33cc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b89026-18d9-4458-a3cc-7bd853d75617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cc6d07-628e-47ca-81c3-43c76da7fd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b545e275-4254-4297-a5e9-bbb0d885c9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d350a43a-6dbe-4a69-ae98-e2ec7d84cd55",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66893a8-3a5f-4940-9a54-bcb14e5021bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1147b8-8408-4b80-a314-17c8cd3a4e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8220e1-815d-4bb9-947e-5da352d5a7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69ad3a9a-57da-487c-b7f4-3757f72639cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a95eef-c666-4013-8f5c-ce7d0668e858",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fb23bc-8567-4150-b96f-f34759dfb0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3c6275-4ebb-4373-ae8b-a9f127054310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52fc97a-ed96-419b-9e22-ebf058580fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dccb8231-e336-48be-bb4a-30c8fdcbfc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f9494a-6ad1-4394-8b46-7b602357140a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19d161a-cfb7-4f7e-ad77-eb774f337749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f19e416-fc11-492d-84bc-a51866cc69d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9fedf0-d569-4140-8526-a264bb07a8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56abd5fa-df56-4f64-9ba7-b9f2a0ea72d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d8f3c0-98b6-49c8-a2bb-3cff22808f2f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e83985f-dec5-4094-afc0-59dbfd259691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a6e377-b26d-4102-b105-de9cfcdddbe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceec39d3-32db-4ce6-be12-5f942f4c76db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0352f8-bb7a-4fa7-918e-13898cf23597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240908db-f58a-4857-83f5-20e9304043e8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8e488e-ef0d-4b57-ac99-3d42d18649ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab4af68-1a9d-44f8-899c-fb6453916356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed86ca3-ed9c-4d64-8670-10754b405e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4fa876-9b46-46af-8676-ce97e913d198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca34453-bbc1-4042-ada0-137228006d88",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db42662d-0b57-4600-a5af-89f29da558cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814659a6-4c74-4596-8541-244f3dca1316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d61bef-2954-4ecb-bfd2-66afe977b7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ab0174-7d8d-47cf-9931-941b024e02c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d1b4ef-759c-4d8f-bd52-8fd4dd57646f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "895994f5-8c3f-497e-97f7-d1827dea6a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849d76b7-f831-42b1-870d-9e9b0adecd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb925cd2-d3ce-4429-8ad2-36574b4e1ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a00e64-ff44-42e3-b13a-e2dcff2c2c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47896899-aa98-4e78-9bce-1b952fb76c0e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff79fdf2-b655-42ea-93da-de52edb92871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ca5133-f877-41d3-bc35-b706d0f0f829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ba3936-c7d9-43b5-acab-180c0e98818a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23ea945-5226-42cf-beca-08399b36862d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "82a5a762-7867-480d-b486-f3f2239ba159",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "963209e4-b9e5-4fbf-a5d7-a9f6d6093024",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ffe89e-74cc-46e8-bd3c-e33a60010bb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4892602e-5667-41d7-9dc6-83d313648e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20cd374-8315-4317-8b01-21e86630f663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b46645c-2c54-45c9-b9d3-4a40d3919f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad2f14b-82ff-4dff-93d9-74547d87ba81",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5842623-5c6d-4e07-a6cc-4725a28362f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c81a8f-afb2-40e5-aeb2-94cebbd1fc62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8378f80-2cc7-4779-ae1c-0dc260242d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "501a8318-94a4-4ae9-9221-2beb6657c92d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87bb2d2d-5a1b-4953-b952-c8d6a6676516",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ce89522-7fdb-4ff8-a214-620abaa58760"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eddb43c-2ec8-4047-a5fc-68d48b410d60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4969f1ce-117d-492a-9fc8-8fd35a001470"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30b542e3-7441-468b-b2b3-d23d09e78d87",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c13f938-68b1-4925-baf5-84743f7928ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "476b47ea-7fc9-4ad7-86b3-e56507938cfd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c7851dc-39de-485f-9214-70f6edfcd5f1"
            }
          }
        ]
      },
      {
        "id": "070bbb95-f69d-45cf-80f6-1ce23a5b052f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8e17a36f-f70c-49cb-ae8a-62581ff29a76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d49a5f6a-a553-4208-9ee9-c4941ffa3d3a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2bcb13fe-7b73-4a0f-833f-cdbf7b497728",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992967bb-b6a9-4c93-a7b2-065f058b5bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee60aaec-de5b-4728-b676-e61ef873b50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b87275e-bb8d-4180-812a-607ffc56a624",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a289557a-6222-4a9a-9dfb-36ed6be9a1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77755cdb-877d-498a-bbec-fece49ef5743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5924808d-7dff-41a2-a95d-f39546681182",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6253c65a-8459-4a17-91a0-b298631bb9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d84e6b1-34b5-45da-b953-d590fd6a8a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ec4824-1a2a-440f-b97d-54ec0f30a32b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a12abf7-ee52-41bc-b3c0-69071f18f433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063649d4-c1f6-4238-b78c-85a943cd0aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b5d61e-8e3e-48c2-8123-0b90212c5414",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c00191a-2e30-4186-a4ae-dcee8ccdb4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427ac110-e6d1-4443-894f-01eeb3ea332f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a278995-1799-4e06-bef2-fa7e982e1b41",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e41235-0f4d-4149-b2aa-3c6af02bbf34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589a041f-e90e-4e27-8c92-23a9ca30fd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac56835-80b4-42e5-b0dc-a236b4670c39",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa57de3-01f1-4b69-b97a-2d5672259959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c93f346-4ff1-4faa-b72d-3bfa7f415bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf6d664-d050-40cb-8f2e-f61fa39ea639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60137749-9821-44d6-9977-285dc490ad75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5c2038-097c-43e7-aba5-32683e530d8b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23ade59-deb0-491a-a740-fc97d2274dd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c92d922b-9e18-49c1-a1d4-6908dc1a482e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2071a664-7d18-424c-9d34-feb4a913d1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c713f6f2-0d54-42f3-9e34-bb8a22f3a7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2892f499-e011-436f-9674-f3ad0c043cdc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d1d020-d113-4f4e-8532-a2e8e3d112bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38a5a106-4ad0-441e-bf08-96cf52f31603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5499ce-b247-494c-bf76-ddf377666f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594e658a-19ea-4a6d-88bd-311a65b9d4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bd49fa-5f0f-4532-ab61-cdda75dc7457",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c1fcf0-da66-4977-88d6-e815e2565158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dff5430-f0b4-4dc1-87a2-703dd962a1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c274f1-3a7b-47de-9ecd-4655ea0db1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6449b5-6e09-4e36-858c-2b0cda4b0373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f555b3-0aff-444e-995a-ebb94adde553",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9541fa80-0906-4170-bd8c-acb2a3b6cc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49817634-1d99-4402-846a-b94f72219e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94ac5de-85b1-49af-aada-5f24bf69dc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a57e602-04ea-46f9-8223-c043759defdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377691b0-543e-4171-a35e-6f04372ecaee",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd2d000-7056-48c6-81cb-491c928bbb92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967358c1-37a0-4269-98f0-03c0887ce756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3528e703-d028-4717-89dc-ec19ea16175c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1980d4f-c114-404d-aaa8-7911362ca2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595c4a3a-6d06-4a35-a69c-166604f42245",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b630da-e86e-4e13-9559-648394c5e152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22e6adc8-3f33-4c73-9c4c-ecc5959daf47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab415545-61af-49ac-a350-59d991775692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566ba082-82da-48fc-a632-7b119174f214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059a5084-0396-43a3-8c92-aab6028f1e4b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3bb38a-1e01-4c55-a80d-f3f984c70624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf0662f-d7ea-492d-857c-97306066c87a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae124042-2379-4ead-b1a2-06b5429e68fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de665d54-6631-41e2-acf6-e3e20d2d8ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddaf47f-46b1-40c9-9a4f-be5325def1be",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd53963-150e-4d34-af85-5af4371c49dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8a29eb-4072-468d-a8d2-813ef074872c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57825e2-3404-4106-bd67-5220f750cfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f6df34-93a9-4ef0-9439-4d441a58b9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da941c5f-7850-46cd-8eeb-abbd86bd8951",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d587b6-d866-439e-9f57-eb12430c3df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5134e5c9-448e-4bb1-9cbd-44efbf8428e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d20cdc3-724d-4de3-98b1-0e308ca446af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c672bffd-ba03-4a61-8eb2-04f4b878a6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996210cf-15da-40f2-baaa-458c098492a2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798b7b0a-00eb-4033-b49c-42b7a4e878f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09837608-09a4-4726-844a-48da88a9c023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54e4d5b-0052-44a8-bd83-52aa0ed94752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592b3b1a-b781-4ab2-b434-0691bbf260b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c857083b-202c-4f07-a0c1-a71b4e7dd65d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590e418e-b0ed-4972-892e-3884b85a4eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98228d5-b750-40ea-b09f-cb50a0d3aa7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719417c3-d613-4a7b-b887-6e238ed1a8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bdcb26-c834-4b6a-9e61-5ce9bb83d5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52aca6ef-1155-4b40-a45b-9e31a6022b90",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a71fb6-e5e1-4589-be88-28d5daaf07b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a36363-6a88-4fbb-bc48-4ec0f461b166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d59e4b6-ec46-4776-919c-07fbeebc7062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4f9390-fe2e-4d28-906c-eaba642b5328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02b8529-f0c2-4a19-aa92-9542d24e1ee2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8917536f-fbb4-447b-9be0-7d063dba9503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d849eac-2baf-4a0d-b913-7abd879eff07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d53eb1f-c1fe-4b63-b59a-7ba7c06786fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea2a66b-dc68-4214-9cb5-ac009253ea48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe3ef08-ab65-4256-bf45-f496fc4dd20f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4981936f-0504-4cd5-9544-b267ccc2e83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1accf67-f3b4-4327-b8ce-b84eab068027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5f39e5-f318-48f5-b9ab-f64904b39b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ec0e93-d998-45ab-bdbd-a312f74f268e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae3f155-3ecc-4596-a612-bb3078dc5d1d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097f6b43-61d7-43cb-acaa-bfef12f21a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200daf2d-604c-4114-8ed6-f3f4c089a95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b415b670-fcde-427e-a7a7-f2a50179ad06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91194604-e6c6-42a8-8829-c6dde35249c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbd50fe-ccb1-40ce-b18c-903b01fe7802",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bfdd48-7aff-4626-b0d1-c0900e6bacf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfa497d-086b-46f2-9779-2b791d688dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79ef35f-ef29-4bf5-ba29-232bb62d1a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5e2cb9-6491-4a96-b03c-bce65dde0bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2962cf67-dca3-4c79-9435-a3d360dc9286",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f68881-76eb-4fef-b0a9-30bca4f719ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "140a5662-162a-42d5-8bd3-7e6fc72115c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06541c4b-ab4e-483d-83dc-0e18b13553a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880aaa44-ad76-4b0d-9b49-5cece9cc90b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aedaad15-9626-457d-9f75-8270fbc03c43",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7725955f-0c70-4359-9724-7f46adc376fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a934236-64d3-4b60-9aae-388ab321a539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360311b5-2dc8-4ce2-aa60-6ec04f58aefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12acd0df-eaff-4506-87e6-33cfb13a4a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6920596a-37fd-4232-850a-b1a3fd2aee4f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b454b6-da84-4d18-8969-497bb5d2f5da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e77eac0-9257-4772-8e47-b702611606a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cf7eb6-4e8f-4f01-9c23-e4ad302b0b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee97881-d984-43da-a15e-ec431895cde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d364885-a9b1-409f-b9ff-3bc8e9f63664",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60936c2-f568-46a4-8151-8b4b17ad748b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8ebb684-36b8-4b54-8576-67d2ea23e072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38da00c-6995-493c-b3c1-34ef6a1312d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f32700b-2d07-457c-8b7d-a4942d3052db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce04908a-601a-40ca-a944-db1983e0e4df",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee72e85-e954-4845-b0a5-cd1327947fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4b1477-d821-446a-b0a0-e162c092afab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597e7977-9b93-4879-b4db-b9b81ef25278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1646aa-69f2-46c5-a56f-ee8d3f4bd4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9c7925-c049-45ed-b8f5-dcba6f93ebc1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146e6c94-431f-41f1-9460-2237b83e9cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed214d71-6766-4e9e-add9-460ad0671fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba0d9b7-b26d-4124-aaf8-bdabcdf3366b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56cec6f4-d90f-4e4a-b9f7-904699a9ec23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de661269-318c-40fc-a7a9-810240640f29",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e39cc32-16cb-4391-b073-fc5664dbf7c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef5e28df-095f-4fcf-bcea-57e873eebafc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151903e5-5bd6-41ce-9bda-09d4b603ed42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0684350b-9bfc-4999-8243-2ff6dc56fe5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77c2609-cfad-46ec-8027-c7100145c268",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beed2319-9d58-469c-9d54-a5a86486c2a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00b2bf38-d89e-4d6e-a06e-cbd4154c8e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257b6ae9-85f8-463a-a867-792855708b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e1022a-02b7-4ffc-b740-a9c04c53b018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41330473-e831-4bca-b48c-5f614fa6ef1b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a8235c-b77a-4d47-bf04-95dd2c5857c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49bcaa45-b624-4c52-98af-72a3fc5d3893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb11c9c6-5ae6-47eb-abf6-c38dd49fce2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97e4c71-c8a2-4d69-b326-26ab3a9dba9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5461dd-5539-4390-8141-352d22de8c6d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e79ecc3-f7cc-4266-9f7d-5f664a075c3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ea0ea4-15fc-470c-90ca-f1188b1c9fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86a817e-1d9c-4811-9e91-0065a9f169cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4971d412-5ea2-4cfb-a3ff-7a6f76d5b775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39850d77-7f28-4ede-a142-42bb19716d98",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ae5c5f-fbb5-4006-8c66-572ef02a58e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a2c0f90-4e1d-411e-9aff-d33e35245542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5581ee-d9e4-433e-89db-6169afad569b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18a08c0d-1ed2-4a07-9e35-d83543da46dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c1a21a-792c-41b2-b27c-0d6e41a6e859",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4289fde7-d81f-424d-a9c9-58a5d8380e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d4ef90-a017-40cc-9593-551e54b4cddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182e21d1-984c-4a2b-8815-7ac43db5d8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f2427e-db61-42ce-909a-80e858a7b91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc440af-a157-4aee-831d-e7fd7c3452c5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355d51f8-021a-4ea6-b7cd-8607eee25438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d93bba5-8c84-4389-bc34-46b941eec696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954c1074-b3d1-4eaf-87b2-f7193670033e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f438f3e1-da2e-42f4-8aa2-f73643430287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11776533-110a-4da7-85d9-396428f7136a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabae020-be53-4558-b137-d4dd5592fe96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30afc3ed-98b5-4c8d-aec5-87c2a853e8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f665bd-f4e7-484a-8e3d-04b2d1cdbbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "497c763c-7241-4b4f-b75f-9464a49e7458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f401fd9-4f69-47ee-8901-e088234ea8d7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc84f56-3ed3-4bf5-a7db-ba2860a17280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc133429-45af-484e-954b-3f37d90b31a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8709d21a-cbfd-4642-8c7d-45af88bb7773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86aad7a7-b36c-4a4b-a506-c6cc4f77ac7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec11e38-95e4-47a4-977d-75b25782f709",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4d5472-9c94-44b8-8a40-45df8d869f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ea89e6-5353-4c81-9a8c-b65ba801c5ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0130674-69ed-4663-93cf-fb7a0dd9648b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a41174-30df-4165-b29e-b681f68c6cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9631f8c1-83bb-494d-a04e-6d487a4bee89",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c517e6a-83c9-435c-a6f4-c6524df34a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1632286-db2f-452e-9300-44d6c5a79a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ac7519-1a7f-4468-b02c-b7f7c0baa349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec4ea9f-598e-4789-874c-27a40f5eb721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ca53c6-67b9-4a7e-bce6-98149282efb1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dc8ca4-604b-449e-bf10-2121094f0960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5add2da6-932b-422b-80a6-95876c6f45a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0788786b-5244-44b7-9d7e-dea1404826fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab199251-02a9-40b7-bcbf-a473f3d007bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f6a16c-dae2-4e89-8df4-fe000679496b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95d6cfc-0994-44a7-b260-f2425e13f1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79699d8f-27fb-4226-bfe7-6ae0e0c6df4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22284c4-b616-4bad-b8db-8bfad8a9233f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6743b50-9c4a-4a67-a4e4-7666665f9555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b07f822-ab80-4203-8680-bcf71f2f0bd6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e54b67-f73f-4e10-82e8-90457a90a995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cf36ad-5cac-4039-92ea-38041f6335aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821d4df2-1e1b-45c4-8b9a-1ffbdc809b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e463c9-9a4f-4436-9cb7-06e03cf688a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62e3fbd-5d78-4687-9dbc-e5ff0aa7f6ff",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215b9a0a-f6fd-485d-9cc6-c1e034e60641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66fd05ef-cbc3-49e5-bbdc-d92a01778769"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42775b44-e408-4367-a9e4-c75166280fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf7d284-9f30-4a0a-8cfb-d2a3c3c91153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919ad685-e16c-4372-8572-a547f871be1f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b4d59c-ec14-4004-bc53-3de2f7b87474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514612df-91e5-4fd0-8095-5e56227560bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a703b2-7b7e-40ac-8510-33f5926bc5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a8c532-a6c3-40f6-9b18-1dd51a726f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb36c66-b3e0-401e-b953-c7f87389efe8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486ad1d9-5ec2-40cf-bac3-fdfaebcd14f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21927fb-978b-49b9-a0bb-369b0ec44cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3059c117-804a-486a-86e0-9e9d795894c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa0b304-fb40-494c-a140-d23ee96064c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd05f777-0607-4124-b7b1-c828b7e159b3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76f5c0b-a81a-4e0a-b7a9-8bfb63cd0e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361fb716-c17d-43f5-b1d9-24fcca6e4f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e2bf0e-9958-4050-bafe-0c2b9745517b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66490c50-b14c-4726-9961-5ca43dfa3e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7b6675-b09d-4728-8cb1-66e408fcc0fa",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f25ed01-bee7-410a-bc09-9586340f779e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0f051f-9402-4efa-8688-c55795a2cdf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cef815-8a9f-4cc9-adff-d6af7a13db50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c247b0d4-4ada-43fa-bfe2-c02b3d8055a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d65989f-029f-4401-9d5f-8d911919b26c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f915214-16c3-4270-8090-23513ddcc591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91738ac5-6480-4180-b81d-ebc607bf4f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685e7d10-ac1b-477c-9b38-1fea92877cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c08b97-4f50-4b69-b4dc-81c2d9f296c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc90d2c-1b82-43fd-84ed-e5e312b80f8e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1be082-f35e-495a-90fe-c39898789b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9ff746-f9ad-4210-9bb8-7fbcff739fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b184e399-5ef3-4266-8b07-ca570186bdcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9111b987-0c16-4488-aacb-82b7a06d1fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208398b7-c5f4-483e-844d-b1cbf52b9c00",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c025acf-3dcd-40ed-8b18-e41b7776ddd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e895c1c3-a3fa-48ce-99ca-518af9f9c95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b24673-ad3f-451c-876b-360e8b565a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f268a34-15d4-4866-9c15-8bf7db99bbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2365aabb-3ec7-462b-a1c7-89003a2de2b0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79840571-3c9e-4f98-aa6a-35c588f9e566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07447440-0be7-4386-9003-e3bbe764e3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ded675-20b5-4033-8bc1-d5987152f9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a2c483-10f5-4f2b-a09f-1c59e9d1b37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e2dae1-7a7f-4db6-9ae3-3392b44cecb4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc861eb-1ea0-4177-86de-3997109f9aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e3c1fd-469b-4553-8258-a317ffd0ae61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882725b4-35da-4813-a2bb-40efa111ee7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f440968-72a7-4eab-82de-022baf9d6516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293fe518-955d-4d77-9e63-2ab17c9b86ae",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c40a480-c195-43ed-9a90-d93f680379e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83385b1-9b2b-4695-a269-e670f9bb1ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47f5604-7f22-4035-931e-0a49fb71edff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc99fe3-4a11-4b8d-88f4-c2b45d3b15b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840dc203-d5ea-447c-b8c7-0aa762f7f0e5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe3dced-4591-45eb-9f1e-3844e7b85e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e631a083-d511-4615-b4c3-9566ca7ae91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c482a18-4765-4531-a328-9c8cf5a94570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd2f95b-50df-41b4-862a-f66cf8b94360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05710c91-c2cd-4f40-8088-578874b01266",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9441227-2fff-40c6-b708-411e67c07cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc351192-2495-404b-8441-d0135024749f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3b5877-f98c-4538-b646-995d86790b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd996135-47f1-48b3-a1c9-41e077ae24ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee8857a-2d80-4baf-b31b-9d0dcf932374",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece0a51c-7dde-4a08-a331-fc745e289136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e84ed8-855f-4cbc-8487-ac33d14cc0c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5b6052-fbe8-4f5a-bbbe-efa177ca87a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9ae569-a246-492e-ac81-a93b8729385d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9689d7a-cf5e-44ca-876d-67b802e3a8de",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416a5187-9550-4762-845a-52a39ed0aa07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5391a0f-4dae-43b9-b20a-6384d016d36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dada4f5-9037-4c96-860c-6cb4d5ca470b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b8ecad-c125-422c-9c94-f9dd29379465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfce2a57-2b10-4071-9696-a4f4fc33a2a8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1edb36-7327-44ba-bc50-0a164f14c827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e68f77-84f4-4324-b9d2-0b596dc7419a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd359e6-926e-469b-9f6d-2bf38a9f6c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd10566-3648-4678-9bff-5812aa624fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4168af-3647-4b01-b5e7-220cf3de51e9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a406efb2-b2ff-410d-9a1f-8f90fe32dfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9af5af7-dfc2-4c5a-a430-edebc11217c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66ef46d-bdd4-4e98-8e90-766205723f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c66c1c7-4b9e-43b6-8f9a-58b4c9042a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543e3293-963e-412a-a8eb-faababb97652",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b02f61-2f19-487b-af07-a98ba0ab018c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bef8255-adc6-4c06-a741-4a959dc94f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5750459d-c8c6-4f8c-942f-9acb5560baee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddda9a2-2873-4b24-97fe-c9b6d2390681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b15b618-60e2-488c-ab98-caaf8ced5d89",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c7ab58-bcc2-47d5-a063-cc988d604318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1441a7-e3a8-4dfd-87f5-7093de83d6b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9512d27f-2666-4f07-83a8-c61deec0a205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab5c63d-a3b4-4d0b-bbd7-158c21cd4bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2c09eb-47e7-46aa-b23c-e6ef0783066d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edabbdcc-aef9-492e-bf2d-72b90ae6cdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55229e3c-fcf7-4b54-bda6-1417a68f25eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6020b1-cb34-4474-89ee-81b7c3e65327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c8bd41-9108-4887-9dd6-64f8315ed454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959affd3-a609-438a-a593-b4c2d8a4bfad",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccab630d-e286-48fb-891e-fc938cc78f14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77856f69-f926-4729-88c5-33c7e0d57a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cb654e-a73a-4261-92ad-ae155a49e9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fad986-fa5a-456a-98ab-0b0c76d95f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd4a1d1-a6ca-41ba-a503-4fd89796e002",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d59636-5360-44af-90a3-6702640870de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "900dd246-a1a7-4d0f-b430-cdf5b754258c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9704573-faa8-49a2-8dca-520507f3808c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943e6609-36cc-46e9-8985-328405b1478a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c525f07d-60a5-4534-afdf-9146bfa3025b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc1522a-80d9-43c9-bd20-f09784385db4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d236709a-2e95-4309-8d00-1c3a353db375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86f42c7-fe62-4520-8cb4-ef2531775b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8fdbdca-af83-4002-95d0-c5af0aed735c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f735ed00-cc3c-44ba-bba1-7b3fec05241b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d4b430-36ef-4819-a840-485065967f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849ddd5d-4167-44aa-8f8a-94c332d53848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4813a5f-4209-4b1c-b21f-1c3bb237fb50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057e1020-3f91-4fb6-a015-c6779c5059bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340a6682-801e-46f8-8fa3-0de811fc6ed0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddaa302d-083d-400b-9803-9b8c0cdcbcb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "081bf266-93e9-4c84-8353-a0f0389ff208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1c006c-509c-4c95-abf2-eba1cf00aa0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7c1980-09fa-45a5-b0ba-89564bd12b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f6fc97-7828-4394-a8ea-545dbbfa8b92",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd71c56-5673-41c7-abd7-76416315065a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f6a7b52-5165-47ac-8346-2f7483baad34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba63bec-d20b-4f55-8f1f-f2292e72da07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b3372a-8132-4982-8b5a-0c461488359b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c07b443-6186-4457-b0d6-b0203d99709a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bee7cc-5c0a-4594-b94d-cb79acaaf918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b41a9e04-5464-4f7d-9581-e164e6b884c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d3b0b1-ba91-4c21-8f97-df5f5d0b7ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d6885f-8a1f-4af5-8a1a-da580bc0d3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af1a960-5b3a-4001-845d-c8bb38ba0cc9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffe454a-92d7-4c4f-a2a8-6174e9973901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cb4f7c4-e461-476a-bc9b-3fab2305f591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee55469-597a-4ccf-abeb-36a3eebb0e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023a3b60-7951-49fc-9571-ca0db1f5f6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cd9e04-299d-40e2-826e-7f960c078f79",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fec869-089c-4467-9dd0-ad75ad629761",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "296a1d67-8ba0-4738-bd7a-1f645c8c53e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3bf7d1-6a75-4f1d-aeb4-c4b09c2281a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcf45ad-b71e-4193-a811-a832ca9fa544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84e1b29-4b92-499c-9ab8-baa3e2b3dee5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8884809-32e4-4f18-bb5e-5e384735a847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded190ec-1ead-48ad-9887-e35fa9e0b686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e61514-b7ba-4ceb-8189-46de08d827b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6622a02e-66d4-48b3-90c3-327889c80092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b94cfe-5950-401c-9526-f21e30b760cd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b4d73a-427b-41e5-89dc-354421dce99b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8fec933-9470-44bf-9280-8dcf5298928a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d41e87-fe24-42e8-b41a-9d5c79e0f157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df630b5b-6321-4d7a-9a00-127b12b46892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b90e8e-5c18-47b4-8341-7ed9e89a4aaa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32787a01-cb99-4829-aa99-2b2edd85a654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2533e7db-9138-41ae-8a79-3a0bfc639ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8639008a-93cd-4a18-95bb-ee8ccf4c32f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b5be86-c05c-49fb-9269-f9ef7e70f1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510ab6ef-ae44-4b27-b3b9-0d1119f810a8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68249e0-cabb-41e4-b3b1-46f2bdd30e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d406ca77-d01f-4186-b325-a97676286220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5e3093-be2d-45d8-97c8-c6f01f959621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49803cb-5e3f-454b-b830-1ebae9653deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7476c7-4161-4c73-9666-864701302bcf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e261cd-030f-4671-9503-b3cd7073ec03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db8ac03-ba8c-4c57-b03f-562bf96dbafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec4fff9-12e7-48a8-a572-52276a637eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90e627c-c559-4038-a71c-971771253f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464107a9-63a0-4d54-8ccb-be055d8af41b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbc5dd0-ab22-4b32-9dc5-81b4bc443e8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "700e5182-1811-4cb3-90a2-b7314b2942fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5523fa0f-0f84-4603-8533-6dec485d95de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e2bb80-6b0c-4906-baad-a43826083eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac92ef69-141e-4ac3-9497-cbc19297cc8b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51dbc5cc-42c7-49e5-b682-adbdaa2f084a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad8cafe9-f0f3-4349-80e7-423dfaf56614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3d65b4-daee-45e5-81b0-fdbfec645f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36626bea-84e9-4f51-9035-909d4eea2b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fac00e-c07f-4d57-8924-d9c4f0d7cb37",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac989296-ad28-4a98-b9b8-752b4b982321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b764a35c-8546-4580-8cee-2c2e4786554b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d630df4-995e-4297-a48d-8c3e4e364066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bba921-766f-40b9-943e-a7eb3ed4c41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c423e6-6ff3-4acc-8e5e-0ac31d3249a6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce8356d-26de-4192-af03-c572a2a7eb72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cde9ecc-95a9-490b-89e8-0303eded45d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b4f1af-3d3a-4a71-9a9a-30673c74ed5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3f3fd5-cd05-49e7-acf3-9dd3466fc2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741c22c5-f89e-4f39-b305-191e87620b0f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989ae85c-7654-4557-a327-bc34fc9e99a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "197cb86e-49d5-43b8-b9cd-a48e1ef34fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dfef13-c8f2-4033-b251-d03282339089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85dc9220-83ca-4208-bd93-b309ee74dd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ab35af-fd3f-4684-ba63-bfae0d0cc9c1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f77ba67-142e-4a37-9359-9ad9cfe3a8b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be1aa5dd-1fee-4bc4-af13-9931fc1063fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0342e861-94f9-4f34-87f8-6710df05d893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8532ba-c6d2-415c-b966-79ee52399852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c68b76d-91c1-4dd5-bf9a-d57fc750faf8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc91c3d-3329-4875-b3e2-4671853c6cc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b454d3a-90f1-42e9-a6e8-55e00fb3a08a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01b9d86-3980-471a-a5d5-06aeaf319c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7f2bf4-54a8-46a7-99a0-f51577d52c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31a59ea-dca9-4819-8930-22614c3813be",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40b097d-5952-4230-ace0-1ee9867c0643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb55efe-57df-49e8-8dc2-7302b91bda72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e0acb4-7a2b-421c-9219-96a30796509d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c0ed6d-8b02-4efa-b831-fb3a614d581a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3364c109-522c-4ebb-9ec9-45288231ad3f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26242441-ac89-4d55-afb1-f42bcc8018b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa3afa1-b9d4-46a9-908b-e60e9ea92b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e8093d-6655-4994-a616-c71ea9ceb276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6a8c01-58a3-4972-af6d-085442a7967c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38022ded-cb81-4484-9d1d-61c1fd66feb2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b325bb1d-b692-4580-bf7d-7d872e993d2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c0a8fc-1225-4fa4-825d-bca9a445da00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b51c3a4-8522-4dfe-8a17-8f99d8fb695c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa613491-da44-42d4-874a-aac86fa5a491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c7f079-1543-404b-bcf7-0b5704306519",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0640d7ea-dd63-4944-a399-2b010e42e94a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a892f3d8-6320-4a52-993c-1af38483761a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c6b276-fef2-4638-a0a3-8720cc5ef90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8dac2cc-b431-488b-8d2f-c7871e53cfd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2428b3f6-f8da-4682-8cf8-d5b83788b28f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07912d5b-e6b6-4f97-af8b-a0b6badd0bf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eca8b9a-fb86-4e8d-bfc3-642c94535b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e936070d-ad4c-48c9-99b7-5ddadced49e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207a9d52-c9bb-4157-a4ef-561ea1a5a267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555b5079-f5ee-4a75-8d26-9ebe412626c1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe783e3-c412-4029-afe9-0e8944f6226a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fbc31fe-9911-4897-9890-1e09fc1d9a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150274af-0cf0-4a3f-b825-aa58d6a10da3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea65894-c9fc-4b6c-8e44-f09d545de280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563170d0-35c7-4f8e-965d-24e151927663",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018e83c9-ced6-4bb3-8c43-1bbabfc9233c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5226063d-c614-4b11-aa97-4e5e04fc76e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4ee60c-b791-4c84-bd3c-1a881078481e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e2526c-c79f-4a94-a87a-7ec5c3cfa01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b0b1ba-1b46-4437-b6e8-ca71590231a7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bf6f11-02a3-4a57-ab8b-4c165bbaa11f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fb7a116-1dad-4315-bc9f-2db68d137ebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6852f38-a61b-4498-81c7-160e0e62298f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c23b61-524a-40f4-9448-e0d51dcd6a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cbd472-b584-4e40-ae88-5cceb1744fe1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5deebad-0de1-42cc-b499-3d4cbf50c9c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef9f151b-795b-4514-9755-9e244b40dda6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc07fcd-b919-42e7-bf7c-856296d736ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a04696-f2cf-45bc-ba3a-eb4d6254ad4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c8fb27-4233-42d8-897c-da32b694c1e7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dbf62b-6023-49d5-82ca-bebde9b25396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c9f04e-fa48-46f3-be85-f8af85b8f5b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39855ba-2de3-427b-a555-68f11fe30093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74aa2d5-761e-479c-93e4-a1ddba553240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849d2ef4-3a85-47b0-a7fc-783793021495",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65b3cce-db6f-4e6e-b097-2d490667aeab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd3d5877-42b2-4966-9367-62a18233f6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7acab25-9aed-4008-80e4-a8b1cb33da87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43722d9-3211-40e6-9ee2-60a76976aacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add40278-c716-4d96-97c4-bb34f8df76c0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7eff214-f6f5-4fc7-9dcf-3c4542225388",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "948b095f-e421-44d4-9379-ec8eb69137bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71832498-2d65-4039-a665-29205d5174c2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf2ecb3-f472-4f9d-8a93-5be10f7ffd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c13a763-626f-4e8a-b991-f2ab5c95975d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62611b28-329b-4138-b72a-08be838cd224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27572961-5bf3-4f18-8e05-de40b0c3ebd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699bf754-f0d8-4800-b207-3f68ee6d373e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026ef6aa-5e53-43ba-ae9e-61b974601d16"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad9cfdb1-e222-4735-b198-78c740da0d4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57a24e08-1a2f-4df7-a520-226555d69352"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c878604c-ac8d-4a54-a51b-7fbd84bdb516",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6815df73-1b8d-4912-b07e-21fadafedc20"
                    }
                  }
                ]
              },
              {
                "id": "9a54fbbf-22cc-4eba-9488-5bfcc7f57052",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71a5d27a-e543-4de4-bc47-5029a35e4a37",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33dd51b-1bf1-486b-9549-255fd0c36877",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7b5d7e1e-d515-4dd6-be31-6530e2d45813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc8348c-14ba-44e4-b273-c403df913a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abb086d9-9ba4-4652-adfd-2bb49ad9493b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9ed328-7071-4dbf-8ca7-b7548ec98914",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421811da-ba62-42c6-b1bf-9811fa661e7f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "71cfb19d-9a51-442a-a8d7-c916fb1c1329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65a0a62-cf98-44f8-82f0-49a7bc887b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "968e774b-3c8b-4714-8a9f-162e7ac549f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b1a123a-48e7-4682-9caf-443b0a9abc39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92920a13-ffda-469f-a4dd-5206d800d953"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5edd091-5dc9-4ee7-86d3-2bd62fd910dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01d33e59-956e-4685-95f3-740d3e8ebfac"
                    }
                  }
                ]
              },
              {
                "id": "a91659e5-ec12-4b7f-a071-35c3f7edc327",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "17c12c17-4baf-464b-b4bd-a60defc7597e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca54604-9d52-4b38-b48f-4e73d706ce83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f133d294-cdc1-45b8-9e6d-ced232ae351e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ee576b-97df-47c8-84c4-3b6e7c1f205f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de81a63-b944-4fb9-96b1-bc234b916633"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0f13fe45-0859-43b4-a682-d39b5a8389ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f067e367-cca5-42c6-a1e2-584af2968001",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2187783e-5abc-40b8-8319-fa9073129816",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "86176425-d4be-4f62-b15d-d1352a927362"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b3d2ced-c189-4bdb-9381-a5a33c0da6d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18045837-f338-457f-9687-263fee9d0cce"
                    }
                  }
                ]
              },
              {
                "id": "318c7b33-ebf0-405c-834f-7d038181d918",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d71034b9-a5bf-44fe-ad35-8f8410737cfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b9c7fdfc-1896-4f04-bebd-83b1cf888507"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ee87a24-c8e0-4a76-af70-67cc01f1fa05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f351470f-15da-4d85-a72e-17f13ca3ba0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ba332bf-ea23-4136-9cc8-79e260700014",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5e3ffc31-bcb4-4199-a885-851b911fb2b5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc753814-4351-4a6f-9c31-b34c0df7791f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1df4486d-edfb-43a7-8468-25e54ac4acb1"
            }
          }
        ]
      },
      {
        "id": "beeba5d7-dd9c-4e6e-94ac-d207000d6f5f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "59844b7f-65c9-4123-b392-0d010fdf512b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31302cd5-b494-4d51-ab87-e5d8081da99d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdec41b4-1d30-4d5c-8bf1-39f1f3a77780",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a664757-7b2c-4996-8baa-0206baa5f411",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3fd9258f-1770-4cf7-8acb-e5da55ac496f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b82aea-91ef-4444-ba83-d2bdab555dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b5ba688-b463-414b-b634-8e4af28b23e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00320b0b-0303-4b55-8984-5fbd5cd21783",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05315b5-4c10-46a0-87d5-7076642b4b0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2ffe79e5-7e69-4d7d-bfb7-0f8ee7820650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee38092-10a3-4c15-ae18-4003e31feaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "712c40bf-543c-4f80-bc00-6886c898144e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d953a8bd-b3e0-48bc-adb4-a5aec5f41f61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04ce624c-c3c7-46cb-be06-e14d7817ab82"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eea8cdfe-702c-41e8-b2c9-52d7c98998af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b08bbc3-1255-45cb-ad3b-6bdcf48a6a4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c178d4a-420b-4e90-9835-a26209e70329",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "24010723-2242-47d0-8096-96fa705d17a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9240e35c-7944-488e-b709-737630174f49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af257b50-ae32-4b5c-9228-3283dd2e8473"
            }
          }
        ]
      },
      {
        "id": "f7c960a2-a659-48fe-ae9e-152f7da680a0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "62399452-fa0a-4d54-b05d-a78bf7d113d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11935d2c-b5b9-4056-9ef5-0b85f093febe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c09d0158-b1d0-4dd3-8fc4-d41452f18a7e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94d0695-073b-4e06-a783-e354a0c68563",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10e78bd8-fb07-494a-b38d-56cd95446ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bfa180-fa20-4fbf-a674-ba4210595b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "752bffb1-acb4-4505-9422-cb533e287ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0372de1-a1c9-4117-a3b9-138d0aa43f04",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66acd376-6f5f-4903-962b-14715500e81a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1f32b6c1-f0b2-4d92-a344-1dc1363f6c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6867f3-a8a8-4c24-8515-24babfb8c999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "218b3846-1a50-4d32-8988-6e11ed7998b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4ce762c-7c4f-44c7-a5f7-a9a71b35df13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e17a5596-e18e-4b5d-8059-b0682008e435"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7afdc88-f56b-48d9-af8f-99e9a542f774",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f32ffd2b-4e7d-4e13-b8c2-7ef4a65845e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "390efe00-a2bb-4427-9c76-d8753544ba62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ffb0dec0-e67b-445d-914f-47a95f5c6930"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "037acf5a-bb8e-4c08-9d6c-ea7ef142d274",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3b1397c-bacb-44d7-86d4-afebfc5a7cb8"
            }
          }
        ]
      },
      {
        "id": "3068a32c-e904-4cea-a95a-635901ec7f3a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "783d204a-ec20-4646-9533-35ff6f152da0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "456593ac-b3d2-4e41-abcd-134001258cfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9608fd62-c950-4d24-8d71-e51f1f689ded",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6c6ee7-ca82-4042-bbd1-b3cdf6206a1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f9d1ff3-0a11-456a-b697-7a1e27a29c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625a3792-4f35-46f7-8794-fc689303d569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b26ff927-9e94-4c0f-909f-bb79d989590d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b45e64-5757-4fc2-bc20-d087191696d5",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a047c49-b580-4c09-8ede-b168242c5bf1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "40bed3af-d329-4af8-8fe5-831d9e3722dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d046536-0e4f-4d0b-973a-bcb7ab95010c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc5cb3ab-6f00-4c2a-86eb-bacb2ceeb4db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22e2043b-feac-418c-9ce0-1e553add5446",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b70a311d-ece1-4d4f-9023-28b015617abf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "701885b1-987f-4a21-9366-b8bdf0fe1827",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c9a3c1e-5e27-4f78-a2c3-27e53974295f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73ab5268-4182-4422-831a-eb5145f33966",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "45fb0efd-81c9-40b1-bf6a-e288d06ddc71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbeddab8-4da4-4272-9ad7-07e575ce068b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8f4ec29-d4cf-4e42-b3a3-b664a7fc8ae7"
            }
          }
        ]
      },
      {
        "id": "bf4f043e-b3ba-464c-a759-0ff8f9478624",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29c4b8a9-0cd7-483a-9a2e-66bda94b2bdf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b9eb462-20fb-4fab-b37b-f9d514aa2013",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0106c27a-c9c9-4481-95cc-7f742f7bfbb9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3d828a0-c15c-4c02-b415-a8cf3d8be403",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c51092f-9255-4121-be8c-5fb218ae0426",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 796.0884615384615,
      "responseMin": 8,
      "responseMax": 7940,
      "responseSd": 929.9971856148161,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1685061472194,
      "completed": 1685061692644
    },
    "executions": [
      {
        "id": "eb79afea-5313-4e7c-9b32-a4cf13ee15a7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "76c27f31-406b-479d-9a59-64f3a167dd82",
          "httpRequestId": "b685b27a-ec0a-4a70-ae4f-5fe58fb34fd2"
        },
        "item": {
          "id": "eb79afea-5313-4e7c-9b32-a4cf13ee15a7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "139d5ea6-bcc8-4167-8483-ef5f047597a6",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "d185cb97-6209-4db1-a3bf-5edec71dfd95",
        "cursor": {
          "ref": "737aa1ed-ddfa-45e0-94a3-04c9f5c725c2",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b5a7002f-7796-4a78-8b87-85164c45eba3"
        },
        "item": {
          "id": "d185cb97-6209-4db1-a3bf-5edec71dfd95",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "748d4b49-91bb-40db-a94c-886de02a3f6a",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "1f9c3457-892d-4506-b8b1-2c4644911b61",
        "cursor": {
          "ref": "455e5e0f-2949-4607-b3a2-4736b3a772e7",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "35814f3f-f720-4a7d-abc5-efb4496e0bb5"
        },
        "item": {
          "id": "1f9c3457-892d-4506-b8b1-2c4644911b61",
          "name": "did_json"
        },
        "response": {
          "id": "aa1313ec-e97c-425e-b4e0-775b9dce0cb4",
          "status": "OK",
          "code": 200,
          "responseTime": 1018,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f74f45a-2877-4f45-be28-524c7c8c328f",
        "cursor": {
          "ref": "bbf38338-963f-4f20-aa8e-a6b30bb7beca",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dd702999-afff-43f7-b10d-7776d562e26b"
        },
        "item": {
          "id": "5f74f45a-2877-4f45-be28-524c7c8c328f",
          "name": "did:invalid"
        },
        "response": {
          "id": "3f7aca46-315f-4db6-b049-ab3d8169f2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f74f45a-2877-4f45-be28-524c7c8c328f",
        "cursor": {
          "ref": "bbf38338-963f-4f20-aa8e-a6b30bb7beca",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dd702999-afff-43f7-b10d-7776d562e26b"
        },
        "item": {
          "id": "5f74f45a-2877-4f45-be28-524c7c8c328f",
          "name": "did:invalid"
        },
        "response": {
          "id": "3f7aca46-315f-4db6-b049-ab3d8169f2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4bdd24-83b3-461b-8bef-e19ccef66d45",
        "cursor": {
          "ref": "52cfb340-9103-4f9f-ab39-ae465e641053",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "18e9d04a-d9d4-4769-9c2b-b9608aae5d7b"
        },
        "item": {
          "id": "4a4bdd24-83b3-461b-8bef-e19ccef66d45",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eb96a631-d868-45a2-a033-f0ab69f284e4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 940,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe49686-485a-4b67-92d6-89714f26588a",
        "cursor": {
          "ref": "c341f828-4a4b-4cdd-8043-e2ceb435f007",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "be0bbcc6-ebb1-40b5-8e9e-4e5d2d3f5571"
        },
        "item": {
          "id": "dbe49686-485a-4b67-92d6-89714f26588a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6bf81ef2-462b-4679-aa53-39a0029551d2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 735,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117cd2be-1963-4b5a-90d8-7f6c600632ec",
        "cursor": {
          "ref": "84662028-bdc0-4188-b6c1-0c763793b0f4",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "46dddfc6-683e-4e88-a1d2-8312252a13cb"
        },
        "item": {
          "id": "117cd2be-1963-4b5a-90d8-7f6c600632ec",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3ec6d0f0-c2cc-4694-adff-65d758782ca2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eeeaf3d-4c88-49a7-9680-b8e3a34dc2ce",
        "cursor": {
          "ref": "24ccdae3-8829-4034-b67a-a4d6eed46e2a",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "35954797-8c55-4cea-b886-e08767833659"
        },
        "item": {
          "id": "9eeeaf3d-4c88-49a7-9680-b8e3a34dc2ce",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "04f03dfb-330a-4a1c-b983-e8eb1ca96244",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 736,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eeeaf3d-4c88-49a7-9680-b8e3a34dc2ce",
        "cursor": {
          "ref": "24ccdae3-8829-4034-b67a-a4d6eed46e2a",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "35954797-8c55-4cea-b886-e08767833659"
        },
        "item": {
          "id": "9eeeaf3d-4c88-49a7-9680-b8e3a34dc2ce",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "04f03dfb-330a-4a1c-b983-e8eb1ca96244",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 736,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9090cefb-df36-46a5-823a-ecc4f1087acb",
        "cursor": {
          "ref": "27186205-2ee9-46b5-b54f-3165d3574525",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "19b49c99-a90a-4ae7-abe2-d31327faed62"
        },
        "item": {
          "id": "9090cefb-df36-46a5-823a-ecc4f1087acb",
          "name": "identifiers"
        },
        "response": {
          "id": "b85158f6-70af-4ee7-9ab6-a7ba1493bc63",
          "status": "OK",
          "code": 200,
          "responseTime": 1518,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7161dc6-cf5e-4411-b78e-468c07bc477e",
        "cursor": {
          "ref": "691adb84-3373-4f21-ad36-a75fa4701797",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6557e84f-ad0c-4bae-a318-df04051be250"
        },
        "item": {
          "id": "a7161dc6-cf5e-4411-b78e-468c07bc477e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "05da8cdb-2dea-47a0-ad43-d2e457417b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7161dc6-cf5e-4411-b78e-468c07bc477e",
        "cursor": {
          "ref": "691adb84-3373-4f21-ad36-a75fa4701797",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6557e84f-ad0c-4bae-a318-df04051be250"
        },
        "item": {
          "id": "a7161dc6-cf5e-4411-b78e-468c07bc477e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "05da8cdb-2dea-47a0-ad43-d2e457417b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07a7ed0-2dd7-4ae8-b496-f5dd398b592f",
        "cursor": {
          "ref": "bcfb66fe-e2f4-4f89-9a37-ed899036ffb8",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dc3493e7-c13b-495c-b980-dfb4a4715c3f"
        },
        "item": {
          "id": "d07a7ed0-2dd7-4ae8-b496-f5dd398b592f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e1bf803f-53c0-4b9c-b544-0137a738f184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227df313-9325-4882-a65d-0c522cd8c0df",
        "cursor": {
          "ref": "791baafd-20b0-4f09-865a-eccf038b673c",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "909c2fbd-05cf-47e1-9097-cc87c2cd3976"
        },
        "item": {
          "id": "227df313-9325-4882-a65d-0c522cd8c0df",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "394ebef2-d81e-473e-aeda-878b3f3e117f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05dd1088-805d-4270-83fa-c06a6fe35342",
        "cursor": {
          "ref": "d244af7f-ba63-45c9-8fae-6f7b1181de3d",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "76288da7-28d4-4715-b130-e7a048601143"
        },
        "item": {
          "id": "05dd1088-805d-4270-83fa-c06a6fe35342",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9331236b-2ed5-45fe-9382-4655a6cd1bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af2ddc5-5603-4ae0-8d06-3f8770b74e9c",
        "cursor": {
          "ref": "da43db2a-540a-41e1-9ead-14cb4aadf49a",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "05352bdf-d0ab-44d9-8540-2c05a50c40b6"
        },
        "item": {
          "id": "0af2ddc5-5603-4ae0-8d06-3f8770b74e9c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b7b4fae0-c901-44ca-8124-87f348770e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa8fd68-ea43-449a-82b8-4dba7fde7e75",
        "cursor": {
          "ref": "2ad2a8a8-fc26-4290-bafd-81e25256aa9c",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0d8948e3-69bd-4c79-a9b8-e2e6e5cd61a9"
        },
        "item": {
          "id": "bfa8fd68-ea43-449a-82b8-4dba7fde7e75",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9979683b-0946-41b4-8fd4-4fc6f93892b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8623263b-9363-46c6-98e4-c4ab3f7526b4",
        "cursor": {
          "ref": "0ebbf4c8-5df0-45ce-a65c-0fcced518504",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9b758022-0af9-46bb-8abc-0a1caaca9977"
        },
        "item": {
          "id": "8623263b-9363-46c6-98e4-c4ab3f7526b4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ad0a3710-a1c4-4243-a65e-b22de278d292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c05c94-0bf5-4488-81ec-b269181d7fb6",
        "cursor": {
          "ref": "98f47d9e-cbf4-42e8-93ae-0185395ed309",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9ed8e482-85c3-4a27-acc5-5885fc8d6543"
        },
        "item": {
          "id": "f8c05c94-0bf5-4488-81ec-b269181d7fb6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c33db872-da22-41d2-a6aa-f01e1d6a9bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad52198-f79e-457c-af02-169198000681",
        "cursor": {
          "ref": "7d7663e6-15b0-44a7-99c6-47ca7b99dba5",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2eb91b71-a4d8-4f57-bec3-e48e850f16d2"
        },
        "item": {
          "id": "2ad52198-f79e-457c-af02-169198000681",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4cfd9c94-09a5-4167-aa08-a4996be80f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc31bc5-ae58-4fa8-a55c-d0f2afe136ba",
        "cursor": {
          "ref": "1eb601d5-2678-4195-9d15-b2e25e451084",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dec77595-1a23-4a95-927b-11c108f38b28"
        },
        "item": {
          "id": "5bc31bc5-ae58-4fa8-a55c-d0f2afe136ba",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c3d14dd9-0ca5-4c9e-81c2-f2cf34536382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6589eb27-8c18-424d-9c9f-c347a9454ada",
        "cursor": {
          "ref": "76df6cfc-fdbe-4355-b105-0a88b8ab89f2",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fba90279-54f5-4c48-9424-dc0fbbd1aead"
        },
        "item": {
          "id": "6589eb27-8c18-424d-9c9f-c347a9454ada",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ff1256f9-a3f0-4f86-84b7-d47fa522756d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a345d5-b156-4354-9ea7-5b207aae7823",
        "cursor": {
          "ref": "62ea74c3-767f-42d8-bba0-3be84da38814",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d20788a6-5374-49f9-839c-643168d93bed"
        },
        "item": {
          "id": "12a345d5-b156-4354-9ea7-5b207aae7823",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7cc83ce7-5709-4a3c-ad0d-3ebdcf2f61a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3868a384-8045-4f4d-83fd-b583153d0f5b",
        "cursor": {
          "ref": "e183c37c-85d7-4253-84eb-972b0df87d53",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3829d73f-9d4d-4b1a-a739-ad76f060a1cd"
        },
        "item": {
          "id": "3868a384-8045-4f4d-83fd-b583153d0f5b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "103f3976-7fb8-4822-88ce-94886d5d7ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d808b27d-e51f-4acb-81db-78fcaddf6551",
        "cursor": {
          "ref": "ef3f18b3-a282-4c0f-8e98-43d208a4e879",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fc24b75e-1baf-4449-8ff9-05b3c521720d"
        },
        "item": {
          "id": "d808b27d-e51f-4acb-81db-78fcaddf6551",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e856077b-884d-486e-86b7-35b8f2f0d713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecf995f-6ad5-492e-acab-9e8ad2895852",
        "cursor": {
          "ref": "ef879ed1-0518-40e2-bd90-23e3d6804fd9",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "16603afd-4277-483d-b3fc-e436fd1cc5e3"
        },
        "item": {
          "id": "4ecf995f-6ad5-492e-acab-9e8ad2895852",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a9458b97-0d44-4e33-96f0-5fe9644c03c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 973,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e36d04-8884-43ba-9aa6-a76ae6a680b7",
        "cursor": {
          "ref": "59a1932c-9d09-432c-a025-bf87d99c2fbb",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "64de8557-2e21-499b-a462-5531f0d4fa2b"
        },
        "item": {
          "id": "b8e36d04-8884-43ba-9aa6-a76ae6a680b7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0747b225-a29e-46af-8f1d-5e9f615353ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1713c65-20a7-4771-b155-6a6a4a352175",
        "cursor": {
          "ref": "0b6d3f33-1b8b-4358-a6d5-93bb205d8e63",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5ae55ef0-dba0-4dc2-be6f-f0cbd853642a"
        },
        "item": {
          "id": "d1713c65-20a7-4771-b155-6a6a4a352175",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ab593fc4-5a9b-4780-b6eb-33c59fddc266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5bbcd8-891f-4b65-a128-9e55e0ee35fd",
        "cursor": {
          "ref": "62e883f8-fac8-46c4-88d3-bc298d20c53a",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9ff3b273-3a21-4ed8-a4e7-68d103e9807c"
        },
        "item": {
          "id": "1c5bbcd8-891f-4b65-a128-9e55e0ee35fd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0f7ce449-29bb-44be-bd43-fb5af943876d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34dc1a9-c121-4621-b6ed-1dd71e1b913e",
        "cursor": {
          "ref": "e361caac-e14f-4bc0-84c1-c3622b1ad6a4",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cfd0ff1e-d4e2-454c-8c65-0a77f239a89e"
        },
        "item": {
          "id": "f34dc1a9-c121-4621-b6ed-1dd71e1b913e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e6585d81-669d-4624-b724-53bf6c1b292c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33093f31-2189-43c7-8a87-6e870407d045",
        "cursor": {
          "ref": "719b2184-f8e6-4a31-8bb0-53c77134b9cc",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "34cee9d9-390b-418c-87ca-9c6b84d59df3"
        },
        "item": {
          "id": "33093f31-2189-43c7-8a87-6e870407d045",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b55c875c-37f2-4156-a9d6-1936f4191fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 962,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21ff09e-0e0d-47e2-ac65-186dce9a076b",
        "cursor": {
          "ref": "20ec1632-f83c-479e-a3e2-4f9c65fa4d3d",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "397bea78-2614-4d04-8c3a-c395b5d08266"
        },
        "item": {
          "id": "e21ff09e-0e0d-47e2-ac65-186dce9a076b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0e521ea8-f518-4f09-ada8-744a7a0279fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21f82ae-c3bf-4fcf-8275-89018906f4cd",
        "cursor": {
          "ref": "7d68602a-db3b-4077-858f-71c34e6849cc",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2b70affd-7f2e-496d-9397-99eca1fa67f7"
        },
        "item": {
          "id": "f21f82ae-c3bf-4fcf-8275-89018906f4cd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a35e158e-c0e9-41c6-9a51-5db7c40bdff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b81fab2-6c8b-4a2d-9707-64b27c6d1c57",
        "cursor": {
          "ref": "1f936e22-aec7-4088-9468-f42ea859112b",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e8ece853-5a6c-4fc2-b8ae-a9e53c8077a7"
        },
        "item": {
          "id": "3b81fab2-6c8b-4a2d-9707-64b27c6d1c57",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cafbe7c2-3176-4254-bbad-a9da067967d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e742e35-3322-4db3-a1d0-e1c2fd648e83",
        "cursor": {
          "ref": "a6350809-ecd7-4e0f-a26b-7bebe31f7bf3",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "46f0c3fe-8c43-4b5b-b69d-d02413c4062e"
        },
        "item": {
          "id": "9e742e35-3322-4db3-a1d0-e1c2fd648e83",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5be0b461-3d3e-4cb0-b1c5-fafa549f6d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34dbcf4-e4c1-4a2f-9bd9-b0cc74e7d2eb",
        "cursor": {
          "ref": "3240fa02-e1bd-4000-8d60-709c1a7bece0",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "efa8dfc9-4180-4ed6-ba79-fc3294774e1d"
        },
        "item": {
          "id": "d34dbcf4-e4c1-4a2f-9bd9-b0cc74e7d2eb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "86991373-5d01-4d87-a639-36a016de75e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b4c282-4737-494c-9f8f-a22c9adfca9d",
        "cursor": {
          "ref": "e3b0c4df-dace-491c-8591-b52e710e001f",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4c3e4123-4354-4693-ad69-671d68edcb14"
        },
        "item": {
          "id": "18b4c282-4737-494c-9f8f-a22c9adfca9d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "51f778ed-7c92-41b1-a2bd-93090e0ed9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 903,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d985fb0-4dc2-4ba3-9ca7-0274778e237f",
        "cursor": {
          "ref": "77835180-195b-4a8c-bcf1-7b897aa6c616",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "401a0348-5be5-451a-8bfe-5050851b30c4"
        },
        "item": {
          "id": "1d985fb0-4dc2-4ba3-9ca7-0274778e237f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "73b65886-8e56-4981-86bc-458573d51490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f95f75c-24d5-4ffa-8228-ca7a6475e615",
        "cursor": {
          "ref": "49ed0fcb-7571-4515-8d5d-df9d0da8ab73",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "208db514-725a-4eb8-87fa-db87da71b6aa"
        },
        "item": {
          "id": "9f95f75c-24d5-4ffa-8228-ca7a6475e615",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5d5eb05e-6037-48b0-a9c1-62988e844d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73ff9ff-b21b-4715-97d5-6d4a8c54b746",
        "cursor": {
          "ref": "71265739-0777-4343-bbcd-5e00f27bc803",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9abdf64f-7a96-406d-a689-968512050093"
        },
        "item": {
          "id": "f73ff9ff-b21b-4715-97d5-6d4a8c54b746",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1ea4fdf4-316e-4f38-9b41-b300f7cf2048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f80d6a-48ca-4e3c-b961-37e9ddf5623f",
        "cursor": {
          "ref": "0f62d562-d7fc-49fa-99a7-025a30b94ee0",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1d2128c1-6e64-4795-ad23-4ab2e1300a5a"
        },
        "item": {
          "id": "73f80d6a-48ca-4e3c-b961-37e9ddf5623f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "37a11b3e-1a94-4944-9542-339eaf857ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369bfe48-350d-459d-af70-62240760f831",
        "cursor": {
          "ref": "46e3335e-5ae0-42bf-8774-cd5cec47ba93",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ec1cb16e-e8dc-4fc3-b3b5-aba2ef7de203"
        },
        "item": {
          "id": "369bfe48-350d-459d-af70-62240760f831",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1b1bff68-6cea-4e44-9bd7-80be12e5497d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdacf84-7ab7-4249-a932-61f2917076f5",
        "cursor": {
          "ref": "298fd64d-8d65-4aa7-a547-47fa953061e8",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ad807f80-6db0-4a89-9ede-39a64bfbfd5a"
        },
        "item": {
          "id": "8cdacf84-7ab7-4249-a932-61f2917076f5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1e2f35cb-c98a-42da-b657-67660245f30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7263fd18-9a94-4677-832c-7f9755a52ad1",
        "cursor": {
          "ref": "ed6fc47e-411b-45f1-8229-70ef24a13b58",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "61a8900e-8b23-45cd-86a6-7a4deb23f4e4"
        },
        "item": {
          "id": "7263fd18-9a94-4677-832c-7f9755a52ad1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "36575516-722c-49b2-b270-a0c245c59e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a826648-25b7-4b2c-b611-83702c116b68",
        "cursor": {
          "ref": "c234827e-830e-4fcd-af04-e6d1a4259999",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e0a9924f-5c2b-4905-adfa-b155dd74602a"
        },
        "item": {
          "id": "7a826648-25b7-4b2c-b611-83702c116b68",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "16d98082-b685-4005-b9b9-0b8c52178317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c740f4-ea3a-4d84-b6aa-01bee0be5cc1",
        "cursor": {
          "ref": "7e756ac6-cda3-4d83-bbd9-9571bd787b93",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a11be5f7-a3b2-469d-aac2-63c286d79c5e"
        },
        "item": {
          "id": "d3c740f4-ea3a-4d84-b6aa-01bee0be5cc1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "094f892a-e147-4f16-9ef8-36378da2be87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188cf29a-007b-4649-ba98-6e43cb4559e3",
        "cursor": {
          "ref": "4f808ad3-c4d0-4edd-8b78-b5c64bd36070",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d09f735b-134e-4c8e-94ad-1af3986b9d47"
        },
        "item": {
          "id": "188cf29a-007b-4649-ba98-6e43cb4559e3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f28662cb-b040-4a1a-b8e0-7bd7a4f2d6c5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 931,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677bc909-f725-4587-83dd-b8a5a4f2b0e2",
        "cursor": {
          "ref": "7eb3846e-6a32-4c1f-b6a6-82d3b84d2c6b",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "609ee95f-af86-45c6-b35f-c3a4ee85f78a"
        },
        "item": {
          "id": "677bc909-f725-4587-83dd-b8a5a4f2b0e2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e5a3a18d-d0ae-46a2-a91c-303cbbc98ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c0b6c8-0c8a-4a4a-8645-61c5d7a77702",
        "cursor": {
          "ref": "327543f1-e17f-46ed-9dfd-dae42ef7f2ab",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c2ce1505-9d82-4876-aa6c-52c5dddfaa53"
        },
        "item": {
          "id": "29c0b6c8-0c8a-4a4a-8645-61c5d7a77702",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b57c09fb-a430-4524-8e2a-fe4d80dcfc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1211,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615253a3-29b9-403b-9d28-ecba214c37f0",
        "cursor": {
          "ref": "9e6f0d86-b3f4-4cf7-9ea7-94bf950d6306",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "53c02db6-bbba-424e-85fb-0e886274c493"
        },
        "item": {
          "id": "615253a3-29b9-403b-9d28-ecba214c37f0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d40a0937-a031-44fc-9a6c-0f9ec304fc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6fe9f9-51e5-4135-b38d-a3cbfb61d381",
        "cursor": {
          "ref": "35259061-ea49-4ff1-b68b-22176de53031",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fc0374c8-6733-4430-a287-4386fc174c4e"
        },
        "item": {
          "id": "6a6fe9f9-51e5-4135-b38d-a3cbfb61d381",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a61d69ce-ada0-49a4-820d-73f20edf5821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9155c083-d505-48e6-8444-5bc69db0457c",
        "cursor": {
          "ref": "b6440357-476f-47fc-987d-cc1c2b7773da",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6f3a7cb6-e483-40b8-8a9f-6b7f8ccb3dca"
        },
        "item": {
          "id": "9155c083-d505-48e6-8444-5bc69db0457c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "41e891e6-dcb5-472d-913f-3e5967f1171a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2600d356-ef25-4ba6-a964-9ad53964c546",
        "cursor": {
          "ref": "92649dae-7b35-4383-a0b6-4e61a65b1dae",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "25275a3c-549c-497a-8b13-a6097b9b6a6e"
        },
        "item": {
          "id": "2600d356-ef25-4ba6-a964-9ad53964c546",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e990a804-7465-4d7b-9703-37e43ee0a6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465bd6ad-6606-4c83-97e7-2523de0c76e6",
        "cursor": {
          "ref": "21b934ef-6a45-4fdc-bf70-08a443adbfee",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c40f6b84-3e7c-40d0-8ded-771c4c5dd4ee"
        },
        "item": {
          "id": "465bd6ad-6606-4c83-97e7-2523de0c76e6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c64cdeec-12df-48c3-878d-8be663be68b5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 911,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85da058b-d202-44f9-b42f-8b47c46a14bb",
        "cursor": {
          "ref": "edefdbfe-3cc5-43fa-9e0a-cfb53b16ec2f",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e9dc6b57-8aaa-48f4-a890-e3d6f968ea23"
        },
        "item": {
          "id": "85da058b-d202-44f9-b42f-8b47c46a14bb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "13855174-5784-4f81-9bdd-bbc915c8537a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6175d20-bcc9-4ea2-9fe5-82f70706114f",
        "cursor": {
          "ref": "261374a8-68e3-4a3b-aae9-414410fa46d5",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4dfbed90-e47d-4c7b-8efb-3483198fbb06"
        },
        "item": {
          "id": "b6175d20-bcc9-4ea2-9fe5-82f70706114f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "600876c3-e533-41cd-8ab3-a122cc029506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e709e518-31f8-45f0-aa9b-0404287eb4f5",
        "cursor": {
          "ref": "f335a2ab-058f-4bde-b412-27303f908fbe",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "964e4d33-4689-41c9-a597-9b761ead2e6b"
        },
        "item": {
          "id": "e709e518-31f8-45f0-aa9b-0404287eb4f5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2d9ddf05-6e8c-48ad-9eba-697a3e9896c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147d8945-a519-4730-b49d-e5295592753a",
        "cursor": {
          "ref": "784f1c02-d30a-4f9f-bb54-c478ec8110db",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e05a0738-b919-452e-a3c1-84c03e1c0c34"
        },
        "item": {
          "id": "147d8945-a519-4730-b49d-e5295592753a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "81a5b1e1-ee5e-4a2c-9b00-792380810a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7267f2b4-cea9-4e69-8e8f-4d9f817b34f9",
        "cursor": {
          "ref": "3cb0f501-53a6-45e3-aaea-1a0546bec8d0",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f248130d-760a-4df3-959e-c17c06b665e1"
        },
        "item": {
          "id": "7267f2b4-cea9-4e69-8e8f-4d9f817b34f9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "721c3dea-62d6-4756-a2fe-b289939561ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a02f8c1-24ae-4c65-b964-d2e1ab5ce556",
        "cursor": {
          "ref": "21bedf22-cfb5-45ca-b9a9-4ab8197d446a",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f36d11d9-dab1-4bd5-b673-7c94959a0bfb"
        },
        "item": {
          "id": "4a02f8c1-24ae-4c65-b964-d2e1ab5ce556",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "01d9fca0-fe05-4472-9582-f694165e36c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d99e2a-6915-4f6e-940e-145c1e83f8d0",
        "cursor": {
          "ref": "0e2d65e6-cb9a-4073-bcc4-526b1308888c",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ca91b98a-53cf-47cb-b19e-ac03c56c34e3"
        },
        "item": {
          "id": "41d99e2a-6915-4f6e-940e-145c1e83f8d0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "05172de9-52c0-4bf5-a082-ca37323cf48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d1c917-57ad-4949-aa96-ffc54f4ee1f0",
        "cursor": {
          "ref": "fed3a4eb-e6e4-43cb-91b8-a30285200ada",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "87f39254-b62c-4d4b-a7c4-9d5801e6cc03"
        },
        "item": {
          "id": "f8d1c917-57ad-4949-aa96-ffc54f4ee1f0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2951fc61-f7b8-4c25-a851-5c1507edb22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0495c6e0-12a1-4954-9ac3-bf4d7ac65163",
        "cursor": {
          "ref": "328e65a0-4bc1-4db7-b00f-5d27a6f97a57",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2c2a1f82-221e-446c-be49-e1cf667cf05d"
        },
        "item": {
          "id": "0495c6e0-12a1-4954-9ac3-bf4d7ac65163",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "43b52021-df8f-48fb-ac73-a44e02b9f42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556ce9f1-46ea-40cd-b644-93fe91db91ce",
        "cursor": {
          "ref": "d72bd68f-2455-4afb-b143-52759f28e55b",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9c443c32-93a6-42c6-a46e-0e2da23e9c60"
        },
        "item": {
          "id": "556ce9f1-46ea-40cd-b644-93fe91db91ce",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8e1ec7e6-8544-4eec-b0f9-abe5aa6e3f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0929bb3b-102e-4b36-8e69-6555240921b0",
        "cursor": {
          "ref": "54763f3a-47cc-47a6-9835-62ee96d5c178",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9fea1c06-0673-4f00-80a3-a24cb1b78654"
        },
        "item": {
          "id": "0929bb3b-102e-4b36-8e69-6555240921b0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "467392a2-c5bb-4417-a59d-50912865d61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5b4e36-48e5-4d91-9321-4b387f0cb001",
        "cursor": {
          "ref": "2c731c40-997a-475f-b7c1-a6dd91a29e93",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7dc687c8-1758-483e-838f-83c0bb55344d"
        },
        "item": {
          "id": "cb5b4e36-48e5-4d91-9321-4b387f0cb001",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "854e0e21-a05a-4b58-b011-b9347cef617f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20db2df-0a85-4de9-99b7-32c5e172b241",
        "cursor": {
          "ref": "2bbdcd43-47f1-47e3-867b-262d013aff94",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a9f78e10-c21b-438f-8629-624792e7e2d5"
        },
        "item": {
          "id": "f20db2df-0a85-4de9-99b7-32c5e172b241",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5b8dbd0a-c120-4f15-a017-d9f0a985efc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dcea65-bef3-4825-a5da-edfc5a8a737e",
        "cursor": {
          "ref": "6d658327-94de-41e1-92bd-6a75260a8144",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "acc2112c-bb1f-47f7-b3a5-44c955bc35ee"
        },
        "item": {
          "id": "e8dcea65-bef3-4825-a5da-edfc5a8a737e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8d339a17-8515-457f-9c0b-8d6bd585cb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a802e0a6-63c0-45a6-b030-856709e51098",
        "cursor": {
          "ref": "9145c279-9292-4a14-8596-9fc2e801ba9d",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6504ce9f-7eee-4bc0-a720-2181ceda0dd7"
        },
        "item": {
          "id": "a802e0a6-63c0-45a6-b030-856709e51098",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fe8846a6-c535-48cd-8926-6cd6cbc222d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e537537-e259-4af2-a20d-85fa41d9dae9",
        "cursor": {
          "ref": "220739a6-60de-4cc9-862c-ba7b5e971b06",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a9a94880-4d8e-4fc7-83b9-231106432119"
        },
        "item": {
          "id": "2e537537-e259-4af2-a20d-85fa41d9dae9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "28f9e0bc-38ac-40be-aa2e-ec65b2112ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514aff63-f8ca-469d-8d35-4018fa5d589c",
        "cursor": {
          "ref": "2c25873c-2c1a-4e9f-8430-802644d54767",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "aaa657f0-127b-4e68-9275-e6cec2c71642"
        },
        "item": {
          "id": "514aff63-f8ca-469d-8d35-4018fa5d589c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ce05ee2f-d5d8-43d3-bbed-a98eac65248d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afc9d3e-b6ba-419a-ac99-1f0d184a294e",
        "cursor": {
          "ref": "6f4f6b01-06df-435d-8e87-884a67434850",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a71b883a-9df8-4ca0-9b4d-a422dd199986"
        },
        "item": {
          "id": "5afc9d3e-b6ba-419a-ac99-1f0d184a294e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9cfbad35-5b2f-4de0-86ef-9e7e2552c334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4eb6abd-d9cf-413d-b096-51f92974784c",
        "cursor": {
          "ref": "034d23e3-b2a5-45cb-acc0-92f28081ce97",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c8b0ffcf-0d6d-4347-aa54-428ce9280603"
        },
        "item": {
          "id": "e4eb6abd-d9cf-413d-b096-51f92974784c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6054f260-80a0-4413-a770-137526e8d1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8abf3f1-9721-4385-b8a1-db81e875cd9f",
        "cursor": {
          "ref": "8c79b2d6-0ef8-49a5-b5a8-02d9e002576c",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "00bb5a5a-3d92-4a96-aabc-3545544659d8"
        },
        "item": {
          "id": "d8abf3f1-9721-4385-b8a1-db81e875cd9f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3fda82af-55c4-4468-a8d0-7b48c8965298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15515947-bf52-4693-aa74-bf6de24a4277",
        "cursor": {
          "ref": "12afdff7-2c2b-4755-abdb-06c0f6e0f75a",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4d1ecd85-2114-492f-95b0-45207158d819"
        },
        "item": {
          "id": "15515947-bf52-4693-aa74-bf6de24a4277",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b4d1fb7e-8da8-4527-a00f-a9037f5956a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b59b94-7d29-4d88-8df4-d68ac9399346",
        "cursor": {
          "ref": "f782b417-6df6-4537-9f15-00e8969df7fb",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cda6214b-b2ad-4032-b30e-61799b393494"
        },
        "item": {
          "id": "36b59b94-7d29-4d88-8df4-d68ac9399346",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7df496b3-1520-43f7-801b-0d379b38b45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48865183-e352-4d59-bd3a-bc475143a86f",
        "cursor": {
          "ref": "6257ae38-dfe7-4aaf-947d-546389a83e8b",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9081f902-184b-4de6-9afc-a0fdf905d2bc"
        },
        "item": {
          "id": "48865183-e352-4d59-bd3a-bc475143a86f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b7126c4c-c628-40a7-a1c4-a121d04f56af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f5a86a-b6b1-49e7-9d7d-6ce1f242ee28",
        "cursor": {
          "ref": "4e925c3b-2fb3-40d3-8600-f6de1ac69c4c",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1eb3ae9b-9342-4a07-91bb-4ec149beeefb"
        },
        "item": {
          "id": "17f5a86a-b6b1-49e7-9d7d-6ce1f242ee28",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4a060e65-cabd-459c-a21a-5d26826eb978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd450438-35c9-4e7c-a3d8-f56c4c9b5239",
        "cursor": {
          "ref": "a291b951-9583-4a36-9993-511b99538c9f",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b1028f92-7807-4553-bb85-8d1d8e531a30"
        },
        "item": {
          "id": "dd450438-35c9-4e7c-a3d8-f56c4c9b5239",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "606b7c18-d9bd-44cd-bc5d-63f4aa78edeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 868,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29b6639-d12a-4199-bdee-7872099cc543",
        "cursor": {
          "ref": "718bccae-8c9c-4044-b0a8-da3e9dae7805",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3da95438-386a-4742-ba9f-e6b9a51a3523"
        },
        "item": {
          "id": "d29b6639-d12a-4199-bdee-7872099cc543",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0a4aabcb-ecce-4845-8340-407e31feac4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbee4ed-aaec-4a94-ad3c-0dd4a0717250",
        "cursor": {
          "ref": "56e695b8-a46d-4a33-9e06-b3a508200c08",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a811e18f-94cf-4e4c-87be-117490908d14"
        },
        "item": {
          "id": "5fbee4ed-aaec-4a94-ad3c-0dd4a0717250",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f5d0c874-e43c-44e6-98ad-4fc8f2ae074a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3088e45c-30c5-4fbd-9f0b-0097cd0a2207",
        "cursor": {
          "ref": "f6727cce-a21c-4ed0-995e-b5344c07ea17",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cdb280b1-62de-4239-90e7-084243f3dcba"
        },
        "item": {
          "id": "3088e45c-30c5-4fbd-9f0b-0097cd0a2207",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d40e6d6f-aadd-44fb-a2d6-f2dc0c3e4cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87a79e5-3648-475e-8410-0e6abdb1b46b",
        "cursor": {
          "ref": "b4863210-bfc9-4064-878f-dbd17816239d",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "185c8cab-0eb6-49f7-9f41-cf23cc72add1"
        },
        "item": {
          "id": "f87a79e5-3648-475e-8410-0e6abdb1b46b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "afb9ee83-6b9f-4642-a1a3-abff1ac2562e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746e3bbd-fe1e-4f26-8445-a1d560e5ed70",
        "cursor": {
          "ref": "90aabb79-7cf4-45cf-87f9-4051785d3dd8",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "eeceacca-79d5-4f14-bd69-ba0ae43995ee"
        },
        "item": {
          "id": "746e3bbd-fe1e-4f26-8445-a1d560e5ed70",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f0ad4c2d-4db2-4ebb-8b71-ec0f6cbcb3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083d9c5e-5d5d-4f2b-8803-e128742fcb74",
        "cursor": {
          "ref": "77cb50a7-8694-4cd0-a83d-c1fc5f193a61",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fd311364-f90c-4680-9b6b-ae53ef1bc82b"
        },
        "item": {
          "id": "083d9c5e-5d5d-4f2b-8803-e128742fcb74",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7c5cfc15-38ef-4840-9083-73c87c73f9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac873c6-ba54-44c4-8364-3e0be85eb7ac",
        "cursor": {
          "ref": "0e3c2fbb-d1a5-4f5d-b773-d04792080e69",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ef471e73-486e-4afd-8bd9-a5c4cd1e932c"
        },
        "item": {
          "id": "0ac873c6-ba54-44c4-8364-3e0be85eb7ac",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "09b83888-a1a9-40bf-8473-233b149b1774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5ae793-b425-4700-ba3a-774b42b0b58e",
        "cursor": {
          "ref": "41722d44-b032-4a59-a9fe-156a44fb643b",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c0864ec8-2963-415d-8eb6-d3a71a0d7fea"
        },
        "item": {
          "id": "af5ae793-b425-4700-ba3a-774b42b0b58e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "40d63cf2-7a59-4e3a-8bd2-8461928154fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872e7974-4e51-4c30-912a-79f7e690a314",
        "cursor": {
          "ref": "f3ec644d-b38d-42e4-9368-dd9f11717558",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4d4406b2-31d7-4440-94ba-5e038ead1fdf"
        },
        "item": {
          "id": "872e7974-4e51-4c30-912a-79f7e690a314",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "35765962-0e77-40e9-8180-4de46fe3cc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac933da0-9b5b-4628-b1b9-63b030bd4e44",
        "cursor": {
          "ref": "26b7378c-c4d9-4fee-a7fb-0eaf1160850d",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6fe54e2a-f3df-4d20-9b63-c4bd57a68782"
        },
        "item": {
          "id": "ac933da0-9b5b-4628-b1b9-63b030bd4e44",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3ce5db52-7ef4-49a5-aaf5-a525500e0206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae7c323-e7c3-4013-bc46-9f6ef4c7e5a5",
        "cursor": {
          "ref": "32b57ca9-5b6a-4994-bb0a-cc3768bc57c6",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "36101feb-cd64-489b-aa86-7a5048d4f751"
        },
        "item": {
          "id": "5ae7c323-e7c3-4013-bc46-9f6ef4c7e5a5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c79710b6-f81b-4b95-b5d2-650e3d947f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b1c7e6-c1c5-4d04-a2ec-4fd50b00ccad",
        "cursor": {
          "ref": "05d3747b-7e64-47c7-8961-4cb24fd83b21",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6cad5b15-14d8-4525-8b72-642f61951753"
        },
        "item": {
          "id": "c5b1c7e6-c1c5-4d04-a2ec-4fd50b00ccad",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a756d61e-6f7d-440b-be4b-4b89c36e2e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7165213-f484-45a6-a4f1-605d46f20ec9",
        "cursor": {
          "ref": "b14d60c7-e5f2-4be0-b5b9-ed58c161bb16",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5c56deb1-9795-410e-ac02-8bcef4c516f8"
        },
        "item": {
          "id": "b7165213-f484-45a6-a4f1-605d46f20ec9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "756bce20-b817-4b68-a1d1-bce994195ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3b6ac8-468e-455d-814e-ae625f8a4217",
        "cursor": {
          "ref": "e73bd04d-34c3-4dcf-b5ab-f3a04c7786b4",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8b871845-0cee-4ee6-a67f-f44f3aaf1b0f"
        },
        "item": {
          "id": "9f3b6ac8-468e-455d-814e-ae625f8a4217",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6335cd38-0aff-40e8-8ddc-3af566f0b211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec087b75-1f6d-481b-8947-8da1624b1ced",
        "cursor": {
          "ref": "b26b240a-0b29-40f3-8648-4749bd998df1",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4b77f646-ffcb-4766-8178-095f620fd3e6"
        },
        "item": {
          "id": "ec087b75-1f6d-481b-8947-8da1624b1ced",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "45edb066-15e0-47ac-8835-94934472c360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebcc387-85df-4b49-8ec9-900b155b38c5",
        "cursor": {
          "ref": "2033ca4d-7be9-40e0-af1f-395fa7827df8",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7094aa1a-dc2f-46cc-9768-1d72a0659625"
        },
        "item": {
          "id": "5ebcc387-85df-4b49-8ec9-900b155b38c5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "14ff4228-c582-43cc-813b-19183102f091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad126704-c9b6-4d51-8466-d9b7e87934d4",
        "cursor": {
          "ref": "9978230e-3e13-4375-9688-c118a9d7fb33",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d72f6efb-6d8a-4cc7-b922-9e828a4ed4c1"
        },
        "item": {
          "id": "ad126704-c9b6-4d51-8466-d9b7e87934d4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "929a6be4-8493-4ba7-a5ce-c9404a803b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6a4eb7-61bf-435f-a165-175a3969c87d",
        "cursor": {
          "ref": "e732fd32-82de-4c81-825b-ffde9ab3cd8b",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "be7df678-1ed0-47cb-8fcb-3934c2103b70"
        },
        "item": {
          "id": "6e6a4eb7-61bf-435f-a165-175a3969c87d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "afa9dd9c-c46e-446d-850d-8a7437925192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abd81cd-8dde-49cc-8525-abf5744278c1",
        "cursor": {
          "ref": "11fe6804-b173-45a0-9b62-9236dc92aac5",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b29517ce-4789-47a8-8e8f-9a6bb717e467"
        },
        "item": {
          "id": "8abd81cd-8dde-49cc-8525-abf5744278c1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "afb6b16f-6642-4d5e-9e1b-b3b9d7688291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa4ebfe-d205-4b1e-83e3-cac0fae03e1e",
        "cursor": {
          "ref": "05cf0b02-9b13-44c1-8fb1-7fbc40344ea9",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3ac16691-a68a-48bf-93ae-9dd1fe0805e1"
        },
        "item": {
          "id": "7aa4ebfe-d205-4b1e-83e3-cac0fae03e1e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8e6f78ae-a45a-49f0-a898-94db87315f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad0c3f7-635f-45a6-bfdb-3a3dc6b06337",
        "cursor": {
          "ref": "ae7da8bc-29e9-45e9-a267-887ed65a40ad",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2700a706-2fe9-4558-a8b8-648392169145"
        },
        "item": {
          "id": "7ad0c3f7-635f-45a6-bfdb-3a3dc6b06337",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bc02a230-a9c0-4ecd-b05a-31e8e89aa16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252fdc9c-11d9-43ad-9abf-3cc8b9f0f532",
        "cursor": {
          "ref": "0d3fbac3-b09a-4094-9660-f45094e6cd8e",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d4566783-98db-4063-8664-7a0c9dd31d12"
        },
        "item": {
          "id": "252fdc9c-11d9-43ad-9abf-3cc8b9f0f532",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "67b82c22-3053-4ca5-9c62-45c3be110da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce46fe3-0208-4acc-b7bc-aa091341a73c",
        "cursor": {
          "ref": "76051bdb-53c1-4750-becc-16d36f8b3f32",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1f9824b5-dc9b-4796-bbee-6192eb353104"
        },
        "item": {
          "id": "8ce46fe3-0208-4acc-b7bc-aa091341a73c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a95972ac-1584-4286-9519-16360ba40687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af73711-93e9-4f00-859b-1ea4ebc07cbd",
        "cursor": {
          "ref": "8c2f13a0-d85c-4e3c-bb2e-070a295e87f6",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e5e58234-57c5-4d0c-95c0-d50d44776939"
        },
        "item": {
          "id": "9af73711-93e9-4f00-859b-1ea4ebc07cbd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fcc15576-7227-429e-a12b-1dc0a3bae8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cde08a-9b33-4d18-b65a-566e989199f3",
        "cursor": {
          "ref": "f30eb233-14d3-4591-a58c-d94da33bca62",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a458ff83-2913-463d-8ae7-2388e4fd6888"
        },
        "item": {
          "id": "f2cde08a-9b33-4d18-b65a-566e989199f3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7a840dea-ab1c-4afd-bda4-62fc02273aab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc25dc49-2440-45b9-bfd3-48e474546cb5",
        "cursor": {
          "ref": "cbbb3d03-dd24-42fb-a011-4c6607483e9c",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "39750a0a-a511-4e3a-9e5d-0c5e1f677e71"
        },
        "item": {
          "id": "fc25dc49-2440-45b9-bfd3-48e474546cb5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "e35e578b-54b0-4e32-9cb8-65737ee3c7d4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 749,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9def86-fefb-414e-951f-21c774cbf00e",
        "cursor": {
          "ref": "67b9c333-8918-4548-9346-1029d3e18bb9",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d592eb49-989c-4784-9198-aec0fc36aabe"
        },
        "item": {
          "id": "da9def86-fefb-414e-951f-21c774cbf00e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0e4846f8-5227-4e62-9d05-2eb5d5694163",
          "status": "Created",
          "code": 201,
          "responseTime": 6569,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "928ce98b-ff1b-40ae-b9ce-72276dbedb6f",
        "cursor": {
          "ref": "b94545cf-43d7-4594-8372-3833e6c0eeb1",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6ee10e65-7911-4cbd-a489-4e1e0a8e25dc"
        },
        "item": {
          "id": "928ce98b-ff1b-40ae-b9ce-72276dbedb6f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "849e40c0-e8af-460d-b9fc-4c46eeba5072",
          "status": "Created",
          "code": 201,
          "responseTime": 6515,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "302f6517-1091-4030-b864-be647e8e6829",
        "cursor": {
          "ref": "f8947aed-ce11-4e0f-b8dd-033822c1fdb5",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4377e3f7-9ee0-4785-95dd-c143cea8ee40"
        },
        "item": {
          "id": "302f6517-1091-4030-b864-be647e8e6829",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d3783da0-50e2-4f07-91e4-88798961e51f",
          "status": "Created",
          "code": 201,
          "responseTime": 6587,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6234b70d-a016-44a9-acd1-6cd5a126f75f",
        "cursor": {
          "ref": "ecc0c0a7-bf34-416a-82e8-03a60c5a3450",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ee2d6f85-25cf-4996-bf3d-d86584fc279b"
        },
        "item": {
          "id": "6234b70d-a016-44a9-acd1-6cd5a126f75f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bec32840-cd2d-4910-b514-c45c7d27d9bd",
          "status": "Created",
          "code": 201,
          "responseTime": 6266,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53971f0-f1f6-4c8c-b41c-522a3ad8f86c",
        "cursor": {
          "ref": "6a7c3197-0083-4d10-b45a-40962669cb23",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ce7bc32a-7382-4238-96e6-49b4a8349b81"
        },
        "item": {
          "id": "f53971f0-f1f6-4c8c-b41c-522a3ad8f86c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "69513a28-27ba-4c90-9095-8f5d4f35667d",
          "status": "Created",
          "code": 201,
          "responseTime": 6232,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6dcc2f-53d2-4179-8b43-e1425533864c",
        "cursor": {
          "ref": "b6c0b64f-d0d6-49a8-a16a-da4814285637",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2ca9beed-0637-443b-b5f6-59200a2fba17"
        },
        "item": {
          "id": "0c6dcc2f-53d2-4179-8b43-e1425533864c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5d6c7d4a-77d5-409e-8166-033f3ea1afd1",
          "status": "Created",
          "code": 201,
          "responseTime": 7940,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c133e7-5ec9-484a-9430-f3b4a10a9d3c",
        "cursor": {
          "ref": "eb3b6e1e-c7e8-4260-b420-006362f258a6",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0d6a491a-3210-4b95-93eb-4498c803f0a7"
        },
        "item": {
          "id": "49c133e7-5ec9-484a-9430-f3b4a10a9d3c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b124d8a8-766c-4b06-ba38-8e783d7afceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c133e7-5ec9-484a-9430-f3b4a10a9d3c",
        "cursor": {
          "ref": "eb3b6e1e-c7e8-4260-b420-006362f258a6",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0d6a491a-3210-4b95-93eb-4498c803f0a7"
        },
        "item": {
          "id": "49c133e7-5ec9-484a-9430-f3b4a10a9d3c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b124d8a8-766c-4b06-ba38-8e783d7afceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5911903c-26f8-4283-9f39-cd37422a432c",
        "cursor": {
          "ref": "6f9e103d-1334-4c54-8e18-3560944112d6",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "59cee08c-ebc1-41f4-9669-c046df391b3c"
        },
        "item": {
          "id": "5911903c-26f8-4283-9f39-cd37422a432c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9fe51af0-8cbd-4b4b-94e9-61d6ee7602ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82923b67-5007-41da-8c3e-02c735f98439",
        "cursor": {
          "ref": "ca2b9bd2-c950-4483-b840-0f368bf5b8fd",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "423994f8-6acc-4c45-b13b-47e4b4ee039e"
        },
        "item": {
          "id": "82923b67-5007-41da-8c3e-02c735f98439",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d6e15d95-37a4-4039-853b-c85ac536e8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f626815b-9a4c-4801-80bb-37b2869d955f",
        "cursor": {
          "ref": "3cd43ba0-b266-418f-aa65-21a7dd5a76c9",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b9f36668-89d9-4cf1-a073-88d3ae844197"
        },
        "item": {
          "id": "f626815b-9a4c-4801-80bb-37b2869d955f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "20ad9a28-166c-4457-bbda-50f25b5ae6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac901a60-b338-4b2a-ac9d-85aa8d44ac49",
        "cursor": {
          "ref": "391425c6-535f-420b-915f-3be4124139be",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "123e7ba5-0b38-4e9a-afcb-77f7ab16e661"
        },
        "item": {
          "id": "ac901a60-b338-4b2a-ac9d-85aa8d44ac49",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "be984e1d-d76b-4d81-a6d6-1e7715986ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ad4d2f-af2b-45b1-9b9a-4006b0069844",
        "cursor": {
          "ref": "238e1d81-3f03-4519-938b-136f05c7a92a",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5a5a0ac2-50d6-41f9-847c-8206a62ccb33"
        },
        "item": {
          "id": "a5ad4d2f-af2b-45b1-9b9a-4006b0069844",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "319a5813-c1d0-483f-a21a-ee6c5b953c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86b9701-6d7f-412c-89af-e7fcf89ccd57",
        "cursor": {
          "ref": "357cae3e-bc81-4e8a-9fd1-c2f23d591ca7",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f7162ef1-2d29-4af9-b5df-602c316bcf66"
        },
        "item": {
          "id": "d86b9701-6d7f-412c-89af-e7fcf89ccd57",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5547be6f-4d64-4c9b-a765-27563c810336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56c67e2-3040-416d-8915-e37ca434122c",
        "cursor": {
          "ref": "ab453444-2c55-4e49-88b9-79e645322bea",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "eafdb63f-f5b3-4418-b0c9-512a97d46481"
        },
        "item": {
          "id": "e56c67e2-3040-416d-8915-e37ca434122c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "91a5d783-0bcc-4406-b52a-da47dd4ac7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbff2294-104f-49b9-9473-f18d49fc2dc8",
        "cursor": {
          "ref": "69674ecb-f245-4fa8-9f6f-ff3f03f69420",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4e031d61-0f9f-48f0-8acd-1d387a1304c6"
        },
        "item": {
          "id": "bbff2294-104f-49b9-9473-f18d49fc2dc8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e44e0523-0f53-4c4e-8f3b-0857ba6f9b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6084279a-b327-4d0a-a636-3e31f49eac05",
        "cursor": {
          "ref": "fb959155-94c8-4abb-8463-1bda644d53d3",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8b0fdefa-412f-4c76-9cd9-eb81868f7623"
        },
        "item": {
          "id": "6084279a-b327-4d0a-a636-3e31f49eac05",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a22ac859-a177-40ef-a7e2-4cbbaddb60b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680490ad-272d-4545-a7f5-55178b36fd6d",
        "cursor": {
          "ref": "ba5b55f1-ee4e-402d-9ee3-2266b39f4047",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "10c6a10f-fed3-4215-9a7a-39b5b8a50332"
        },
        "item": {
          "id": "680490ad-272d-4545-a7f5-55178b36fd6d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "54d53b33-24a6-45c3-a899-1ac15645dd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c110741e-1528-4803-91c2-ee813fea66ec",
        "cursor": {
          "ref": "3f3d7f4a-254b-4fc7-9af8-15a0886a2d41",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6c5b6141-eeb9-48d4-aad4-408f7a59013c"
        },
        "item": {
          "id": "c110741e-1528-4803-91c2-ee813fea66ec",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3fbaefce-3498-4923-be80-b37fb10d25be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eabaea5-630b-41e3-b3c6-b8d392dd936a",
        "cursor": {
          "ref": "fcd3d99a-7f95-4e54-a394-469935aa5ccf",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e28b86b3-4d2d-4541-8648-a5e8ae164bf5"
        },
        "item": {
          "id": "3eabaea5-630b-41e3-b3c6-b8d392dd936a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0d6c56c4-15ae-4218-a857-7fb5de3d1dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e8bfe8-946a-4ad9-921f-01aa290913e3",
        "cursor": {
          "ref": "67525719-501b-41f3-841a-ec8eaee3e66c",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0a3166cd-9acf-4476-a407-b79b4e1e7b90"
        },
        "item": {
          "id": "57e8bfe8-946a-4ad9-921f-01aa290913e3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e21ff7ec-fb4b-4bd9-ad55-de64089dfb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029a1e2f-0e33-427f-9f9d-02b5b1d0e7b6",
        "cursor": {
          "ref": "febb0d64-d4a1-47cb-88aa-918e342ca77e",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3e1b1ca5-fca5-4a09-9b3c-471fec342f7f"
        },
        "item": {
          "id": "029a1e2f-0e33-427f-9f9d-02b5b1d0e7b6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "085dac35-97d1-4b9b-8456-1b0ce32cfee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4ad19c-d942-4a22-a932-04e061ccffab",
        "cursor": {
          "ref": "4d524de0-c8ea-4f18-a57a-57658774c08f",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "82f90338-4851-43af-99f1-5382fddb289a"
        },
        "item": {
          "id": "6d4ad19c-d942-4a22-a932-04e061ccffab",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dad73329-b563-49b6-9415-188734598da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45ea855-4dc5-4120-9b98-f9356ff015fa",
        "cursor": {
          "ref": "206da951-6b2d-48d0-87a3-96282428a9db",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "99045e34-ef7a-4835-a4d9-e2d35592cf38"
        },
        "item": {
          "id": "a45ea855-4dc5-4120-9b98-f9356ff015fa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c5655ef5-0cd1-4f33-90fa-2e1f7f071f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862ced3a-1ba6-4b56-b649-f08047d7c5fe",
        "cursor": {
          "ref": "095e423a-e1b3-42f2-90d4-8aa224d082c6",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a6ce7431-78f2-458a-ac23-26e5bf6cec13"
        },
        "item": {
          "id": "862ced3a-1ba6-4b56-b649-f08047d7c5fe",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "df3350cc-d624-4be9-ba86-f38f4a97dcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020f0211-95f0-40d4-bed4-e7946d925f03",
        "cursor": {
          "ref": "ebf75037-8231-4e0d-8d80-197ed89303a0",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "84344d08-5568-44e1-a2d1-6fecc02e2780"
        },
        "item": {
          "id": "020f0211-95f0-40d4-bed4-e7946d925f03",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cf2b9613-94ae-4e7a-8247-20d933c8972a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812d5a8f-0a7f-4f6d-8b46-c4ac1b5163c9",
        "cursor": {
          "ref": "ac83c814-12d9-4610-a36d-2533a633ae4c",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "479f8ff8-3976-4d88-820d-bb3bff57d6c6"
        },
        "item": {
          "id": "812d5a8f-0a7f-4f6d-8b46-c4ac1b5163c9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ce0de244-0608-477d-a982-8c1347434bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9cfebc-dcaf-4f9b-840e-11aea8be02fb",
        "cursor": {
          "ref": "a85c9cc1-109e-48ca-806b-e33e9f95afb9",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "79822507-5be1-49a8-8e22-7bdcf4acaf90"
        },
        "item": {
          "id": "7d9cfebc-dcaf-4f9b-840e-11aea8be02fb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "413df05c-3337-49bf-b12c-c2a42295bed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a797c886-706e-4a1b-9d79-6bfddad3141e",
        "cursor": {
          "ref": "e4b8a6fa-2357-43f0-bf5a-7b20909c8d91",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e4527243-2e2b-43c2-954d-6180331f83d3"
        },
        "item": {
          "id": "a797c886-706e-4a1b-9d79-6bfddad3141e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c3e272db-2fb7-48c7-ab9b-b2937ef39ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e0bae7-6392-49d2-a6dd-4505734532c6",
        "cursor": {
          "ref": "388ba8f3-8c2f-4677-81ce-03720a18137f",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a82ff563-49be-4d31-a13b-f39601c2e988"
        },
        "item": {
          "id": "a3e0bae7-6392-49d2-a6dd-4505734532c6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "29ffd7bc-a5e2-4afa-9393-068b46da289b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f84d2f-c0e2-4480-a127-0b4476f61a54",
        "cursor": {
          "ref": "bfd21a57-0815-427e-8201-c24458c75d1c",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5f130b98-c3ce-43d4-8887-62fc25b4b2d5"
        },
        "item": {
          "id": "42f84d2f-c0e2-4480-a127-0b4476f61a54",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "23439620-d999-43ba-ac21-3af88f83fdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d350a43a-6dbe-4a69-ae98-e2ec7d84cd55",
        "cursor": {
          "ref": "0737848b-9be2-48fb-9127-52ec31260ede",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2aa5e9e0-1a19-49c4-85d0-7438c1751d8a"
        },
        "item": {
          "id": "d350a43a-6dbe-4a69-ae98-e2ec7d84cd55",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "605d01e2-78dd-4fff-8965-78b6987dc9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a95eef-c666-4013-8f5c-ce7d0668e858",
        "cursor": {
          "ref": "2a13c15f-4fde-43ea-b8ae-dca24700e141",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "17d428c3-00a4-467a-bbf7-6620b9ba9d5c"
        },
        "item": {
          "id": "b8a95eef-c666-4013-8f5c-ce7d0668e858",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e2c47e9e-b2d0-4c67-902c-18e657db0f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f9494a-6ad1-4394-8b46-7b602357140a",
        "cursor": {
          "ref": "e667a513-14fc-4d55-805c-b9a1236dc156",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2f391fbe-9ba4-4c09-a330-6a4041214766"
        },
        "item": {
          "id": "b1f9494a-6ad1-4394-8b46-7b602357140a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "06bcc3f0-f4f7-4d02-954c-52c9666fde60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d8f3c0-98b6-49c8-a2bb-3cff22808f2f",
        "cursor": {
          "ref": "2fe61cd2-8986-4366-aa7b-a45b5d1d2ab4",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b8940bf0-d704-40cf-8353-17e658c75ee2"
        },
        "item": {
          "id": "76d8f3c0-98b6-49c8-a2bb-3cff22808f2f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "33e651f5-5967-4a34-a28e-1938161b7416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240908db-f58a-4857-83f5-20e9304043e8",
        "cursor": {
          "ref": "8404fb86-d2fd-485f-bc85-abcb435de87d",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eaf90765-5a6a-4d39-a85c-39078ad7a0df"
        },
        "item": {
          "id": "240908db-f58a-4857-83f5-20e9304043e8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "85d040b7-b9bb-4c22-af30-4e1bf11d45e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca34453-bbc1-4042-ada0-137228006d88",
        "cursor": {
          "ref": "b1886b3f-6fa0-407d-900c-28cfcbbd9eca",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2d988b0e-3c3b-4d92-8d5b-4715400f67ff"
        },
        "item": {
          "id": "cca34453-bbc1-4042-ada0-137228006d88",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ba0ec82f-638b-4a42-bd38-c9d9fa28e99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d1b4ef-759c-4d8f-bd52-8fd4dd57646f",
        "cursor": {
          "ref": "93645518-0bec-4946-8a5a-ab7def734097",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b7ae276e-baea-4463-954a-a5ab55b50b14"
        },
        "item": {
          "id": "d9d1b4ef-759c-4d8f-bd52-8fd4dd57646f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b87ae505-7877-4ac7-a97e-bbe79262ab6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47896899-aa98-4e78-9bce-1b952fb76c0e",
        "cursor": {
          "ref": "44b5b87e-8d76-4b4e-8fb4-3cc7276ac7ff",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "899dcb66-2c62-4e43-bf68-ae9d8c0f63a3"
        },
        "item": {
          "id": "47896899-aa98-4e78-9bce-1b952fb76c0e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f93676d7-66c4-45f3-aecb-043fbc930c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963209e4-b9e5-4fbf-a5d7-a9f6d6093024",
        "cursor": {
          "ref": "c777f23b-f2a4-4933-b6f1-84db12dcc3ca",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c6b014b4-0845-42c3-9091-163f122e6ec8"
        },
        "item": {
          "id": "963209e4-b9e5-4fbf-a5d7-a9f6d6093024",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e4581586-47e0-4d5c-8192-3f8dd55e22a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad2f14b-82ff-4dff-93d9-74547d87ba81",
        "cursor": {
          "ref": "e1cc0ab9-f15b-466c-9808-c35cda17c26c",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c68bed3c-1725-4548-a18c-59c532efb0bc"
        },
        "item": {
          "id": "5ad2f14b-82ff-4dff-93d9-74547d87ba81",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "48cdda8f-f57a-45d7-9d6f-eb94bbfbc5fa",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 763,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcb13fe-7b73-4a0f-833f-cdbf7b497728",
        "cursor": {
          "ref": "15d4d467-63b5-4985-a245-8e555785a9e1",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "de5447a9-6ddc-455d-a4b7-aa670c5888f7"
        },
        "item": {
          "id": "2bcb13fe-7b73-4a0f-833f-cdbf7b497728",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "16027d58-5bbb-4789-a7b2-4bbcd2c7e138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcb13fe-7b73-4a0f-833f-cdbf7b497728",
        "cursor": {
          "ref": "15d4d467-63b5-4985-a245-8e555785a9e1",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "de5447a9-6ddc-455d-a4b7-aa670c5888f7"
        },
        "item": {
          "id": "2bcb13fe-7b73-4a0f-833f-cdbf7b497728",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "16027d58-5bbb-4789-a7b2-4bbcd2c7e138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b87275e-bb8d-4180-812a-607ffc56a624",
        "cursor": {
          "ref": "1a83eca8-cea2-4c3f-9f33-49b127b92960",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7ec4778b-5a1c-4646-a0bc-51bc36849756"
        },
        "item": {
          "id": "0b87275e-bb8d-4180-812a-607ffc56a624",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "32089971-7645-4359-ba70-10e5a300d9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5924808d-7dff-41a2-a95d-f39546681182",
        "cursor": {
          "ref": "8fbfaa94-3f68-405b-b836-363f761ad708",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ade57380-4a7c-4d04-8462-7b2f474822f2"
        },
        "item": {
          "id": "5924808d-7dff-41a2-a95d-f39546681182",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "60482f79-52a1-4c69-a671-b9550f00b081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ec4824-1a2a-440f-b97d-54ec0f30a32b",
        "cursor": {
          "ref": "977db46a-8bad-4d96-8ea5-535b233c8a95",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "87445f15-b8b6-45b6-b20a-dd080bf268e2"
        },
        "item": {
          "id": "87ec4824-1a2a-440f-b97d-54ec0f30a32b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bc000d66-cd96-41ed-9301-d4f3337357bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b5d61e-8e3e-48c2-8123-0b90212c5414",
        "cursor": {
          "ref": "df66b9df-391b-4271-9c80-84a5ab74e6f4",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5c35cba7-da03-44cf-bc3a-d2f6ce1e63b1"
        },
        "item": {
          "id": "97b5d61e-8e3e-48c2-8123-0b90212c5414",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "31a3745e-20f8-4ef8-a42f-c5f19e474e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a278995-1799-4e06-bef2-fa7e982e1b41",
        "cursor": {
          "ref": "2813d3fa-803f-4061-9fed-cd0f5c07c0bc",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f341c4dc-4775-47e4-99ad-8b67a4c36805"
        },
        "item": {
          "id": "3a278995-1799-4e06-bef2-fa7e982e1b41",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "772dd893-223b-457a-893f-b65de2b3ede8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac56835-80b4-42e5-b0dc-a236b4670c39",
        "cursor": {
          "ref": "162a8550-9345-43e3-9935-ad0b5ef02fe6",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "349cc882-4113-4cf1-8350-11363180a2c7"
        },
        "item": {
          "id": "9ac56835-80b4-42e5-b0dc-a236b4670c39",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b80f9300-529c-46e1-824d-091195ededd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5c2038-097c-43e7-aba5-32683e530d8b",
        "cursor": {
          "ref": "f1739fc3-bffa-497a-9010-f73a524f08de",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d19f18f1-5346-4ae6-96bc-545d716072cd"
        },
        "item": {
          "id": "ac5c2038-097c-43e7-aba5-32683e530d8b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b6ca3d08-3ba3-4eb3-ac6a-c4c0dc1f5d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2892f499-e011-436f-9674-f3ad0c043cdc",
        "cursor": {
          "ref": "6df1c23b-a284-4a73-b1c4-1c31748330bc",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "07498041-2435-4fed-bf17-b40f3d2fc51f"
        },
        "item": {
          "id": "2892f499-e011-436f-9674-f3ad0c043cdc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "51df1c46-0ba6-4fc0-9842-267cc1adef39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bd49fa-5f0f-4532-ab61-cdda75dc7457",
        "cursor": {
          "ref": "c9c998b2-61f3-49c8-9d21-c0fb465cc802",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "54858a3a-64c8-4ed5-bd59-d81f13bc6411"
        },
        "item": {
          "id": "c8bd49fa-5f0f-4532-ab61-cdda75dc7457",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "323999c9-a0d0-42c1-b5e1-15639704c674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f555b3-0aff-444e-995a-ebb94adde553",
        "cursor": {
          "ref": "540f2c70-6b3f-4677-8059-332461379026",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a73a546a-e773-4437-9530-ae542ff0fd2b"
        },
        "item": {
          "id": "f6f555b3-0aff-444e-995a-ebb94adde553",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9eadd8dc-970f-4a64-ba16-9dbf0ad374ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377691b0-543e-4171-a35e-6f04372ecaee",
        "cursor": {
          "ref": "1552167b-63f4-4e08-92c9-bc4f75660792",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "045e00e8-c837-4efe-aff1-6cafc57e4c24"
        },
        "item": {
          "id": "377691b0-543e-4171-a35e-6f04372ecaee",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fea7fae1-d67b-40b1-929a-98c40eaa5cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595c4a3a-6d06-4a35-a69c-166604f42245",
        "cursor": {
          "ref": "2890caa1-d4e1-42ab-9160-1c3581fc0cdd",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "50ce973e-3007-4673-a97b-1ba16b7f89dd"
        },
        "item": {
          "id": "595c4a3a-6d06-4a35-a69c-166604f42245",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "77eec4c8-87c2-4be1-9aa0-a77f6fbc488c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059a5084-0396-43a3-8c92-aab6028f1e4b",
        "cursor": {
          "ref": "1668f803-2028-4832-bd36-2cf7b27ddea3",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1cc668bc-b78a-4f3e-b929-b4914d2f2c38"
        },
        "item": {
          "id": "059a5084-0396-43a3-8c92-aab6028f1e4b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7f899918-3d59-4360-8208-7ddc74c40518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddaf47f-46b1-40c9-9a4f-be5325def1be",
        "cursor": {
          "ref": "1b5f8188-b5ee-417a-8e45-c0006b68345b",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "35248d00-29d8-4ae0-93eb-df3a7be76cff"
        },
        "item": {
          "id": "2ddaf47f-46b1-40c9-9a4f-be5325def1be",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7599c0e0-0a11-4700-8e84-398eddfd683c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da941c5f-7850-46cd-8eeb-abbd86bd8951",
        "cursor": {
          "ref": "d59ec17f-4d74-4eea-ba66-ee23560f448d",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "56d23303-8be5-4175-94c8-669242affc10"
        },
        "item": {
          "id": "da941c5f-7850-46cd-8eeb-abbd86bd8951",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ecd6a7e8-3157-449c-b6cb-4305e53f5343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996210cf-15da-40f2-baaa-458c098492a2",
        "cursor": {
          "ref": "5ca092e8-8b31-43d5-80b0-ff836f07bfaf",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "13960fd7-0a8e-4a7e-bb3e-dedcb699e9b5"
        },
        "item": {
          "id": "996210cf-15da-40f2-baaa-458c098492a2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "22e4dc53-0c70-4144-9096-c0201886d41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c857083b-202c-4f07-a0c1-a71b4e7dd65d",
        "cursor": {
          "ref": "15e88759-0335-44f1-8ab4-ea3f8d93b85f",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "073198af-15a1-482a-bce3-ea2d62d4921b"
        },
        "item": {
          "id": "c857083b-202c-4f07-a0c1-a71b4e7dd65d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "541acc61-717b-43a9-aa91-8b6b951915e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52aca6ef-1155-4b40-a45b-9e31a6022b90",
        "cursor": {
          "ref": "8236abc9-f9ce-4ecf-91eb-230c3e0e60cc",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e9536b85-7b00-4b19-b84f-d2714ea88c56"
        },
        "item": {
          "id": "52aca6ef-1155-4b40-a45b-9e31a6022b90",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "57ec787c-d640-4634-9233-26c78f800acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02b8529-f0c2-4a19-aa92-9542d24e1ee2",
        "cursor": {
          "ref": "849c40c3-e44f-4975-9592-1ec15eef6f2b",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b7bcd454-f067-487e-b0bf-1eaca29c6f1e"
        },
        "item": {
          "id": "a02b8529-f0c2-4a19-aa92-9542d24e1ee2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c2a86028-0988-457b-9f33-ba2629647352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe3ef08-ab65-4256-bf45-f496fc4dd20f",
        "cursor": {
          "ref": "dbe2557d-2b07-4dbe-8e93-3b0d1878c36c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "14c61655-6120-4bbe-9baa-b2af1a04ddbb"
        },
        "item": {
          "id": "bbe3ef08-ab65-4256-bf45-f496fc4dd20f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cc2b0275-a1d4-4b34-8d14-479714f3905e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae3f155-3ecc-4596-a612-bb3078dc5d1d",
        "cursor": {
          "ref": "fd0ad7c3-23ab-4a70-a581-56c5c5d6b3bb",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "096b7b56-1aa9-42cc-b9a2-30fad3b26d57"
        },
        "item": {
          "id": "8ae3f155-3ecc-4596-a612-bb3078dc5d1d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "98c6e3dd-3674-452e-af30-f0f4876a9e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbd50fe-ccb1-40ce-b18c-903b01fe7802",
        "cursor": {
          "ref": "6a2cdac4-7dde-4869-baee-b7936566014c",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b876b576-1581-420a-915e-562761e754ac"
        },
        "item": {
          "id": "0bbd50fe-ccb1-40ce-b18c-903b01fe7802",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4266f9c1-1ad7-4601-a36c-ddd534b7757a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2962cf67-dca3-4c79-9435-a3d360dc9286",
        "cursor": {
          "ref": "b82df48f-b6e6-4e48-bcd7-3c07da38a6cd",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9bc5ef77-8ad6-4906-83ea-da7f580af4e9"
        },
        "item": {
          "id": "2962cf67-dca3-4c79-9435-a3d360dc9286",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "67fe1b0b-6973-4aab-bec7-2917ad06499c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedaad15-9626-457d-9f75-8270fbc03c43",
        "cursor": {
          "ref": "cfe9d54d-cdb7-4804-8dd8-d7996ec4a09b",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3a18b5c4-3324-4ac3-881b-7936925cc4be"
        },
        "item": {
          "id": "aedaad15-9626-457d-9f75-8270fbc03c43",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0cf1b594-82da-4826-92f0-13118f399e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6920596a-37fd-4232-850a-b1a3fd2aee4f",
        "cursor": {
          "ref": "05fe8b2d-bfae-40ea-a230-36cdc8dc17b2",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "54123b4d-cb13-4909-8361-d673bb249aa0"
        },
        "item": {
          "id": "6920596a-37fd-4232-850a-b1a3fd2aee4f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d16cc875-a9ce-45e5-abab-c8fb216e643e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d364885-a9b1-409f-b9ff-3bc8e9f63664",
        "cursor": {
          "ref": "95bf7cfb-301e-4927-ba1b-86c69237ae17",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "70450990-f664-4766-962d-44570ba66bc9"
        },
        "item": {
          "id": "6d364885-a9b1-409f-b9ff-3bc8e9f63664",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6c2299a0-8b3f-42f5-82da-adbafa933523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce04908a-601a-40ca-a944-db1983e0e4df",
        "cursor": {
          "ref": "8abd0546-891b-48e0-a34d-90d54cb8b2da",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ae8fa5b1-7784-4d6f-b57b-af0467a4cf27"
        },
        "item": {
          "id": "ce04908a-601a-40ca-a944-db1983e0e4df",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2e6ce152-1cc8-46ec-9a59-bdf1486cd2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9c7925-c049-45ed-b8f5-dcba6f93ebc1",
        "cursor": {
          "ref": "dbeeff49-6c5d-4e76-8354-da2f7564030b",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d52556d5-17c2-469a-9e47-a6888bbd2dbb"
        },
        "item": {
          "id": "5b9c7925-c049-45ed-b8f5-dcba6f93ebc1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4f01c2cf-d9d2-425b-abde-d2193bede5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de661269-318c-40fc-a7a9-810240640f29",
        "cursor": {
          "ref": "af7dbaa8-8e8f-451c-a512-69d65b192829",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bf343e1b-7621-42bb-9206-e7b6249fc36c"
        },
        "item": {
          "id": "de661269-318c-40fc-a7a9-810240640f29",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8e4a56c5-1fc5-4f8e-8f2d-4207ea290928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77c2609-cfad-46ec-8027-c7100145c268",
        "cursor": {
          "ref": "e62d2a59-b241-4c9f-98bb-c5c47356ffdf",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "32a9bdd3-120c-4d83-9fd5-879081e929b4"
        },
        "item": {
          "id": "b77c2609-cfad-46ec-8027-c7100145c268",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "45935646-c0c2-4242-87bc-9c0e1e4d74ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41330473-e831-4bca-b48c-5f614fa6ef1b",
        "cursor": {
          "ref": "028bec38-0b5c-46d4-b9f4-a4cb22c2ee5d",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b7bec04d-aa1d-4059-8306-7523cc6a7da9"
        },
        "item": {
          "id": "41330473-e831-4bca-b48c-5f614fa6ef1b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "05c16bb6-2646-43c6-a18c-bb0fec1fb2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5461dd-5539-4390-8141-352d22de8c6d",
        "cursor": {
          "ref": "f0d92dc1-04c1-45eb-bdc3-b5f4fdb59eae",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7652887f-4ef5-4b9f-be03-82aacd6b57fe"
        },
        "item": {
          "id": "da5461dd-5539-4390-8141-352d22de8c6d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "72de3ef6-376a-402c-9b28-20ea5e20c683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39850d77-7f28-4ede-a142-42bb19716d98",
        "cursor": {
          "ref": "5310c971-d2cd-4004-a28c-b85aad8a5582",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6d0b4768-0cc0-4dd8-aa29-796d358fd2a6"
        },
        "item": {
          "id": "39850d77-7f28-4ede-a142-42bb19716d98",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "04f10433-1dd3-444f-93d1-02f0ba996b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c1a21a-792c-41b2-b27c-0d6e41a6e859",
        "cursor": {
          "ref": "7a719866-4d18-45fd-afbf-9ce14cdff07f",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "afae3563-58b2-438b-91ff-11d042ca3717"
        },
        "item": {
          "id": "84c1a21a-792c-41b2-b27c-0d6e41a6e859",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7e896b8a-7b2d-4171-b006-4a293341fc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc440af-a157-4aee-831d-e7fd7c3452c5",
        "cursor": {
          "ref": "5d687600-76b9-4d59-9694-fad88b67ffc3",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "22e63189-b180-466a-9b5b-51c8969e55b5"
        },
        "item": {
          "id": "4fc440af-a157-4aee-831d-e7fd7c3452c5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7dd21660-d898-4054-8441-fda3e2ac71aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11776533-110a-4da7-85d9-396428f7136a",
        "cursor": {
          "ref": "07d129d8-4604-4127-a960-dfe6291f8561",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1e4fafc9-ed25-4ba1-a2b2-ca540fa71274"
        },
        "item": {
          "id": "11776533-110a-4da7-85d9-396428f7136a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e80faf25-b73b-43f5-9a57-563eb6c6c306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f401fd9-4f69-47ee-8901-e088234ea8d7",
        "cursor": {
          "ref": "f492e9cd-c6e6-473f-b75d-7d6472ea1358",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fba31895-3880-4d4f-87cc-67cf61885133"
        },
        "item": {
          "id": "0f401fd9-4f69-47ee-8901-e088234ea8d7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e7c51ee4-2f13-444c-bb1a-6c1b5a13960f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec11e38-95e4-47a4-977d-75b25782f709",
        "cursor": {
          "ref": "09724ee6-21fb-475b-9ae0-58f66d3d98d9",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7fe7c6e0-b04e-46c9-9f69-43aea597a76f"
        },
        "item": {
          "id": "2ec11e38-95e4-47a4-977d-75b25782f709",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d728b4ce-0ce5-4704-a27d-2181c9e340dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9631f8c1-83bb-494d-a04e-6d487a4bee89",
        "cursor": {
          "ref": "710a5b7a-a32f-4ace-8861-bde350b5a333",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1e4089c5-8659-4f56-a411-d33c87c10829"
        },
        "item": {
          "id": "9631f8c1-83bb-494d-a04e-6d487a4bee89",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "da4c868b-8a51-44f7-8350-7e21dd9fb2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ca53c6-67b9-4a7e-bce6-98149282efb1",
        "cursor": {
          "ref": "6f2c6f26-5a2d-4b68-9d5b-18e63bedaefe",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a3271768-f03f-4dcf-8735-2986185a870d"
        },
        "item": {
          "id": "00ca53c6-67b9-4a7e-bce6-98149282efb1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "589171eb-642e-4239-b76d-5a277e84662d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f6a16c-dae2-4e89-8df4-fe000679496b",
        "cursor": {
          "ref": "cfb5d4a7-ff7e-4ca9-9b76-cced99bbc9bd",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2cc85fac-2ad5-4272-8105-09f80d4e3035"
        },
        "item": {
          "id": "76f6a16c-dae2-4e89-8df4-fe000679496b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "17d50d1b-f261-49b7-8a37-115b501f0bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b07f822-ab80-4203-8680-bcf71f2f0bd6",
        "cursor": {
          "ref": "302b9284-92bc-4e03-9c34-9b33e79968bd",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5817718a-982e-4eb1-bfb6-9bc646714665"
        },
        "item": {
          "id": "5b07f822-ab80-4203-8680-bcf71f2f0bd6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e27ffabc-fbd5-417f-a7f1-72b696349c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62e3fbd-5d78-4687-9dbc-e5ff0aa7f6ff",
        "cursor": {
          "ref": "d37e45c9-5e1a-4603-91db-1309a99b3a8a",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fd9710cc-3d4f-4dde-85b9-c0135fb27212"
        },
        "item": {
          "id": "f62e3fbd-5d78-4687-9dbc-e5ff0aa7f6ff",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d76d72b0-858b-4f41-8f42-204a83d12fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919ad685-e16c-4372-8572-a547f871be1f",
        "cursor": {
          "ref": "d0a6ceb4-9c8a-43e4-bb67-ed33fba0a0bd",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fd74f768-9798-42de-8256-64ab4b0811b3"
        },
        "item": {
          "id": "919ad685-e16c-4372-8572-a547f871be1f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fe5ecd9b-772f-4878-b0b7-adfcfd58773c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb36c66-b3e0-401e-b953-c7f87389efe8",
        "cursor": {
          "ref": "5cb19900-c84d-462d-aa05-ff65a588e62e",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "400ce11a-f72f-40fc-9074-84c205586435"
        },
        "item": {
          "id": "6eb36c66-b3e0-401e-b953-c7f87389efe8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f6633b8f-2981-43b2-929d-4d372a0f970c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd05f777-0607-4124-b7b1-c828b7e159b3",
        "cursor": {
          "ref": "c513f79a-d38a-4604-8914-164e5677d5f9",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "721168ff-2bce-41fd-b485-76c7f25a9d26"
        },
        "item": {
          "id": "dd05f777-0607-4124-b7b1-c828b7e159b3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c4f98185-cb5b-49c2-962e-a9cc5ecfb533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7b6675-b09d-4728-8cb1-66e408fcc0fa",
        "cursor": {
          "ref": "bdc3d8f9-40a5-4390-af1e-ed66292275e1",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fe59a30b-db83-474d-8486-111c6e4c1cbc"
        },
        "item": {
          "id": "8b7b6675-b09d-4728-8cb1-66e408fcc0fa",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e8bfe628-8927-44e5-ad59-0b68203128a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d65989f-029f-4401-9d5f-8d911919b26c",
        "cursor": {
          "ref": "a7c6b286-27f6-4f99-8b12-7068a8a9510e",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "daeb77c9-4c83-4fca-941d-162b7bcbd2b1"
        },
        "item": {
          "id": "0d65989f-029f-4401-9d5f-8d911919b26c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "70187906-f4ac-4caf-a9f9-98bb7f6782ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc90d2c-1b82-43fd-84ed-e5e312b80f8e",
        "cursor": {
          "ref": "5a69ba66-04fb-409e-9882-a3877ff4c795",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4d087f9f-d262-4a88-8736-a58e7ce93434"
        },
        "item": {
          "id": "7bc90d2c-1b82-43fd-84ed-e5e312b80f8e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "797b425f-2b86-486c-ae65-6e4c2a434127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208398b7-c5f4-483e-844d-b1cbf52b9c00",
        "cursor": {
          "ref": "57cfd852-575f-4687-9024-8b9a0e9f4b0a",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f31974fc-7198-4ba0-908c-4b63efe038ca"
        },
        "item": {
          "id": "208398b7-c5f4-483e-844d-b1cbf52b9c00",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "645426a2-4bc2-4fde-8e43-8e4dd1d964b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2365aabb-3ec7-462b-a1c7-89003a2de2b0",
        "cursor": {
          "ref": "b0f446bd-6ceb-4569-ac85-ae3f98ac92f9",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c72e8304-9334-4563-9f2b-d53231c55512"
        },
        "item": {
          "id": "2365aabb-3ec7-462b-a1c7-89003a2de2b0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e59d1479-0595-4d7f-b7de-78ebbb6a4a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e2dae1-7a7f-4db6-9ae3-3392b44cecb4",
        "cursor": {
          "ref": "c07f83b6-4a2d-4049-a033-ba86a5043759",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ebd177b6-ef32-475d-9ce5-c18582b6d50d"
        },
        "item": {
          "id": "14e2dae1-7a7f-4db6-9ae3-3392b44cecb4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b041d9c4-8012-49da-9210-b65c269cede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293fe518-955d-4d77-9e63-2ab17c9b86ae",
        "cursor": {
          "ref": "ee304f5d-d0bd-4705-9a0e-09d789441b4f",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "785cfc8f-ece0-4f71-b9fb-0ed5a690f5d1"
        },
        "item": {
          "id": "293fe518-955d-4d77-9e63-2ab17c9b86ae",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bd5ffd9f-6e43-49c6-ace4-b845ca9441b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840dc203-d5ea-447c-b8c7-0aa762f7f0e5",
        "cursor": {
          "ref": "38f1d6f2-6a75-4817-b37f-e870de450391",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "699f6f8b-ad87-4587-94bd-c8dad5e29a32"
        },
        "item": {
          "id": "840dc203-d5ea-447c-b8c7-0aa762f7f0e5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "82d47af4-db15-48e4-b763-9a8afc2f04c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05710c91-c2cd-4f40-8088-578874b01266",
        "cursor": {
          "ref": "002981cd-f1b6-4d0f-b291-af2db1f7626f",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d58b9a47-3677-4a0f-9088-a9f2798bffaf"
        },
        "item": {
          "id": "05710c91-c2cd-4f40-8088-578874b01266",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d309b65a-c4b9-4777-afe9-44df060178ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee8857a-2d80-4baf-b31b-9d0dcf932374",
        "cursor": {
          "ref": "0848c538-84ef-4d46-ac63-4b288fdaaed2",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "29e4d0d2-9e5d-4fce-9333-9e46a56092e0"
        },
        "item": {
          "id": "5ee8857a-2d80-4baf-b31b-9d0dcf932374",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "18a6d4ce-d657-4925-a2c4-1341b020cec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9689d7a-cf5e-44ca-876d-67b802e3a8de",
        "cursor": {
          "ref": "fde85049-0600-461f-81f6-7b6b35b827b2",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "946fba35-946a-41a7-8182-2ec08c0bb99b"
        },
        "item": {
          "id": "b9689d7a-cf5e-44ca-876d-67b802e3a8de",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "98fad341-d417-45f1-9e3e-bb0e884d5a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfce2a57-2b10-4071-9696-a4f4fc33a2a8",
        "cursor": {
          "ref": "db58fc79-a16c-4acf-9a33-80f1a2a8caf7",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "dc5e0e6d-4acc-44a7-a627-23abd68de041"
        },
        "item": {
          "id": "dfce2a57-2b10-4071-9696-a4f4fc33a2a8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "08b2cf7b-bc82-4ef9-8683-16db5e163bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4168af-3647-4b01-b5e7-220cf3de51e9",
        "cursor": {
          "ref": "77b0e26b-da14-4471-be84-a75e47a1547e",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "49273e62-e738-4b4d-aac4-48a87f6c9a4c"
        },
        "item": {
          "id": "da4168af-3647-4b01-b5e7-220cf3de51e9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "00afbbe8-0881-415d-a97c-2736fa8de052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543e3293-963e-412a-a8eb-faababb97652",
        "cursor": {
          "ref": "f5c1a493-fa38-44f5-9bf6-3a0caf1ad415",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b4f1218d-cb2b-4bc5-9d67-5cc0fac088d9"
        },
        "item": {
          "id": "543e3293-963e-412a-a8eb-faababb97652",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e5d3970b-6422-4f02-bd42-b6a5d845c579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b15b618-60e2-488c-ab98-caaf8ced5d89",
        "cursor": {
          "ref": "334ea4a7-f52c-4860-a03e-204ebd5c74ec",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "290cfb1d-7af5-447b-8f2a-29f720c68885"
        },
        "item": {
          "id": "5b15b618-60e2-488c-ab98-caaf8ced5d89",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "428e7ce0-59a1-4893-a823-08c762d2f98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2c09eb-47e7-46aa-b23c-e6ef0783066d",
        "cursor": {
          "ref": "15b1b162-d0ca-4bbd-a5ba-be6b699b32b8",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "57a357d1-87d4-4bef-bc93-5d854567ed01"
        },
        "item": {
          "id": "de2c09eb-47e7-46aa-b23c-e6ef0783066d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f714db61-0552-44ed-a9be-5c7d4e21c52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959affd3-a609-438a-a593-b4c2d8a4bfad",
        "cursor": {
          "ref": "91c91c62-62bf-41a1-af5b-8ff51a8b11e0",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "366f104b-8035-4a77-a11c-de17bba76834"
        },
        "item": {
          "id": "959affd3-a609-438a-a593-b4c2d8a4bfad",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "de75be7d-c2a0-469c-a9c6-5fab6338f3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd4a1d1-a6ca-41ba-a503-4fd89796e002",
        "cursor": {
          "ref": "7ae6d341-d990-4366-8ea3-5727cede0d1c",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "89bc5fb3-5072-42db-985b-f58403269694"
        },
        "item": {
          "id": "2fd4a1d1-a6ca-41ba-a503-4fd89796e002",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2a351ca1-e7d9-4f94-86c7-3eaabfcc2989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c525f07d-60a5-4534-afdf-9146bfa3025b",
        "cursor": {
          "ref": "8701b3a5-ca79-405a-9eea-8dd884943e87",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "85845919-6c62-444d-9d2c-14558c412a78"
        },
        "item": {
          "id": "c525f07d-60a5-4534-afdf-9146bfa3025b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cc0da0cf-589e-4a21-a002-e99ec0b79d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f735ed00-cc3c-44ba-bba1-7b3fec05241b",
        "cursor": {
          "ref": "2e982392-77a9-473c-a98d-6584bae121ec",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e9345098-b60b-4cdc-99d1-685fb3e71269"
        },
        "item": {
          "id": "f735ed00-cc3c-44ba-bba1-7b3fec05241b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e8f74722-9449-4a2a-9ea5-f6c193ca2d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340a6682-801e-46f8-8fa3-0de811fc6ed0",
        "cursor": {
          "ref": "04eb5a97-14e5-4098-921b-0c81a42354bf",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "efb37a76-7549-484b-970a-d4cd0b12d5e7"
        },
        "item": {
          "id": "340a6682-801e-46f8-8fa3-0de811fc6ed0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dfb98887-7d8d-4d8d-be96-0d55984f7018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f6fc97-7828-4394-a8ea-545dbbfa8b92",
        "cursor": {
          "ref": "7974ae95-105f-49cb-809d-f50658abc2ed",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b27b3769-7784-46d1-acd9-b0c6fb5b8be9"
        },
        "item": {
          "id": "98f6fc97-7828-4394-a8ea-545dbbfa8b92",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "833770f4-2caa-4fa6-bcc6-6d6f7bd43968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c07b443-6186-4457-b0d6-b0203d99709a",
        "cursor": {
          "ref": "67b16530-2a91-43a9-a5a1-3ab769549b95",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c5e328e2-8f9b-4389-8e32-14a67bf1dfc2"
        },
        "item": {
          "id": "9c07b443-6186-4457-b0d6-b0203d99709a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "96222a89-54ae-4429-b60a-0c22931ffe09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af1a960-5b3a-4001-845d-c8bb38ba0cc9",
        "cursor": {
          "ref": "417014fc-814d-46d8-a892-7b059f80a144",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dad06abf-8537-48c8-bb62-88682c907a7b"
        },
        "item": {
          "id": "3af1a960-5b3a-4001-845d-c8bb38ba0cc9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "626b2896-b151-42f2-9d11-e9fd3785e536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cd9e04-299d-40e2-826e-7f960c078f79",
        "cursor": {
          "ref": "c8e716ee-927b-48b8-8fa5-2bb52813519a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2697bc97-2809-4825-9067-737b0dc6daf9"
        },
        "item": {
          "id": "e6cd9e04-299d-40e2-826e-7f960c078f79",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8b22bd7c-0750-4e1c-9f70-4a4390d3fb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84e1b29-4b92-499c-9ab8-baa3e2b3dee5",
        "cursor": {
          "ref": "432a7dbb-fe45-4984-9de3-b4dab9230930",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "714f3380-6280-4405-9fa4-e83380574b3e"
        },
        "item": {
          "id": "b84e1b29-4b92-499c-9ab8-baa3e2b3dee5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e904493e-a051-475d-a4c9-0f57242f527a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b94cfe-5950-401c-9526-f21e30b760cd",
        "cursor": {
          "ref": "503d1ca9-d4a5-4c79-9a6f-790d750df4d7",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f754c2d0-1ae3-4ae3-8701-30de0fc964f8"
        },
        "item": {
          "id": "84b94cfe-5950-401c-9526-f21e30b760cd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9b7fcbf3-9a97-4c85-a123-593e2f1e810b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b90e8e-5c18-47b4-8341-7ed9e89a4aaa",
        "cursor": {
          "ref": "5f2c73bc-166f-4b8c-bcbf-77968d1bd8d6",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "eda8745e-57d5-44c0-ba23-3f5596b8f2ca"
        },
        "item": {
          "id": "83b90e8e-5c18-47b4-8341-7ed9e89a4aaa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f76d7df6-d948-470e-ac70-3068079c2e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510ab6ef-ae44-4b27-b3b9-0d1119f810a8",
        "cursor": {
          "ref": "1534fe52-f183-4e95-bdd8-7c242d37f871",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "780255db-e4f0-4361-a525-43858ad52f77"
        },
        "item": {
          "id": "510ab6ef-ae44-4b27-b3b9-0d1119f810a8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "77e784bb-0ea4-4740-9b49-c25d5ee2859c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7476c7-4161-4c73-9666-864701302bcf",
        "cursor": {
          "ref": "64b750ae-97f9-40b3-8806-e819d9b552d5",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "80f79e60-2b50-449f-a710-03ffd9e35224"
        },
        "item": {
          "id": "ad7476c7-4161-4c73-9666-864701302bcf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "37426bf7-d27d-4d55-940e-8044c7af23f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464107a9-63a0-4d54-8ccb-be055d8af41b",
        "cursor": {
          "ref": "b2fcf928-2c11-45ef-ad61-79d5e1137c81",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7189b351-c475-492e-8bcc-01460d149d21"
        },
        "item": {
          "id": "464107a9-63a0-4d54-8ccb-be055d8af41b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3babcec2-ef35-491e-b48e-858f73da7337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac92ef69-141e-4ac3-9497-cbc19297cc8b",
        "cursor": {
          "ref": "de632add-2f42-476b-8325-eb1737c4fa71",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c10a1bc9-295d-4671-b36a-8c207dabd32f"
        },
        "item": {
          "id": "ac92ef69-141e-4ac3-9497-cbc19297cc8b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "379ce0cc-1ded-4d2f-b8d8-181bfa7edf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fac00e-c07f-4d57-8924-d9c4f0d7cb37",
        "cursor": {
          "ref": "328676f1-eaf3-41d4-a1fe-3b894d1cc162",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4a7455aa-96e7-458b-9cb5-3a619573ff8d"
        },
        "item": {
          "id": "64fac00e-c07f-4d57-8924-d9c4f0d7cb37",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "59f899d1-5f01-4da9-8077-baba7c99ce1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c423e6-6ff3-4acc-8e5e-0ac31d3249a6",
        "cursor": {
          "ref": "ed54f8ca-ac96-4a85-bb42-4defb9b86754",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "59e29c76-da58-4f4a-a31e-1d58ceaad014"
        },
        "item": {
          "id": "e4c423e6-6ff3-4acc-8e5e-0ac31d3249a6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1b2d4a56-0c07-4822-a0cb-381f8b5b7c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741c22c5-f89e-4f39-b305-191e87620b0f",
        "cursor": {
          "ref": "50761f5f-99ab-4568-b5dc-dd78b7b3e2c9",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e2c81852-fc90-4d58-8d6b-1869cf1d1ef4"
        },
        "item": {
          "id": "741c22c5-f89e-4f39-b305-191e87620b0f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8e46abd6-a59a-4280-ac3e-69ebc4aaa1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ab35af-fd3f-4684-ba63-bfae0d0cc9c1",
        "cursor": {
          "ref": "3b4db282-d620-4a23-b211-7f85bcaeb9e6",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "064b0b8f-fd81-474e-a6af-36e71a5abd37"
        },
        "item": {
          "id": "c8ab35af-fd3f-4684-ba63-bfae0d0cc9c1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "874151bb-172c-45e9-8e1f-29ea881cdadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c68b76d-91c1-4dd5-bf9a-d57fc750faf8",
        "cursor": {
          "ref": "575b115b-82a3-4d83-b55c-089eead9ea31",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "21ccc1f5-17b6-422d-823a-c5931ad21afe"
        },
        "item": {
          "id": "2c68b76d-91c1-4dd5-bf9a-d57fc750faf8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6dcb7e06-3d31-4072-ab78-e117a0e9cd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31a59ea-dca9-4819-8930-22614c3813be",
        "cursor": {
          "ref": "b470bc72-631f-4032-b124-387aba15beaf",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bb4f9789-566a-44df-9f67-388d1419f8a0"
        },
        "item": {
          "id": "f31a59ea-dca9-4819-8930-22614c3813be",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b5949da7-270a-4116-9a63-5234510e6c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3364c109-522c-4ebb-9ec9-45288231ad3f",
        "cursor": {
          "ref": "3fc5b719-6320-4c27-8517-dd49d2263af9",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cf738b91-9d2b-496f-bf2b-20e12cfc03c7"
        },
        "item": {
          "id": "3364c109-522c-4ebb-9ec9-45288231ad3f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "eb874b33-691d-4a7a-9cc2-c6d69d2ed450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38022ded-cb81-4484-9d1d-61c1fd66feb2",
        "cursor": {
          "ref": "de454106-e551-467e-9cd8-f4176da01027",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "88ba5b16-fe4c-4e01-928c-5706d6f01cc8"
        },
        "item": {
          "id": "38022ded-cb81-4484-9d1d-61c1fd66feb2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "51314d43-002f-4c4d-b2bf-2d364dd3daae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c7f079-1543-404b-bcf7-0b5704306519",
        "cursor": {
          "ref": "2737be79-e9d9-4b5c-84e8-ca9cd3f6d1e6",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2da0a973-25c7-4df3-af38-940ab8091fd0"
        },
        "item": {
          "id": "54c7f079-1543-404b-bcf7-0b5704306519",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8082826b-59bd-4169-bd8d-8fe498342ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2428b3f6-f8da-4682-8cf8-d5b83788b28f",
        "cursor": {
          "ref": "5469ef30-0403-44a3-a1ce-79eb07d32d00",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "56e319ce-3963-47d7-a7fb-ae23b39c0a83"
        },
        "item": {
          "id": "2428b3f6-f8da-4682-8cf8-d5b83788b28f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3a5c779e-c6f1-448d-b50b-1cb76729c12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555b5079-f5ee-4a75-8d26-9ebe412626c1",
        "cursor": {
          "ref": "f1da8557-c8cd-41d1-af2c-8cdc8396d057",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "76cd9f1b-0b9b-4d22-9d16-55ee1d9266ea"
        },
        "item": {
          "id": "555b5079-f5ee-4a75-8d26-9ebe412626c1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4175c0fb-badd-4269-ae01-86ae310f141d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563170d0-35c7-4f8e-965d-24e151927663",
        "cursor": {
          "ref": "0e95cba2-1dc0-47b6-a762-67e72995bc6f",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "aeb18382-16f5-48c3-a67e-913eda2a9db5"
        },
        "item": {
          "id": "563170d0-35c7-4f8e-965d-24e151927663",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9a3436c9-7015-4ca5-9cf7-84de7452d3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b0b1ba-1b46-4437-b6e8-ca71590231a7",
        "cursor": {
          "ref": "b974c0df-ab1e-4a77-91bf-57ddeecec20a",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6d8ad360-1994-4bf6-8e28-48fcb2099f1e"
        },
        "item": {
          "id": "03b0b1ba-1b46-4437-b6e8-ca71590231a7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4f43d222-d45f-45c0-a129-98e622f5a015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cbd472-b584-4e40-ae88-5cceb1744fe1",
        "cursor": {
          "ref": "d5f56ed4-a76f-454e-badf-2ddcba0fa08f",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c5c723cd-7362-4ada-917b-d12b5467fb88"
        },
        "item": {
          "id": "56cbd472-b584-4e40-ae88-5cceb1744fe1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9d209d46-4330-40f2-8c74-a13781648b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c8fb27-4233-42d8-897c-da32b694c1e7",
        "cursor": {
          "ref": "166c5531-fa3a-46d6-86b4-f93af425bd5f",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1e065c62-96dd-47f4-b0e2-1fb8bd20f1b6"
        },
        "item": {
          "id": "05c8fb27-4233-42d8-897c-da32b694c1e7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "80dec181-2567-45e4-9cd5-c2f4522b17e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849d2ef4-3a85-47b0-a7fc-783793021495",
        "cursor": {
          "ref": "71448117-1a3c-4184-b1fb-1e598d05a766",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9d74a724-efca-49b7-b2a5-a94b88bf4843"
        },
        "item": {
          "id": "849d2ef4-3a85-47b0-a7fc-783793021495",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6bfe9b2f-bf0c-441a-9cf2-fde39113ca95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add40278-c716-4d96-97c4-bb34f8df76c0",
        "cursor": {
          "ref": "22c8a7bf-afc2-4bde-96f6-d5bc9353bd2f",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "851f39ee-8ad7-45c9-91ea-30a7f3b465b9"
        },
        "item": {
          "id": "add40278-c716-4d96-97c4-bb34f8df76c0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8f5ce631-a536-4129-b8b0-83c10e3a853f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c13a763-626f-4e8a-b991-f2ab5c95975d",
        "cursor": {
          "ref": "2b61e426-dd97-4d71-96e3-ae17cda96a89",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f920ec85-a353-4bd0-8dc6-2f2b0a58fe5a"
        },
        "item": {
          "id": "6c13a763-626f-4e8a-b991-f2ab5c95975d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d862c412-dfb6-4f49-98b5-497d169af28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a5d27a-e543-4de4-bc47-5029a35e4a37",
        "cursor": {
          "ref": "1cf2bae9-580d-4b44-b26d-8ccc6e93ff2d",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "02581afe-62b7-4f28-bf63-80c0754b25f5"
        },
        "item": {
          "id": "71a5d27a-e543-4de4-bc47-5029a35e4a37",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "90458525-9349-4298-913f-cc8d9ca8d965",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9ed328-7071-4dbf-8ca7-b7548ec98914",
        "cursor": {
          "ref": "ee74820a-5fb0-4611-95f8-e579e71fc69b",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a445e226-74bb-4a76-bdf3-f3d17a7af283"
        },
        "item": {
          "id": "6b9ed328-7071-4dbf-8ca7-b7548ec98914",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "8c391f40-b667-4920-8660-89fcd056a83d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 535,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c12c17-4baf-464b-b4bd-a60defc7597e",
        "cursor": {
          "ref": "d7dd41da-9fd1-4afd-bd30-5562035dd1bb",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "01c48ca1-8082-4070-85a9-310594b63f0a"
        },
        "item": {
          "id": "17c12c17-4baf-464b-b4bd-a60defc7597e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2b03020e-f014-4f0c-b496-9b16542c15bd",
          "status": "OK",
          "code": 200,
          "responseTime": 661,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f067e367-cca5-42c6-a1e2-584af2968001",
        "cursor": {
          "ref": "05e27225-6285-4260-abdf-4219adec3427",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6087f41d-83c5-4d86-8d1b-62bb80545896"
        },
        "item": {
          "id": "f067e367-cca5-42c6-a1e2-584af2968001",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7f7963b2-228b-4bed-9dd2-a81ef76572c8",
          "status": "OK",
          "code": 200,
          "responseTime": 1744,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "318c7b33-ebf0-405c-834f-7d038181d918",
        "cursor": {
          "ref": "799e45e3-2ade-42c1-a62e-c285434da765",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a1bbc7b3-d287-4c21-a922-be7622a897da"
        },
        "item": {
          "id": "318c7b33-ebf0-405c-834f-7d038181d918",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e79e853d-6739-49fa-8d5c-86a30b756080",
          "status": "OK",
          "code": 200,
          "responseTime": 1496,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdec41b4-1d30-4d5c-8bf1-39f1f3a77780",
        "cursor": {
          "ref": "5e3d5003-913c-4a43-b9a7-43e66f85db0a",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3d071ec1-05ed-43f0-af6c-afeaab757979"
        },
        "item": {
          "id": "fdec41b4-1d30-4d5c-8bf1-39f1f3a77780",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8ee07af-72b6-412c-97be-089cac521f11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdec41b4-1d30-4d5c-8bf1-39f1f3a77780",
        "cursor": {
          "ref": "5e3d5003-913c-4a43-b9a7-43e66f85db0a",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3d071ec1-05ed-43f0-af6c-afeaab757979"
        },
        "item": {
          "id": "fdec41b4-1d30-4d5c-8bf1-39f1f3a77780",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8ee07af-72b6-412c-97be-089cac521f11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdec41b4-1d30-4d5c-8bf1-39f1f3a77780",
        "cursor": {
          "ref": "5e3d5003-913c-4a43-b9a7-43e66f85db0a",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3d071ec1-05ed-43f0-af6c-afeaab757979"
        },
        "item": {
          "id": "fdec41b4-1d30-4d5c-8bf1-39f1f3a77780",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8ee07af-72b6-412c-97be-089cac521f11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00320b0b-0303-4b55-8984-5fbd5cd21783",
        "cursor": {
          "ref": "9b636c18-00a5-4e05-aafb-504ec7b8a0d1",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "db749d6d-a6ed-433c-9b57-ecf37ca67ff4"
        },
        "item": {
          "id": "00320b0b-0303-4b55-8984-5fbd5cd21783",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "f5dc9098-5531-4e1c-aa8a-b9958f046cce",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 531,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09d0158-b1d0-4dd3-8fc4-d41452f18a7e",
        "cursor": {
          "ref": "be50dd99-4e84-47ab-9795-798c5bc5e522",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "890849e8-5dd3-4f62-88a0-3f35723e9b28"
        },
        "item": {
          "id": "c09d0158-b1d0-4dd3-8fc4-d41452f18a7e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8fc749e7-ab7e-4e7f-8986-8e71fd952c6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09d0158-b1d0-4dd3-8fc4-d41452f18a7e",
        "cursor": {
          "ref": "be50dd99-4e84-47ab-9795-798c5bc5e522",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "890849e8-5dd3-4f62-88a0-3f35723e9b28"
        },
        "item": {
          "id": "c09d0158-b1d0-4dd3-8fc4-d41452f18a7e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8fc749e7-ab7e-4e7f-8986-8e71fd952c6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0372de1-a1c9-4117-a3b9-138d0aa43f04",
        "cursor": {
          "ref": "bc5e2059-9d58-4490-87c9-448b962eceff",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7e2919a7-a394-42a4-9531-48191a2c8789"
        },
        "item": {
          "id": "a0372de1-a1c9-4117-a3b9-138d0aa43f04",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e979698f-c82c-4662-901e-b494d8b8f923",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 756,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9608fd62-c950-4d24-8d71-e51f1f689ded",
        "cursor": {
          "ref": "949613cd-8249-4867-9601-cbb654e5096c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0f6702d7-66c4-4e89-858a-0b29a9f33a5f"
        },
        "item": {
          "id": "9608fd62-c950-4d24-8d71-e51f1f689ded",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8481b830-e0b3-4780-8624-4529df89dc85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9608fd62-c950-4d24-8d71-e51f1f689ded",
        "cursor": {
          "ref": "949613cd-8249-4867-9601-cbb654e5096c",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0f6702d7-66c4-4e89-858a-0b29a9f33a5f"
        },
        "item": {
          "id": "9608fd62-c950-4d24-8d71-e51f1f689ded",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8481b830-e0b3-4780-8624-4529df89dc85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b45e64-5757-4fc2-bc20-d087191696d5",
        "cursor": {
          "ref": "1d0a3633-e6ff-4f01-b1f5-d9af97b3665f",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ab5fab8f-17cf-4862-853a-b94ec850abe0"
        },
        "item": {
          "id": "23b45e64-5757-4fc2-bc20-d087191696d5",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "0c1edb49-736f-4bfd-a818-26f99b58a56f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 759,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}