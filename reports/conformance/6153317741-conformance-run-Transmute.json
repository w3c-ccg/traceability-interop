{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "90058d3f-cc7e-41c9-a09b-f09304d62613",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3d1c1abe-ad73-472c-bdc3-f45a7bdc99ff",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b8c68c6-d0c9-4e92-a299-18d95c412390",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8d15f49c-f0fb-4f47-a92b-aded0e382c6f"
                }
              }
            ]
          },
          {
            "id": "3fe22df5-5c74-4cbf-a438-fabe7bc6f5c6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7dce9bb-d78a-4022-8894-5dc56066385e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2727a92d-1340-4f01-89a1-3febdfb9bc93"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d4f17d99-f484-4746-a983-57d3b352b695",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8f55db2e-8fd9-48f1-bd0c-7ea7bdb297ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37f24873-e0d6-4764-ab91-66067d9f4c30",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e0f2aea-d12a-4c66-a98e-03bfc0014ea7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c638f340-6d99-4e3c-9a85-f3e468c9f0f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d79344e9-4f92-472b-bdee-0158de07ae67",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa30fe55-7b13-4b8c-8439-4b02eeb6829e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d61f00ec-c44a-4117-817b-f4a38272ffa0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "834acfe0-ad6e-494b-9f5b-2e0fe9adc423"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ee9df99-6f70-4e51-9c9a-18d6a67c4061",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "17a106c5-7d97-4735-a769-a26505ecc16d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b4434b6-a7b5-4cd7-a91e-65bfefe0951c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea43b420-3b99-48a7-98b3-16e38b2d0dda"
            }
          }
        ]
      },
      {
        "id": "ba71e0b8-56f3-4a2d-9ac5-8fb4b858d707",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "433dfa9a-aafd-4863-852d-becba36202e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38c5bca7-af84-4a4f-a8e6-360fb1e658a7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a53d83b9-4665-481e-b40d-80b074326286",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d53f81-de44-434a-a25a-ef4aa4ac9403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05867952-281b-467a-bdce-86b3d475f943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c86c14-a278-4858-a127-9faad63272c7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f103714-e344-452b-b625-c5f0cfcc29ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3684167e-58db-4f75-8c62-30b0c8d428fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db942a8-c50a-454d-9384-13d9cf055cb7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e65ce8-2de6-4062-83dd-ecda13409081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04fe6016-b5e2-4ac8-94fe-b278ae3a606d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d5f4b3b-dd45-4588-b245-b0fd2400725b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "953179ee-2590-47e9-a983-c22ca8d85001",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8854e976-c485-4a42-8fdd-475b26a38486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9e4397f-6864-4ac5-b225-68f40887121d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ef3d46-bad2-4c73-8877-dd7e1035f057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592e062f-ebe7-4e26-9c75-94abc7b40ab4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "965325bb-0f7a-4494-bbea-0be285810740",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3064fcd-b1cb-451e-9a34-c2d96358cd86",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1629d594-8fe2-4785-91a0-89fd7d433535",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d30798c5-908b-4284-baae-4fe86b59117e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2113dc3d-97c6-4a9d-9262-0d9c365160f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e4aa2b0e-6163-4af4-a4bf-c5c39085b747"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fca2adb-fe8e-4a45-8e6d-64c221bb96ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a1bd5f6-f21d-4fe5-a3c7-8a1551bc5f6a"
            }
          }
        ]
      },
      {
        "id": "df88b6b3-61e7-4a92-8f1a-e506c57d07a1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d410d54c-dcce-4729-9a8a-0c91ebfc6f65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9aaa0e3e-44b8-47ff-a327-c5b9b2b991d5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c9e2d12f-b548-4e95-ac4a-f5c44d35e866",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e204e23e-22af-4848-bc83-be8ca8371663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20fb436-9b8d-49af-ac50-80a7b8274b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0148bd9-2c9d-43d2-8dac-bce86826f931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dba27032-36d9-44a4-a662-f3db8ff398d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55210f7b-95dc-4c79-8021-ba4ba70f404c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae43d11-c914-4f88-82b9-c417a6abb934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44961056-1657-44f6-b486-0a6bea77c72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c87225b-7780-4385-a3bc-2b30d9fb6e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d557ad0-84e8-400b-af98-393e42546a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07d9e84-ff77-4487-b2b8-c1d0107433d5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3104cd33-b19f-4455-9d4f-27d38ab720c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74026c2c-f587-4952-833e-c618c0586097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1c98eb-9458-4169-9a86-e6c598b914c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51601e63-5fea-4e55-b876-2dd364c3f2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12815930-02b8-487d-86b5-870eea9fdb1a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c34b63-7c5f-49dd-857a-ed724f51eff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba76b8e4-1cc3-49a4-8c0c-98c1ce041d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87a2498-15f0-4685-864a-ea95a24a1fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cdf6dd4-0fd3-45af-9df5-236aa61b8b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528ffb10-6a95-4778-91e0-b3cec2c50399",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1478d08a-1322-4c0f-b766-ca5cfc811552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf21c6e-b7b2-44e8-8978-634ffe8fdb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c8c0cc-96b6-4bd6-ae58-898028a71a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d69eded8-df84-45b5-a03f-1ed52b7626c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7c0d83-8cc2-4ce9-866c-085e8ddd1788",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90778bda-b537-46f6-8182-ad088cabb72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094c403d-fb9f-4dbf-a26d-b73b3d6a646a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49c0ce4-925b-4608-8e27-e971cfec1fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18610830-18ab-4c5e-b96c-d1a3882685c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e032960e-c924-4d2e-8cee-3913e7e676ed",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80023f59-90d8-42e2-a9c5-afe7f2af24b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816947c1-3631-405d-9023-ef2394e66392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961e52d5-2e38-46de-97ab-56be4c814799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f59ee8ea-fb31-41c1-bec1-ecbbd5428efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c563ab-2967-48d0-9813-c278b96846b7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b80b66e-0b00-4642-9bea-acb83d28f196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d614a2-4a8c-4af1-9cab-2e602fb46da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca73c51-1717-4f13-89da-72e2e324f419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba0abcbd-3420-4dc0-8661-34b81fc8c904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5d2055-6345-4ae1-a9a0-90a3c19a5b3a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eced370d-bdff-4c5d-a8c8-f9e79daecf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df36834d-4317-49d3-92c9-e94e3c235d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f564c67-c215-4056-9b7e-f34c0f05c721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "596a3d82-5c27-4ca4-961c-5c18d20765d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160e8f77-1072-4fd6-9fc8-95aaa41194ea",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9602093c-697c-40e2-99ec-c97a044f9030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51bff87-65b2-48ee-a68f-e41277b67eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7d2c50-220f-438d-9ccf-d3bc075ad3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4262afe5-0543-4366-a750-bcc9706dc187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df485113-ff83-4a98-8540-43065bdfddac",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6984d1-983a-41f2-90cf-192b9273712a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a176ea26-fbad-49ba-bdbe-a041889cffd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7507b186-3cde-4a1b-b7d5-c68c92bfa427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4532e454-ec23-4ad0-9ab8-12697dcb58f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e835c9-cf70-47bb-8250-2210eebb6060",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4332cd7c-9460-4c0a-b0fb-1588b0a0fbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17442064-59b4-4e2c-8af5-588b0fc662fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cc607f-cf81-48e0-9f6a-ce24ff6bb8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67e43b6c-a3c8-42ba-be23-c09cc4a3d885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e5e21e-565b-431b-ac37-63f4ddce9796",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932f53dc-5a1f-4328-9614-b7eb213592d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634341c9-26d0-4964-ace1-4aa2fc4809d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf30cfff-d414-4f82-93ab-44c67bf8b9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "801a95ce-896b-411e-bdec-091424605bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c535c4ae-b0f1-4ee9-a865-2a5364e339b2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e8a06b-9ad7-47dc-b580-2906ce281ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8b80f9-f08a-4998-9f2b-c151a3b726f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303d1616-18e7-4d5c-b002-01848608420b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddd03ced-5e29-4f14-93df-40088e047cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ab5800-0e20-43aa-a98f-94c4d8b771bf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e2ea84-28c9-4c9d-b2d6-1712fcf4c43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284c6cc6-19e7-4bd3-a325-42fce6e48410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e40d7b6-4d46-4d73-8350-45de5818fcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d08442d8-a46c-423b-b434-404628b4a5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbf9516-d8a6-425c-91e6-f794a8a10c25",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a073d1-e688-494c-ae68-adf715e56408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cbce83-0754-413d-a872-eb972277c024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39b733f-441a-4e2a-b35d-7a0fd8317297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69dd0634-d469-4769-a97d-2f490bdf9c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8f2611-6706-451d-bdce-a972faa6b5da",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89edcf1-bf79-430c-9438-b021a69eba8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6e6306-ee74-495b-bbbf-d57d031c0667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053b4d0b-f168-4d6a-bf0b-53164f746ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b52b03eb-f929-43d0-947c-f4f50eaedc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5206a0-3282-4ab3-b68a-b948924ada76",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693369ee-edad-4f40-a185-8eada576bfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635e7380-5736-4b41-bbb9-6d346cb66d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e062c2f-7dcb-4fab-ab1e-fd35d88944a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f67ff1-ce40-4b71-8a2f-23410193c848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236e2256-ec47-48f1-966b-a2853dadf7d1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ba3a8e-5a62-4454-a975-de2816c680d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3dab20f-e5b9-4474-8427-2126362d30bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84521291-d935-432b-b453-ea419c89cc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac237a96-7955-490d-979d-e0873b469f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb16126b-38bf-4098-8dc0-b7edb6eba532",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba85149-6cbc-4c41-8340-8a6b7a03cb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f93b55-c2dc-47f4-b7de-0545a2f67fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbf8f3b-1a8d-40e2-b16d-b5718f9ae887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e43c8943-ff09-48ee-83eb-9d4394d26913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada1d332-5a1b-4887-854b-9e0ba644a8c0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4221c0-e7bb-46ad-b50a-48cd80e6d994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38800a68-3346-42fa-86ec-8584876b253b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82983078-e54a-4cdf-ae02-881d585f56f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6929070a-f1e5-4c31-bd38-6fac2e930b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99e5119-97e7-444c-8b55-1c30b8fd63b1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29afbc1e-7e30-49e0-a58d-3c1b14526703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d39a953-7c92-48d5-a17d-550be6be686e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9b482a-d57c-49b9-836c-ba02ed110e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8fea73-90a3-4adc-a9b0-9cfe64feadc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8b8b84-2608-4ce4-a3ea-d61007250768",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30ce654-4f94-439a-80eb-dabc2d24c71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65387820-5425-4b0c-84e3-82fa7ce6e5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45993998-8f66-4b00-844a-236e53fb3b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "56013984-48ab-4ecf-bae4-17648aee267a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95633d2c-6973-4ddb-ab5d-9e35740f8685",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80e6a53-94b5-4a98-b52d-ec8de402b522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a042b3e-7d14-4929-ad16-e6b44989b189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29792d42-627b-48e6-9e63-6ba0f8a73c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "61ade3cd-5884-453b-bb4e-9939bf1a19e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c79273-f8e5-4a78-8a5f-c1e7495c5e16",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785e6cd3-e155-485d-ae7d-99ac677c6389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66cd29b-5962-4a73-a2ff-f8670a659d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27904670-b802-4acb-88bb-7554c39083e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8651406-38ec-444d-a65d-6e549597ed1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70556e36-904c-49c3-b454-7530e89105b6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c6c71f-dfaf-484d-bf86-b7614653c71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14c3cfe-f3d8-4624-9e02-4101e5621ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3028edb7-80bc-4768-abde-521f314cb3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "207af8c0-3ddc-4e22-94f4-7ba47ab94c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bd1335-e729-4ac9-af62-23a28a8cbc69",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b08bea9-8451-42cb-ba6a-521b28094b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5e0f3b-a454-445c-9e71-2e52ed9c5dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b545351a-b01c-4a47-b198-9c6548522778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "544eb72a-ffde-44e1-8281-9612b9f6263e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fc8aeb-8fcd-4036-8246-df24bcb83597",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6a6729-222e-4df6-a977-db3aecdbe9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9e1162-34b4-4363-9da6-e4343960aa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800b8c58-38f7-4738-b186-f3b8b98382cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4b8ec4-de15-45fe-b8bb-ae425f7a5565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72bf7d6-4ccf-4d92-ac96-9b400c9b177f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64df1c3c-4adb-47f2-bd8c-5e1e93abb468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0cfa227-51ae-4330-9a89-22bd054d5cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1360cfee-06d9-424f-9e61-7afb70f95261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd88a574-13a4-4fb9-93a7-348a57362850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a626862-6423-48a4-b1e1-f1602897407d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b9d2d7-9406-4e1d-bda8-291aa6c4e9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465cf39e-af8f-441a-80ed-02476d3f383d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817982a1-d0fb-4dee-a69f-fe40376d8bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "20ebe9db-de3b-4889-a222-39d80301f6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9986a271-a6c8-4bcd-9c70-d121fbce8c29",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963073ce-38ee-45d1-858f-0d06cb8bf3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9afe4949-df27-43e6-b259-a7bb21138339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3495f4-6540-4291-ac73-4ced04e669f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "711bbfe8-f5d5-4a09-83c4-5f2e8f9a0532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6318dce4-124b-4f35-b24d-aa4c34e969de",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f38e6d-1d37-4424-9edf-60e1cc32b037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173d81c4-990c-4da8-a34a-d9f15f2ea9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0fd3c3-a592-4bfa-acef-c8689f98174c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55e7a79f-290f-4a5f-ba73-8a89fa27bfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90105b1-1834-4475-b07f-0eb84baa5946",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9004f111-ed30-4e5f-8a9b-b8a8ee636cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5b1b15-f540-4c9d-bd86-7eb23b422a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2758ee7c-8dcc-4b21-9bf5-96f4edc49959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d33ace20-ecb5-41e0-bf65-02f10da6a2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6eb500-f9f6-40b7-93c8-6a8c8df5e979",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa61350b-85ec-4bed-ab81-fbf0cc01da28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acab03a-0015-4555-bbbf-290c3fd2c1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432dcc9d-8ce7-4930-8e47-ec6a167b8ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57c3e373-50e0-457a-a15b-03eb8eae16d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cacfb0-13fa-4366-a2f7-fc6958ecba12",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d20f1db-2c7a-4dda-af80-0dcca2828a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb6f436-378b-4c83-afea-91bbfb14cc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903e5c92-0731-4429-83fe-a0adc480d7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5243736b-33ab-44c5-b6ab-6ec599b0472f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2acf90d-d124-4449-b379-465a01574489",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19ec58e-f27c-4f52-bfd0-ca2369ddff5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e960d02c-31df-4465-abf7-7afc9e0566ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6ed369-63ac-4237-b9e3-983f4de05058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89932e4f-6d45-47d2-ab54-c4db9bb956a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342e7cce-6c7d-4237-b9a6-da704ca13617",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4418c5cf-22ff-4e39-8605-7a329b862238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7142fbcd-1276-41ad-bea7-01c0bc3cb5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e15a44-cacd-45b6-ae90-1f5f2d0e4924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7aab732-f3ce-4e15-ba46-e525c058e6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181cf00c-f34c-4925-a341-805a60978228",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53d5478-7b4a-4807-8771-e25228058ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a798911-dd4c-48e0-847a-bb0933d5d500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a512801-d4ae-48ae-b3cf-1f08c3b06df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae71efa0-ab19-46b8-83a9-f76f1853bb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfddc1b-3533-496b-a1bd-32646a4e4e2f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c790291-124f-49bf-8d2a-da377874f04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935a1423-66a9-4369-bf93-5af717fe9a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff54aaff-9de9-4b1a-8fa1-ada6a207da26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d1de0a-5bee-422b-978d-de299e413ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38c96fe-088b-4fd8-92d8-c8d761217d0b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e4a28f-8d3d-4c4e-80a6-d00e4992a675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f49100-48fa-4ebb-bd4f-302b87365897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af8eab2-51e5-41c1-b029-116d29065635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f6f349-e2c8-46f8-a37a-225faaee6923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad516459-571b-4c85-83ad-1cf9e4167e9f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c60d02-b51d-43ec-8321-c90e8c19d4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5487719a-8a56-41f7-988e-73e0aae41ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5c0f08-da48-4698-87fb-c42c6cbe39c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "36cf7ead-b690-47e9-be25-96b697dba67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6f5da1-fc76-47ce-ba42-2a947b0d4ae6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ff1b05-515a-47da-9f65-6a644e449105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05d6138-1632-472c-a274-ad188bd44a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4982284f-4e01-46db-823b-d4131dbe136b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0233a127-0b1e-4ef6-8c0d-cfe11ef95f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573da98d-2fe1-4d55-9986-3eb40658cdbc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe845599-5c33-4090-92a9-036ffde761d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd75564-a404-4cbd-8ab4-efb7049a2ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9550f10-311f-405c-98f8-31726de58e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea73ae28-d304-4035-88e0-7d6dbf2a58c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b64a522-8f6d-4093-8032-2de8e086b873",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0148d8f1-deb5-4ef2-b65d-73810c76042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be646d40-bede-4d2e-a881-048e90bed9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b1de82-a753-45a3-af5e-464c885313a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dadecb5a-2a8b-48af-bec2-fdf84f37a2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a97b5d-012b-42db-85da-9a484d183838",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5db996d-a428-4370-9e76-c8f735b8e1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336eabb3-1b7e-45b4-8ae4-40834a3948b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98601697-6ced-45c0-9c63-277752ae7972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f42403b0-d256-4187-a83a-6f1ee90cba79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a2ed87-ea52-4d1a-af1c-a51c1d7421c5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234bea18-dcd8-4820-b4e0-68cb7898fc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c13aecb-fa0f-4704-8fda-8bd12346046e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298b2364-27ba-42b3-a1d6-1ed6b7ee5fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95a80654-3ad0-4309-8ce4-1e211a17546b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2286bd3a-99a9-423c-8c85-ba71e721b716",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6adacfd-155f-45c5-9d0e-e483ce508b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fac236-728a-43df-b15e-b9bf779b9eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e979f22f-32ec-44ef-b973-34791f4f15ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad3502b-1326-4ba7-8205-5422bbe31634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac70c1f-dbc1-4680-a640-0f9333ec8edb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd8c8a4-fa98-4a37-b875-dff09adda99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e116188d-b841-4637-bd69-dc97a48064c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e4eac8-8941-4494-9546-bdd92e08e75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c87c5626-2b08-4e5f-afb3-16653f09f671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7077f4a9-fe1c-4047-b1e7-2d213fb431e1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fb6463-3a43-4db7-a256-235ac848dc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cc4576-a1c6-47a5-af8d-d2e8f5748df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c328aaf-f8a7-49c4-95cd-add003e52e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ba09aa-65e5-4434-8576-a2e67622ff68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f98219-13b7-4164-a337-6f1e71206330",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bc48e7-3d75-4834-b422-e73d479d3932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ccd22e-5705-463d-968d-e76b72e1337c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e780aa-d1ad-474e-959b-df66fba589e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e67ed51-5ed6-4a5d-bf86-325ef9cd6ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1045cf00-23aa-48f8-85c4-47b725010859",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6577381-fff5-4c5f-8f03-7ad45575c37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5c1389-85b2-4973-9fbb-5e430f2ce177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5672d709-775d-49b4-9667-23b9a0ec22e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca79ab7-1fa6-4002-823e-af9f7b607e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8be7a37-e049-491a-8faf-0d9434aac34f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45279155-ed89-429e-88a4-dcdb7221afe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08276ce6-3570-4497-91c8-0a800bc028ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25093ded-aa0f-4b1c-a26b-a8111634cf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a202e482-fc20-4820-a152-e563c38c9ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbc7b01-91bc-4085-84be-1e486f32d6f3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623865e6-cee0-47ee-9cfe-c005c1bd8910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b2616c-4285-4352-ba9b-1674ad7536ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3e8f92-4b91-4bae-a787-60117ca88b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb58183e-ab7f-48a1-85d4-878b105781c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836b5542-a2c4-4f91-abd6-58483676ef4a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8237908b-df54-4874-b75d-1d8301147ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad38579-d214-41d3-9df5-8178f901f88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603502a1-1a63-4a5b-8057-e0077d06bb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6c7db0-3879-4543-be7d-5ee04b35899b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c82da3-265a-49c3-8be2-3e596688d6d5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de111e47-648f-4408-8b36-a2334827d39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5704dd60-b1b7-44e1-bab3-d3038c4ffced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0f63f8-4ff3-430c-a7d6-7d45d6a2cb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "129cd5e8-ecc4-4f1b-934b-358bd51a7d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2913e60b-b2ba-4e85-9db7-cfda810e79fb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91a6971-412f-43aa-b6aa-048f93419446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f92f352-829a-47cf-8bb2-cbcba930cb7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4f83e4-e723-4598-96fc-c96e4d3fc5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a296c01a-bfb9-49ca-996d-0090b8c6fa53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf978bf-d6be-4b45-aaf6-4f5730c42496",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e67342-fa12-4957-b73e-8143a05b9a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c444cff3-7b2f-4849-982f-11f25e3fbc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fd3834-fd78-41c4-89a1-b93483ec0f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a94b0e46-bb98-4e2f-a527-4437f21b5d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd27ee6e-371e-4e3e-b97c-fca41989d9a4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f09242-320c-46de-9038-eba7fd8e0a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8308c845-cba7-4f45-966c-042cdff7de9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee0e733-f96b-4a1d-951b-7cfcc17b353a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8dc606-f44b-411b-a3d5-140ea2862cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efc4140-b6d6-405e-8fa6-660a4ac18b70",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66df3264-0a14-47d5-96d5-89c8e2849a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e393082-466e-4ff9-acc8-f5abc25f4504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc332c36-4790-4989-b2df-056470a2cecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea28dde9-6088-4230-87ec-e7e21c3d1bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b9dfc3-eae0-4cdd-ab81-db0e5eed9b65",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35761fb6-7720-4c00-b598-0d6e56617c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5feb8ee0-eec9-4ec1-9c14-4bc05f030ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56656dd8-6b26-484e-b16e-98dde45be5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b361ef-b374-4529-9a97-f97328dde0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87cb33a3-21e8-4b91-b727-44e3ab091571",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8d5bdc-4e31-4f2b-b884-b9a36553ec2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90013e64-916b-4b6b-be16-465bfc288d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3962f131-5a3f-41ea-86ce-2837ff9fce88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "59151ed4-b84e-41f5-9ffd-bc9f7f86c13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7cfd88-93d5-4a2d-a832-6f90c90da9d0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05afa0d2-5dc6-47d9-946a-d17b21886e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe04e80-88f9-4f17-b9b9-59519cc812e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170d68fb-8321-4b10-886f-8855821b8dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfaab15f-4807-4a92-8633-0fd21284f887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77a45b3-fd1c-427b-ab1e-da0e4f22e2db",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d334236-56ac-4c81-a3d0-5144d2b09ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e84a34-1472-4a03-8739-a67df30811b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0383f7f9-7d0b-4769-b921-361a031887cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca596cb-3089-4c75-9267-d70e987c67f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a18ddd-f646-419b-aa4e-f073989a1e3c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b1e82a-e959-442f-a97b-496499744a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228d589f-b030-4e5c-83bd-0dedfc2d6fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1869d69c-04e6-4e7e-b9da-c420ee5e27d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c733e86-5e79-4b99-8a7c-3d4b68b47777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de0c3b1-215d-4f16-b798-a96032da4a31",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b0f3f9-a54c-49b2-8cde-62d39aff5bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee755e4-3b38-4685-92b7-1acd0948b72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341d31b3-4fb3-4164-98dc-30a43f5ad719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cb4ccb-850b-4f81-984e-3f592b041b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42325366-3537-4d32-a8b8-95c42f40835b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85eeeab9-ac6c-400f-8082-91c486a8d278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2652b8c-85b5-489a-a662-ff26029884a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776303dd-236c-40eb-b340-109152a9586c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a9395b-4194-4187-9253-f50d399a8b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6b32db-3db0-4ce6-9182-a00f57d4c482",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77abe97-2c00-45f6-bc11-928e2eb018b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda869f0-3b1d-4f4f-a4fc-d3792f7556fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb8fff2-9a33-4ae3-a96d-7356ae60b229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4117d2eb-4358-49f6-b943-5c1b89786b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de830781-18c1-4edc-8400-795306c7e302",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bb0a87-9bc9-4026-b596-479fab6e7a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285858ed-f048-4e56-896b-2dae2659811c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f244e7-dc83-457d-9176-0c9b3e24177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "085d0b49-dc88-4105-b2fc-b59cd787911e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb60dab-d03e-46cb-b3f4-8abbbc03debf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f4f3dd-d3c9-4ec3-b438-7340b95511ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6109033c-f0d8-4d69-bbf9-d7e42354ce7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2f0aa1-fd55-4d53-99b1-ef5f0336b2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7190c8d-d086-4985-aa2b-e725b2b0c54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439b912e-9bc7-4dc7-9535-416a98b9282f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28955335-28d4-4321-8cb7-df38733f68dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb681a7-0973-4320-baeb-88a67500ffbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f0981f-ca78-4849-b4df-40e8c9365c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "604d689e-a6ac-49e9-a0fd-d1d9c2cc75f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526f317e-2d1d-4d45-bcf9-7097e51e9f00",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5738ec-2051-40d3-8e53-67f31b851771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09b1e7f-4916-496f-ae54-6fa55e41d35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f4557f-3366-4620-b3d6-b87cc377fe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "173b9827-c5f2-4d65-a58f-2c63898a1548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002c7879-0aeb-40b0-8e17-f0f1154c8acd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626e3955-19bb-478b-b8d7-3463aa74f5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1ac757-1211-420b-8a68-c87a5923a0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e562062e-be8f-4fe5-a7d4-c660a2e9c359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2ef461-9425-42a9-a3de-2b10cac48d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211f08b7-ec5d-48f0-8c83-3fa29469663a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e4332c-8714-4881-8ffd-4f189fd34ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931f0696-71b3-40bf-a57e-1d7ed4aabae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09dd1c4-989b-4c70-9399-6dc94d949f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22107032-7f0f-444d-91e8-bf83f1124957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2469ec3-0f06-4bfc-b9f5-3d8856cd07be",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7200b16-6101-45b0-b27d-56dfa271bb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2aa2ba2-931c-4e50-8468-5c9f6f32069b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2e0105-bcb3-4907-baa1-ef03e20d391d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c43965d-8475-44f6-9b46-11e7c1dcaf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87c2549-39ff-4079-a34d-e30b7f7f7eb6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ef7fd1-ad6b-465a-a3b4-f67e8f600fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69be535-f36f-433e-a0b9-ce56ea425d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c3c900-e235-42e8-8eed-3338f06a6757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1dae00-a6fd-4b41-889e-50f5de765ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5239974-7736-4111-8955-ce39bf8baa6a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4309360d-bba2-4cd8-9cca-4471beb46df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08325ec1-6f48-4bc3-9513-78c0ead492f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d2c3ed-44db-407d-971d-0091fb24d678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7e628e-4959-458e-8195-dc173a5e6b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7b5d4d-b8d4-48e7-9fed-8c71a51b0e04",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42595431-43d3-4e59-a86c-885d5187b2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c9bbdc-c63e-47cf-99da-badfe80329d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e4a231-e54a-4a33-857e-2d1c9751655d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bdb5dc-db86-4a51-a06f-608e1d4505e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a53f575-97ab-4442-bf70-c81c0cfd62b3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae942f45-2b50-419f-894e-586c359eb17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6b480e-e513-4473-a66f-e2b348796ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afab2d62-4255-4c37-975a-15072e007f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "534eeaa2-64a9-41cc-b2e7-c28aca5ffcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad98c574-1751-4709-b7a9-3fa4a3b3e868",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c472cf5a-a8a5-474d-ace4-565fc321a8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3ffec4-ca87-4fa1-a342-875348f4535f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23f2383-4c44-4468-9d60-1fa32edbe25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfbec2f-19cc-4cac-816e-ec29f31af80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e0ff22-fb5b-4e34-8778-45e39842b6e6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7880a846-2983-40a8-afbe-1107af05d645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5de2152-d7a4-4b89-910f-e1182bdab4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e973bc2-6e6b-4459-90c7-92266b1e1eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75f9044c-6218-4618-aa58-8026001bc4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9172c1-bec4-4930-9223-e07a2cbb3166",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26ffc55-753c-4dcc-8895-935d7a5c9986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926b2258-46db-4538-a083-eee53085c00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e324ed8-b446-4fc6-ad0a-3f3d6df816a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d467aed1-179e-4f51-9483-7a7fe5a2d583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cea8fe-4b57-4cbb-b90c-eb3a69666497",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6703cf6e-4f68-4c75-8e5e-f33aaa6fb906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277ab1aa-1b4f-487f-bed0-f563d2793ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55093d6f-fca3-43f9-8da7-ea9de3da30b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "333bb864-c488-4117-a0c2-297fbd9ed89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccccc0f2-0ff1-4db0-b8bf-455315d0d417",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40417e9c-5fe4-498a-93d9-f93540cf045c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fc7a45-c9f1-430d-89bc-66235a1be9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534dd29d-134e-491f-8a96-8102b6b4a56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a55e999-1556-4400-be14-8fe34d6e5438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1918684-5dcc-47ca-97dd-1d828f465ba6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7134329d-e709-40e8-937e-3289b54bcdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75645530-869b-4510-ae97-2801961af3f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c434fe1-ddb3-4331-b77f-5bf6b614b14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98018c31-b639-40c0-b7c2-eb58dfcdf688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bb269b-a162-4170-ab12-ac6b8a3d4f83",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f320442-9cbf-48e7-8c30-8fa1469be22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099913e9-7c57-4474-96df-0b1b8d4a829e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de4a499-e5d4-4505-89d0-d230833eb18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "290aa4d1-03dc-418c-8f14-0512680625db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13c26da-fc49-493f-bd82-3c7609eba348",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea46beb-9fc7-437b-9096-2a6aa4627f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fcc6e6-4b18-4142-bf44-744b0c11c180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea72a6f1-d114-47fb-b1c6-954767325cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "244af775-7a5b-4d8f-96e4-05b6c49bb174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2d0537-d2e7-4a80-ae34-f6f1f9e65930",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdd8cf1-1d30-4813-92d6-e20122fc3af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b50c53c-161a-40f3-830d-c3d31766b4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba9e870-b195-44b5-a5a0-ebdd059853b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e89772-0498-44a5-97f1-c0440ef14e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2772ce33-b4e0-4cc1-8f84-13fbd640c7b5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9c91ac-429b-41ff-892d-3a440308de38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91dcb9e-194f-42ab-8c91-f3b1c031e4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee9f320-405a-4a12-8866-c7a8ea7a2b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa740391-bb7f-410f-96d3-2dae9a5eb647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f8b8c3-36d7-44e3-807a-7a0eade402be",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b03fa8-a8fa-4e2d-be5e-a73d58f8019d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2273e24-801b-40d2-8184-7790e15cc624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12187676-de0c-443d-8b36-ec6147f09ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "012396ff-56bc-4771-a50c-985578d46222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8b7545-b832-46fb-a4c7-421caa649803",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae8420b-cdc9-45b0-9e72-265649ee9825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3142c710-89bc-4c04-bc63-3d2ca0161993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e569d69b-5c1a-45a1-a508-d0b6e92a34ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf4fedb-bf0f-49ac-9af5-ac04031133d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276a034a-d97f-419a-bfdf-57f4515fabe3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dac337-96af-45a2-a23c-0d75b336ab04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8ce201-7dbc-4daa-b19b-af6594d0ca28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f5490e-a3b1-45d9-bc0c-d896f4313f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfd4741-006b-4b16-87f7-5ac1f100f5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4f4f52-1475-4118-89a0-75477f30e06b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2712e3cd-4f5c-4973-909f-c43fbfe82e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d17cf94d-ed81-45be-a841-239a2855db79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462a2cfa-8fbf-4f1c-9cdc-5c7b3f2e6ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b82de9c3-c822-4f04-81cb-5e7a6e24bd09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae8fb843-6a2b-4d57-a52a-6817095ed9fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4538abc-327b-44a2-aad8-545ee26fa16d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c000ad85-2d92-4658-a770-1a754763b390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43cf0a66-e1de-44c3-9360-7fdec3eed1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f492bc-897c-4e83-a603-ac16b7ad6e3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "772a8ca6-291d-4318-91c6-20d3e87d22dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f525dfec-8ad5-4ffd-b7f9-409e7a20f4ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e106cd3f-4384-4b2b-a05c-7a84cbb0cb0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ab894e9-9086-42bd-821b-b2030ad29cb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d34136a-265e-4a18-bae3-49e1a2e5075f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47da853c-dd1b-460a-9377-df81e357c3f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98fee1bf-e850-4ce4-be28-61db33e8c718"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e93850aa-5704-444c-aca1-0af365abe8a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64216aaa-bca7-46d3-b1e2-2a56f7d1c1a8"
                }
              }
            ]
          },
          {
            "id": "5082aca9-683d-4f87-bf17-4f0ded4a1ad6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10b6a4f1-8d18-4726-b354-38b1332a96f2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64b79cf6-95c8-487c-bc5b-d7a3f895feba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bfb7601a-0841-4407-b28c-5daa6bf3c744"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8f00bad-b871-4d77-867a-87f917169b5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ffcbb4d-8b80-443e-be37-6892d9b29fde"
                    }
                  }
                ]
              },
              {
                "id": "be3391bf-f549-4d1f-8b79-40806d57b4fc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed400cd9-ca7d-4d9e-afa9-def1bbbb4421",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "097aac06-7114-435e-a0c3-ba9c426298ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d947925e-0f40-40d5-88e2-4eb39b4a28ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2fa82d6a-1f02-4bc3-a935-57cfe4832dff"
                    }
                  }
                ]
              },
              {
                "id": "607c643b-9b0a-4b7d-bd3d-73eabceb0966",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37502f7d-37ff-489f-97c1-9337c4d33be3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e02b55dd-7781-4630-86b3-4bebe0d1c876"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "865be828-b1a5-4bc9-9de8-557df8ebfa73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0202fb8a-ac19-4fb1-adec-94b3c1ae621b"
                    }
                  }
                ]
              },
              {
                "id": "52a3c1fe-9229-4e5a-9de7-29215acc0fb5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba9205ff-d653-4a8c-9e85-3117aee54bb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac00ba2f-1466-48b6-a8cb-c4662020e904"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a67bc53-fde2-405c-b9f4-908b0c5fccb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "563a59b2-7365-432d-87ed-7dd8d6da5733"
                    }
                  }
                ]
              },
              {
                "id": "3ef258a7-212b-453a-96f5-2f1d6cedecf3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4102e24-1b89-4d67-b21c-29b40c0f883b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49616cf0-0162-4dcf-9a17-3d90b240a226"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88b6dff1-3df8-4012-b6cc-6b5c2b99f3e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "50ccce8e-126a-4df7-9522-e1ea484f2429"
                    }
                  }
                ]
              },
              {
                "id": "4eaafeba-9d03-4e4a-a174-e985d3e4032e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2753a187-5bb3-4a44-a691-361528a1325e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7d93e3a-ddfe-4eed-8d7c-bb75e1d8f70b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1ebd022-5aa1-4348-9478-96ac87ec0e00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "341022d0-fadd-43cf-877f-645a09613904"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1aa63107-718a-4657-82ff-120c4837b99e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "26a474ce-14dc-4d47-88bc-91f3753baeb5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b0107a87-74f2-4e07-9d8a-2670da44c942",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b1d3081-4016-4282-bbf5-1544085d6ae1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09de043e-b93e-4e17-a208-9d27a08e7a8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3385fe41-7593-4003-acf6-9adafc6cbe9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2472f2f-ac4e-4db0-99d9-882e7e41339e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a7b9aa8-78fe-41a0-9948-1394e0a1340f"
            }
          }
        ]
      },
      {
        "id": "229441b8-979e-45a2-8bbb-d0dc8d3efe5b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d4383b15-eee1-4a91-8beb-0e91b3d94cf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82865802-ecb2-42b0-9291-fced5c6a6f0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "027212ac-9e25-454a-a1a9-ec2dfe1bbdcd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6867648e-f58b-467a-b294-5389ec95787b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044b4a2a-1440-4c91-b9af-4a5f323f52df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e6ef9f-6dab-4aba-b7bf-5405ff51201e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8079861b-3a9f-46e1-911f-e6151018f1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d67dcfb-da7b-4e05-90e4-d320a30190ca",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09682710-f86a-42c5-a321-faf6deedcef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58401ed-f4f7-48a5-88b3-415b13522cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848bfa0b-66be-4458-902a-b681318deb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "adafc2bd-2be2-49a9-9c9d-0627a4444108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3df03d-4ea9-47fc-b708-1e3402fb70ec",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093cd3de-6b44-438e-99eb-20a22c0b615f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09963ca8-98bb-486b-8449-9fd53b6c1da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12cf59a-7e3c-4625-9f22-f40dfbe16ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed90fc64-091a-42e3-9fff-d0c7faf1d773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0a159c-b03f-4d10-b84b-cf0a6453dfa5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caeb7617-f6bb-4ef8-9fb7-3bf81b89ba5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc37e22-c9f7-48e1-85e8-ded28e99590e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2d06e0-cb35-45f1-8727-863fb90363e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84bd2cb1-9275-4e92-acee-85f07706d9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b475c8f5-e7f6-48ed-b3df-7b883e8d665d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2d7e6d-d050-4ab8-b36d-52b95932d68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a216ae9d-b444-441c-9299-feb020c6198a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56dc636-497d-4e5e-8241-253f82e9c882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea5db47-3f4a-468c-ad71-fe70b46ba84c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d2f75d-2153-4c46-9330-525cea0810dd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc0006d-8b23-42a7-9be2-718a5c4fde6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29461693-aa3f-4af1-9cc0-45823c76e786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1317732-d227-4528-a390-3f7f3ae0b40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60b76fc7-355c-4c60-9b2e-64afff5e3a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25703a70-33e8-4408-a2b9-25bd10427ff3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f20a825-c592-4f91-a784-f48f7796db97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b46b8c8-d486-4343-b996-abaa42dbe3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771b164b-9ff1-439b-9689-cf7b60b6aeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "775650c7-583f-4400-b45b-6e921a76b6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807af8e5-5ab2-48cc-b23c-70dd2fc9b812",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df57a449-fefc-46a1-a966-6562130908e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbacef6-057a-4ab1-9164-11d3fd8d7b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89293413-e3c9-45d6-bae8-0909a658e5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6484439c-f186-4444-94d9-3690c3b8b2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce406e1b-be10-48d2-8baa-a66a27243df2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7adc09-28ee-4a83-90c1-caf2675976a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435d29e0-9979-43b8-b652-a4448cd4ad39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a60e34-a968-4c12-b983-667c8923a1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd903979-0c78-4cd6-88da-bcea40d68873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2d6fb2-d549-484d-acbd-b88d626b1812",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362cfe13-b4e8-46a6-afdb-e9c4cdae71f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4d1221-90ef-4c26-a725-8f4696ca93fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b777b405-fead-4323-8b6f-97b857003d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8ff56c-7a56-453b-8919-b80b07e41335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc781c0-544c-4545-afa2-cfa4f2598c2a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd370be-84e9-4f8a-981e-55848a05b9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0858ffaf-e3d1-43a7-ad9d-7ec9f4a49638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dfc6a1-4a44-4fed-9e6b-2dadd2fca035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1cfe9526-c770-4318-b623-e6dab281eff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa42f8ec-8785-4733-b7dc-55bd47610c61",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7802dacb-3f83-4537-905d-1e9bd18c2117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829dd2f9-0c75-4de0-8487-934b8d1ec831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56435f74-d3a5-45c7-90a7-412ef3894b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e82ce7fc-dff0-40f7-b039-df311cd4939d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20241017-11f7-4e4f-8c0d-fae9e83bb105",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52aeb12-9092-4303-be9e-6803ba1f5bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c832866-db46-4d71-bf25-a346aeb77e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23efbbf7-a1f8-42bc-9c7b-2402b9fb2fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5001bc0-14cf-40f3-a453-0922d9f3d24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8920db-898d-426f-8f5c-df64d7de4696",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0706293-a5f7-4dc8-ba93-e08d4b3b9761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7413a43-d5aa-4243-858d-ed12b808ea18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0160892a-0e87-4961-95eb-9a2c1ee1fc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba292c3-990c-430a-b1d0-e8225c1aa83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774a27cf-57f7-48b1-9710-d8d5e509f51b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10594524-d3d0-4920-8e25-87e7e7fa822b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e689a8-1207-4bc0-a0c1-cb0eefe78c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acff5f13-21ed-4fd8-a167-a5a08fd218f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4111c52-d0d6-4205-8da5-97eede1e0dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4445fa2e-cd40-4db9-82b7-e038776532be",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8e5def-fb1d-483f-ae47-eefaa3c27c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc30c23-3193-4ef1-b89f-1cc9cd1bbea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591acb65-1df2-4451-939e-f1ccd8a3fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8ddb50-ca82-41f8-85ca-b857fc4090c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6093f5e0-db1b-4625-8e40-bd25725a492b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0f48ba-6931-4f1b-93f2-2f603462e8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6334d6d8-f4d9-43ec-9a21-98074ae3389a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f95d8a-7fcb-4b3d-a3f0-daaa5f829bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed5d409-40ff-47d6-8d44-1565fa804326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61ba673-25df-40c9-940a-c7a37f4f3882",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6832ebd1-5b28-4a26-8755-0b520f0d29a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367d47cb-7892-4ede-b59b-5e6951256725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3539a8d0-62c5-474b-84a0-63e4f8fecac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7992b539-8b97-4f4c-986b-d66705067a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1fbf3f-95c9-468f-af84-f230a001e926",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963dda3b-684b-4d16-aec9-fe9f478b7d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ed4264-998e-459f-b076-9d1e7fc789a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af3338e-7eaa-49a3-84cd-db0012aff290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85b6d07b-5f94-41f5-853a-83318199204f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd32e59-0078-4b77-a0f1-99baed04facf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e112aa7e-c1e2-4a8e-bf37-1c42e2b5b6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1502af62-25ce-456c-a536-fdbd4de27ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed17592-9891-4c9b-8b02-ff05c4901803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ac81d0-4b57-40c9-ad44-c23d272bf0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a554d5f-2c52-4694-9537-1f327681a789",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fa5ed0-c880-4d4c-9e66-0d834bd58203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73db3756-5476-405e-b9c4-1a15e5b17e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bf1bb6-5615-4ee0-893c-19858e92f7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37b36be0-a6c0-4591-a0d7-1b21ecf427aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908a4596-4fc8-404f-b1aa-70290ab44613",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f87148-54c1-429a-96f7-6a18e4eed6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d246e59-cee5-4afa-839d-24c4eb008b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3565198-1d75-4e18-93af-6fc5e27362a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a23f5bd4-4d58-426c-8735-2393f53bd766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb6e531-e85e-4eb4-85e0-b70b8c3fe45e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2c4196-5d08-4a96-8b42-c3018548721b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cef51c0-ad0d-4edc-bf43-d3554eea1368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2a39ff-60ae-4d80-879e-9571a6b74a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e26c676-594a-4417-bd07-542a9d353296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebffa24-ebc9-4350-adea-9f78989951ff",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f52cf7-b9fe-42ff-ac4a-be9c0da59ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d0b6f35-3738-4d56-9f35-d668268a42c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4382da8b-fd33-4582-864c-cbaba06c1221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9bbbdb-a444-410e-9f8c-14e2d5ac1efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c643ecc6-e605-4de1-9a90-07f000b1a9be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb34f76-b8dd-4b97-a946-4770f655822e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399f90cd-fb1c-4c04-8318-6cbcc1d3c953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bfd0e3-68ab-42a2-8f96-d45fbc3d1c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e1b9ff-b89c-494b-b821-5a84aa0a8db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3208b2e1-5f6c-44e1-8cd0-008e520703c3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66abc6c6-930b-42c9-a7c2-5c7079ca8cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5160b7-ab03-4dfb-bd38-cb08ca7ea1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e29344-09e3-46b1-b7df-8a8916a3165a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e3565d-453f-45e2-a0e9-564e488c6381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d612c0-f135-46d1-9724-ffb5806a7ec4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ef6c69-0d86-4651-bff4-be7690456208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd98750-88fd-4481-ad05-1d9ef7fec268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1070486c-7ecf-462b-8c5e-5c34aa133dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eecd7c23-df66-4de9-a784-cbcc6dfd3912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fff002c-fcf8-437e-abfd-51a611c677b6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba4c77c-d3eb-4c8f-a3ae-23228a10ae3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48944f7-fd50-435e-bb59-1c5216d9fd27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2eea01-eb80-4a89-8996-416ccf724de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0562a72-7afc-41a5-a4fa-f1169a025771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9d0cd3-a999-4a18-9c6e-edcf41fddf30",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651d2c56-f0f5-47e4-ad58-e36cd035535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfe95aa-f085-469a-a3cb-859fbebe47dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04266672-fa37-4035-8ed2-e6a29849e668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10c0f4b4-2d71-42a0-8695-803316236846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea6f7d5-4d6c-401d-9ba7-271c5dbd2dcb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fb3637-1621-4abc-8ea2-321431c4a38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63f7d60-fe81-4ecb-9d1f-633def1759d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688807f1-17aa-4a28-9e3f-1bb6043abcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6547a05a-82ed-441d-8833-d7e4b1238226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a2af61-4240-40d8-9947-2a3c49973015",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed1512b-6f62-4a55-8bf3-fb8068c79935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b64c5c-0dd7-463a-8c01-68089a24615b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dccaaf12-3e1a-4b49-9281-0ebf0d97b4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dea62e7-b8ff-4422-aeac-c115054b86c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e1fd0a-d243-4a4b-8091-3d4cddf1a475",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79342176-02c8-4d7a-b21e-dbeea6faf9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e4cef6-5901-459d-b58c-eb8da58bcc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4740386b-941d-4b73-9f39-978eeefa6efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ddc036-60e3-4a9d-87de-33ac856954f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "211d9f71-dc6f-451e-99fa-aed2f8ffe166",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89bc35ba-9cad-4e68-92ad-bfda137a623b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cac680e-2aed-4345-8d21-aa7d97ccf57d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cf608d50-edfb-41bc-8371-227cd01b6488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88f6065-c4a7-4339-8bdb-60643a5b092b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7aca75a-36dd-4624-aaae-b9caeb51740f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afe03456-1e43-4edd-929b-5390425f8b49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "296ec018-037c-47b3-a6cc-8e648fd28067"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b88e9e9e-855b-4361-bf26-3b7f224d16d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1d81cb4-ef8c-4728-9e0f-d4b91a417ce4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eac80107-c48a-4073-9dea-c971018b870c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a58fe4ec-a9bf-4b9c-808a-0864f7d6550d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bf28570-a5c3-49e0-b341-0576b954b4eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5c122c1-aca4-4d43-8c2b-fb8130e83c42"
            }
          }
        ]
      },
      {
        "id": "954d3077-a074-4428-9723-8c2071feee9c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "50ddaaaf-f54f-4d2d-8015-0981b355df8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "259a80bd-74bf-4f98-a8f0-f5809b03e666",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "87e7646a-36ab-44a1-b289-e0728f74ae4c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086e4795-2072-41f5-a25c-6db7744d69a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3df146-4a21-4f25-8b8f-b32e121914b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7051eed4-668a-4543-8e33-9c65dc4ea5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "650c8fba-00f0-499a-b09a-66257c0f38f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed77a064-8d18-47e9-982a-9d396906c421",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb6c8be-9503-4752-be33-79516d9b679d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ff6cd4-53d2-4b3c-ad70-fad56fea43ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e515218-98b3-4ad4-9a8e-ded55fa870f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e95ece7-7683-45c0-8d2a-52fedb07eea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356c2ee8-b130-4a90-8835-277d6380dcaf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceff3fcc-e120-467b-a3c4-d859541e5359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586b1e46-b190-4e53-9b0e-b6a2bb05a41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55017f0-b5c1-4fce-a425-ff4d7de1c0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c277d5bd-eae7-4379-990c-3fc47271bd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0578ad-8d28-4ac6-9875-942b8176d964",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7046c7-b6e3-42c8-ab15-b665647b0a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18fa7e78-c782-4a38-9789-fa644a0d1c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3166d0-394f-4e62-ae80-e58a329ff4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "045be617-2f21-47ec-9f86-6680c6d3fc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dd6cbb-fe5a-47e6-9423-e79f129500d7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6c1c87-f479-4ea3-94d9-f716a947d144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c063a9e7-7c5b-4d5c-82aa-78c0edf6280d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fba62cc-0beb-49a3-9a1a-0efca5c94793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63da5fb4-2e6b-4806-b3c2-51bc87a1fb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d0aaa4-fb9e-4b10-bfc6-f7c5587a239f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed1daa2-5754-48c4-bf21-629cf79ffc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58f36e1-2c2d-4405-b148-592754e5676d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202dd886-0eb5-4a86-bdd6-72bf741f6a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff52c51-0986-4b7a-b70d-b1899150039c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce0132b-13e6-432a-9c80-cd0369955167",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15976b0-a710-4909-9909-330811142d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268a82fd-d0b7-453c-b63f-94f3c83187af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c96fe4b-07d6-4344-87e1-2806e0a4e9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a3f963-cf11-43e1-9bfe-d5300f1bb751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b1a82f-3de7-4e11-a49b-9cc4becac48b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b115ac7d-8701-4e18-9c4e-47ba51551bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc3cde7-bb97-4cbb-8443-911a91cc861f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d2df75-d5e7-4338-9db3-afe53635b5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1b672d-8431-41b2-87ac-a877d15abab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91b55f9-8815-461e-baa2-29b4fe438c48",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24aaa54-7755-48c7-82fa-cb3c9e5706a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2a3c92-daa0-4a27-8040-d453f8d35898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e37b94-d5f7-42de-ae59-8690b7469d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "082d0009-782e-4345-883a-c3a930a1a8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d417a6aa-218b-4c00-a984-55c1d85a9e86",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf12e615-de62-4d94-96c8-8c6874b92361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d13261-f7a5-452d-b185-274d5ee9e278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848332bd-0176-48fc-b60a-ec224a097749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeadb470-5a02-4af9-b141-8e012a535ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39b8def-ff7e-4c85-8ecf-e3c6628a08c0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91aead37-93b7-4a6d-bfa5-af519dae3925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4467d7ef-c9bc-4f0d-9f9a-72e25ff08527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad82dc8c-175c-4130-b56d-e06aaea4a65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "882ff413-9bb1-4bb4-b70e-3d9bbbecbe61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0d5744-142a-464d-9f9f-3f3fd993e79d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d18f065-c4fe-46eb-9094-5db51e4522ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7625dc7-f275-4756-9c90-6f82a88c88fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66ed877-608d-4692-af68-5a046f3f7be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9eec11-270e-4693-afed-840aeb207288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764e5ada-7ef3-4ad1-8e71-0c76dc51fe57",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad3bba4-6af0-4561-88af-4d99f6323df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd9a061-b220-4793-835b-cf305b7f6796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6514e3a-5e5a-4d02-99c7-68c41b063f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc10638-8929-43c3-8aaa-b17f484a7e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4236c8-bbaa-46f4-a77a-8780498d5b42",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da38967-9e26-4c40-8f45-351f6c34d476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b2c387-3a5f-4eeb-925a-afd8c59cf941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42449548-a18d-4b89-a295-bb4e62256ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "045c2157-4679-435f-a628-ecce072aa061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1abd87-d483-4444-aba5-a48cab675a70",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660897d5-e3fe-4910-b732-2ea1206f6363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c51ea4-24c5-4428-8a7d-2b13af2f76dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd5e665-40f0-4e8d-a2c4-e8b58853d60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8c37a9-93e8-47c6-bb8a-93a853dbbb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3eae59d-02b6-49dc-987d-e71194e19e27",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3614f22-a387-44ca-91a9-c83b1ffc1e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe460b4-63e9-4b99-a87e-6fb8ca630caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9f2b3e-13ca-4728-bd3d-8f5aafa6d90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f0b6769-8ad2-4c2d-97bd-57a897a94b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452601ec-5341-489e-8d09-b89f2094be52",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4bcf74-c4df-4bc4-9d78-8d8a8c2952be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366af35f-90ef-4acc-8bb1-392b32beaf9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77db66f6-0fea-4419-ba89-04f7ee03d5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9717555-074c-4c85-9cb9-aae5e7e98c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d6e830-100e-41fb-8f37-29c3b8fd09e9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636fdc63-648b-4e05-9c0c-fc287b125e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25635edb-2bdc-4b4e-a6eb-3fe0770900fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a54dbd-4f28-4aa5-bd66-1e27d00878b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3528feec-0e48-495d-9ec2-fd1507cf5b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb19f6fd-3f4d-41ea-8928-41e017de914f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7148a642-7a51-4feb-9937-9ab23a81d55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c4abac-723a-4732-924a-afa0a4e24ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d34e833-c49d-4d29-a1ae-3699d14fae79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7030044d-798b-4a4a-bfed-5a8c49fff227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ab678b-e91a-481c-8227-0cb58977e412",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4910c822-ad2b-4f94-99e4-e5babe495131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b620c6-c29c-430c-8900-5f37ee539a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d75d8dc-a63b-4320-8827-ec20a1b2106d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed8883a-85a8-462e-a541-4ebd6fbb6b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d06ab3-e84e-404c-8b8d-6bc6044e3357",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae114374-aba3-4182-9673-cd2420c0bf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539b8041-5a36-4a53-951a-d0e3c29f0d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd46f29-d761-4abc-a429-4e01ccf5d727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d657d9a1-a5fb-4eb5-8af3-ce6287141754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3067cace-3b5d-49a4-a4df-e4e728a8fdb9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383cfe80-9492-45fc-991b-1ef6f8888de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1eb0c3-363c-44a6-8892-b9fb33648113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7706a82f-3363-4c22-bd5c-38b6c8b85974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9106958-3c04-4153-acbc-b44a3f3309bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0665278-1d78-4bbc-a610-1aab478c8260",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cccbf9d-2299-415b-8aa4-5b6fc12978c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9ebeda-129b-4389-8e5a-4283c81afd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f243130d-be24-46d9-8e79-c9bd9266e66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7854f3b-123a-4a59-95db-76d57c26109c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c459b5d-4acd-4431-a5f6-dda52dc6d17b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8749450-e136-44e1-89e1-d6aeee13bfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ca1f07-2754-473b-a074-0d6969593427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a725435f-6e0a-41c4-8b97-eca86d85cef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b42a0ab-9fe1-4cf1-92e9-268f019ad123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6958ccbd-e430-4f98-9bc3-37d7edce099c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3946711-4c34-4cae-a94f-78dbb77a79d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3eb74dc-0767-42a6-aff1-74e818579ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1feead30-c099-4ec2-bf59-357fd1e7b9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "086e64da-3e9c-4254-9ffe-139d3f4927d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94ddd96-ed3e-443a-b32a-d178b9d894e9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e860843-ce84-45df-b44d-8c9b208e2cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332c1896-4c75-49bb-8a0d-bd9499fe0ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2627bfbe-d871-4f47-bee5-5163dd4500f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92ece0a4-495d-40c2-b51f-30c81f320870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28957547-b854-48f4-a99d-56fbf6a15ade",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5e7a79-05fc-4c10-bc8c-f713b28d3c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cafb63c-2b09-490e-b436-6323ed7b171e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a082598-2384-40d0-a3e4-db1901224749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cca00515-5887-4d50-8d34-fee0d4c600eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1857a8-adad-44c4-8c42-713c38bc5019",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7add6f36-49bc-499d-ba10-4a25f72763f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0faaa024-2d64-4ee9-9e9a-eb6c08035a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e98d55-3232-4c07-9c02-191fd4714801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dac2c73b-f33a-4ef3-8f51-9ce1b114805a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7496c261-a14a-45b0-a17a-ba7b0edca318",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00fd06c-71c1-47fe-b614-c35850bc7ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a730b1e4-fd54-480d-be9a-f7b89b28ed54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c8a4b3-cd01-4e24-b205-6181fd68a688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8952d5f8-5054-4aa8-9c62-ba387f3075c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985dcee6-1199-46f2-900d-64edbd315562",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3ade3c-4129-48d3-a7db-b1a69ef7bdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd40dca-d456-4109-82f6-0fcc70eb67c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d522602-8c39-456c-b145-d0c07236b3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "601ad069-3d06-4a19-92f8-e721c3af4051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744d8106-ee7f-418c-851c-ad2a061debf3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b14a0dd-9353-44fc-977a-99d04bd73c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0738f983-237e-4848-9726-72ec54cbcdd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3231c06-71a2-43e0-951b-b64f586b37b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa65af4-d3c5-4ce8-bd90-f22e15d896a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae2de9f-4116-4f43-82d2-046491ac718b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e7ee95-ae95-460e-97e7-54f77295ed99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b4eb27-7aca-4461-8898-af912fc1b844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3519353a-d244-4ce3-8074-5884ac10a565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8aedd3f-aeb1-499e-a8c3-7c599648ae4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e554d6-66ad-4518-acbc-d681488a06d6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2bcc71-3563-4b91-abf2-8f23fa10deda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5942db9-60df-4fe8-966c-768b9fbd59b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49809817-653e-49d0-8bde-a183f1713ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e06e5a1b-7856-4e7e-acd4-0ef2f6cba297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f7c2eb-d8c0-46ef-9698-814663679746",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16672fc5-1569-4649-b013-a96e65bb1a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc959f9-2ec7-4f72-b740-3d9b767a0e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32279543-75eb-49dc-9fd9-c360abceb8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c6d4e5-7844-40c5-8b06-0499ddaea668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acdbf9c-1029-474c-b2f6-db71418fdfd4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fc5643-efe5-4ad4-96d5-91e05ea13cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52f680f-8282-4f9f-ad1a-fd5114b5263c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b7fb16-1a37-4ffa-a03c-a16e34ef28ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db63ee40-01fc-433e-9fc1-f89a122d61cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1f321f-a557-492c-854f-f6996023462c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd0b15b-337d-4c9b-aaaa-cace0e462dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5490b89-28b1-45c4-953a-47328ed5198f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f208a231-c8ad-4201-9ae5-9aaf0f4dfdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3fd69e-2147-40e0-9561-7ccb6e0d4790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a6f236-1752-4864-8055-55660c21a9f5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e6be7b-ea7d-4e08-98ad-0b1de8177d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0ed012-0148-4aa5-b0e4-877369c1f408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208b1d6e-7311-4445-b776-6c49f3ed4151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8938aad-980e-49af-9616-3646641ea4df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "575b9809-64c0-4f4a-9c78-7f07304b9659",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f88ceb64-25ba-4789-91f2-a8af7a809d49",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9981f01c-4f18-4239-a741-414579920532",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3173767e-6541-427a-8d2d-ea97028bb7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a675d844-7bec-4a8d-8aa4-bdc8e86ac8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "741856fe-f75e-4008-902e-87d84773e6d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38d83ec4-339e-48bd-b3d6-2cf82945fc25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d844d817-8873-4f89-b174-eef8af571da7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ed2b150-8a36-42f1-b94e-604447680840",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a420d480-7c0a-466c-ac0b-5eb685830cc0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e75fe4f9-7456-4d2a-95e1-6fe752af079b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df0eedf6-04af-49c7-aa57-413f61a45de6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "037bf4a8-b967-4591-9c5a-f42c8c0ef053",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f88a240-f4b3-47ae-9f8c-2ac4fbec6f90"
            }
          }
        ]
      },
      {
        "id": "8918b76c-9671-479c-b50a-6bab9e12b839",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6248eb38-74fc-47f3-b020-23b9c07cae0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b8d5d91-e44a-4ed6-8071-f4dbf42a4240",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9be0a491-fd34-4e73-9d65-22af627acb8a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83c945d-7a6e-4608-9e5e-1b817d1ad1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e44839d-fb41-4efc-b7b1-0fefab48382f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69442100-1c68-4593-8ef2-50063bcc5adf",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7385a99-bffb-4cd3-81d3-0f1fc91790df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7fc9f0-3eda-4d26-8049-cf6755902c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2178f3a8-ce25-4360-a399-d54c2cc6eaee",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f7501b-ffeb-402f-98dd-63091ef8f6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8e505d-fa2f-4bcb-80b4-2bdab5c7b8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944a3bb5-df80-43d8-b80a-74322ebd9c23",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6875ebfb-1493-4f05-875f-9320044cd58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f7b99a-2daf-4487-9e25-b2940c962818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d09a83f-db94-4929-918e-752c0cd609be",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cf626e-4dfe-4fe3-b914-2262970b2557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc6554c4-aadc-41ff-8cee-c8d840c11efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb234cb-4a79-4ada-a9ab-534d0c0b89d7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7456f7-b79d-4d96-a6ba-a5292542465a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fbcfd93-b8da-4b83-99e1-c282035e2459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32570c3f-bb02-4a7d-aeeb-b901547e7e46",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd037450-4080-43c5-839b-ecf19ad6e715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b0047c-0854-4325-ae42-f05b4b9b22a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ca22ba-9da7-47ab-96fc-f061609b2e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6494651-8bfb-4dd8-b28c-e12babdbaf9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1b848a-7e74-4d30-baa2-ac1f323bd67b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e3aac2-61f8-4083-8864-b30d981a0482",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cdcb1b7-58b8-4150-9f29-785222454c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e595c69-29e3-47ca-9c4f-e9eca3f0095b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6c8a0d-a029-4910-993c-e5486ed1c63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cda69a7-8fd5-46e1-aa9b-8a2dd69d141d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9ddec8-9c3c-4fec-b08b-6b5a28512485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c464146-fba5-4a4f-beaa-8e221be068a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437dec66-3f2c-48df-8384-f67d43652038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7728ef9d-9fde-4606-99fe-231c84cb8b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b1a968-6b00-40bb-a77f-d9af25189844",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05581191-181a-4dc0-99af-12f17df916c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "830258a0-c546-4110-9c67-3d3213794b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdbe16c-2c8e-492d-8fc2-59163484e19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d1c0ff-ceef-4bbf-b99f-4f8d7c2bb690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69995a3f-44aa-4fb8-b600-da19acf59c5d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f517f1-2efd-4f9d-a261-89637c25fe00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6650db8-bb2c-43e8-b8e2-be17ce952acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0ad39d-18c5-4aaf-abc8-822774439761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6e9262-f7cd-4434-9032-8a2008c48597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eac417d-a226-4cff-8a32-d54c388f6527",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d47a567-e0c6-4010-bfcf-eb53357ea0ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed918e1-bdee-4f20-a757-6befad49521b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b794a21f-884e-413f-8dc3-e32fdfc0fc42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51686d01-9c87-4a46-aa9a-ba9071e65f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2175411-630e-4c64-8534-31ca4fc9cbcf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fe5d37-25d5-4bda-83e2-594bd989a38f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c123ded-56a1-4a8f-bafe-146fb2758428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10ac4cb-162e-44cc-895a-b7c8ae957307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1d39da-716a-4f8f-b925-9f6640786e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7737f844-30df-4d21-a674-b7baab6b2f7b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88801589-6e99-4070-bc70-719ca6f7d217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d62f672f-2c0a-4d60-b34f-dd6731e82e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b0e0ae-1722-480b-95e2-ad5b20e30c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fad4d9-0003-4e54-a1d4-190f210fd125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226cf265-3628-4a97-8ddd-cfb894827ad6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147fdb2a-df04-4270-91bb-7054ef236de9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d3c9e78-8f9b-49ec-b1ae-08ab4f2dd7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd8aaeb-ac96-4926-bb09-252e25a3be64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd73cd91-4d33-4b12-a502-3768b23fcfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b1a6a7-45b5-4bcf-9198-54e811c29ebc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9428e58b-f78a-4a2d-8f10-a363cfd85673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2320b82d-5af9-452e-abbc-b2f0b100f7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308ab83a-8eef-43fe-954f-e739fe96bdd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d81ee8a-c270-4a10-9398-1c5dbacf0928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7c0d61-144a-4ce3-baa5-5a7d1b2b930f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fad09a-d3ed-4b27-81de-040ecc5c8cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901a1d0a-b592-46f9-8295-0139109dd4fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dca5e4-75e9-43db-bcd3-7196a673a185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea301075-8ee8-46fd-81c2-e317dc93c298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a747194d-fbf1-4b58-95da-b0f15bc6923a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92281ba7-4430-4e6b-a98d-f9609e4d6d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d01e9b-4554-4e57-bea9-3c7e01acc35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322538df-f488-4578-ac55-e100b55f6c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715ff263-60cc-4c95-aa29-f2b82756200a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee6d4d1-4457-4436-a879-ca80d5472fa3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929bd96d-a8fa-4960-a14c-93a36893ea39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0707fa32-f8c0-44a0-bf49-b8f349899201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a494b0a-547e-44ee-b62a-f486e5caff37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbab588-1688-463e-be43-54b1097da1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba13822-d5a5-49e0-bb0f-c574596a3cfd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433f9474-d8c7-4a29-b748-3b0de80795da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4ee81a-e0b4-4dec-bc95-8a45a7759730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c51d2ac-aba7-49f9-bc12-4ef5b4e63012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284e3820-81d8-4be5-b737-1286398fbd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bc1bbd-7480-4f9c-be61-1545e7dee0e2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ce72d0-3105-40cb-9c0e-3b61533db1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316fe00d-a5d1-4fd1-a6e2-2fa1abe5ea3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb53bf7-9389-4489-9da4-0cfb3b9b36ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12844afd-563a-4ed8-bb22-544601b06c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3cd621-6175-4f9a-b279-334ba80eceab",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85f127f-49be-447b-b2d5-9a98c8d2df94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565be8dc-912f-4c6a-abbe-f18b2740925a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ac2633-03e3-44c1-b878-2ea77b6d985a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc18185-2e90-41c0-9aec-41105b4159ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57257daf-f122-4342-8f3d-d4f301d61e7e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169b4837-c11b-4f5a-82f1-c56c54186179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013f4a60-13c9-4e30-ab86-08fa6b7cd157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9e6c82-8d6a-4d03-83fe-76533f69697a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2178eb-a3f5-4159-b49b-4315b27e7b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1f7ed2-458c-4118-973a-934a41988ee1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23d344e-43d6-40dc-a3a8-d782f6fc1965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e30bc3-b3a6-4632-a945-968bc46bc828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58130c51-36fc-418e-9af1-8ab6df952368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235942bc-9093-4ffa-a50e-3ffb8b515b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20afa7c3-63ce-4cec-af0f-a0b72c4bcae9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c465ee-9190-4b9c-8735-342ee0b38252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4675c7ec-8310-4088-8bbd-bc77aa5a7e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacd38ba-c053-4bb7-b6cc-0c73ecf3f518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc24ab70-1510-4771-ad33-f2f56c84403e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7449e3a1-229c-494c-be9d-1a3fa123cf9d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d055409-4b9a-4831-97d0-22d306c783a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e220a19-8363-433d-9f77-b3e953370409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed7573d-c281-41eb-8a1b-6864fe6dda49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500b6ce9-2105-4e4a-9faf-fc22b44a18d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b184b5f-9849-48d2-9db4-ab364ae075f1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4015fd3-22f5-4f3c-bd6a-92e12ee9b937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a2a4ea-9ea9-4ab9-b67c-8ddbbd7bad09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b5a420-5454-43d6-a885-e2c6e57e0b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef91ea4-ab3c-4478-bd09-8c3613d8c5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950282ae-7d1a-4ec1-a5d7-c3c4914ceb21",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94ea2a0-b692-4737-ba3c-40d15af125d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b610812-5a6d-4b3d-9497-0b323da0ec74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafa2f0b-c623-4449-a9a7-c5770f76690d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425da6ff-4b17-434a-9bb0-2c43a73ccad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b526bf-4265-4bb2-9144-888d0ab5b651",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a421caca-8a53-4a78-958c-24da08be9844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2abc713-ec1e-4026-994b-8f7dadfd35ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0f967e-ac1c-4de4-ac02-5b5707f4d5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903b0b20-971b-442a-8b54-656ac507f13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4cdae2-6dc6-4c16-a0a7-cf5ece160887",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbba0d4-6fd9-43ba-909a-ffbea1cc57e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de15fc4d-881d-429e-bfcc-2c5fc6735448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1369d6-df01-435b-8739-5f6115dc3342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4015b56-0d13-4812-bf6b-68e1f877f70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedf803d-35bd-4773-827f-e4c2369b5966",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6c4900-7df9-491d-853b-7f137d5260b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc3a0cb-e1c1-4fce-9854-528d5cee589d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffb0fbe-9517-4017-9900-9c578d3053a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b457f114-c4ab-4a4a-a51e-904ae72ce2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28878cb7-a01c-4c7e-9fc6-42f8c3b2d83c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b99237-2c07-450f-aa6c-3dc04550e16f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d912e5fa-557e-4683-a5d4-c1ba7c1ca943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c98612-7b42-4579-8306-85c2017e39d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5501aedd-ad4f-4df4-9235-33d328266aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce703f90-fad7-464c-ab54-a76a0681d6b8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26d2b7c-5ed5-485c-8e17-80cbbe5b3a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "779bb549-184f-482b-b147-f5e71d09f63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f945b2-af63-41c3-af68-a2c80248c606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35b2146-7660-48ae-a396-1027d7705701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ba5f0b-3511-43df-8ebc-42d476f9bd43",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71727f7-52c2-4061-90b3-393a90d27835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c08812-fa8b-4db5-8972-3a5ee08ed43d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e82602c-becf-4522-857e-5a685c258ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de08e58-4d13-4723-9ca9-cede9b744f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d24d36-96d2-41b2-bbd0-e49e69eb4d10",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b2f78d-108c-4383-a420-aad4dd58833d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9af450f-934a-4028-9f8d-a0fa77b12d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0bc29a-be02-4cee-a2f8-0ab4c39b763e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492ff1c9-aa09-4ab9-8670-9d47c4bec7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2840c5-b6f1-46f9-93a8-a99191409192",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aef210e-8e92-447a-8c0f-0a8d56c3c066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950110c6-7f31-44cd-8d33-3157eee15955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b560cbba-0221-44bd-8762-2fd786b30e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411475d9-3d00-4ce6-880d-ef8950ba1ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f810bed-4b32-4482-ae7b-7cf8a9c3f6d2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86b19d9-9214-4458-b452-a9f08c80cb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5851e6-92b0-4c2a-9629-93b68d33c3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12ffdcc-37ee-4c9d-90c4-8917997a3cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b4074b-4a64-4898-8870-ee1a4f387879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a21bc5-3014-4ed7-9310-69558d465b44",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2722bf5c-5b64-470c-aa9c-509ae33fa151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e374089-72e5-4255-a9ed-813f9f1bfd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7428a9-a130-4a6f-87e0-9d33a063988d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401c940b-7ca8-4425-aaf7-0418a1cf51ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713cef1e-b561-429b-a646-0ff4ec19506e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4b09e9-8875-4702-9ef0-8190a40035ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9763610-6368-495d-b962-80c1b81a2f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbb5819-1415-4b34-bb76-9767689c8480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d63d7a-cdc3-4757-9350-9f9db613e13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee93e5b2-0dae-4729-9710-cf8386b8dd87",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e80d8c-b5f8-478b-a1f8-076fdc653d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04b2137-ea12-4afe-99ef-a13fe09f8a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5e715c-5708-426a-9dda-d1335bedd719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ce5181-1857-425c-84c9-08677ac897be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9238fc-5c86-4c19-bdb9-6c6751bb7b02",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b16dd63-c604-4355-b111-d4e51fa2869d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed85539-69b3-4bb2-a9dc-752a7303c146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18884062-b575-4713-85d4-5d962338a735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adbd184e-24f5-4d30-9e95-0154f0cb7d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dcc291-61dc-4941-bd6d-db0e7b30bd76",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cb0bff-f1a9-4ed3-8de2-4d3efba69869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e12464-02c1-46e3-8829-3a1e0b36c993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47862db-2c4e-48dd-a4d1-55e07de9a02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc38fae8-8de0-48ea-9f0c-6513c13886b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3aa57cc-5627-4b7d-9fb4-ec83b5f30117",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fe073f-b3e4-4e2c-a43d-a878b6f7e955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6201a4-d05f-4c22-844e-50365ebe62c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd8ccac-5f29-43d2-8061-53b1c0f611ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35983e7-f16e-419f-ad8c-bb09edee3a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cc86c0-2b5a-4917-ada6-b58ba9fabe1f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cf70a0-f603-4c5e-8e7d-a1bb388b8433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463a44a7-a508-4cd1-95cc-1950527862da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592710de-b65b-40e5-a1bb-7556dea66541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ecae3aa-d234-4f53-aab4-b09339ea2439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40fb19e-507a-444a-8e2b-b284bb0778a6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb446e86-cb52-4c0d-95cb-c73cc964d5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e07ec4-52f9-4fd0-86e3-b17eaed82f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a2f320-51a5-4bce-914b-e33961300410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8fc6e8-b6a1-4e60-9f96-9d133e33aa46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba53d13-74c9-4fae-ac2e-728e49d4c1a4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7da553-9fd0-488c-91d7-a6cbac7b608a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2630a627-25a5-4912-963c-204e94ce9f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8921599c-bbac-4811-bacb-ce762d4fc387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27547b73-c96e-4b42-a9bf-d7dc613cda50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f554cef4-1fd8-4e29-ad21-80eb7cd678bc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f63c3a-6433-45bf-ae1a-caf556c2fe68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce6e620-207c-4e45-b7a1-3f3f14134f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0ea174-86c9-472f-be32-ed2ffd0e1702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988b1d52-cb1a-41fd-80dc-6409931b58d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dec6b13-72a4-4100-b468-f5cec56bb9f9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a042441-a479-42a6-b361-6794fef52ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97937c5-8738-41f8-a119-47d92f78fede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebf634f-210e-4c03-af47-2d5d095b8709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb88ca5-2ae3-4da5-8d4e-b3573b953aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a688efa-dbed-42c3-8063-22656326cf25",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d5ce16-d11d-4a03-82b8-25f8a862139d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b87b96c-9cbb-4729-b807-727f763c0a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b939577c-bde2-4d39-bc23-a26b9c74b9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc0be63-f2e9-4190-915d-1deb8de53625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1861887c-ca2c-42cf-867e-dc29c9168c25",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0729e7c2-7237-4917-9997-60091442a53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95e1fec-4f70-46ef-aba4-f83936ec9506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79170431-d067-4016-b19a-c558d4201b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb415a40-369f-40be-96d7-064d4596594f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64097476-dc9f-4805-a5c5-64f6ef6b6077",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9e5a7b-5b02-4ad9-9ccf-fe5c9b113fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eeea983-07e8-4842-a5f0-08e5ce1da883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91254752-fe00-498a-9b50-5bfc8f76d0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7acfad-1d11-4f50-bce6-3e81407ac22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77f0b0f-6b02-4865-9a77-ff55cf55ea26",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e53bd9-be92-4c99-ab34-7442a086c953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a809b5cc-267b-461a-94a2-cfa962eff7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0d8fbd-892d-47d6-92b3-eb7c5ddc6755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb45ee37-ce60-4b41-8ae1-a4ace9f551ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9660790e-ae87-4975-8a3b-c75677afa6c8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628a04cf-3898-4e22-9b9b-84b677d0eb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb7acfd-17ce-4982-bd3e-2b322e39e9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b35887-5efa-4d8d-b420-311a5e1f1fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3d5024-e61d-4941-8f62-13042505373d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957c97ca-1692-47d6-b7a6-cd3d3a47a823",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba412152-b132-4c29-a405-7d8af71f87ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129d1dde-ede8-4146-a4a9-b858fe59aa10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79986b5-660b-4d49-952c-496bcbc38513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f347f3-123d-466e-a5de-350fc8d6f6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41daf3d1-d2c2-4437-bbe7-aa2b07a2d554",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a198ab7-144a-4aa2-b35f-943cd57f14aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522d9fbb-b2ee-42f2-93ee-7b119a0ce502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dad512d-d464-4fb4-842b-27e88fcbf3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b25f66-8cc3-4907-a656-cc51a82737db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7adf45-fcbb-4571-8055-f59ad32bd5d3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db51db26-f604-4878-abba-5168dde9556b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f086c00-58b6-45e0-91e1-95c583ff4b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157a0abf-6b6f-4513-8ced-7ead209489d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ab2c22-325f-4541-b24b-bdcfe561210e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671f91a9-7fe7-4ec4-bd9e-7bea0c8b17b4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbc0290-c380-4d7e-ae9c-1ae4fe3a619a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b03dc8-4d9d-4430-98a5-c5c15ec9775e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56f2529-24b5-43f0-9a73-69b2d82e3d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c233f544-f373-4a62-abbc-8a16b7e25968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfc096d-a052-46ee-9a3b-45562fcfa05e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd15a72-c6dd-4c51-9ad4-32f5e306c537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f6fe12-9a3c-47c1-b91b-37a946eb2065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5e5b0a-cf60-44cc-b0e6-10d43a087169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a10ffe-ee0a-434a-944e-fb1e2f59fa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4854bc3a-cf87-4df5-afe3-6fa3446abc8a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae67079-df61-457c-90ce-89963a0bb3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316e7e80-76f4-45de-9f71-2e48036fc0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07c5565-45d9-4bab-90ca-3149fb66dc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59d5e65-4db3-4076-a749-cc5aac6658a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64191a29-3321-4e27-bb84-5fc903d7329f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9131ffc2-a787-4a6b-b0fb-48962462060a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22e4f46-716d-4038-9ebd-647239db6e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8190f3c4-e487-464d-a15b-6d69caa3915a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa458be8-dec2-4819-a3a9-8144cc9592e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a34d9b-a752-4995-a9b7-ca3db4aa244d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eccc613-72ba-41d9-a352-903c1d8aba85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eecadffb-1602-4bd3-9b94-81e1348e2854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a1e288-d060-4a7d-a357-7d9eeaa588db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4c9a4b-92bf-4fab-958a-f23d9949749a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cde71b-c142-40a8-8cd2-7833161aaea4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b97a4f-9be0-4ede-8277-aaad2d0157c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d74abcf-6be1-431a-9805-01cd93fd2c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba147ce-f32d-4b81-9b78-9b04eee4d1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69efff6b-ffef-4708-9a40-6eee84e68511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a497c5-059d-457b-99db-3d5c2b3e1873",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ca8fe2-3d34-4cb8-9342-632e2640909b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79df2447-fb41-446a-adbe-87ff72296928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1fa375-7a68-4dd3-9fbd-345ed898f2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4759d4f5-deb8-473e-9fb0-ee98659d6546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2179a7-072b-48e6-a372-4dee7db4a2b8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ce68d1-8a20-4f61-840a-92e09be4553d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b78f3817-e5ef-42a6-affc-c2962303a74c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671a95ad-5489-4e32-90f2-bee69d9c8d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6e09d8-0535-4050-9394-a3414eacd7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388d5694-3458-4fe7-9952-3379d05393fc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51eaf1dd-fe67-4a7e-83c0-096f4aa2b116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44b8d457-45a7-4162-9460-a77ab990162d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8806a3b-25ec-4a13-adbc-ff6b265fa14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abd413e-f15c-4901-be72-8aa0f7af7cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbcf450-55c3-4691-ab69-75841ce3a5a9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ea03bf-f88e-42e7-908f-e91d49614310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3b8d3d-e11d-4a90-b96c-6adef5b6fbcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5681a7ac-0ea5-433e-8024-d0d7b4c882c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03971fda-d5a1-43ef-949f-c5fa32758a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057dad5a-f51f-4181-a3c6-c47ebc027796",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2d734b-c96a-44db-a2d8-3f4baff40ada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d36fb7-15f1-467b-8fb3-3ac456cb8acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af463290-846c-4de6-b473-a03e8f56bd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ce7d29-1bde-4fdf-9204-5188a56e5e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95566ba4-5026-4489-bebe-6dc67b191ccb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a5645e-9808-4300-98c5-517db5bd6b63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "458d2474-6933-4b60-bbe2-7c12683c5b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f101fcfb-39b7-41ad-8e8d-f1502fdd584c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dfc308f-8247-46fe-a83f-1c57cb6563c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8248c7b1-6af3-4ca4-acd5-2669b3305027",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a155dfb4-9059-4f83-a657-b5448d6942c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc453871-eab9-4346-a97d-eacb7c548488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ab7a76-b1c7-401a-b47f-a0242825ee08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccf950c-a4bb-4fde-b81e-2f5b6f7247c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809d46ae-41fd-4c6b-afb4-3b4cf0cd3b83",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642c5247-7a36-4d8c-a581-93821fb74703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4115b741-f5f7-423f-8536-a97958ba5702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973d1c9d-3d1d-4fa6-8614-477e1bc38057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb13bc80-0b85-4583-916f-bb0a03ecd643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c413977d-cb35-4da8-8bd5-68f9cecb46c7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e3d0a3-b409-4799-8f74-a6a301b1f9ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1082ce67-40ee-41ab-b1bc-8a822774bc11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3227d699-1c13-4002-8d40-9c7408e2d2e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64688d9d-41ca-44f2-9c72-a7444d8c6887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabca49b-737a-4482-bd51-d4d6c71b241f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77011f6d-50b3-4de9-bc1e-5ea23ce8ca9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a304eaec-714b-4938-a65b-20a154b0f9d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dcca14-8657-4484-a36f-bbac80bd5e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3079c7-7050-4dad-be14-a16a269799f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7de854c-b584-4785-a752-6b79a9a53860",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c04e29-7de3-4abe-ad1c-287d181f0d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5a00df-4791-47e9-a276-f95e2883318e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52c84c8-30b4-4bfe-9067-60c6827d8022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3feada-572f-4f9d-a95d-d24b6043033a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb5ad10-21f6-4a4e-b70a-07425e0bd15e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6378cd62-ea4b-4b41-bf61-ea30e2477f17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82ccde2f-d8a7-4100-b01c-eb9adf2ebb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067ca186-0a4e-40ed-aa5a-241693f11b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044fe0e7-47a7-4cfa-819a-c93f471581ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252be977-6cdd-4e90-9306-65cff1029953",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e020eef-7fde-48d5-9667-a4ad6d6c3459",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "310b242f-03af-436d-9071-1805b90390a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a816d3-9ea8-4741-a820-1c6c7fbc61c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dfe2879-a40f-4299-972f-cfdd4ea2f7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16764ec-7072-4f65-bdc1-b9ce72056531",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084a8f80-7226-4337-9bf3-0d5fc760311a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27cc2455-3c46-421c-9d38-e02683353d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c089b524-f9a4-47c4-bf2b-0909c205592d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0cd68e-559c-45e6-b27c-2e79699412bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335ef6f4-b73f-455c-8d10-0d95632a4e1e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdee08e-5330-4f42-9d7f-e648c6a7b7e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05dad2d7-9767-4d6b-96d8-787df5d2753f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3700d831-96a7-4367-9e80-82dfc4f9f3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77f63d6-4bbc-4fca-873e-3c6d5bb9d472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd629f5-d41d-46c8-be81-142f097a9e0f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d38bf79-a52b-4b79-8cab-e921f6b37648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "121ae316-1c61-4166-b411-7e0fa8fd450b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "130e64e7-1724-4510-b11b-87368e19ad4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe88254f-730d-498b-a2f9-b839b944f5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf468003-8bba-4a37-b945-ba2788da3a22",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752e3c77-5174-4db2-b2f6-720617fcd660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fa9c49e-a49a-42a9-9e65-4e1a95160abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98573c76-3b06-406f-a5f5-f7eb09290e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e641ec54-1954-42b9-97e1-2c1a17128cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1426b1c-fd35-46cb-8f14-8d3b61362908",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88882170-4722-41aa-96ff-a7100b31b627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "503a03b1-3f9b-4e59-b54c-ca8f8b016f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219ab851-4ae2-4552-903d-3a1959a1330c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdad53b-da08-4109-86a3-d62dc826fbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbd2fa0-38fa-45b5-a735-222bbd2fa4c9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98462c5-1421-4e5c-b580-38e707e119ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a2426c-97d8-4fdd-adc5-a8bd748ae95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ef7cc8-3126-4893-8fa2-1326e38d6528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b8710b-7d42-4b7d-9b34-791d01b2b2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34735150-9cce-4e22-85d3-9a0a7503cbb4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a552769c-64be-44b7-abba-85ae462c6a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e4f94b-58fd-46ff-9f16-e804e15bb627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e2b85d-48c6-41aa-8a4b-c9f48e68439f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1173e903-361a-4984-b612-32024996a2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72f7dd2-6daa-4676-af07-a788c1bb722c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c236526c-7413-4c83-8d1a-dde2e23702a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d91ab183-9b0b-4477-9309-31d92aadb68d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a056ac9d-3362-426a-bcff-9a197f1bdf54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3258d14f-8bb4-4da7-a809-f180e3ba259a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b46362-8737-4622-89a7-1a6b55c140d3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd8bf4b-23f7-4d06-ae97-7f44aacb1f73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "462bf91e-8dfa-411d-b25a-313274a81bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a3c298-a610-40b6-bbeb-76c69036a565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23026598-8e09-408d-829f-3c285f7e6538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71954f78-1ddb-4066-9309-abd49e7be7ac",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e55fdc9-fa22-4248-9943-83daa6333b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "548f7877-ba71-427b-99b3-73327534d323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51686520-3c9d-4a2a-8769-264ccd02c562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f165e6-8bc1-4ee1-9930-ddec5d798598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3284c092-888d-4f6d-bea6-126323a43b0d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c57fa9-10fa-4685-9cf5-6d83022fed90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f68e9a7-870e-4366-99fa-6af3906c07d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9becbca-119a-45b0-acf3-8979d6ad0d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97afaa54-ffe6-4ecd-8756-123080a6b507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e367ba9-26ca-4953-89c4-43df6a95f4ae",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cf63b4-a112-444d-ab0a-e1ece280fcae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d58208bf-7384-4dbc-8c9b-81058038ceb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5aa849-3a70-4f65-8cea-7be4ec987679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c562ad-1c3e-411b-a465-fed938a6a660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db5d919-84f4-4ae6-98d3-bf049ab8f62a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7db6c3-4f62-4af3-afa0-dc680480363d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21312eaa-2da0-4ca8-9d43-2a94d4d57702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4952c7cc-9841-4f07-ae05-409af706d21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd632e2-a999-4bc0-8f33-d392396182c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b98bec-6c10-4ca0-b68d-363c2cc16bbe",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc02112-d1b5-4f00-9db8-9206579b1a47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e70c272-4a0a-4024-9cfa-8547d6420cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e78f4e2-c0b3-4f52-a3d5-ab2d1ae44f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e197f142-7723-4606-ac28-1736e200a0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ca24a0-d50c-4cef-8933-e58bfa5a9b33",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebea305-b967-439f-a169-f8ab42c2d09d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4446d420-68d0-4d31-b3be-9b9c9ce9f872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2578852-c9a5-47a5-82a5-76e3a5e18433",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dabd34c-7dc8-48d0-8be2-7e90ae2761f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7097480-4199-437e-9551-fc58cafc3763",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e5bab4-600f-4299-97a6-9e6ece84c8da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce616958-0cc8-4320-8d48-1f3873cb5214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22d3061-6c9a-4792-a52d-7f52418e7e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf1c339-bfd2-4445-9bd9-04be0b02ced0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4937d9c5-20da-4177-b3ea-acffb6c065d2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc4204d-9824-45f2-a9ec-8750b45d4620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4e856a2-1b6b-406c-9bb8-90a11e1f51cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8c6914-a154-4bdd-9017-c03941211e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42433397-56fe-4016-b238-fcfbb1baafb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f2a953-d6f9-4e25-b5a6-3a9024801630",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf382985-096f-4d32-b9ce-43ce98990139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "247d1df8-89c6-4618-8712-bc504ed6ed5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2d5caa-fc25-42f2-addd-93babc228bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e4d4af-e426-4190-a30d-61a1fd801b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbc5316-3d62-4115-aea0-4a876cfa0c0c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08735c7-e83d-4a67-828a-0114f1504016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "269b9d81-de71-48f1-8061-966b75496016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c37333d-3393-40d6-874b-974ad88bc851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9efa7bd-3265-4e84-8663-62a3994c4435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcd2939-9bfe-4a03-8337-5e8717eb7eb4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d806ba0-97de-4121-b840-5be5fd05968d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59c226ce-ce5d-412b-9396-a21868d16225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559dd281-09af-4f36-8de0-1427828367d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dc6039-e7ac-4c80-86a6-f3a685729dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3aea7b9-d559-4533-946e-655ac119ab1a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db7621c-0530-4d76-98e9-21bd132b0ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d63f8a-240b-423e-b91c-081e3644bdfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be02f70-eef8-4b7c-a6c8-e6149c65ecd8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73941b8b-6f5d-4951-ac11-4bb0bbd30a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b10855-7209-4028-b899-fa8821f52963",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88bed91-97e2-4e21-946a-68d6cd57abc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "497c528f-4e0d-4442-950f-0435b59c5ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f35e1c-e0c1-408a-a451-53ffd7057ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778ef20c-77cf-4572-a2d2-3d92db690d21"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ffa9fbb-5af5-4592-b3c9-16e17e244aea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d7f520f-293a-425d-930a-a074e5d034ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ef8d84f-5680-400a-bedb-f1f12bc0801c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "edc59c49-dd27-4c7c-a13c-4238165e8142"
                    }
                  }
                ]
              },
              {
                "id": "da806258-01a8-4846-8f93-ba0fb80087f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f5f7350-503d-424b-bb11-ade316e7a06e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55984dbf-7692-4ec6-940f-ffe7a4af9f57",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "16b0856a-6c07-48fa-ab29-5e778b1916c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c846598-f4b3-462c-9a83-ec146c1f7b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fc2edda-9d1e-44bd-8f65-e4db5460abea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a639cecf-2b11-42df-af86-b8a6cdd59981",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5391123c-b2e6-4440-88df-82f8f09aa000"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d006945b-5027-4894-9233-9bcc52cbb1fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14363aec-70f4-4fe9-81bd-4aa0ed7e80c7"
                    }
                  }
                ]
              },
              {
                "id": "bca42a63-f19d-44e4-a322-21ef2be2f849",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "feee2aba-bc06-4cba-b7a2-05fe6920fb71",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99351f2f-dd23-4079-a4d4-fcaaad911d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6b24200a-5bdd-4df1-89d9-99e411f2987c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69ae85b-19e0-49b4-89f8-1ed2fb997f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cdbec8-3578-4410-9709-b7c7e8a51e30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "94a4db24-ce1d-4996-a7a4-8769f560d081",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb65177d-7d61-407b-904e-4c294c9cf15a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cf8463f-154a-4fde-bca6-d2d826c84b6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "39643476-0646-445b-b05a-b0dcdcb8bd2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afc56839-f349-46e8-8643-2f88527fb8a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcaf5d2b-3f8d-4790-a2da-93e13ab87b97"
                    }
                  }
                ]
              },
              {
                "id": "86ec0323-ae64-4905-b1cd-d4645312b65a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "863f0278-e71d-4bb7-bee7-4bd50e374b77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c6f9240a-6a7c-492c-a648-b420779946b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f50af59-03d4-49b4-9a24-36e62d6a56e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59c27573-029b-47c4-92d5-6227fdc48138"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd4298db-cb4d-4221-9564-132e73c21b65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b9218516-d229-4da6-82d6-7fedbc558d41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8aed82fb-370f-4954-853a-9336f94b4b92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6035553c-4b8b-489f-9633-a40b312de2b0"
            }
          }
        ]
      },
      {
        "id": "67060f41-185a-4600-8a41-267dfd2990b0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "47a02b7d-fd94-4f61-afe4-5a51fa2274d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4adf928d-10db-4ae0-8224-77cd3d9dc7a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe09bc2a-62a3-41a2-bfaa-003057cbd1be",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ce6215-f4ee-4be6-b89b-cc5d4a4bcc99",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "79dc1308-811b-44c5-8be7-57eba19d2095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc97faa-f558-4a6a-a790-a93f2a4056e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df44b683-36ab-45ec-9ff5-776296058b14"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "507e1362-f88c-4880-83cb-d5752c6a3167",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "879e61bf-41e7-4fc3-88ab-799ea53ae6b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e72aad2-4cec-44d1-af4a-fafd25f5bdd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b77b4f8-eb41-4b6d-95ab-b61e9c3f4c49"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ab88286-425f-4a4e-b8ee-c55aab4d3b53",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9f621d55-e2a4-4897-aee9-18367be091cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7f83527-41d2-46fe-a42a-742a910aac54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d00b70ba-b3cd-4263-88f6-ef0c799646f2"
            }
          }
        ]
      },
      {
        "id": "4fc90039-2e83-4dc4-b6ab-a74a07e27559",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3eeed65e-98e6-44bb-ad25-992fee71a990",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1ca3a4b-3dc9-4d9c-afc6-09b4f7d6b398",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41e3baf4-1891-46bb-8d2e-134722fd2872",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3c6460-bd33-4c63-b5e2-c9fb3da47219",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53ec3edf-f28a-4ad8-9f67-b0c9225b3ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9533f7-f0de-448e-bd95-49475e24fffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "714a8158-d03a-4065-bc09-b1b70908f020"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cb7e708-2d8e-4c0d-b460-93a220ce5501",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "266c70b1-76ff-42dc-a9ca-97fb48f31108"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bfe37e6-119e-4801-8115-07fa93eac486",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68bbaf02-c911-4193-ac04-fb573f2f3f7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec45e095-e711-4ff2-a372-1bf330e7cde9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f32d4964-95e9-44e8-aa05-101e3f7e5223"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "961fd990-d47c-4f86-82d0-508984752f2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e8aa80c-92a8-46c8-86d8-f35ba1ddfd3f"
            }
          }
        ]
      },
      {
        "id": "baf9329a-ebf6-41e7-a9ec-103ec4bb1937",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "679d626a-85be-4b6a-b4ad-8764cbd1dfca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8784848-aca2-4157-bc5d-1e4035b18619",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c3e30d4-bc23-4454-bb3a-5fe128a6f4fb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a7e23a-04fa-463f-b0bc-f5d33fa95a4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "613cd07a-a4e0-4f65-aefa-455445f2d9fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde28a02-baaa-4fca-955b-495b2cf2c268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62f09ae0-cb39-4f3c-8700-fe51b52d7d0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85429325-be75-4bb6-977b-e2c7d6309ca1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60beb81b-8a20-4089-b10a-878af50b3629"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7775bc29-ecb1-4ef6-af54-1e576e3fe4d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e80a020-d784-46bb-a8d8-35c1a3aec885"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b984fc52-fb40-4ebf-9863-34a57920beac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2c04d480-d4d9-4d9a-b27d-d63f8bcc75be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cdddb32-2958-45fe-909f-7c288c6bc1a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "533229f5-fec6-4e8c-b548-c53d3cf16774"
            }
          }
        ]
      },
      {
        "id": "42e192a4-8dea-482a-9dbc-eb528acf43a5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd9b0654-1496-49f7-bd89-0cc0764a2dac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0eb431cf-523c-4270-a19b-0863094f6655",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "672af8e7-4ad6-4871-8549-53149bcd4a3f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea23b297-7ea6-4bc6-b0c4-2f8d06659b27",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6dccbc57-65e2-4036-bf6f-d6ce5567489b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 322.1866197183099,
      "responseMin": 10,
      "responseMax": 7547,
      "responseSd": 911.9652998501771,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694478677782,
      "completed": 1694478781477
    },
    "executions": [
      {
        "id": "3d1c1abe-ad73-472c-bdc3-f45a7bdc99ff",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b05577dd-e5be-4b41-b298-343634e7f8d4",
          "httpRequestId": "d3f54653-6805-41c0-8a72-7bf681c72427"
        },
        "item": {
          "id": "3d1c1abe-ad73-472c-bdc3-f45a7bdc99ff",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e0a41f1e-1078-4cfa-8202-bfc11efc8a7d",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "3fe22df5-5c74-4cbf-a438-fabe7bc6f5c6",
        "cursor": {
          "ref": "e5efc52a-8e23-4415-a81c-f7605f90c65e",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b2dd323d-30e5-4f86-ac19-91ecf425d935"
        },
        "item": {
          "id": "3fe22df5-5c74-4cbf-a438-fabe7bc6f5c6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d747e97f-8979-4957-a92a-e403cc8561cf",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "37f24873-e0d6-4764-ab91-66067d9f4c30",
        "cursor": {
          "ref": "4a3893db-6d0d-40fd-87e0-5671d1547dae",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "355e767c-f21b-4cd7-b8e8-32eb2cc3716e"
        },
        "item": {
          "id": "37f24873-e0d6-4764-ab91-66067d9f4c30",
          "name": "did_json"
        },
        "response": {
          "id": "30a88ed4-4b20-432e-a56d-a5a0e90cc8f0",
          "status": "OK",
          "code": 200,
          "responseTime": 1250,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53d83b9-4665-481e-b40d-80b074326286",
        "cursor": {
          "ref": "154691ce-5d93-40bf-b1e8-cffa4d24684b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "777f63e0-80c3-47ae-b928-cad95975c766"
        },
        "item": {
          "id": "a53d83b9-4665-481e-b40d-80b074326286",
          "name": "did:invalid"
        },
        "response": {
          "id": "4cd721c0-29b0-489d-86c0-436d9059fa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53d83b9-4665-481e-b40d-80b074326286",
        "cursor": {
          "ref": "154691ce-5d93-40bf-b1e8-cffa4d24684b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "777f63e0-80c3-47ae-b928-cad95975c766"
        },
        "item": {
          "id": "a53d83b9-4665-481e-b40d-80b074326286",
          "name": "did:invalid"
        },
        "response": {
          "id": "4cd721c0-29b0-489d-86c0-436d9059fa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c86c14-a278-4858-a127-9faad63272c7",
        "cursor": {
          "ref": "700b8c44-8c3d-4552-8f62-b08c1f057945",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "80bb39fe-cc52-431c-955b-3f5275b81a3f"
        },
        "item": {
          "id": "d5c86c14-a278-4858-a127-9faad63272c7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "96f695e6-6441-429d-849f-5abbe63f04f5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 405,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db942a8-c50a-454d-9384-13d9cf055cb7",
        "cursor": {
          "ref": "077d5733-8e87-458c-9f4b-8a5cbf340cf3",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4b5bb70a-a47b-40e4-927a-1d40fcbde31a"
        },
        "item": {
          "id": "1db942a8-c50a-454d-9384-13d9cf055cb7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f6c7fe90-ea10-4bc7-a03f-9672d8b3f0b6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 255,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953179ee-2590-47e9-a983-c22ca8d85001",
        "cursor": {
          "ref": "be813381-4240-4fa2-8b9c-8a256e4c6df4",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e67ea2e9-e49d-4682-bb17-ffafca5e6e75"
        },
        "item": {
          "id": "953179ee-2590-47e9-a983-c22ca8d85001",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6aa1c069-e7ec-4cb3-a512-81781bd42711",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3064fcd-b1cb-451e-9a34-c2d96358cd86",
        "cursor": {
          "ref": "7a52921d-0dfa-42db-9521-df00d8c404d1",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0f0780fd-da47-46ab-ab8b-6bd523f570d6"
        },
        "item": {
          "id": "a3064fcd-b1cb-451e-9a34-c2d96358cd86",
          "name": "identifiers"
        },
        "response": {
          "id": "3c76d896-12c6-4a14-9949-9d8de6250618",
          "status": "OK",
          "code": 200,
          "responseTime": 1171,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e2d12f-b548-4e95-ac4a-f5c44d35e866",
        "cursor": {
          "ref": "ef561d80-3c51-4604-8a0f-4676cb5bb163",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "85c6db62-545a-49a8-9087-c5672598b1f7"
        },
        "item": {
          "id": "c9e2d12f-b548-4e95-ac4a-f5c44d35e866",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "66df9030-8c08-4fe0-a48c-eb310eadf8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55210f7b-95dc-4c79-8021-ba4ba70f404c",
        "cursor": {
          "ref": "dfa88b5e-a2e8-4bd3-83bf-903cf89d37a3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5e3e520a-6061-4ba2-86fd-549b89bf6d1b"
        },
        "item": {
          "id": "55210f7b-95dc-4c79-8021-ba4ba70f404c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1315f94e-2d6d-44d5-9bb4-83613c3adcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07d9e84-ff77-4487-b2b8-c1d0107433d5",
        "cursor": {
          "ref": "d136211b-9052-401e-baef-929c3a4e8a61",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b39f3a3d-5638-46c7-88b8-01de4af4af48"
        },
        "item": {
          "id": "f07d9e84-ff77-4487-b2b8-c1d0107433d5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b307bcc6-5070-497d-8590-0fd3bfad326f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12815930-02b8-487d-86b5-870eea9fdb1a",
        "cursor": {
          "ref": "d36fcf66-39a2-4e34-8c53-95481a7311a8",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "57f2aac3-0952-453f-aa08-58dc5531ca60"
        },
        "item": {
          "id": "12815930-02b8-487d-86b5-870eea9fdb1a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "00e160aa-a734-41b2-810a-d13c3d2be26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528ffb10-6a95-4778-91e0-b3cec2c50399",
        "cursor": {
          "ref": "b78f8b30-f5d4-4652-afeb-99029ab57760",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2a86b1d4-5491-4691-9ff9-d14622cdd796"
        },
        "item": {
          "id": "528ffb10-6a95-4778-91e0-b3cec2c50399",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b864e81b-9582-4f1e-9719-7402a604f08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7c0d83-8cc2-4ce9-866c-085e8ddd1788",
        "cursor": {
          "ref": "d7df042f-c327-4d8b-81f6-13e23a7f085e",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "462cc6fb-96e3-4f52-944e-9de1b8f8c64d"
        },
        "item": {
          "id": "3b7c0d83-8cc2-4ce9-866c-085e8ddd1788",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0695e04b-4cd0-4d6a-861f-f0f597ca96a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e032960e-c924-4d2e-8cee-3913e7e676ed",
        "cursor": {
          "ref": "9825fab3-7be9-4f36-8bd5-9861cb703f19",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4eeb1a05-3f18-4fbd-a9e0-e18ed718d6cc"
        },
        "item": {
          "id": "e032960e-c924-4d2e-8cee-3913e7e676ed",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "51fd0461-460f-4d3f-a784-a4b404a99561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c563ab-2967-48d0-9813-c278b96846b7",
        "cursor": {
          "ref": "8429b14c-4697-4cdd-afa7-61ca11029e64",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "453e5cb1-8c44-44a4-807e-0fafd5a604b2"
        },
        "item": {
          "id": "a5c563ab-2967-48d0-9813-c278b96846b7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0afd4c6f-db79-4f49-bef3-1270ac746b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5d2055-6345-4ae1-a9a0-90a3c19a5b3a",
        "cursor": {
          "ref": "8a3c8b25-70a5-4470-b2d6-0d0a3f93b2db",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8c0e5b3a-6ec3-4ae8-9e95-12c663f1ade0"
        },
        "item": {
          "id": "ec5d2055-6345-4ae1-a9a0-90a3c19a5b3a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "01c16926-51a9-4857-a18f-544e47f5726b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160e8f77-1072-4fd6-9fc8-95aaa41194ea",
        "cursor": {
          "ref": "933edc2e-f0ff-49b8-be42-8815a1abf869",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "01bd6c19-651b-4594-b34b-345ccdcadb49"
        },
        "item": {
          "id": "160e8f77-1072-4fd6-9fc8-95aaa41194ea",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "aad5dac0-23ae-47f2-b6db-571128997c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df485113-ff83-4a98-8540-43065bdfddac",
        "cursor": {
          "ref": "5588d3ea-8d43-49be-8e7b-9301a5e576ca",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c044cb1c-666b-419f-8fd7-08dbfe2ca17a"
        },
        "item": {
          "id": "df485113-ff83-4a98-8540-43065bdfddac",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e0e6abfa-c6ad-4189-b8f2-ec209791a706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e835c9-cf70-47bb-8250-2210eebb6060",
        "cursor": {
          "ref": "31cde76b-6b2a-4af9-9edc-595b97cdbf1e",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3b425d5e-54b1-4321-b272-5923bd886fbf"
        },
        "item": {
          "id": "15e835c9-cf70-47bb-8250-2210eebb6060",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "22cb3341-e1cb-4010-9f8f-14efddb952f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e5e21e-565b-431b-ac37-63f4ddce9796",
        "cursor": {
          "ref": "a1836c92-fd3f-48f5-9a26-4d19a1a4943a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a517db41-6178-4d41-b2fa-0eb8787f5f50"
        },
        "item": {
          "id": "10e5e21e-565b-431b-ac37-63f4ddce9796",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b3c2c59b-8491-494a-93c1-91fcc99945e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c535c4ae-b0f1-4ee9-a865-2a5364e339b2",
        "cursor": {
          "ref": "ab6b95f5-9d10-4605-9ff8-da51893863f1",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0642283b-b6cb-4d5e-b0de-24ec33b7800e"
        },
        "item": {
          "id": "c535c4ae-b0f1-4ee9-a865-2a5364e339b2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "07bd2882-2bbb-42c8-adb9-3d75962aa6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ab5800-0e20-43aa-a98f-94c4d8b771bf",
        "cursor": {
          "ref": "ee694901-f02a-426f-8a63-13b5e1bda329",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1ffed8fa-21bc-4f7b-817a-b30256268420"
        },
        "item": {
          "id": "32ab5800-0e20-43aa-a98f-94c4d8b771bf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2d05adfb-c875-4d8b-b5ed-8ae276e009c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbf9516-d8a6-425c-91e6-f794a8a10c25",
        "cursor": {
          "ref": "0937257e-3e49-4a48-9994-da7c1643da75",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8e4c5460-3190-411e-9371-9ab4c6b6c93f"
        },
        "item": {
          "id": "acbf9516-d8a6-425c-91e6-f794a8a10c25",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8d38cb74-a202-4a97-8143-1079c3bf347f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8f2611-6706-451d-bdce-a972faa6b5da",
        "cursor": {
          "ref": "b9b6801d-2e21-4f53-aab8-3abc042b81d5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6091eb11-7af8-4cd6-bdab-596ad66f7109"
        },
        "item": {
          "id": "db8f2611-6706-451d-bdce-a972faa6b5da",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e4b09731-c66e-4597-918d-f0b6ed12b81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5206a0-3282-4ab3-b68a-b948924ada76",
        "cursor": {
          "ref": "5c23ee5a-96b4-425c-9501-b9e19dfc13cd",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "646db86c-729f-4b8a-8813-4b24f025f692"
        },
        "item": {
          "id": "6d5206a0-3282-4ab3-b68a-b948924ada76",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8e696f50-d688-4e73-a1de-a6d58a7b33b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236e2256-ec47-48f1-966b-a2853dadf7d1",
        "cursor": {
          "ref": "2ef7495c-15cb-4df0-a00e-fa2c5f172508",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "69818b1f-eb00-44f6-856b-ca59c1828ca5"
        },
        "item": {
          "id": "236e2256-ec47-48f1-966b-a2853dadf7d1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f2da1ccb-f749-42f7-8b8a-ccb6532a18da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb16126b-38bf-4098-8dc0-b7edb6eba532",
        "cursor": {
          "ref": "db3e319d-1f0f-4465-ae6f-6b22d3b4665d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "48184181-e24e-423e-8394-4dc0dcd384be"
        },
        "item": {
          "id": "cb16126b-38bf-4098-8dc0-b7edb6eba532",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3f5d4516-181f-4044-bb27-6fc4ec69f392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada1d332-5a1b-4887-854b-9e0ba644a8c0",
        "cursor": {
          "ref": "1031d72d-2100-46ae-82c6-b7ca3710e44e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cffb93c9-6c6f-4895-bedb-10ca3255f093"
        },
        "item": {
          "id": "ada1d332-5a1b-4887-854b-9e0ba644a8c0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a5de1015-6ae4-4dba-9a77-6f47614eafea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99e5119-97e7-444c-8b55-1c30b8fd63b1",
        "cursor": {
          "ref": "02e1ae8d-e5fc-4959-8ef9-fbddb7907873",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2c8171a0-5718-4a1f-b516-148f2c3b0d90"
        },
        "item": {
          "id": "d99e5119-97e7-444c-8b55-1c30b8fd63b1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c496c7a9-4bfa-4bd8-9283-a8eab0c0050d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8b8b84-2608-4ce4-a3ea-d61007250768",
        "cursor": {
          "ref": "5eca581b-5381-4118-846e-bae797d281d2",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e12fccff-de7a-4734-ab4b-31b02bf560b1"
        },
        "item": {
          "id": "6f8b8b84-2608-4ce4-a3ea-d61007250768",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "850b8d9f-6bf2-4df6-9cb3-af0ce03d42ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95633d2c-6973-4ddb-ab5d-9e35740f8685",
        "cursor": {
          "ref": "704609a4-cd32-4267-be9b-01c80d51b5f2",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0e818d79-4c72-4c5e-bf3d-726cf95acdbe"
        },
        "item": {
          "id": "95633d2c-6973-4ddb-ab5d-9e35740f8685",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "28c054e5-d758-4e16-b8d3-b1fad1864090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c79273-f8e5-4a78-8a5f-c1e7495c5e16",
        "cursor": {
          "ref": "739a0a40-6b73-424b-8b1a-91de7bebbd34",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "86605ff4-0050-42ed-8d17-8496d8b7c372"
        },
        "item": {
          "id": "19c79273-f8e5-4a78-8a5f-c1e7495c5e16",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9da9042d-8ed1-4306-b474-9c1ded4a03a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70556e36-904c-49c3-b454-7530e89105b6",
        "cursor": {
          "ref": "2f6b8cb7-ac70-4f4f-8034-cc787748dfcf",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4b2ca69d-7282-4eb6-8ace-0a7fb97c846d"
        },
        "item": {
          "id": "70556e36-904c-49c3-b454-7530e89105b6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0989fe53-73e4-4c84-b86e-e009f6bcbf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bd1335-e729-4ac9-af62-23a28a8cbc69",
        "cursor": {
          "ref": "a5ad2858-1b5e-4379-9548-b8ca8858e296",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "43336faf-af58-4d38-a964-b19295164d95"
        },
        "item": {
          "id": "f7bd1335-e729-4ac9-af62-23a28a8cbc69",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d35963c2-faef-4e8e-b19c-51b602632212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fc8aeb-8fcd-4036-8246-df24bcb83597",
        "cursor": {
          "ref": "6d92fe50-bcee-41ac-bd4d-bf5e49156669",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a137a3a2-a752-47f8-9956-ae40a8512071"
        },
        "item": {
          "id": "53fc8aeb-8fcd-4036-8246-df24bcb83597",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "829af286-c4da-442b-b31b-d81b7a6610e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72bf7d6-4ccf-4d92-ac96-9b400c9b177f",
        "cursor": {
          "ref": "c708ebb3-bf24-43e8-8f1a-3ae771647c46",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fe452986-30a8-4fe2-b90c-7f80bd62747a"
        },
        "item": {
          "id": "f72bf7d6-4ccf-4d92-ac96-9b400c9b177f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9d678083-1744-48d9-b6ab-33d750faef9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a626862-6423-48a4-b1e1-f1602897407d",
        "cursor": {
          "ref": "b85605b2-c477-488d-b1a4-15563e2c28fb",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0eceaa15-89c9-4f7a-9b40-40237cdda9e6"
        },
        "item": {
          "id": "3a626862-6423-48a4-b1e1-f1602897407d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7c2954a0-1d31-40fc-85f6-d14cb0f82467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9986a271-a6c8-4bcd-9c70-d121fbce8c29",
        "cursor": {
          "ref": "4ee6bc37-4b55-4eee-b543-3e9d9b270a08",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cf084c65-8506-4c30-ae8d-baf7494ab3c4"
        },
        "item": {
          "id": "9986a271-a6c8-4bcd-9c70-d121fbce8c29",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "25d43d3f-225d-497e-843c-b7fad14bafb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6318dce4-124b-4f35-b24d-aa4c34e969de",
        "cursor": {
          "ref": "f68ba052-74db-4bf4-b44b-5816771137bb",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d9ca3896-9b1f-476d-b4d5-443fcaba3fd8"
        },
        "item": {
          "id": "6318dce4-124b-4f35-b24d-aa4c34e969de",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cab82144-4729-41f1-be24-7b2595487022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90105b1-1834-4475-b07f-0eb84baa5946",
        "cursor": {
          "ref": "5bec151a-7c4e-40aa-ac12-361546d30f57",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c928d17b-ba1a-4b40-bb5b-6d6bf84f7d23"
        },
        "item": {
          "id": "f90105b1-1834-4475-b07f-0eb84baa5946",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9e9698b5-1b4f-4ff5-b20b-6d98117e605a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6eb500-f9f6-40b7-93c8-6a8c8df5e979",
        "cursor": {
          "ref": "0ce0d560-4a88-4bf0-b369-899434e3b33f",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e2f91d8c-bab9-49e4-a2dc-3908ea4dc452"
        },
        "item": {
          "id": "5c6eb500-f9f6-40b7-93c8-6a8c8df5e979",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a0bb2e2d-3e70-44a1-b238-e2d8b4fa9fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cacfb0-13fa-4366-a2f7-fc6958ecba12",
        "cursor": {
          "ref": "8bc353a6-1b09-490b-9609-e48780d7f52d",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b51aedd6-cb25-4a8b-9e92-ac3a1e19e9ce"
        },
        "item": {
          "id": "b7cacfb0-13fa-4366-a2f7-fc6958ecba12",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1d362ab2-6a79-41a7-8acb-6ca2518f39df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2acf90d-d124-4449-b379-465a01574489",
        "cursor": {
          "ref": "b325f6f3-8243-4bff-97f9-88531f5fdda7",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a2739d3d-203a-44ad-8f53-a3ab6903fcc0"
        },
        "item": {
          "id": "d2acf90d-d124-4449-b379-465a01574489",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a4608400-d409-44bb-87ae-8d9a6b4cf718",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 605,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342e7cce-6c7d-4237-b9a6-da704ca13617",
        "cursor": {
          "ref": "30eb03d8-9a0f-4ee3-a840-40d08c5bcbfc",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fc89ba67-506f-4c00-9bf4-5f183395d972"
        },
        "item": {
          "id": "342e7cce-6c7d-4237-b9a6-da704ca13617",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4991fa75-9e73-418a-9d68-7931fe21d1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181cf00c-f34c-4925-a341-805a60978228",
        "cursor": {
          "ref": "3c536ce3-3a07-4c29-a3f8-5cd3593c4ddf",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f18644c0-4abc-4993-ac58-292785b8f423"
        },
        "item": {
          "id": "181cf00c-f34c-4925-a341-805a60978228",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "aa7b7c43-22b0-46e3-9d3a-b0484720674f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfddc1b-3533-496b-a1bd-32646a4e4e2f",
        "cursor": {
          "ref": "a75face8-acc5-4aa0-8d31-d98633180e6b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "df8b74ef-ad00-48b2-adf4-e17abd0f3185"
        },
        "item": {
          "id": "5bfddc1b-3533-496b-a1bd-32646a4e4e2f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b25ecfa5-d04d-4f34-8d7b-6e22f86748d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38c96fe-088b-4fd8-92d8-c8d761217d0b",
        "cursor": {
          "ref": "69753f16-9eb0-4eff-af82-9306200e430a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "562b313a-6cdb-48ba-8418-84208002f26d"
        },
        "item": {
          "id": "c38c96fe-088b-4fd8-92d8-c8d761217d0b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f943dc75-137f-46e6-b94a-e492becfb8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad516459-571b-4c85-83ad-1cf9e4167e9f",
        "cursor": {
          "ref": "619b9623-5d78-4fd2-8e6f-01619e825848",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "017e59d8-769d-4316-992b-7697b33f4d6c"
        },
        "item": {
          "id": "ad516459-571b-4c85-83ad-1cf9e4167e9f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "77117398-93ec-4cf8-9c78-82d571564978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6f5da1-fc76-47ce-ba42-2a947b0d4ae6",
        "cursor": {
          "ref": "b1489c51-f8b0-405f-ab3f-3499cc50dca4",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c6ec685c-f2a9-4a0b-906f-aecd5c2f70a7"
        },
        "item": {
          "id": "ac6f5da1-fc76-47ce-ba42-2a947b0d4ae6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3baeeb3b-cd8d-427c-ad9f-7f2a66c0277b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573da98d-2fe1-4d55-9986-3eb40658cdbc",
        "cursor": {
          "ref": "baf2e797-88b0-488b-8c3d-94c85b4a1c19",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7e98fd77-c7f6-4341-bc2e-653c204f43ed"
        },
        "item": {
          "id": "573da98d-2fe1-4d55-9986-3eb40658cdbc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3fc19fc8-6573-4751-94f9-a22f4e2f42dc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 604,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b64a522-8f6d-4093-8032-2de8e086b873",
        "cursor": {
          "ref": "bda4f1f7-60e6-41a1-81ad-6558002e8eff",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4a3b8450-86db-4b9f-9cb4-4f2d499a3ce5"
        },
        "item": {
          "id": "2b64a522-8f6d-4093-8032-2de8e086b873",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "479d148b-b5dc-4cf7-b56d-6df2f193af56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a97b5d-012b-42db-85da-9a484d183838",
        "cursor": {
          "ref": "02eb1249-fb78-4c0c-8e23-786b1b70c589",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "baae44d7-d07a-4bb1-9118-7e19eb4045b0"
        },
        "item": {
          "id": "f0a97b5d-012b-42db-85da-9a484d183838",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "76b13723-2544-4dd0-a7ea-dac7b6c6af76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a2ed87-ea52-4d1a-af1c-a51c1d7421c5",
        "cursor": {
          "ref": "18beedc0-e001-4f14-a19d-2145cc9f28d2",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2bf292a8-c725-40a0-b65e-e642857f8a7f"
        },
        "item": {
          "id": "d4a2ed87-ea52-4d1a-af1c-a51c1d7421c5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4a9022bb-b0c3-4f08-861c-9811732d9e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2286bd3a-99a9-423c-8c85-ba71e721b716",
        "cursor": {
          "ref": "3f37e203-9871-4b2f-ad0e-c971e8782438",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6cb38d52-3e69-4046-a247-f16245b7f089"
        },
        "item": {
          "id": "2286bd3a-99a9-423c-8c85-ba71e721b716",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0a80d8a5-eed6-4632-9c56-37746ef8079d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac70c1f-dbc1-4680-a640-0f9333ec8edb",
        "cursor": {
          "ref": "b9dc1975-ddee-4590-930d-81af4d5c5daf",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1aea7687-63a1-45b0-9ff4-22632e4bc313"
        },
        "item": {
          "id": "1ac70c1f-dbc1-4680-a640-0f9333ec8edb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2f3f8ce5-578d-44d0-a2cf-dece71230f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7077f4a9-fe1c-4047-b1e7-2d213fb431e1",
        "cursor": {
          "ref": "3f446b82-e75a-4331-9feb-bf503469d127",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "62ab3198-1fe0-493d-8816-395c3f3e9f7c"
        },
        "item": {
          "id": "7077f4a9-fe1c-4047-b1e7-2d213fb431e1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "747c64f9-d4ee-4279-84c6-4701ba3baf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f98219-13b7-4164-a337-6f1e71206330",
        "cursor": {
          "ref": "5515cba4-5f1e-46da-90ad-a8a346744fea",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "94249c8c-7a83-4784-9872-697f1574fec4"
        },
        "item": {
          "id": "f7f98219-13b7-4164-a337-6f1e71206330",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c1d17d4f-cb38-4763-a9f2-566e0cf0b915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1045cf00-23aa-48f8-85c4-47b725010859",
        "cursor": {
          "ref": "a14fff1b-f71a-4f47-b2af-f76da902800d",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5708c1d8-742c-4900-ac50-6d04dfd3b5d3"
        },
        "item": {
          "id": "1045cf00-23aa-48f8-85c4-47b725010859",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4103597b-bfcb-4e54-93b7-ad8a16a4dfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8be7a37-e049-491a-8faf-0d9434aac34f",
        "cursor": {
          "ref": "bd018f1c-947c-46c1-aa81-0a671374785c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "741200ce-2246-4511-b069-27d6ba7be185"
        },
        "item": {
          "id": "f8be7a37-e049-491a-8faf-0d9434aac34f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6ad88900-0320-4e38-aa47-1600a6501d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbc7b01-91bc-4085-84be-1e486f32d6f3",
        "cursor": {
          "ref": "58631bf0-1063-45ba-9f50-6db89f0c9580",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ed5cd9ce-8d8b-46ee-acb9-6ef8f95ce3f2"
        },
        "item": {
          "id": "8cbc7b01-91bc-4085-84be-1e486f32d6f3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "329a149e-7c83-4f50-a327-b7cb215f424f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836b5542-a2c4-4f91-abd6-58483676ef4a",
        "cursor": {
          "ref": "6d7a5cac-d392-4882-9ae3-4b1b0bc24d5a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5eb58424-14fb-4699-9310-bc11758553a7"
        },
        "item": {
          "id": "836b5542-a2c4-4f91-abd6-58483676ef4a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "46dc53ef-89ac-4f93-8a9a-eea86c8d6840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c82da3-265a-49c3-8be2-3e596688d6d5",
        "cursor": {
          "ref": "1e5f6b70-3ec7-49ea-8bc6-3634409bc4e3",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1fa54f2f-72aa-4a89-8788-ff1ccf2f4680"
        },
        "item": {
          "id": "45c82da3-265a-49c3-8be2-3e596688d6d5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e913b567-9706-4fa2-88e5-bccca8764ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2913e60b-b2ba-4e85-9db7-cfda810e79fb",
        "cursor": {
          "ref": "490ab068-cdf8-4130-ad8e-bff9740259fd",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0438c0e9-d404-431a-ba1b-16ce428b9ba3"
        },
        "item": {
          "id": "2913e60b-b2ba-4e85-9db7-cfda810e79fb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8f29af2e-0ede-4256-b697-9e4ea643eeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf978bf-d6be-4b45-aaf6-4f5730c42496",
        "cursor": {
          "ref": "0627245b-eab6-4d53-8707-9e602ae72932",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "86fca6ba-2c76-427f-80e8-51bb1857f996"
        },
        "item": {
          "id": "2cf978bf-d6be-4b45-aaf6-4f5730c42496",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dbcbc9fc-5888-4647-9bef-d8253eed20d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd27ee6e-371e-4e3e-b97c-fca41989d9a4",
        "cursor": {
          "ref": "ffd74690-46ef-4989-911d-f4eed4db2fe2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e6107569-2c77-47cb-b4f5-f10498660976"
        },
        "item": {
          "id": "bd27ee6e-371e-4e3e-b97c-fca41989d9a4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f2ec8382-e2ae-432f-8481-3769eae9a550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efc4140-b6d6-405e-8fa6-660a4ac18b70",
        "cursor": {
          "ref": "39eb5e95-3f5c-47e1-88db-be2b17ebafc1",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b1cd6d14-04a1-4c81-a0fb-05ae1b28a4ae"
        },
        "item": {
          "id": "9efc4140-b6d6-405e-8fa6-660a4ac18b70",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6aa11da2-4a3a-47cb-a9b4-4f3924bb6885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b9dfc3-eae0-4cdd-ab81-db0e5eed9b65",
        "cursor": {
          "ref": "fa350f05-29c0-4573-8d23-60407064a430",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "67bbf83b-94ac-4212-b791-186334a48d47"
        },
        "item": {
          "id": "b0b9dfc3-eae0-4cdd-ab81-db0e5eed9b65",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "08480249-3b44-4381-a169-106138d5ee16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cb33a3-21e8-4b91-b727-44e3ab091571",
        "cursor": {
          "ref": "3d80e89b-020b-4b1b-833a-ee7aa8e7992d",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f2622771-9848-41ae-a24b-168f6c49c082"
        },
        "item": {
          "id": "87cb33a3-21e8-4b91-b727-44e3ab091571",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "27494d7d-646f-4512-bac4-6044cbe3e67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7cfd88-93d5-4a2d-a832-6f90c90da9d0",
        "cursor": {
          "ref": "78803905-90c8-4005-b64c-d0d5ccbd2c80",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "35449387-2115-408f-bcf9-6361f16c10fb"
        },
        "item": {
          "id": "dc7cfd88-93d5-4a2d-a832-6f90c90da9d0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7891830b-4a57-4f34-9b80-11dec1b194b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77a45b3-fd1c-427b-ab1e-da0e4f22e2db",
        "cursor": {
          "ref": "a6370cec-1da2-4acf-b92e-dade6f25ced0",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b716b9e2-7d8b-4843-95a2-fe62cb369881"
        },
        "item": {
          "id": "e77a45b3-fd1c-427b-ab1e-da0e4f22e2db",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2e53bc9e-165a-421c-9d7c-9c186ba2e18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a18ddd-f646-419b-aa4e-f073989a1e3c",
        "cursor": {
          "ref": "9efaddb5-1fb1-49f5-88eb-4602278a9801",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "40c18cba-c1d8-46cb-a017-650150081871"
        },
        "item": {
          "id": "22a18ddd-f646-419b-aa4e-f073989a1e3c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "86dadf66-181d-4bee-af88-77a3b933b1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de0c3b1-215d-4f16-b798-a96032da4a31",
        "cursor": {
          "ref": "7b000839-553b-446c-9d45-7ab9f1702a57",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e55f3a7b-cb54-4f45-b188-050c1b8b722b"
        },
        "item": {
          "id": "6de0c3b1-215d-4f16-b798-a96032da4a31",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9c658560-77cc-4750-8e08-795dd22a96e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42325366-3537-4d32-a8b8-95c42f40835b",
        "cursor": {
          "ref": "ae0e547f-ad01-4ee8-a84f-67d9cdfd3704",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4990cf86-a66f-49b2-adaf-a1adffa7ef76"
        },
        "item": {
          "id": "42325366-3537-4d32-a8b8-95c42f40835b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "816a35c8-dce8-4758-93df-abd66e17418b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6b32db-3db0-4ce6-9182-a00f57d4c482",
        "cursor": {
          "ref": "9fba5def-fb62-4b99-9b5f-22ad5dc482d6",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "741b8747-7131-44c5-863e-ad18a4144463"
        },
        "item": {
          "id": "3c6b32db-3db0-4ce6-9182-a00f57d4c482",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0e119ea8-622e-4a3d-84ff-ec4e08f8a791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de830781-18c1-4edc-8400-795306c7e302",
        "cursor": {
          "ref": "2638f082-6174-49cc-9b9b-9a75fafb052c",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4f4ac739-8b0a-41ea-b8e2-0cfb3a0f89a8"
        },
        "item": {
          "id": "de830781-18c1-4edc-8400-795306c7e302",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dde5aab2-d252-4e1d-a7f2-0c3565f0f317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb60dab-d03e-46cb-b3f4-8abbbc03debf",
        "cursor": {
          "ref": "1e161bd0-f4dd-42ad-94c8-f42d61a1a3ce",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6fd1d79f-dfde-4069-b213-7eca668f2ecc"
        },
        "item": {
          "id": "3fb60dab-d03e-46cb-b3f4-8abbbc03debf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0be1a923-2c3a-4107-941a-2aa9c3d29cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439b912e-9bc7-4dc7-9535-416a98b9282f",
        "cursor": {
          "ref": "de9d2547-0f57-4e1c-bd77-abc8ced6b922",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "48a93552-09bd-4142-938e-f5ba3bf8301a"
        },
        "item": {
          "id": "439b912e-9bc7-4dc7-9535-416a98b9282f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a1992750-e370-4f59-b093-7ff79a7c3064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526f317e-2d1d-4d45-bcf9-7097e51e9f00",
        "cursor": {
          "ref": "72feb926-6abf-41b2-aa8b-0b036282e82b",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f502711f-bad7-45f6-805d-cfe3d08f2c96"
        },
        "item": {
          "id": "526f317e-2d1d-4d45-bcf9-7097e51e9f00",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1c47fcf8-dab9-4907-93fa-70e89397c7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002c7879-0aeb-40b0-8e17-f0f1154c8acd",
        "cursor": {
          "ref": "76201d59-a256-4989-b406-8d72955b6fd9",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fbdb71b6-36f8-4a33-b08e-5249c6083036"
        },
        "item": {
          "id": "002c7879-0aeb-40b0-8e17-f0f1154c8acd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fa6c5772-9c6a-45ee-a0ac-767081df514e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211f08b7-ec5d-48f0-8c83-3fa29469663a",
        "cursor": {
          "ref": "529605a3-2b12-4d9e-866e-b9d8bee67933",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7e447df6-b339-48c5-ac09-9a8b66f0416c"
        },
        "item": {
          "id": "211f08b7-ec5d-48f0-8c83-3fa29469663a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8a11671e-76e9-456e-9f88-b4ed372a0c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2469ec3-0f06-4bfc-b9f5-3d8856cd07be",
        "cursor": {
          "ref": "a10594e1-75e5-4102-ab3b-ba4f254b20c4",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b5e6c0b8-31fd-465c-af74-58f15d91ae58"
        },
        "item": {
          "id": "a2469ec3-0f06-4bfc-b9f5-3d8856cd07be",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "320958ef-dfb1-497b-a07b-b26f8be7e8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87c2549-39ff-4079-a34d-e30b7f7f7eb6",
        "cursor": {
          "ref": "b5403dfa-6946-43b1-b9bd-22e9c61ee2ae",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a1374389-c7e5-474b-8559-6caa4ab651ed"
        },
        "item": {
          "id": "d87c2549-39ff-4079-a34d-e30b7f7f7eb6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d1f7e839-30a1-457f-91ec-5489e57931a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5239974-7736-4111-8955-ce39bf8baa6a",
        "cursor": {
          "ref": "43353978-a16e-41d6-a12c-2f0580c7dcd5",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b3783951-66f8-4504-9cc4-9eb53e4d69c6"
        },
        "item": {
          "id": "c5239974-7736-4111-8955-ce39bf8baa6a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "31f14131-e330-4c68-88aa-78b279ef9bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7b5d4d-b8d4-48e7-9fed-8c71a51b0e04",
        "cursor": {
          "ref": "b44fe992-4ea2-40cd-a2a5-ded065e5855b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f3d64150-c908-4ec1-860e-4315a8f7498a"
        },
        "item": {
          "id": "ab7b5d4d-b8d4-48e7-9fed-8c71a51b0e04",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "089df5d4-cb8d-48ca-9060-077b2186a4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a53f575-97ab-4442-bf70-c81c0cfd62b3",
        "cursor": {
          "ref": "0a71c371-1960-46f0-99a5-3c80baf0753d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0758d221-3be9-4845-86dc-8ec177ea05eb"
        },
        "item": {
          "id": "2a53f575-97ab-4442-bf70-c81c0cfd62b3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1928dff6-15ea-47a2-949e-57aeac52286d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad98c574-1751-4709-b7a9-3fa4a3b3e868",
        "cursor": {
          "ref": "348403cd-f55c-41c8-8a16-451a51b65238",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b98ed087-cbdc-4416-8c2c-bfd610a66a6b"
        },
        "item": {
          "id": "ad98c574-1751-4709-b7a9-3fa4a3b3e868",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ca07fa3e-43ca-46fd-954d-1ddcbfebe37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e0ff22-fb5b-4e34-8778-45e39842b6e6",
        "cursor": {
          "ref": "0e7fa002-e45b-44d7-ae5a-3158e1617af7",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "61ac9070-a9fb-47d9-b51c-3501253a0426"
        },
        "item": {
          "id": "22e0ff22-fb5b-4e34-8778-45e39842b6e6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0dabc7bd-2bf5-4e8c-af3c-355bc9a5187b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9172c1-bec4-4930-9223-e07a2cbb3166",
        "cursor": {
          "ref": "695507f7-9438-4276-8631-e8b701894c89",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c7f2fc8a-b4e7-4671-87b2-c2b30096e0bb"
        },
        "item": {
          "id": "4b9172c1-bec4-4930-9223-e07a2cbb3166",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8b3f09c8-b024-44ca-a352-be1aa4edf026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cea8fe-4b57-4cbb-b90c-eb3a69666497",
        "cursor": {
          "ref": "3dbacea2-32ae-4e38-b696-7a67b018f533",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a879ae14-7a19-4847-8186-0976a66c8afc"
        },
        "item": {
          "id": "36cea8fe-4b57-4cbb-b90c-eb3a69666497",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a41170d2-7e72-4a26-8635-ffa2837ad39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccccc0f2-0ff1-4db0-b8bf-455315d0d417",
        "cursor": {
          "ref": "35463699-afd8-498c-bb41-a7b4bb63de62",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "784bdb5d-00ae-4755-81dc-053e5cfdb72a"
        },
        "item": {
          "id": "ccccc0f2-0ff1-4db0-b8bf-455315d0d417",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "74515613-6a05-444c-8747-d4c16569232c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1918684-5dcc-47ca-97dd-1d828f465ba6",
        "cursor": {
          "ref": "125e25a4-8185-412b-8d51-2a576b9fda26",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "514242a3-ad56-416e-946f-490592c5af9d"
        },
        "item": {
          "id": "e1918684-5dcc-47ca-97dd-1d828f465ba6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2e56e687-f281-435a-a015-2411e55cfe9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bb269b-a162-4170-ab12-ac6b8a3d4f83",
        "cursor": {
          "ref": "5730e2f6-64a6-4b56-bfdf-27e6a616400d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b6dbf779-b49d-4bd3-b940-1afdc87b13b5"
        },
        "item": {
          "id": "b1bb269b-a162-4170-ab12-ac6b8a3d4f83",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d6e2b01a-c503-47ab-a9c0-7e6c8a3d6382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13c26da-fc49-493f-bd82-3c7609eba348",
        "cursor": {
          "ref": "4d485c91-94a0-400e-9998-0ae5ddb3f544",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ba89fb4a-d392-4af3-98b8-b485629aeac6"
        },
        "item": {
          "id": "c13c26da-fc49-493f-bd82-3c7609eba348",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3526cb6c-0087-4566-9ded-d3a82321e94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2d0537-d2e7-4a80-ae34-f6f1f9e65930",
        "cursor": {
          "ref": "f33c425e-f78e-438d-9390-2f883e3c8a4d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a6bdb62c-082a-4469-8e9d-d52d47180160"
        },
        "item": {
          "id": "3e2d0537-d2e7-4a80-ae34-f6f1f9e65930",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4211d149-82b8-471b-af58-f8653b4ba0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2772ce33-b4e0-4cc1-8f84-13fbd640c7b5",
        "cursor": {
          "ref": "67672c4b-2f7e-4a21-aa09-c84f70047f40",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1422ff8f-4820-4a9d-9da0-beb3c75cd7fd"
        },
        "item": {
          "id": "2772ce33-b4e0-4cc1-8f84-13fbd640c7b5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5a0a7c65-b56a-4178-9c72-31256d0950f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f8b8c3-36d7-44e3-807a-7a0eade402be",
        "cursor": {
          "ref": "4a395977-e6d2-4ce5-ba76-ef8743b4af31",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5117b8cb-568b-4925-9832-65acf89ac61b"
        },
        "item": {
          "id": "c3f8b8c3-36d7-44e3-807a-7a0eade402be",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2f586068-2039-4c1d-a9ed-7c7db5693b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8b7545-b832-46fb-a4c7-421caa649803",
        "cursor": {
          "ref": "dc65e0e1-f2ce-44ab-8d35-f3bbd2b4035e",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "592fabbb-f560-4c37-b2f4-14e7f64dcd49"
        },
        "item": {
          "id": "2e8b7545-b832-46fb-a4c7-421caa649803",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "54aefe52-0651-4416-b13a-6383469157d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276a034a-d97f-419a-bfdf-57f4515fabe3",
        "cursor": {
          "ref": "b8b07b5f-1536-47a8-ab67-147057389397",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "63fac8f4-9719-46d8-a657-fdeab38b7365"
        },
        "item": {
          "id": "276a034a-d97f-419a-bfdf-57f4515fabe3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c13b3774-e4ba-4992-8cc1-009c65040f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4f4f52-1475-4118-89a0-75477f30e06b",
        "cursor": {
          "ref": "672a2035-165c-44ea-ac71-7fd1430be894",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9009d57d-97e9-4939-9780-0a04c98ec5d5"
        },
        "item": {
          "id": "5a4f4f52-1475-4118-89a0-75477f30e06b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2e0db2bd-1518-4bd8-9380-a8d87ef626c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4538abc-327b-44a2-aad8-545ee26fa16d",
        "cursor": {
          "ref": "d47c1c55-1345-4cc0-b00b-54b1c44bc5c4",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5a848d8b-f1b6-4059-965a-d560853fe307"
        },
        "item": {
          "id": "d4538abc-327b-44a2-aad8-545ee26fa16d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f634b8f3-ae0e-47de-98f2-4b4ce984bc91",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b6a4f1-8d18-4726-b354-38b1332a96f2",
        "cursor": {
          "ref": "dbf4d7e2-a375-4479-89a6-e783d8750097",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2c5ae0ba-1d2c-4ac3-b3fa-0c6b01ced59a"
        },
        "item": {
          "id": "10b6a4f1-8d18-4726-b354-38b1332a96f2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e1fddd17-0c97-4cac-84c1-596b70913d8f",
          "status": "Created",
          "code": 201,
          "responseTime": 7547,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3391bf-f549-4d1f-8b79-40806d57b4fc",
        "cursor": {
          "ref": "118716a5-6131-4d61-91ad-d2721a738856",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "70a7dbf2-0f86-4c46-93ba-fd8f74e6e106"
        },
        "item": {
          "id": "be3391bf-f549-4d1f-8b79-40806d57b4fc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4f068218-7940-44f6-8064-18ac775036b0",
          "status": "Created",
          "code": 201,
          "responseTime": 7154,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "607c643b-9b0a-4b7d-bd3d-73eabceb0966",
        "cursor": {
          "ref": "8af619b2-ec91-4641-b054-5f0377c15cff",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "438da47f-0bd3-4fc8-b868-3bbd8af86081"
        },
        "item": {
          "id": "607c643b-9b0a-4b7d-bd3d-73eabceb0966",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9ed84ec6-bf8c-45ed-b8c3-4e9e8991281a",
          "status": "Created",
          "code": 201,
          "responseTime": 6950,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a3c1fe-9229-4e5a-9de7-29215acc0fb5",
        "cursor": {
          "ref": "5148f2e4-8b1b-4502-a478-62b41b1e81ea",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2d725ea8-3d52-4be2-b558-99e547e2d3ec"
        },
        "item": {
          "id": "52a3c1fe-9229-4e5a-9de7-29215acc0fb5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "546334c9-e26d-45b9-9f7c-4441cfcfbf6f",
          "status": "Created",
          "code": 201,
          "responseTime": 6690,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef258a7-212b-453a-96f5-2f1d6cedecf3",
        "cursor": {
          "ref": "802e3b69-d987-44e4-8c87-f38e696bca9e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "efaceec9-f87b-434f-ba86-3fc47f028de9"
        },
        "item": {
          "id": "3ef258a7-212b-453a-96f5-2f1d6cedecf3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4ba22d20-0880-48bc-9f75-d3b2bc9b3647",
          "status": "Created",
          "code": 201,
          "responseTime": 6585,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaafeba-9d03-4e4a-a174-e985d3e4032e",
        "cursor": {
          "ref": "5f35df63-ae70-469f-b051-719de8bcfdf6",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7f419a3c-a2b8-48be-8adc-ca3762e87197"
        },
        "item": {
          "id": "4eaafeba-9d03-4e4a-a174-e985d3e4032e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bb96481b-242d-4447-a52b-7fc6054846ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "027212ac-9e25-454a-a1a9-ec2dfe1bbdcd",
        "cursor": {
          "ref": "499bd5f9-80fb-46fa-b5f9-38307b48bbb4",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c92ed832-98a9-49c3-999d-32707ad12271"
        },
        "item": {
          "id": "027212ac-9e25-454a-a1a9-ec2dfe1bbdcd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a8ef2faa-96d1-4a5a-9976-4011608a3dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d67dcfb-da7b-4e05-90e4-d320a30190ca",
        "cursor": {
          "ref": "531636c0-204e-42b6-aadf-21af81d6dcd7",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "53da1479-c43b-4475-9839-288da21b1b51"
        },
        "item": {
          "id": "0d67dcfb-da7b-4e05-90e4-d320a30190ca",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b7bd79d0-c035-49d3-8f33-cb3bb25c6170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3df03d-4ea9-47fc-b708-1e3402fb70ec",
        "cursor": {
          "ref": "f7aa612e-333a-4306-823a-2eacc2f35f66",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7c97ba49-8d8d-4f83-bf0f-850061e2f896"
        },
        "item": {
          "id": "3d3df03d-4ea9-47fc-b708-1e3402fb70ec",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c1cb5139-90f4-41b0-8ba9-ce7a6305ee1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0a159c-b03f-4d10-b84b-cf0a6453dfa5",
        "cursor": {
          "ref": "285c68e4-6c49-4174-a8c2-67aaa3c8bfb2",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ec0f8272-b931-46f9-ba9f-88cfef6a3151"
        },
        "item": {
          "id": "6e0a159c-b03f-4d10-b84b-cf0a6453dfa5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bd6021ef-4e26-4c6d-8ed0-76ce04df944e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b475c8f5-e7f6-48ed-b3df-7b883e8d665d",
        "cursor": {
          "ref": "24580f8c-6295-400e-b833-83b61466b6c9",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0f4cd76b-7a00-4486-a039-6dee33629eb4"
        },
        "item": {
          "id": "b475c8f5-e7f6-48ed-b3df-7b883e8d665d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "53b2c272-edea-45fd-a6cf-24356a20fbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d2f75d-2153-4c46-9330-525cea0810dd",
        "cursor": {
          "ref": "fc48823a-6f7c-4306-9491-e6cb481c7cbd",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7276d153-3e9a-427f-8d27-6bad76664a7e"
        },
        "item": {
          "id": "c9d2f75d-2153-4c46-9330-525cea0810dd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ac13f265-a612-4c2a-9c46-a95411864090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25703a70-33e8-4408-a2b9-25bd10427ff3",
        "cursor": {
          "ref": "78d7ee70-431f-454a-8c1b-7902c5e01a09",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3d92602e-ac3d-4318-8c1f-74980e47e2d3"
        },
        "item": {
          "id": "25703a70-33e8-4408-a2b9-25bd10427ff3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "54024c93-5880-495b-8119-e7e8e42282e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807af8e5-5ab2-48cc-b23c-70dd2fc9b812",
        "cursor": {
          "ref": "c60cd083-c421-40b6-91f0-e445226461a0",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7bbdb69d-395c-4f26-ae39-3a29590b3ca8"
        },
        "item": {
          "id": "807af8e5-5ab2-48cc-b23c-70dd2fc9b812",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3a94949d-473b-4a2f-8d3f-61834cd767e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce406e1b-be10-48d2-8baa-a66a27243df2",
        "cursor": {
          "ref": "399e1bbb-f8b7-4b83-a961-0d69b690e991",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8c63daeb-d293-4ef7-94a8-349e2c474076"
        },
        "item": {
          "id": "ce406e1b-be10-48d2-8baa-a66a27243df2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9804b191-e9c6-47de-959e-efef258a4eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2d6fb2-d549-484d-acbd-b88d626b1812",
        "cursor": {
          "ref": "cc979f28-49d3-4124-adcb-4f0063f780f4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8a89055d-20fa-4829-a961-dd16e1a23d35"
        },
        "item": {
          "id": "fa2d6fb2-d549-484d-acbd-b88d626b1812",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "580a39dd-93e0-4b67-8c49-fc5781a177b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc781c0-544c-4545-afa2-cfa4f2598c2a",
        "cursor": {
          "ref": "7451c9ad-b3f5-4a0c-9964-d4d743d30b3d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "31b37799-8f48-4de2-8240-cec6154f4b3f"
        },
        "item": {
          "id": "0fc781c0-544c-4545-afa2-cfa4f2598c2a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b57de3b0-9057-4688-8bfb-ebdf4901b0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa42f8ec-8785-4733-b7dc-55bd47610c61",
        "cursor": {
          "ref": "410008c5-bf48-4bb1-a146-7d5655ce9102",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b2e9c18c-0c3f-401a-aa08-4ce51c212c35"
        },
        "item": {
          "id": "fa42f8ec-8785-4733-b7dc-55bd47610c61",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "888d09ae-7f2e-4050-a377-31346c22fc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20241017-11f7-4e4f-8c0d-fae9e83bb105",
        "cursor": {
          "ref": "f83eb8d8-7c52-456e-a21f-c8a23b2c8ae0",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "12e74951-2e53-4082-b493-33b9d49c9cbc"
        },
        "item": {
          "id": "20241017-11f7-4e4f-8c0d-fae9e83bb105",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ddf3a8ef-dace-4895-948f-74a02e5fc16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8920db-898d-426f-8f5c-df64d7de4696",
        "cursor": {
          "ref": "64692ede-febc-4e1a-b3d5-77dc7a6ec245",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3d7217e4-e7a0-4b94-a6dd-fdfc85cb9e75"
        },
        "item": {
          "id": "ff8920db-898d-426f-8f5c-df64d7de4696",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6e7256e9-75ba-4338-a84f-50b4d6aa39bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774a27cf-57f7-48b1-9710-d8d5e509f51b",
        "cursor": {
          "ref": "0f36ccec-4bf5-4594-bd86-1184ce84a15f",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "58f7d4f9-5b8d-41d2-8d5b-fab3a0424127"
        },
        "item": {
          "id": "774a27cf-57f7-48b1-9710-d8d5e509f51b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1f31f2fb-a4dd-422a-a766-4035280ea411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4445fa2e-cd40-4db9-82b7-e038776532be",
        "cursor": {
          "ref": "4e608856-50b2-4a64-b1d1-cd68bc69f94e",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ad16c426-ab72-496c-9878-bca1db11cc67"
        },
        "item": {
          "id": "4445fa2e-cd40-4db9-82b7-e038776532be",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "96cfb837-039c-48f2-b8f8-5065c7a4c5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6093f5e0-db1b-4625-8e40-bd25725a492b",
        "cursor": {
          "ref": "c63915f4-47f5-468a-bceb-bb8352526b60",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e6aadbd1-daee-4270-b6fc-3d1faf20f2d4"
        },
        "item": {
          "id": "6093f5e0-db1b-4625-8e40-bd25725a492b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "16885263-d951-4e95-8fac-d9355ff9e20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61ba673-25df-40c9-940a-c7a37f4f3882",
        "cursor": {
          "ref": "49748d24-5c2f-4774-8504-4eb3e9e41d03",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a729e0f9-b888-4eb6-921c-88b3875e9d4e"
        },
        "item": {
          "id": "f61ba673-25df-40c9-940a-c7a37f4f3882",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "04bceed9-a516-474b-8d19-06593ee2044f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1fbf3f-95c9-468f-af84-f230a001e926",
        "cursor": {
          "ref": "57b34a7b-815c-48ee-a6fb-6a4d054f9b22",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c6775dae-e134-4b8d-b01d-d6967f6faf69"
        },
        "item": {
          "id": "ba1fbf3f-95c9-468f-af84-f230a001e926",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "76cb2635-d2eb-4530-afdf-f07e2b562cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd32e59-0078-4b77-a0f1-99baed04facf",
        "cursor": {
          "ref": "b0ec5760-0da3-4f15-8e90-5c4b30c391cf",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5021977e-f2db-4ff5-8a75-2f3c79abd695"
        },
        "item": {
          "id": "6dd32e59-0078-4b77-a0f1-99baed04facf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5d3cc26a-3b7b-429b-8915-49791a3c13f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a554d5f-2c52-4694-9537-1f327681a789",
        "cursor": {
          "ref": "f2c27d80-e663-4cce-82fa-c6b34e38a69c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3bf4d4cd-2bf9-4d64-82d4-95ac76d4b487"
        },
        "item": {
          "id": "3a554d5f-2c52-4694-9537-1f327681a789",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f8460597-1534-4829-9308-d1f08e1c3310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908a4596-4fc8-404f-b1aa-70290ab44613",
        "cursor": {
          "ref": "0190047f-64ad-4359-8f76-c1efe22adcb0",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "993de365-ecc0-4c59-aee3-aa791420566c"
        },
        "item": {
          "id": "908a4596-4fc8-404f-b1aa-70290ab44613",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0d82fedd-aba0-421c-bdc5-877f6c78fc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb6e531-e85e-4eb4-85e0-b70b8c3fe45e",
        "cursor": {
          "ref": "bf35eb08-f343-4033-b1a9-10bd9ce49118",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ab01f29e-31a9-4879-8a20-84254cdb3dd6"
        },
        "item": {
          "id": "8bb6e531-e85e-4eb4-85e0-b70b8c3fe45e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2f88f659-bf6e-49cf-9d31-1ef0d4b31036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebffa24-ebc9-4350-adea-9f78989951ff",
        "cursor": {
          "ref": "5d9af93b-098c-4805-ab1a-0c3db1d82e6c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0523c674-506b-42a8-944c-2030c7e6ccc5"
        },
        "item": {
          "id": "bebffa24-ebc9-4350-adea-9f78989951ff",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "50f2c63e-e917-4056-8cdf-c827233c238c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c643ecc6-e605-4de1-9a90-07f000b1a9be",
        "cursor": {
          "ref": "723837f7-1f7e-4ca2-89dc-0d1deb3c0cf2",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "afbeabfd-cefd-4209-98e2-b6e6a25e2b9f"
        },
        "item": {
          "id": "c643ecc6-e605-4de1-9a90-07f000b1a9be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "001a45c7-73bd-4cab-9807-a502eeb08a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3208b2e1-5f6c-44e1-8cd0-008e520703c3",
        "cursor": {
          "ref": "b8cdbdab-ff9b-4fc8-8ad9-3a0f072aae91",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ce165cfa-8dc7-415d-b1a5-5ca2386f3e23"
        },
        "item": {
          "id": "3208b2e1-5f6c-44e1-8cd0-008e520703c3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9aec884f-5e88-4b07-9355-79deef1c56cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d612c0-f135-46d1-9724-ffb5806a7ec4",
        "cursor": {
          "ref": "2179144d-04b6-44b4-9662-0a397059cb32",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fd33a6f0-90eb-4326-ae6f-f91a08965727"
        },
        "item": {
          "id": "b9d612c0-f135-46d1-9724-ffb5806a7ec4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "71bad9bb-e662-4eb4-8677-81498ac9143e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fff002c-fcf8-437e-abfd-51a611c677b6",
        "cursor": {
          "ref": "2a4a643e-989d-44df-a9dd-d11e96d74885",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7d661e07-f1c7-4b5c-9055-575a7eddda05"
        },
        "item": {
          "id": "2fff002c-fcf8-437e-abfd-51a611c677b6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "36b38db4-4354-4f44-9a87-4a3bfe0b3432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9d0cd3-a999-4a18-9c6e-edcf41fddf30",
        "cursor": {
          "ref": "f7bc73bf-9cf3-4b12-ae74-387621ae88d0",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a5c130cc-9cd8-47e9-adf9-5f0c719794f0"
        },
        "item": {
          "id": "3d9d0cd3-a999-4a18-9c6e-edcf41fddf30",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4787cd7e-061b-442b-9cfc-65394c5cff36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea6f7d5-4d6c-401d-9ba7-271c5dbd2dcb",
        "cursor": {
          "ref": "e5f2b6a1-477e-44e1-99e3-78de31b77750",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2676cc3c-b29e-4309-bf7c-b74e611407d6"
        },
        "item": {
          "id": "0ea6f7d5-4d6c-401d-9ba7-271c5dbd2dcb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a5d9419b-104a-49b7-a3c6-2c18d7a9676b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a2af61-4240-40d8-9947-2a3c49973015",
        "cursor": {
          "ref": "5f64b102-1035-4d3e-81b7-04b4088d5ea0",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "055f1c15-eda9-4229-9042-94bb9899765b"
        },
        "item": {
          "id": "e1a2af61-4240-40d8-9947-2a3c49973015",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4f91f4b7-9761-4216-ba32-0d859363a117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e1fd0a-d243-4a4b-8091-3d4cddf1a475",
        "cursor": {
          "ref": "a18bfcee-5e9a-4484-bca6-0c7762a35227",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e922f131-d821-4021-b8bc-3cbccbe2809e"
        },
        "item": {
          "id": "35e1fd0a-d243-4a4b-8091-3d4cddf1a475",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e2fc757f-3a4e-46b6-b2a1-bfc988ddc131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bc35ba-9cad-4e68-92ad-bfda137a623b",
        "cursor": {
          "ref": "9ecbe861-177b-4e74-8a0f-c5ef52dc9a5d",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f4ead2f3-676f-494d-8b7d-535356d5a18e"
        },
        "item": {
          "id": "89bc35ba-9cad-4e68-92ad-bfda137a623b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "677f85ef-dbbf-4379-9418-8bfee4ab59cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e7646a-36ab-44a1-b289-e0728f74ae4c",
        "cursor": {
          "ref": "d6e8d40d-5e75-422b-a735-57831552bac5",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5ebb0e77-eac9-49a0-9c3c-9c4cfc39adba"
        },
        "item": {
          "id": "87e7646a-36ab-44a1-b289-e0728f74ae4c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9c1ac56a-13e7-4e1a-8eb6-ac78edb24128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed77a064-8d18-47e9-982a-9d396906c421",
        "cursor": {
          "ref": "7fe0fca2-d0f4-4217-9a28-b224aab1fd9c",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b368ae56-7720-4202-9dc5-7ca0c3f61774"
        },
        "item": {
          "id": "ed77a064-8d18-47e9-982a-9d396906c421",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "14847e99-5bd4-49a2-b6bf-61524b169fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356c2ee8-b130-4a90-8835-277d6380dcaf",
        "cursor": {
          "ref": "724f4902-5929-4b1f-b124-db383340cd44",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0d722109-d622-49d0-93ad-6392ee486494"
        },
        "item": {
          "id": "356c2ee8-b130-4a90-8835-277d6380dcaf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0f70a3fd-564b-4bc1-b362-40b4b64f4957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0578ad-8d28-4ac6-9875-942b8176d964",
        "cursor": {
          "ref": "56c86b51-7118-40bb-8577-1bfbc8258e29",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "598055d2-32df-46d6-99a0-bf83feb67683"
        },
        "item": {
          "id": "8a0578ad-8d28-4ac6-9875-942b8176d964",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d3c716ca-7595-48c3-8d5d-4d28b4acb877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dd6cbb-fe5a-47e6-9423-e79f129500d7",
        "cursor": {
          "ref": "2dbcc72e-e443-400d-8d7c-982314529c32",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b3c291e0-08eb-413c-9c75-ffc1a958d162"
        },
        "item": {
          "id": "f8dd6cbb-fe5a-47e6-9423-e79f129500d7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "adb27c67-86fe-4133-a9d5-09eb08ba34f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d0aaa4-fb9e-4b10-bfc6-f7c5587a239f",
        "cursor": {
          "ref": "2ebbaf86-5483-49e4-ba7a-efea13a57be0",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "eadf3964-885e-457d-a440-7b5c5e2ed7eb"
        },
        "item": {
          "id": "25d0aaa4-fb9e-4b10-bfc6-f7c5587a239f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "36f912ba-0d46-47fe-a4c1-2aa75fb6b3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce0132b-13e6-432a-9c80-cd0369955167",
        "cursor": {
          "ref": "d18da55e-4913-4d03-aa42-bd5ed8341d60",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c8a9a1e0-9d20-42ae-82be-650d70ec3def"
        },
        "item": {
          "id": "3ce0132b-13e6-432a-9c80-cd0369955167",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e7deac09-0f83-490f-afec-cf60d85c4f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b1a82f-3de7-4e11-a49b-9cc4becac48b",
        "cursor": {
          "ref": "c54601d4-c4e9-4bee-ae4e-918a4e62cf0e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bd31c7ca-ea5f-4364-9497-ba4823fe84c2"
        },
        "item": {
          "id": "e4b1a82f-3de7-4e11-a49b-9cc4becac48b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "49b2ad7d-a3a1-4348-9d93-c99a05594ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91b55f9-8815-461e-baa2-29b4fe438c48",
        "cursor": {
          "ref": "7e6df0d9-684d-4aa3-9a33-5d3edf66ebb0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2dff6277-21c2-4a63-a9e5-ad02100a930f"
        },
        "item": {
          "id": "f91b55f9-8815-461e-baa2-29b4fe438c48",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c2105439-d701-4a49-9e48-9554795faa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d417a6aa-218b-4c00-a984-55c1d85a9e86",
        "cursor": {
          "ref": "ef2d24d0-d0cf-4454-bb86-de8b71365eb2",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2ab495cb-e78c-4f22-a055-fbf49a666646"
        },
        "item": {
          "id": "d417a6aa-218b-4c00-a984-55c1d85a9e86",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f8971993-d1e6-4d16-a497-84a5b5a10d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39b8def-ff7e-4c85-8ecf-e3c6628a08c0",
        "cursor": {
          "ref": "b023374a-27c1-48f6-9ec9-31156f3f830c",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "843beb19-e10e-4fa5-bbcc-d7d41a6aae15"
        },
        "item": {
          "id": "d39b8def-ff7e-4c85-8ecf-e3c6628a08c0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3e9e0b22-6b49-4f9a-b58c-0d46d470c0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0d5744-142a-464d-9f9f-3f3fd993e79d",
        "cursor": {
          "ref": "a8c1495e-6f7a-4468-919d-5c55c1484c86",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e1e84ed6-07ab-495d-b86a-b1c3ef546afc"
        },
        "item": {
          "id": "af0d5744-142a-464d-9f9f-3f3fd993e79d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fe3838c9-5a63-4ec7-98b8-f34e218c72f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764e5ada-7ef3-4ad1-8e71-0c76dc51fe57",
        "cursor": {
          "ref": "d52c7157-c524-48df-9a81-670f850c7eb7",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fadcd3fd-5e7f-4280-919b-291d64626127"
        },
        "item": {
          "id": "764e5ada-7ef3-4ad1-8e71-0c76dc51fe57",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "208c304f-ea6d-4d5b-b5d7-2a61b114c980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4236c8-bbaa-46f4-a77a-8780498d5b42",
        "cursor": {
          "ref": "ea57e7e3-61c7-4665-adc0-15daf2b5143b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "107d71af-f25c-4e1d-8046-f6a5813067f2"
        },
        "item": {
          "id": "0a4236c8-bbaa-46f4-a77a-8780498d5b42",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5e0dc7c8-cd1d-496a-9745-66ed71007c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1abd87-d483-4444-aba5-a48cab675a70",
        "cursor": {
          "ref": "74545645-ed45-4930-8e4b-4bb01044a477",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9a3c398f-7c9a-490d-8173-29ed2732cfe8"
        },
        "item": {
          "id": "6b1abd87-d483-4444-aba5-a48cab675a70",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f9f85b3d-8d68-4036-973a-fff6705fe76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eae59d-02b6-49dc-987d-e71194e19e27",
        "cursor": {
          "ref": "ea74ed76-130b-4efb-9bfe-9f12a06ca6b7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fcf0ced4-afd1-4761-ae0e-fdbdfd47d93f"
        },
        "item": {
          "id": "a3eae59d-02b6-49dc-987d-e71194e19e27",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "68c2aa4b-7c4b-4388-b765-3f3474dc4106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452601ec-5341-489e-8d09-b89f2094be52",
        "cursor": {
          "ref": "964b68cb-685e-41b3-a949-485d0e5fc5d2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fa9a5cfc-d700-4286-bafc-ae2b4bade842"
        },
        "item": {
          "id": "452601ec-5341-489e-8d09-b89f2094be52",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "776b0984-7384-460f-af5a-84394a3af124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d6e830-100e-41fb-8f37-29c3b8fd09e9",
        "cursor": {
          "ref": "38df4b34-4edf-4e77-9a29-50b178538de5",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "73e02711-7c2f-4ff7-8b65-a988c1a4fffe"
        },
        "item": {
          "id": "54d6e830-100e-41fb-8f37-29c3b8fd09e9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2a2270dc-4575-4122-9b2a-be7e0edcc7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb19f6fd-3f4d-41ea-8928-41e017de914f",
        "cursor": {
          "ref": "a0973ec8-dff4-4c62-a89b-d3dd4677cabc",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6dc5818a-e045-4ef0-82e0-4db1fea8698e"
        },
        "item": {
          "id": "bb19f6fd-3f4d-41ea-8928-41e017de914f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2cc01091-89b2-4044-8457-93b2fdceecba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ab678b-e91a-481c-8227-0cb58977e412",
        "cursor": {
          "ref": "87420826-bcb4-4863-b4b0-ef7a6d30b3e7",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "63ddb07f-02ad-4b70-b862-1c4aebf7e61a"
        },
        "item": {
          "id": "60ab678b-e91a-481c-8227-0cb58977e412",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dbfcbb6a-a576-43b6-8721-458c66d561a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d06ab3-e84e-404c-8b8d-6bc6044e3357",
        "cursor": {
          "ref": "8d4ba0b9-08ff-4eb8-a78c-ab04215a47f6",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7eba87d1-9a19-4317-9775-bfa493253546"
        },
        "item": {
          "id": "85d06ab3-e84e-404c-8b8d-6bc6044e3357",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "58d2574c-b49a-4810-b534-a84a25c32db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3067cace-3b5d-49a4-a4df-e4e728a8fdb9",
        "cursor": {
          "ref": "03b793f8-c361-4b20-bc9a-6490dde49836",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7f4bd9b7-91b3-4841-ab69-605f773d0366"
        },
        "item": {
          "id": "3067cace-3b5d-49a4-a4df-e4e728a8fdb9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cb6fa5ba-6fe9-4706-becd-910e54568d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0665278-1d78-4bbc-a610-1aab478c8260",
        "cursor": {
          "ref": "41709d1a-ce1f-482f-a9ed-c0038465da11",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "02368b46-6104-4850-9d46-1458170d29c5"
        },
        "item": {
          "id": "b0665278-1d78-4bbc-a610-1aab478c8260",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "eb8bf0e4-c0fd-47e3-8bb1-98841b67b441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c459b5d-4acd-4431-a5f6-dda52dc6d17b",
        "cursor": {
          "ref": "03d4153e-c6cf-4954-88eb-e7c5951b7562",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cb9240d5-81f3-44b0-b94b-8d4ec9f59ac5"
        },
        "item": {
          "id": "8c459b5d-4acd-4431-a5f6-dda52dc6d17b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f9a0094e-69b4-4e68-89e2-64226daf1c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6958ccbd-e430-4f98-9bc3-37d7edce099c",
        "cursor": {
          "ref": "9f4ea1f3-8e67-4d54-8a7e-fcaf9bbc3c3e",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5407dcff-c761-4bb5-825b-9fd606c1383a"
        },
        "item": {
          "id": "6958ccbd-e430-4f98-9bc3-37d7edce099c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c13d392d-a54a-4a6b-b04b-cd1bdf17a06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94ddd96-ed3e-443a-b32a-d178b9d894e9",
        "cursor": {
          "ref": "00228d1b-93a5-43da-b751-d9d77e26e0f3",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a1df6eb6-d20e-4f8e-897a-47aed8d84597"
        },
        "item": {
          "id": "d94ddd96-ed3e-443a-b32a-d178b9d894e9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4971c09e-431f-41eb-a3d3-30414899bd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28957547-b854-48f4-a99d-56fbf6a15ade",
        "cursor": {
          "ref": "0d8f00fb-b7df-4648-b56b-b9e4fbcdfb96",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bbf7243c-b4f2-40a6-9a72-a29fa170245e"
        },
        "item": {
          "id": "28957547-b854-48f4-a99d-56fbf6a15ade",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4caaeb5e-f8d5-452f-91c6-eb041cf8c29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1857a8-adad-44c4-8c42-713c38bc5019",
        "cursor": {
          "ref": "44420f9b-36e3-4254-801c-e261db9c7500",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6160eaed-83c3-4607-9cf6-3c9e26bd0b60"
        },
        "item": {
          "id": "0f1857a8-adad-44c4-8c42-713c38bc5019",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b48cecd6-92ca-4fb9-ae2b-43583e027512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7496c261-a14a-45b0-a17a-ba7b0edca318",
        "cursor": {
          "ref": "28336f5c-0d97-425b-bfa7-c5c16fd63e7a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8aa45086-ec2b-4b35-b81b-46a4f0a67c9a"
        },
        "item": {
          "id": "7496c261-a14a-45b0-a17a-ba7b0edca318",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ce80bcdc-56d3-41e3-8feb-6d4736ad54f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985dcee6-1199-46f2-900d-64edbd315562",
        "cursor": {
          "ref": "f7bdc436-4745-4c85-9b5f-c995425edc67",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ca7e6094-ed8d-4743-a971-c545373ec08a"
        },
        "item": {
          "id": "985dcee6-1199-46f2-900d-64edbd315562",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "82d81313-dcbd-47b9-97b5-6c3ee30e284a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744d8106-ee7f-418c-851c-ad2a061debf3",
        "cursor": {
          "ref": "c36b179b-8e00-4222-be3d-d6adf81b33e7",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3544e08d-6c63-496a-a54a-389caced0527"
        },
        "item": {
          "id": "744d8106-ee7f-418c-851c-ad2a061debf3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "49254851-5b70-4c56-962f-e49064a19acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae2de9f-4116-4f43-82d2-046491ac718b",
        "cursor": {
          "ref": "a86531fb-de3f-43ae-9a00-c0fa7503906c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "98622736-1eca-4f83-a02f-7cde4256841d"
        },
        "item": {
          "id": "4ae2de9f-4116-4f43-82d2-046491ac718b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4bddcd43-1202-4cd7-b8bf-c5742734ea80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e554d6-66ad-4518-acbc-d681488a06d6",
        "cursor": {
          "ref": "2f905d43-6b0b-4a95-b6c8-513e1335cec3",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "781b2628-f5e0-4042-b4bf-23e471d3b6c9"
        },
        "item": {
          "id": "e3e554d6-66ad-4518-acbc-d681488a06d6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "25d2c78e-1a48-4ef5-ad64-90adbed55f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f7c2eb-d8c0-46ef-9698-814663679746",
        "cursor": {
          "ref": "89a70e1f-a42e-49a4-a786-0021727a2c24",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0dd86a17-ca2e-4182-ae0d-627cf626867b"
        },
        "item": {
          "id": "12f7c2eb-d8c0-46ef-9698-814663679746",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "999c96fc-cc5d-4676-a121-fa945c4ef4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acdbf9c-1029-474c-b2f6-db71418fdfd4",
        "cursor": {
          "ref": "f6b5169f-5c54-4f20-b695-b81a95bfdc93",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ad9a9b20-6634-4dfb-8a5d-84d533df6792"
        },
        "item": {
          "id": "2acdbf9c-1029-474c-b2f6-db71418fdfd4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d90382e8-c98b-4052-a34c-ccb787c21f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1f321f-a557-492c-854f-f6996023462c",
        "cursor": {
          "ref": "b8bf2062-f551-4545-8df5-71cc1b67fe56",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e61a256e-9e83-4192-9f68-e3e48cb2dc3c"
        },
        "item": {
          "id": "1d1f321f-a557-492c-854f-f6996023462c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4811a7d9-0a8f-4208-8c29-52e89f4ddbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a6f236-1752-4864-8055-55660c21a9f5",
        "cursor": {
          "ref": "9e788874-f626-4849-b657-2794c5dde7e2",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cbca8341-1dc6-4fdc-94f5-1c2311e12773"
        },
        "item": {
          "id": "d0a6f236-1752-4864-8055-55660c21a9f5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8a16b13c-b692-43c2-ae4d-f7e410025702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88ceb64-25ba-4789-91f2-a8af7a809d49",
        "cursor": {
          "ref": "9cda40b0-3b07-4345-bbd6-89200e041501",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "447aea9d-f85a-4628-b711-7f5846940889"
        },
        "item": {
          "id": "f88ceb64-25ba-4789-91f2-a8af7a809d49",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c08e831c-1f6c-46e9-b38f-302e6c610115",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be0a491-fd34-4e73-9d65-22af627acb8a",
        "cursor": {
          "ref": "e3c21ef1-8b11-4511-9377-4b0dca40bf4a",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "af023e43-e32b-4e3b-9968-dcf295d3f533"
        },
        "item": {
          "id": "9be0a491-fd34-4e73-9d65-22af627acb8a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f1d8959c-7429-4617-8ba3-9afb05c66fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69442100-1c68-4593-8ef2-50063bcc5adf",
        "cursor": {
          "ref": "7cc8a9d5-e7d5-4184-8fdf-ba7446029fc2",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c56dbf56-a328-4f9e-9c4a-0ea127ab038d"
        },
        "item": {
          "id": "69442100-1c68-4593-8ef2-50063bcc5adf",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4951d0db-3155-45a2-b482-83de74bd366c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2178f3a8-ce25-4360-a399-d54c2cc6eaee",
        "cursor": {
          "ref": "8d21f1ae-e8fa-490a-8dcd-2522300edbd6",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f8b713b3-1a07-4928-985e-d3d36e6720d7"
        },
        "item": {
          "id": "2178f3a8-ce25-4360-a399-d54c2cc6eaee",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7283988a-1191-477b-8850-05093b7558d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944a3bb5-df80-43d8-b80a-74322ebd9c23",
        "cursor": {
          "ref": "d01ebd15-c1c2-4012-b71b-52528890f3b9",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "986fecf9-d89b-4703-80e8-c1c29b11a7f6"
        },
        "item": {
          "id": "944a3bb5-df80-43d8-b80a-74322ebd9c23",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3c995504-feec-47e4-9c1f-48e106b742f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d09a83f-db94-4929-918e-752c0cd609be",
        "cursor": {
          "ref": "526ff386-8319-4224-be37-37dbbb2c0739",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "048ee9f3-33f2-4235-89d7-bc7222e24adc"
        },
        "item": {
          "id": "8d09a83f-db94-4929-918e-752c0cd609be",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4d5b98c2-6e54-40c0-a902-9ebe0507c9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb234cb-4a79-4ada-a9ab-534d0c0b89d7",
        "cursor": {
          "ref": "8e4fc8b8-2148-415c-b9b4-e513913d308b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bc7f0837-b753-4f04-b2ad-f5176baf3f16"
        },
        "item": {
          "id": "3eb234cb-4a79-4ada-a9ab-534d0c0b89d7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "848cb5eb-020d-4eef-b5c2-429cf35bf2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32570c3f-bb02-4a7d-aeeb-b901547e7e46",
        "cursor": {
          "ref": "8fa17f42-c420-4c0b-98de-154deb30e6a4",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "449131f3-4e73-4511-91c3-9782d8ed6db0"
        },
        "item": {
          "id": "32570c3f-bb02-4a7d-aeeb-b901547e7e46",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1ecf9c2f-e321-445d-b51e-9fd59ffedc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1b848a-7e74-4d30-baa2-ac1f323bd67b",
        "cursor": {
          "ref": "aa29a826-ad48-4073-991d-fb27b99b658e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "119202ad-3488-4de1-9ebd-f812340273b8"
        },
        "item": {
          "id": "8f1b848a-7e74-4d30-baa2-ac1f323bd67b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ebe15f1e-5a48-405e-ace4-cd4186411e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cda69a7-8fd5-46e1-aa9b-8a2dd69d141d",
        "cursor": {
          "ref": "13f3a795-3a77-4732-b728-eb7aef3b6fd8",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "227cc190-ef5d-4be0-b1fe-eeecdae777d7"
        },
        "item": {
          "id": "0cda69a7-8fd5-46e1-aa9b-8a2dd69d141d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a068d0ca-97d1-414a-bc2b-101ada830f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b1a968-6b00-40bb-a77f-d9af25189844",
        "cursor": {
          "ref": "a63a4d08-9434-4048-a9f4-a3f324133edd",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "31b859a4-524b-465d-bb61-3cc4d57fe70f"
        },
        "item": {
          "id": "63b1a968-6b00-40bb-a77f-d9af25189844",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f7e04eb6-920f-47d5-b0cd-8339e561e1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69995a3f-44aa-4fb8-b600-da19acf59c5d",
        "cursor": {
          "ref": "f5967798-297c-4d28-9174-5f8061017182",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "371d6f5c-fdf8-425f-aa53-e7cf4c9b0425"
        },
        "item": {
          "id": "69995a3f-44aa-4fb8-b600-da19acf59c5d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a3452291-099e-4bf6-a90b-ac681b305fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eac417d-a226-4cff-8a32-d54c388f6527",
        "cursor": {
          "ref": "55abada2-8a2f-4275-a823-5fa2a91a51b9",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "543d4540-4e9c-4abf-842e-10323875edda"
        },
        "item": {
          "id": "0eac417d-a226-4cff-8a32-d54c388f6527",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "51c6c036-a5dd-43dc-98bc-c469c36810e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2175411-630e-4c64-8534-31ca4fc9cbcf",
        "cursor": {
          "ref": "3928cbe0-9139-409a-aea6-29548d871cbc",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "eb4e265c-6809-43a8-b01c-bac8d8f4dab1"
        },
        "item": {
          "id": "b2175411-630e-4c64-8534-31ca4fc9cbcf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "64c22026-8832-4bc2-82a8-dcb69428872f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7737f844-30df-4d21-a674-b7baab6b2f7b",
        "cursor": {
          "ref": "e21146f8-54c5-4d1a-b47a-b529f0676c4e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e287b67d-24dd-464d-888e-7ee239a28bdc"
        },
        "item": {
          "id": "7737f844-30df-4d21-a674-b7baab6b2f7b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "40fd1c40-65ae-4182-af7c-63d9e6b46d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226cf265-3628-4a97-8ddd-cfb894827ad6",
        "cursor": {
          "ref": "ca2196e1-bd04-4d44-93d3-b698fc4e3758",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "20f2ec31-aa02-44c8-9045-6ead6529ea8d"
        },
        "item": {
          "id": "226cf265-3628-4a97-8ddd-cfb894827ad6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3763eaa5-6cdd-4b43-b46f-ac140f1a64f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b1a6a7-45b5-4bcf-9198-54e811c29ebc",
        "cursor": {
          "ref": "222860bc-1c7a-4f96-9704-4e2c3a43ed69",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "81ad503b-5fd8-4489-a599-0d62d02ce09b"
        },
        "item": {
          "id": "52b1a6a7-45b5-4bcf-9198-54e811c29ebc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b8d05244-c571-4668-a924-dcb3e05e40b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7c0d61-144a-4ce3-baa5-5a7d1b2b930f",
        "cursor": {
          "ref": "f34a8e5b-40e5-4473-9885-7516fe2a3771",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "091295d3-9088-42b2-9e58-65e0e718d89a"
        },
        "item": {
          "id": "ad7c0d61-144a-4ce3-baa5-5a7d1b2b930f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "17cfcb59-5242-4254-a116-153763e0757d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a747194d-fbf1-4b58-95da-b0f15bc6923a",
        "cursor": {
          "ref": "f2b6e886-ce53-430d-b556-c89a1c44dc1b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8d6a5803-4d0a-403f-9f3b-40351e09cb65"
        },
        "item": {
          "id": "a747194d-fbf1-4b58-95da-b0f15bc6923a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ac0cc552-cc86-4c87-93a5-2d37f0a79612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee6d4d1-4457-4436-a879-ca80d5472fa3",
        "cursor": {
          "ref": "60965bac-3717-41c1-992d-93b1eb2558e9",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "310bb506-9c5b-4d48-b9dc-aa885515d541"
        },
        "item": {
          "id": "1ee6d4d1-4457-4436-a879-ca80d5472fa3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "07251bdb-e66c-4520-9716-6cf003c75346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba13822-d5a5-49e0-bb0f-c574596a3cfd",
        "cursor": {
          "ref": "e071dca4-f68a-4a2d-92d2-071b1c9fbc2a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f8b25b2c-f33a-48b8-abb7-17931e3c8c2e"
        },
        "item": {
          "id": "4ba13822-d5a5-49e0-bb0f-c574596a3cfd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1d6715dc-30fc-412d-a9b0-cc7531e7443e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bc1bbd-7480-4f9c-be61-1545e7dee0e2",
        "cursor": {
          "ref": "64a89063-b586-413d-ad34-d86abe7f33b7",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "65a1d7f3-54b9-4419-ba84-1ac119c7fdf6"
        },
        "item": {
          "id": "c7bc1bbd-7480-4f9c-be61-1545e7dee0e2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "30fe10c8-9157-4e3e-b473-b48f52ab85fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3cd621-6175-4f9a-b279-334ba80eceab",
        "cursor": {
          "ref": "861e0cef-fa1f-47e5-bbb7-02bbdb41d6c0",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "88a03bae-c15a-4423-8d5f-70db06358ee2"
        },
        "item": {
          "id": "dc3cd621-6175-4f9a-b279-334ba80eceab",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "964334d1-ef08-4d9d-b9c7-a7aa0ae78d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57257daf-f122-4342-8f3d-d4f301d61e7e",
        "cursor": {
          "ref": "9ef1ccd3-08fc-44fd-9b69-3e86d927abb9",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a36db3d8-541c-4814-8452-b0d3c87bdf0c"
        },
        "item": {
          "id": "57257daf-f122-4342-8f3d-d4f301d61e7e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ff09b822-ccea-40cb-a169-de90bebb987f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1f7ed2-458c-4118-973a-934a41988ee1",
        "cursor": {
          "ref": "c3a85b04-9c3f-406b-af33-cf5d1220868a",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5151b63c-8835-4ed4-83c6-c6bd764e4957"
        },
        "item": {
          "id": "6a1f7ed2-458c-4118-973a-934a41988ee1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9fbbc2f0-5e1a-43ad-9209-6a72ddf0f7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20afa7c3-63ce-4cec-af0f-a0b72c4bcae9",
        "cursor": {
          "ref": "056ff775-fd4b-4cfc-bd34-2c1f39a4b15f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b8763332-ace9-4e6d-8770-0a0c15bcd0c9"
        },
        "item": {
          "id": "20afa7c3-63ce-4cec-af0f-a0b72c4bcae9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "aa9529a7-5f04-48d5-a74b-6949b901497d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7449e3a1-229c-494c-be9d-1a3fa123cf9d",
        "cursor": {
          "ref": "6d08c613-2e9d-456e-969d-4d28c05b7cae",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "380828fa-5be9-4d36-aced-01b91c613786"
        },
        "item": {
          "id": "7449e3a1-229c-494c-be9d-1a3fa123cf9d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fa266c73-ad72-4641-b6f8-1b72e54808d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b184b5f-9849-48d2-9db4-ab364ae075f1",
        "cursor": {
          "ref": "0a31cfc4-8ff4-442c-8af3-0cfc2e29e129",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2c83d039-e2d2-41f3-b919-720dfa35f69c"
        },
        "item": {
          "id": "5b184b5f-9849-48d2-9db4-ab364ae075f1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "74ed777d-23c8-434b-8c4b-fe47c058267f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950282ae-7d1a-4ec1-a5d7-c3c4914ceb21",
        "cursor": {
          "ref": "7b2bfd45-2f37-4a45-b515-6d7d385a7d8e",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8deb6d1e-1a35-4e4d-8646-ca614f42f19b"
        },
        "item": {
          "id": "950282ae-7d1a-4ec1-a5d7-c3c4914ceb21",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "83c34adf-e802-414c-a400-e87f099bdc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b526bf-4265-4bb2-9144-888d0ab5b651",
        "cursor": {
          "ref": "c3c90ded-2ace-4ec1-80d5-e6e151d4c3c7",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2e86454d-e5fe-482b-a2c2-73fb57831135"
        },
        "item": {
          "id": "02b526bf-4265-4bb2-9144-888d0ab5b651",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0151cb1d-ddf6-47f4-9117-bd316f775302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4cdae2-6dc6-4c16-a0a7-cf5ece160887",
        "cursor": {
          "ref": "2e4d757a-78f9-436d-a09f-4c75862554e1",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4a9d5e15-61f1-41d8-b72d-af1e1450e238"
        },
        "item": {
          "id": "2e4cdae2-6dc6-4c16-a0a7-cf5ece160887",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2c5533a3-76d8-461b-942d-4f2cf4fa6f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedf803d-35bd-4773-827f-e4c2369b5966",
        "cursor": {
          "ref": "5983e77f-5303-488a-96b7-ef3ac1846f9a",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1a81117e-864a-4635-a999-7ed99ca5cbc0"
        },
        "item": {
          "id": "dedf803d-35bd-4773-827f-e4c2369b5966",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c0361d00-0cd8-4098-9b1c-43e89352bec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28878cb7-a01c-4c7e-9fc6-42f8c3b2d83c",
        "cursor": {
          "ref": "ac10af2c-4862-40cf-81fe-7293d2cbbafd",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ca1f3a52-d0e6-458b-a6ba-bf278221d40b"
        },
        "item": {
          "id": "28878cb7-a01c-4c7e-9fc6-42f8c3b2d83c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "85e6c9b7-e34d-4095-915f-ab05e9c78c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce703f90-fad7-464c-ab54-a76a0681d6b8",
        "cursor": {
          "ref": "de1c6988-b78b-4ce0-a1f6-0d3629ed791c",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0f347685-2fb3-4fca-9b9e-6d0e3280bce5"
        },
        "item": {
          "id": "ce703f90-fad7-464c-ab54-a76a0681d6b8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "69957c92-15c2-4302-b1b1-97d934a97297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ba5f0b-3511-43df-8ebc-42d476f9bd43",
        "cursor": {
          "ref": "34c175b2-1856-495e-8ca2-03aeb16fea2a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7dc32e98-1912-4eba-a4f4-5751dbf58791"
        },
        "item": {
          "id": "18ba5f0b-3511-43df-8ebc-42d476f9bd43",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6ae2d63f-15ac-433a-925e-6a9675e3ca67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d24d36-96d2-41b2-bbd0-e49e69eb4d10",
        "cursor": {
          "ref": "c614001d-abd0-4197-bb08-54e8cd6417c2",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "802615dc-e770-48ec-a27a-6f7790df5764"
        },
        "item": {
          "id": "23d24d36-96d2-41b2-bbd0-e49e69eb4d10",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ae6f19d3-54a5-4228-805c-786c4383ecb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2840c5-b6f1-46f9-93a8-a99191409192",
        "cursor": {
          "ref": "29ca2671-58ea-4cfb-9c83-3e65e3f9ca5b",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "67de748a-5f99-45ad-9d68-b307a894388e"
        },
        "item": {
          "id": "ec2840c5-b6f1-46f9-93a8-a99191409192",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "947c728e-ff1c-462e-b292-f68f7bb8f04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f810bed-4b32-4482-ae7b-7cf8a9c3f6d2",
        "cursor": {
          "ref": "b2d61fe7-7d20-4a2f-bd27-ddeb2f159308",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "92dd920e-9d78-495d-9676-00487671b710"
        },
        "item": {
          "id": "1f810bed-4b32-4482-ae7b-7cf8a9c3f6d2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8ae296ff-abec-4d9e-a7c5-a936e9b4fd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a21bc5-3014-4ed7-9310-69558d465b44",
        "cursor": {
          "ref": "4b7b5dfc-5017-434f-b72f-df0e39013983",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b3e0f8ae-1ad2-4eb4-813e-209b48962408"
        },
        "item": {
          "id": "a1a21bc5-3014-4ed7-9310-69558d465b44",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "80f21a55-5c99-423b-9232-409cd3ac57eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713cef1e-b561-429b-a646-0ff4ec19506e",
        "cursor": {
          "ref": "eae695c8-eee6-4874-a445-fdc6e8caf4e3",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a2f7d031-03fa-42fa-8ee0-5b32c11d19e2"
        },
        "item": {
          "id": "713cef1e-b561-429b-a646-0ff4ec19506e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1e49f712-3993-43bc-b627-79f310e2b7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee93e5b2-0dae-4729-9710-cf8386b8dd87",
        "cursor": {
          "ref": "fc9f42f3-0790-4fa4-b00b-20ea8a5e74d8",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "545552e0-0fd8-4402-a3bf-6beb5fd13e3a"
        },
        "item": {
          "id": "ee93e5b2-0dae-4729-9710-cf8386b8dd87",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7f5cd0f7-e97d-428d-88b7-7e8d89cf6ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9238fc-5c86-4c19-bdb9-6c6751bb7b02",
        "cursor": {
          "ref": "bda88958-a0a0-4346-b619-4bf5bf8c78c8",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9baf3c19-9028-43c2-ae9f-80091e79c836"
        },
        "item": {
          "id": "1e9238fc-5c86-4c19-bdb9-6c6751bb7b02",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1093f8ce-769a-4cf8-872d-86f2df98e96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dcc291-61dc-4941-bd6d-db0e7b30bd76",
        "cursor": {
          "ref": "eff05ee0-4b95-4981-a064-96efc8063e50",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4d6ca3ab-58a6-4ea1-8ce0-e5a61e77f19c"
        },
        "item": {
          "id": "d1dcc291-61dc-4941-bd6d-db0e7b30bd76",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "42401f20-cd29-4fad-902c-59c3252878e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3aa57cc-5627-4b7d-9fb4-ec83b5f30117",
        "cursor": {
          "ref": "6a71dffe-7a4a-496f-bdba-300de28189bb",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "665f0fd9-e6b2-4569-bacf-be7fb1d2bf74"
        },
        "item": {
          "id": "d3aa57cc-5627-4b7d-9fb4-ec83b5f30117",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "57ac99be-0fda-4ef6-a883-f2f72395b07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cc86c0-2b5a-4917-ada6-b58ba9fabe1f",
        "cursor": {
          "ref": "ba37b077-f522-4f45-bc99-534364855966",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e62af9d0-1eb3-44f7-9eec-54ad597623d3"
        },
        "item": {
          "id": "70cc86c0-2b5a-4917-ada6-b58ba9fabe1f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "22720cd4-81c8-409b-97c0-8ed24f44151e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40fb19e-507a-444a-8e2b-b284bb0778a6",
        "cursor": {
          "ref": "4d30b9c6-ff77-42ed-8271-e5cb6fb62809",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0c6609a0-034d-4eaf-a42e-cb1c4e7ed575"
        },
        "item": {
          "id": "a40fb19e-507a-444a-8e2b-b284bb0778a6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "15a38989-d152-4558-89f4-60f12bb4445b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba53d13-74c9-4fae-ac2e-728e49d4c1a4",
        "cursor": {
          "ref": "8a8a81e6-e52e-4324-a712-bb59c8e8da14",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f4850166-fce2-4966-974f-5471af00b170"
        },
        "item": {
          "id": "dba53d13-74c9-4fae-ac2e-728e49d4c1a4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "21fd579b-f121-4e8b-bfc0-6a8a5b74d278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f554cef4-1fd8-4e29-ad21-80eb7cd678bc",
        "cursor": {
          "ref": "e0761c0e-7f82-4846-b0ef-02032959ea66",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "db55255c-54a8-407a-928e-e713a5555b4a"
        },
        "item": {
          "id": "f554cef4-1fd8-4e29-ad21-80eb7cd678bc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e3f12936-5562-4d91-8148-8603033f84af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dec6b13-72a4-4100-b468-f5cec56bb9f9",
        "cursor": {
          "ref": "781e3be2-7c82-4b06-bf4f-2b0cb46613bf",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "09de918b-56e1-4c1e-9df0-af0f6ebbd454"
        },
        "item": {
          "id": "9dec6b13-72a4-4100-b468-f5cec56bb9f9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e48fe4ab-4716-457e-aa18-7bc43e92e3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a688efa-dbed-42c3-8063-22656326cf25",
        "cursor": {
          "ref": "3baa1686-18ad-4b23-ab39-a69ec080c921",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "16201250-c444-4e71-adc1-fe982bd24102"
        },
        "item": {
          "id": "7a688efa-dbed-42c3-8063-22656326cf25",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c0fad6f4-f065-4d78-adfc-bfaf76bbbc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1861887c-ca2c-42cf-867e-dc29c9168c25",
        "cursor": {
          "ref": "a89a421c-d3d8-437d-9ad9-22d5ced4c759",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f106e426-1173-4597-bc65-fd8c4933210d"
        },
        "item": {
          "id": "1861887c-ca2c-42cf-867e-dc29c9168c25",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "debb061b-dae9-4966-851b-5feafa319545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64097476-dc9f-4805-a5c5-64f6ef6b6077",
        "cursor": {
          "ref": "4a4ae274-7031-4f33-9c97-fe30fffa053e",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a4879d46-6f4c-454b-bdae-236f945e4b62"
        },
        "item": {
          "id": "64097476-dc9f-4805-a5c5-64f6ef6b6077",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "97221000-4acb-4bd7-b6f0-bae92b356f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77f0b0f-6b02-4865-9a77-ff55cf55ea26",
        "cursor": {
          "ref": "b3ff225d-ddd1-4adf-a5aa-8a459a8095a2",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "13a3351b-52de-4994-a029-5098719020d6"
        },
        "item": {
          "id": "f77f0b0f-6b02-4865-9a77-ff55cf55ea26",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9aca7bce-7cc8-47bf-a026-aafc749cdce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9660790e-ae87-4975-8a3b-c75677afa6c8",
        "cursor": {
          "ref": "370a4b7a-cea7-40b9-91a9-f7f3ed2dc604",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d4d488dc-e9b1-479e-af9e-398c36702b45"
        },
        "item": {
          "id": "9660790e-ae87-4975-8a3b-c75677afa6c8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b522ee70-3d47-4fb5-8d47-84a95ee020ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957c97ca-1692-47d6-b7a6-cd3d3a47a823",
        "cursor": {
          "ref": "2f13825f-9195-4482-813c-cf11c0d321d7",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0051e54f-0409-4c95-a449-0a84416eea2b"
        },
        "item": {
          "id": "957c97ca-1692-47d6-b7a6-cd3d3a47a823",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6b51e2da-4fdb-4057-9d42-823328df6846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41daf3d1-d2c2-4437-bbe7-aa2b07a2d554",
        "cursor": {
          "ref": "d672c019-b462-4a46-bc37-e24a1af625a0",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "abcdf662-3db5-4089-abb6-b73e0ebc0397"
        },
        "item": {
          "id": "41daf3d1-d2c2-4437-bbe7-aa2b07a2d554",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cf6d58b4-698c-4e6c-86e5-f496f3757fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7adf45-fcbb-4571-8055-f59ad32bd5d3",
        "cursor": {
          "ref": "4f356589-f592-4516-b173-91a9ee15b483",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4ceae281-d783-47da-afac-2896bc4b1702"
        },
        "item": {
          "id": "ba7adf45-fcbb-4571-8055-f59ad32bd5d3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "50294f71-5c78-4005-afcc-47a820efbbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671f91a9-7fe7-4ec4-bd9e-7bea0c8b17b4",
        "cursor": {
          "ref": "474b1397-474a-4d84-b889-3768c8854987",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "34414ac1-6e52-4855-a5d2-a885d51be0d5"
        },
        "item": {
          "id": "671f91a9-7fe7-4ec4-bd9e-7bea0c8b17b4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "647415e5-6279-4cd0-bc98-684f9ef94cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfc096d-a052-46ee-9a3b-45562fcfa05e",
        "cursor": {
          "ref": "2fabc45c-1f63-4b9d-83a0-ad27804afeaf",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e1109986-6d97-4d32-9fea-a95c96c61abd"
        },
        "item": {
          "id": "7bfc096d-a052-46ee-9a3b-45562fcfa05e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e5c99236-538e-4774-9a74-637a43d75269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4854bc3a-cf87-4df5-afe3-6fa3446abc8a",
        "cursor": {
          "ref": "4b2db88a-2fdd-4bac-8e50-291d0abbb101",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2b4ac0d3-a33e-4460-970c-a3887982f24b"
        },
        "item": {
          "id": "4854bc3a-cf87-4df5-afe3-6fa3446abc8a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "30ad253c-e548-4cd7-9d15-e40f11d09561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64191a29-3321-4e27-bb84-5fc903d7329f",
        "cursor": {
          "ref": "510ab478-ca69-4d1e-8284-68384089fc2c",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cb56cdab-af6b-4c26-8221-78a2478cdc6c"
        },
        "item": {
          "id": "64191a29-3321-4e27-bb84-5fc903d7329f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7ce126af-6ef8-42eb-a377-c423c2860861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a34d9b-a752-4995-a9b7-ca3db4aa244d",
        "cursor": {
          "ref": "ab0e8532-490a-4d21-958c-a4254b0f0621",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5ec63b98-8ee3-48d1-a158-dcbe441e57c4"
        },
        "item": {
          "id": "b1a34d9b-a752-4995-a9b7-ca3db4aa244d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "75160fd3-c506-45de-8cf9-ac93ff46d4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cde71b-c142-40a8-8cd2-7833161aaea4",
        "cursor": {
          "ref": "3b4b7c19-1816-4e3b-8428-add909874c0c",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bb38846e-a736-41c4-af74-88410327d13e"
        },
        "item": {
          "id": "d3cde71b-c142-40a8-8cd2-7833161aaea4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7bfb8b1a-e8dd-4c27-a1aa-b8f6dd63624d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a497c5-059d-457b-99db-3d5c2b3e1873",
        "cursor": {
          "ref": "307730e2-62e4-44eb-85da-ebc19eaa7cc3",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9f4d63f1-3631-485e-85eb-35be545cf5a1"
        },
        "item": {
          "id": "70a497c5-059d-457b-99db-3d5c2b3e1873",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e3e0652e-6457-4cee-b00d-4cde7ace486d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2179a7-072b-48e6-a372-4dee7db4a2b8",
        "cursor": {
          "ref": "281aee76-93d8-4288-89b5-e6c8ed46b733",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "84dedfe7-868f-4115-8a8e-fe9aed8041a2"
        },
        "item": {
          "id": "9e2179a7-072b-48e6-a372-4dee7db4a2b8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2f00ab91-49d8-4ad8-a19f-eeead01beac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388d5694-3458-4fe7-9952-3379d05393fc",
        "cursor": {
          "ref": "619f2fee-77a6-4d04-ad35-a23e10b960c7",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1c69742e-10f8-4628-b05c-7765dd7c15e7"
        },
        "item": {
          "id": "388d5694-3458-4fe7-9952-3379d05393fc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "df5a13e9-fb9e-4a3d-8b8a-9e986335ff18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbcf450-55c3-4691-ab69-75841ce3a5a9",
        "cursor": {
          "ref": "8591e5e0-3ae7-4e60-9a96-4aff8da8d007",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ce26449f-c557-4efd-abd3-9ffafdc2274b"
        },
        "item": {
          "id": "dfbcf450-55c3-4691-ab69-75841ce3a5a9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5643098f-2a8c-4919-9fb3-46849ec05d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057dad5a-f51f-4181-a3c6-c47ebc027796",
        "cursor": {
          "ref": "e123b3a8-b37a-4d6a-9b52-d26c4fb6ef5d",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "46f0549f-44b0-4181-8ff0-a7fb40b08516"
        },
        "item": {
          "id": "057dad5a-f51f-4181-a3c6-c47ebc027796",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5b4ae861-cd1d-4847-aed5-046eccf1a197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95566ba4-5026-4489-bebe-6dc67b191ccb",
        "cursor": {
          "ref": "63bd9bfd-624c-4658-a32f-4d9797d076c5",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e4d0dc80-fd39-467c-a816-b11aca2e8664"
        },
        "item": {
          "id": "95566ba4-5026-4489-bebe-6dc67b191ccb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "48a8ec99-9c1e-4359-b399-c07dbdd0b040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8248c7b1-6af3-4ca4-acd5-2669b3305027",
        "cursor": {
          "ref": "c7168dac-547c-47f7-b029-ac29ac8101f5",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c91639c0-1c39-4741-b56b-30aa4088b4de"
        },
        "item": {
          "id": "8248c7b1-6af3-4ca4-acd5-2669b3305027",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "52b213c3-a8bb-4d7b-b91f-3adfad20a4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809d46ae-41fd-4c6b-afb4-3b4cf0cd3b83",
        "cursor": {
          "ref": "ed1675e2-2ff9-41fa-b218-03a9d9e9ae64",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b34b1f37-5c99-4b9c-8c3f-5570f612842d"
        },
        "item": {
          "id": "809d46ae-41fd-4c6b-afb4-3b4cf0cd3b83",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bf534ce9-1fd7-4ddf-bf56-4d0386c564f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c413977d-cb35-4da8-8bd5-68f9cecb46c7",
        "cursor": {
          "ref": "38e8fd70-622a-4c17-a10c-71f6c244f439",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "28c5dcd7-108d-4063-a276-7f81d51ef53e"
        },
        "item": {
          "id": "c413977d-cb35-4da8-8bd5-68f9cecb46c7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5e27a8f2-7499-4286-be18-6d782e6977d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabca49b-737a-4482-bd51-d4d6c71b241f",
        "cursor": {
          "ref": "325e17d8-764e-4f93-aa40-146bc613ec31",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a0e87e61-0582-447c-8e09-b02cd20fb547"
        },
        "item": {
          "id": "eabca49b-737a-4482-bd51-d4d6c71b241f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c0e159ff-6245-4013-baf8-70df820815d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7de854c-b584-4785-a752-6b79a9a53860",
        "cursor": {
          "ref": "86e81a01-9897-4e11-8d07-a09ec9e9b623",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ba613084-f05c-4b85-a253-049a33af4ff6"
        },
        "item": {
          "id": "d7de854c-b584-4785-a752-6b79a9a53860",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "50f91707-7e55-4a27-a996-822d64827485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb5ad10-21f6-4a4e-b70a-07425e0bd15e",
        "cursor": {
          "ref": "04f5ef66-18fd-4a5c-85b0-f931f2f34b21",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0a72145e-59c6-4ebd-9456-0249f0f441f2"
        },
        "item": {
          "id": "8eb5ad10-21f6-4a4e-b70a-07425e0bd15e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "124b4060-15c6-4857-be11-4ac7874ecb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252be977-6cdd-4e90-9306-65cff1029953",
        "cursor": {
          "ref": "02f2c674-e34f-4c80-8df6-21fe1d4de348",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "001e31c2-1c3f-4149-ab8e-f4c0e235bbd7"
        },
        "item": {
          "id": "252be977-6cdd-4e90-9306-65cff1029953",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "87836865-07ee-4ac4-b004-47a361973192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16764ec-7072-4f65-bdc1-b9ce72056531",
        "cursor": {
          "ref": "d3e1c679-9121-46ce-b5e5-f95984300725",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "82466678-c796-4041-95a1-9676440a0733"
        },
        "item": {
          "id": "f16764ec-7072-4f65-bdc1-b9ce72056531",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "714e9762-6da0-425b-9d0e-ad7fcbcb5b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335ef6f4-b73f-455c-8d10-0d95632a4e1e",
        "cursor": {
          "ref": "11fda87d-c10b-47a9-8c49-516f42afa4f5",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "30136921-869f-4c9c-88be-78914cb9c2d7"
        },
        "item": {
          "id": "335ef6f4-b73f-455c-8d10-0d95632a4e1e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "abefc83f-f667-4639-abef-3d0bf172d2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd629f5-d41d-46c8-be81-142f097a9e0f",
        "cursor": {
          "ref": "84789951-e2a0-4911-afc2-a50143f36750",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e43e148f-ef78-4698-9190-1a548f7fe11d"
        },
        "item": {
          "id": "5cd629f5-d41d-46c8-be81-142f097a9e0f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f6176f33-6255-4d35-8b5f-e2eb01f1e151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf468003-8bba-4a37-b945-ba2788da3a22",
        "cursor": {
          "ref": "6d9ce4d0-3ea1-453a-892d-aaa162cba66f",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6c25c4a2-5bff-46dc-a22e-6925cfd8122e"
        },
        "item": {
          "id": "cf468003-8bba-4a37-b945-ba2788da3a22",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "113af1e9-96fd-44db-b648-c447dcb6e87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1426b1c-fd35-46cb-8f14-8d3b61362908",
        "cursor": {
          "ref": "12675336-a954-4709-a62d-86be7c560a7c",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "36f4e8bf-b84c-4fa5-82ca-07586fb1e12a"
        },
        "item": {
          "id": "e1426b1c-fd35-46cb-8f14-8d3b61362908",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bae4f077-c9e0-4c5e-ac9a-4141dbcb462a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbd2fa0-38fa-45b5-a735-222bbd2fa4c9",
        "cursor": {
          "ref": "924c64d1-cba6-429a-8550-9d952a0016af",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "29a019f8-7668-49b5-90ed-9f35ad6088af"
        },
        "item": {
          "id": "8fbd2fa0-38fa-45b5-a735-222bbd2fa4c9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ae0b217f-c05a-4637-949c-a4cbb50a7d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34735150-9cce-4e22-85d3-9a0a7503cbb4",
        "cursor": {
          "ref": "d1502fc9-cea8-4845-831a-530594a50a93",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "13b24de8-1978-4280-9b0f-a0eaf0d2f5ad"
        },
        "item": {
          "id": "34735150-9cce-4e22-85d3-9a0a7503cbb4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "122b4104-6e9c-47fb-b003-27cacb4eec1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72f7dd2-6daa-4676-af07-a788c1bb722c",
        "cursor": {
          "ref": "0923a40a-1825-4064-9636-232b6925a396",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7bcc279f-b462-4d08-876b-5cf3e1f8a942"
        },
        "item": {
          "id": "b72f7dd2-6daa-4676-af07-a788c1bb722c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bb91abe2-7cc8-43de-a582-9eff3a44a532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b46362-8737-4622-89a7-1a6b55c140d3",
        "cursor": {
          "ref": "1d1f7969-84be-461c-ad2a-010287a8e706",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d450ae55-63bf-44f2-b48c-4126c9f079f3"
        },
        "item": {
          "id": "86b46362-8737-4622-89a7-1a6b55c140d3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9f695b9d-1d78-46a9-832a-fc16b5fce760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71954f78-1ddb-4066-9309-abd49e7be7ac",
        "cursor": {
          "ref": "211167a2-eca4-4801-88cd-5f126ca54d51",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "456ca3e6-eff9-4e70-b3de-f0a67acbdd61"
        },
        "item": {
          "id": "71954f78-1ddb-4066-9309-abd49e7be7ac",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "573b0807-ca0d-4a9f-8377-6d7291ae8e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3284c092-888d-4f6d-bea6-126323a43b0d",
        "cursor": {
          "ref": "48af70b9-3b8a-40c7-89be-57d2d7666b40",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3cc89c3a-7529-458a-bac3-15bbd32491b2"
        },
        "item": {
          "id": "3284c092-888d-4f6d-bea6-126323a43b0d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bbfe773c-47b9-46da-832b-f9dea3cf5140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e367ba9-26ca-4953-89c4-43df6a95f4ae",
        "cursor": {
          "ref": "01fe0002-e5a0-485b-a9d2-180730bbf9c9",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0c6b3cdb-b498-4659-b239-443964062fb1"
        },
        "item": {
          "id": "8e367ba9-26ca-4953-89c4-43df6a95f4ae",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3b5ad807-234c-497b-ba65-497856c5ad1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db5d919-84f4-4ae6-98d3-bf049ab8f62a",
        "cursor": {
          "ref": "7450f3ac-ab2a-455f-aaff-cee1c8fd0031",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8a4f48c9-ed59-476e-8193-25a2e369fa69"
        },
        "item": {
          "id": "6db5d919-84f4-4ae6-98d3-bf049ab8f62a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b275ef4a-acf1-486a-ba13-fc211f2081a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b98bec-6c10-4ca0-b68d-363c2cc16bbe",
        "cursor": {
          "ref": "5eb9eea8-6221-47a0-b5be-17010d2052b6",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "95f60bb8-4075-4b71-9fb5-7adc6d4c2b05"
        },
        "item": {
          "id": "40b98bec-6c10-4ca0-b68d-363c2cc16bbe",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "50647f24-a75c-47ed-bb93-7c18b818a888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ca24a0-d50c-4cef-8933-e58bfa5a9b33",
        "cursor": {
          "ref": "eb31cf5d-6d44-4bea-9608-0397675cc4c3",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b60c09cf-5307-4866-8931-aba4c49812fb"
        },
        "item": {
          "id": "96ca24a0-d50c-4cef-8933-e58bfa5a9b33",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d11b828e-1567-4dcb-abbd-e75ea74b3252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7097480-4199-437e-9551-fc58cafc3763",
        "cursor": {
          "ref": "88744a67-198a-41b7-8226-42caaba407f7",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "24c5d1e6-1829-4c29-8fd7-162089e14e64"
        },
        "item": {
          "id": "e7097480-4199-437e-9551-fc58cafc3763",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5c278c90-28f1-468d-aa24-170740017490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4937d9c5-20da-4177-b3ea-acffb6c065d2",
        "cursor": {
          "ref": "8fc6223c-9d18-4c1c-93a8-be54b4fd3b95",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "92773662-bb6c-44c4-adbe-970ffa4c776f"
        },
        "item": {
          "id": "4937d9c5-20da-4177-b3ea-acffb6c065d2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7674d09b-4be2-42ef-b818-4b43cad0e486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f2a953-d6f9-4e25-b5a6-3a9024801630",
        "cursor": {
          "ref": "9dc21921-e7d2-4fc2-be07-981d440be153",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1b619d89-d2da-4e26-b646-7de9f96fe880"
        },
        "item": {
          "id": "69f2a953-d6f9-4e25-b5a6-3a9024801630",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c8b9b055-e5c3-4d04-9fdd-ff85b9b2bed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbc5316-3d62-4115-aea0-4a876cfa0c0c",
        "cursor": {
          "ref": "67719a44-2a98-453c-b9b1-c1ffd65f9e1e",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "45706184-fe39-4806-bbad-70f077ff985c"
        },
        "item": {
          "id": "bbbc5316-3d62-4115-aea0-4a876cfa0c0c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e871336d-67dc-4d55-9518-dcc1bd8e8d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcd2939-9bfe-4a03-8337-5e8717eb7eb4",
        "cursor": {
          "ref": "986e0ff2-590c-4c36-9f66-7bf525dba319",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ea409620-feb5-4775-b842-2da0cb832b6f"
        },
        "item": {
          "id": "fbcd2939-9bfe-4a03-8337-5e8717eb7eb4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4926b87f-1e60-48ae-b845-7535922dd184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3aea7b9-d559-4533-946e-655ac119ab1a",
        "cursor": {
          "ref": "6387493c-f7e4-4acd-a440-6dad8280b0ce",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d382a938-1c1d-4f84-a79e-7f16c3eabec8"
        },
        "item": {
          "id": "f3aea7b9-d559-4533-946e-655ac119ab1a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b505fb29-b46a-4d2b-835a-f9be38407280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b10855-7209-4028-b899-fa8821f52963",
        "cursor": {
          "ref": "3f2f369e-35a8-499f-940b-f451d730ae0d",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3e6e9027-797e-4d3f-8b77-6a81f8db77b9"
        },
        "item": {
          "id": "a6b10855-7209-4028-b899-fa8821f52963",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3035bda4-ba08-4b8b-9b3a-e873fbdcd36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5f7350-503d-424b-bb11-ade316e7a06e",
        "cursor": {
          "ref": "f0d0eada-f8ab-49f6-8a1d-00e140251912",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "830411b9-4385-4a68-b3b5-f9481defada8"
        },
        "item": {
          "id": "5f5f7350-503d-424b-bb11-ade316e7a06e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "635fdae2-2ffe-4fb2-a0b9-5556ba9b3353",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feee2aba-bc06-4cba-b7a2-05fe6920fb71",
        "cursor": {
          "ref": "1ce3750c-a416-4fdf-8bea-095d182706a6",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1fb8787a-e8d8-4900-bdeb-b96b6973da15"
        },
        "item": {
          "id": "feee2aba-bc06-4cba-b7a2-05fe6920fb71",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "48149bfa-a8d8-4702-a1fa-1e2bb8c4b9a6",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb65177d-7d61-407b-904e-4c294c9cf15a",
        "cursor": {
          "ref": "15eb5228-be25-444d-b5cb-e3f79cd9af9d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6b7c2f87-9241-404d-a84f-ea762934498f"
        },
        "item": {
          "id": "cb65177d-7d61-407b-904e-4c294c9cf15a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e8905def-773e-431d-99da-04f903493b02",
          "status": "OK",
          "code": 200,
          "responseTime": 1396,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ec0323-ae64-4905-b1cd-d4645312b65a",
        "cursor": {
          "ref": "c8713664-4b81-4e2b-83db-7da7835ad8b7",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0ddf52a1-4336-4984-bb6e-7494b37ec489"
        },
        "item": {
          "id": "86ec0323-ae64-4905-b1cd-d4645312b65a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d87e0f47-2694-483c-a40e-877246daddf2",
          "status": "OK",
          "code": 200,
          "responseTime": 1566,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe09bc2a-62a3-41a2-bfaa-003057cbd1be",
        "cursor": {
          "ref": "af01c02d-ee61-43b5-89ab-9882f44711b2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9d2869ba-b549-49fe-befe-c5dcc0dc31c8"
        },
        "item": {
          "id": "fe09bc2a-62a3-41a2-bfaa-003057cbd1be",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39c33d1c-12a6-41bb-b2f1-8f886beb316b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe09bc2a-62a3-41a2-bfaa-003057cbd1be",
        "cursor": {
          "ref": "af01c02d-ee61-43b5-89ab-9882f44711b2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9d2869ba-b549-49fe-befe-c5dcc0dc31c8"
        },
        "item": {
          "id": "fe09bc2a-62a3-41a2-bfaa-003057cbd1be",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "39c33d1c-12a6-41bb-b2f1-8f886beb316b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e3baf4-1891-46bb-8d2e-134722fd2872",
        "cursor": {
          "ref": "303d9ecb-8301-469f-9fb3-240775e77063",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9438fa79-868c-437a-9126-dbe36c622bff"
        },
        "item": {
          "id": "41e3baf4-1891-46bb-8d2e-134722fd2872",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8e0341e3-eefc-42e1-8dad-77ccd8092080",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3e30d4-bc23-4454-bb3a-5fe128a6f4fb",
        "cursor": {
          "ref": "c1c1fe0c-2d3e-46f6-83d9-996b99248358",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "faa0b1e6-658d-4a75-a769-7397089f89b6"
        },
        "item": {
          "id": "2c3e30d4-bc23-4454-bb3a-5fe128a6f4fb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "16037cd9-0183-463b-99c3-edd2d031c227",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}